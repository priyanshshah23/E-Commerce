Index: lib/app/constant/ImageConstant.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//Common\nconst String splashLogo = \"assets/diamnow/splashLogo.png\";\nconst String placeHolder = \"assets/PlaceHolder/user_placeholder.png\";\nconst String user = \"assets/auth/user.png\";\nconst String userTheme = \"assets/Common/userTheme.png\";\nconst String password = \"assets/auth/padlock.png\";\nconst String diamond = \"assets/diamnow/diamonImage.png\";\nconst String phone = \"assets/auth/phone.png\";\nconst String email = \"assets/auth/envelope.png\";\nconst String company = \"assets/auth/company.png\";\nconst String india = \"assets/auth/india.png\";\nconst String back = \"assets/auth/back.png\";\nconst String plusIcon = \"assets/diamnow/plusIcon.png\";\nconst String plusGreenIcon = \"assets/diamnow/plusgreenicon.png\";\nconst String minusIcon = \"assets/diamnow/minusIcon.png\";\nconst String exclamation = \"assets/diamnow/exclamation.png\";\n\n//AUTH\nconst String bussinessCard = \"assets/auth/ic_file.png\";\nconst String photoCard = \"assets/auth/ic_card.png\";\nconst String pdfIcon = \"assets/auth/pdf.png\";\nconst String viewDetail = \"assets/diamnow/viewDetail.png\";\nconst String editPen = \"assets/diamnow/pen.png\";\n\nconst String selectedCheckbox = \"assets/auth/checkbox.png\";\nconst String unSelectedCheckbox = \"assets/auth/unselectedcheckbox.png\";\nconst String forgetPassword = \"assets/auth/forgetPassword.png\";\nconst String resetPassword = \"assets/auth/resetPassword.png\";\nconst String passwordResetSuccessfully =\n    \"assets/auth/passwordResetSuccessfully.png\";\nconst String diamond_placeholder = \"assets/Common/diamond_placeholder.png\";\nconst String confirmStone = \"assets/Common/confirmStone.png\";\nconst String cancelStone = \"assets/Common/cancelStone.png\";\nconst String downArrow = \"assets/Common/downArrow.png\";\nconst String upArrow = \"assets/Common/upArrow.png\";\nconst String noDataFound = \"assets/Common/NoDataFound.png\";\n\n// DiamNow\nconst String notification = \"assets/diamnow/notification.png\";\nconst String share = \"assets/diamnow/share.png\";\nconst String diamondIcon = \"assets/diamnow/diamondIcon.png\";\nconst String whatsappIcon = \"assets/diamnow/whatsapp.png\";\nconst String skypeIcon = \"assets/diamnow/skype.png\";\nconst String excelImage = \"assets/diamnow/excelImage.png\";\n\n//filter\nconst String addDemand = \"assets/filter/addDemand.png\";\nconst String matchPair = \"assets/filter/matchPair.png\";\nconst String saveAndSearch = \"assets/filter/saveAndSearch.png\";\nconst String savedSearch = \"assets/filter/savedSearch.png\";\nconst String search = \"assets/filter/search.png\";\nconst String upAndDownArrow = \"assets/filter/upAndDownArrow.png\";\nconst String descendantIcon = \"assets/filter/descendantIcon.png\";\nconst String buildingIcon = \"assets/filter/buildingIcon.png\";\n\n//DiamodList\nconst String selectAll = \"assets/diamnow/select_all.png\";\nconst String gridView = \"assets/diamnow/GridView.png\";\nconst String filter = \"assets/diamnow/filter.png\";\nconst String download = \"assets/diamnow/download.png\";\nconst String showSelected = \"assets/diamnow/showSelected.png\";\nconst String compare = \"assets/diamnow/compare.png\";\nconst String status = \"assets/diamnow/status.png\";\nconst String info = \"assets/Common/info.png\";\nconst String sale_hold = \"assets/PNShah/hold.png\";\nconst String sale_note = \"assets/PNShah/note.png\";\n\n//FILTER\nconst String filterDownArrow = \"assets/filter/filterDownArrow.png\";\nconst String filterRightArrow = \"assets/filter/filterRightArrow.png\";\nconst String filterUnionArrow = \"assets/filter/filterUnionArrow.png\";\nconst String filterUpArrow = \"assets/filter/filterUpArrow.png\";\nconst String selectedFilter = \"assets/filter/selectedFilter.png\";\nconst String unselectedFilter = \"assets/filter/unselectedFilter.png\";\nconst String filterPopUpPath = \"assets/filter/\";\n\n//Diamond Detail\nconst String enquiry = \"assets/DiamondDetail/enquiry.png\";\nconst String addToCart = \"assets/DiamondDetail/addToCart.png\";\nconst String addToWatchlist = \"assets/DiamondDetail/addToWatchlist.png\";\nconst String placeOrder = \"assets/DiamondDetail/placeOrder.png\";\nconst String comment = \"assets/DiamondDetail/comment.png\";\nconst String clock = \"assets/DiamondDetail/clock.png\";\nconst String selectList = \"assets/DiamondDetail/selectAllList.png\";\nconst String selectGridList = \"assets/DiamondDetail/selectAllList-grid.png\";\nconst String medal = \"assets/DiamondDetail/medal.png\";\nconst String playButton = \"assets/DiamondDetail/play-button.png\";\nconst String gallary = \"assets/DiamondDetail/image.png\";\nconst String ploty = \"assets/DiamondDetail/ploty.png\";\nconst String proportion = \"assets/DiamondDetail/proportion.png\";\nconst String nature = \"assets/DiamondDetail/nature.png\";\nconst String hA = \"assets/DiamondDetail/heartandarrow.png\";\nconst String certi = \"assets/DiamondDetail/quality.png\";\n\nconst String natureImage = \"assets/DiamondDetail/naturaiamge.png\";\nconst String fluorescence = \"assets/DiamondDetail/fluorescence.png\";\n\n//PersonalInformation\nconst String city = \"assets/Common/city.png\";\nconst String country = \"assets/Common/country.png\";\nconst String state = \"assets/Common/state.png\";\nconst String pincode = \"assets/Common/pincode.png\";\n\n//More Menu\nconst String offer = \"assets/more/offer.png\";\nconst String hold = \"assets/more/hold.png\";\nconst String clearSelection = \"assets/more/clear.png\";\nconst String editProfile = \"assets/Common/editProfile.png\";\n\n//Drawer\nconst String menu = \"assets/drawer/menu.png\";\nconst String aboutUs = \"assets/drawer/aboutUs.png\";\nconst String drawerSearch = \"assets/drawer/search.png\";\nconst String changePassword = \"assets/drawer/changePassword.png\";\nconst String contactUs = \"assets/drawer/contactUs.png\";\nconst String confirmStones = \"assets/drawer/confirmStones.png\";\nconst String updateStones = \"assets/Common/updateStone.png\";\nconst String diamondOnAuction = \"assets/drawer/diamondOnAuction.png\";\nconst String exclusiveDiamonds = \"assets/drawer/exclusiveDiamonds.png\";\nconst String dashboard = \"assets/drawer/dashboard.png\";\nconst String logout = \"assets/drawer/logout.png\";\nconst String myBid = \"assets/drawer/myBid.png\";\nconst String myDemand = \"assets/drawer/myDemand.png\";\nconst String myHold = \"assets/drawer/myHold.png\";\nconst String myOffer = \"assets/drawer/myOffer.png\";\nconst String myOffice = \"assets/drawer/myOffice.png\";\nconst String myOrder = \"assets/drawer/myOrder.png\";\nconst String myPurchased = \"assets/drawer/myPurchased.png\";\nconst String mySavedSearch = \"assets/drawer/mySavedSearch.png\";\nconst String myWatchlist = \"assets/drawer/myWatchlist.png\";\nconst String newArrival = \"assets/drawer/newArrival.png\";\nconst String privacyPolicy = \"assets/drawer/privacyPolicy.png\";\nconst String quickSearch = \"assets/drawer/quickSearch.png\";\nconst String stoneOfTheDay = \"assets/drawer/stoneOfTheDay.png\";\nconst String termsAndCondition = \"assets/drawer/termsAndCondition.png\";\nconst String userTemp = \"assets/drawer/user.png\";\nconst String bottomGradient = \"assets/drawer/bottomGradient.png\";\nconst String edit = \"assets/drawer/edit.png\";\nconst String enquiryDrawer = \"assets/drawer/enquiry.png\";\nconst String addToCartDrawer = \"assets/drawer/addToCart.png\";\nconst String commentDrawer = \"assets/drawer/comment.png\";\nconst String upcoming = \"assets/drawer/upcoming.png\";\n\n//Home\nconst String home_clock = \"assets/Home/clock.png\";\nconst String home_delete = \"assets/Home/delete.png\";\nconst String home_cart = \"assets/Home/cart.png\";\nconst String home_cartBg = \"assets/Home/cartBg.png\";\nconst String home_stoneoftheday = \"assets/Home/stonesoftheDay.png\";\nconst String home_stoneofthedayBg = \"assets/Home/stonesoftheDayBg.png\";\nconst String home_newArrival = \"assets/Home/newArrival.png\";\nconst String home_newArrivalBg = \"assets/Home/newArrivalBg.png\";\nconst String home_watchlist = \"assets/Home/watchlist.png\";\nconst String home_watchlistBg = \"assets/Home/watchlistBg.png\";\nconst String finalCalculation = \"assets/diamnow/finalCalculation.png\";\nconst String calender = \"assets/diamnow/calendar.png\";\nconst String reminder = \"assets/DiamondDetail/reminder.png\";\nconst String recentSearch = \"assets/drawer/saved.png\";\nconst String cancel = \"assets/Common/closecross.png\";\nconst String manageAddress = \"assets/DiamondDetail/manageAddress.png\";\nconst String searchIcon = \"assets/DiamondDetail/search.png\";\nconst String selectedIcon = \"assets/DiamondDetail/selectedIcon.png\";\nconst String unselectedIcon = \"assets/DiamondDetail/unselectedIcon.png\";\nconst String reset = \"assets/Common/Reset.png\";\nconst String rightArrow = 'assets/Common/rightArrow.png';\nconst String leftArrrow = \"assets/Common/leftArrow.png\";\n\n// MyDemand icons\nconst String saved_icon = \"assets/diamnow/saved.png\";\nconst String edit_icon = \"assets/diamnow/edit.png\";\nconst String calender_week = \"assets/diamnow/calendar_week.png\";\nconst String sun = \"assets/diamnow/sun.png\";\nconst String sunrise = \"assets/diamnow/sunrise.png\";\nconst String dropDown = \"assets/auth/dropDown.png\";\nconst String languageIcon = \"assets/auth/languageIcon.png\";\nconst String cameraPlaceHolder = \"assets/auth/cameraPlaceHolder.png\";\nconst String drawerLogo = \"assets/Common/drawerLogo.png\";\nconst String bidImage = \"assets/Common/bidImage.png\";\nconst String myDemandImage = \"assets/Common/myDemand.png\";\nconst String layoutlist = \"assets/Common/layoutlist.png\";\nconst String matchpairlist = \"assets/Common/matchpairlist.png\";\nconst String documentPlaceHolder = \"assets/Common/documentPlaceHolder.png\";\n\n//SavedSearch\nconst String showLess = \"assets/diamnow/showLess.png\";\nconst String showMore = \"assets/diamnow/showMore.png\";\nconst String delete_icon = \"assets/diamnow/delete_icon.png\";\nconst String delete_icon_medium = \"assets/diamnow/delete_icon1.png\";\nconst String saved_medium = \"assets/diamnow/saved_medium.png\";\nconst String editPen1 = \"assets/diamnow/edit1.png\";\n\n//share\nconst String drive = \"assets/Share/drive.png\";\nconst String facebook = \"assets/Share/facebook.png\";\nconst String gmail = \"assets/Share/gmail.png\";\nconst String hangout = \"assets/Share/hangout.png\";\nconst String whatsapp = \"assets/Share/whatsapp.png\";\n\n//Common\nconst String myBidWhite = \"assets/Common/myBidWhite.png\";\nconst String clearSelectionWhite = \"assets/Common/clearWhite.png\";\nconst String shareWhite = \"assets/Common/shareWhite.png\";\nconst String downloadWhite = \"assets/Common/downloadWhite.png\";\nconst String offerWhite = \"assets/Common/offerWhite.png\";\nconst String upRedArrow = \"assets/Common/upRedArrow.png\";\nconst String downGreenArrow = \"assets/Common/downGreenArrow.png\";\n\n//PnShah\nconst String forgetMPIN = \"assets/PNShah/ForgetMPIN/forgetMPIN.png\";\nconst String fingurePrint = \"assets/PNShah/ForgetMPIN/fingerprint.png\";\nconst String mpin = \"assets/PNShah/ForgetMPIN/MPIN.png\";\nconst String tickSelected = \"assets/Common/tickSelected.png\";\nconst String tickUnSelected = \"assets/Common/tickunSelected.png\";\nconst String microphone = \"assets/Common/microphone.png\";\nconst String buyer = \"assets/PNShah/customer.png\";\nconst String salesman = \"assets/PNShah/salesman.png\";\nconst String broker = \"assets/PNShah/broker.png\";\nconst String invoice = \"assets/PNShah/invoice.png\";\n\n//Home\nconst String homeOverlay1 = \"assets/Overlay/Home/HomeOverlay1.png\";\nconst String homeOverlay2 = \"assets/Overlay/Home/HomeOverlay2.png\";\nconst String homeOverlay3 = \"assets/Overlay/Home/HomeOverlay3.png\";\nconst String homeOverlay4 = \"assets/Overlay/Home/HomeOverlay4.png\";\nconst String homeOverlay5 = \"assets/Overlay/Home/HomeOverlay5.png\";\nconst String homeOverlay6 = \"assets/Overlay/Home/HomeOverlay6.png\";\n\n//My account overlay constants\nconst String myAccountOverlay1 =\n    \"assets/Overlay/MyAccount/MyAccountOverlay1.png\";\nconst String myAccountOverlay2 =\n    \"assets/Overlay/MyAccount/MyAccountOverlay2.png\";\n\n//Filter overlay constants\nconst String searchOverlay1 = \"assets/Overlay/Search/SearchOverlay1.png\";\nconst String searchOverlay2 = \"assets/Overlay/Search/SearchOverlay2.png\";\nconst String searchOverlay3 = \"assets/Overlay/Search/SearchOverlay3.png\";\nconst String searchOverlay4 = \"assets/Overlay/Search/SearchOverlay4.png\";\nconst String searchOverlay5 = \"assets/Overlay/Search/SearchOverlay5.png\";\nconst String searchOverlay6 = \"assets/Overlay/Search/SearchOverlay6.png\";\nconst String searchOverlay7 = \"assets/Overlay/Search/SearchOverlay7.png\";\n\n//Diamond list overlay constants\nconst String searchResultOverlay0 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay0.png\";\nconst String searchResultOverlay1 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay1.png\";\nconst String searchResultOverlay2 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay2.png\";\nconst String searchResultOverlay3 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay3.png\";\nconst String searchResultOverlay4 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay4.png\";\nconst String searchResultOverlay5 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay5.png\";\nconst String searchResultOverlay6 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay6.png\";\nconst String searchResultOverlay7 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay7.png\";\nconst String searchResultOverlay8 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay8.png\";\nconst String searchResultOverlay9 =\n    \"assets/Overlay/SearchResult/SearchResultOverlay9.png\";\n\n//Diamond detail overlay constants\nconst String diamondDetailOverlay1 =\n    \"assets/Overlay/DiamondDetail/DiamondDetailOverlay1.png\";\n\n//Compare stone overlay constants\nconst String compareOverlay1 =\n    \"assets/Overlay/CompareStone/CompareOverlay1.png\";\n\n//Offer overlay constants\nconst String offerOverlay1 = \"assets/Overlay/Offer/OfferOverlay2.png\";\nconst String offerOverlay2 = \"assets/Overlay/Offer/OfferOverlay1.png\";\nconst String offerOverlay3 = \"assets/Overlay/Offer/OfferOverlay3.png\";\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/app/constant/ImageConstant.dart b/lib/app/constant/ImageConstant.dart
--- a/lib/app/constant/ImageConstant.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/app/constant/ImageConstant.dart	(date 1635305792695)
@@ -140,6 +140,7 @@
 const String addToCartDrawer = "assets/drawer/addToCart.png";
 const String commentDrawer = "assets/drawer/comment.png";
 const String upcoming = "assets/drawer/upcoming.png";
+const String dollarWhite = "assets/diamnow/dollar.png";
 
 //Home
 const String home_clock = "assets/Home/clock.png";
Index: lib/components/Screens/Filter/FilterScreen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\nimport 'dart:collection';\n\nimport 'package:diamnow/app/AppConfiguration/AppNavigation.dart';\nimport 'package:diamnow/app/Helper/SyncManager.dart';\nimport 'package:diamnow/app/app.export.dart';\nimport 'package:diamnow/app/constant/EnumConstant.dart';\nimport 'package:diamnow/app/extensions/eventbus.dart';\nimport 'package:diamnow/app/localization/app_locales.dart';\nimport 'package:diamnow/app/network/NetworkCall.dart';\nimport 'package:diamnow/app/network/ServiceModule.dart';\nimport 'package:diamnow/app/utils/BaseDialog.dart';\nimport 'package:diamnow/app/utils/BottomSheet.dart';\nimport 'package:diamnow/app/utils/CustomDialog.dart';\nimport 'package:diamnow/components/CommonWidget/BottomTabbarWidget.dart';\nimport 'package:diamnow/components/CommonWidget/OverlayScreen.dart';\nimport 'package:diamnow/components/Screens/Auth/Widget/DialogueList.dart';\nimport 'package:diamnow/components/Screens/Dialogue/SelectionScreen.dart';\nimport 'package:diamnow/components/Screens/DiamondList/DiamondActionBottomSheet.dart';\nimport 'package:diamnow/components/Screens/DiamondList/DiamondListScreen.dart';\nimport 'package:diamnow/components/Screens/DiamondList/Widget/SortBy/FilterPopup.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/AddDemand.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/CaratRangeWidget.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/CertNoWidget.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/ColorWhiteFancyWidget.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/ColorWidget.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/FromToWidget.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/SelectionWidget.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/SeperatorWidget.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/ShapeWidget.dart';\nimport 'package:diamnow/components/Screens/MyDemand/MyDemandScreen.dart';\nimport 'package:diamnow/components/Screens/Notification/Notifications.dart';\nimport 'package:diamnow/components/Screens/SalesPerson/Widget/CellModel.dart';\nimport 'package:diamnow/components/Screens/SavedSearch/SavedSearchScreen.dart';\nimport 'package:diamnow/components/Screens/Search/Search.dart';\nimport 'package:diamnow/components/Screens/VoiceSearch/VoiceSearch.dart';\nimport 'package:diamnow/components/widgets/BaseStateFulWidget.dart';\nimport 'package:diamnow/models/DiamondList/DiamondConstants.dart';\nimport 'package:diamnow/models/FilterModel/BottomTabModel.dart';\nimport 'package:diamnow/models/FilterModel/FilterModel.dart';\nimport 'package:diamnow/models/FilterModel/SelectStatusModel.dart';\nimport 'package:diamnow/models/FilterModel/TabModel.dart';\nimport 'package:diamnow/models/Master/Master.dart';\nimport 'package:diamnow/models/SavedSearch/SavedSearchModel.dart';\nimport 'package:diamnow/modules/Filter/gridviewlist/FilterRequest.dart';\nimport 'package:diamnow/modules/Filter/gridviewlist/KeyToSymbol.dart';\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:flutter/widgets.dart';\nimport 'package:flutter_spinkit/flutter_spinkit.dart';\nimport 'package:rxbus/rxbus.dart';\n\nclass FilterScreen extends StatefulScreenWidget {\n  static const route = \"FilterScreen\";\n\n  int moduleType = DiamondModuleConstant.MODULE_TYPE_SEARCH;\n  bool isFromDrawer = false;\n  SavedSearchModel savedSearchModel;\n  DisplayDataClass dictSearchData;\n\n  FilterScreen(\n    Map<String, dynamic> arguments, {\n    Key key,\n  }) : super(key: key) {\n    if (arguments != null) {\n      if (arguments[ArgumentConstant.ModuleType] != null) {\n        moduleType = arguments[ArgumentConstant.ModuleType];\n      }\n      if (arguments[ArgumentConstant.IsFromDrawer] != null) {\n        isFromDrawer = arguments[ArgumentConstant.IsFromDrawer];\n      }\n      if (arguments[\"searchData\"] != null) {\n        dictSearchData = arguments[\"searchData\"];\n      }\n      if (arguments[\"savedSearchModel\"] != null) {\n        savedSearchModel = arguments[\"savedSearchModel\"];\n      }\n    }\n  }\n\n  @override\n  _FilterScreenState createState() => _FilterScreenState(\n        moduleType,\n        isFromDrawer,\n        dictSearchData: dictSearchData,\n        savedSearchModel: savedSearchModel,\n      );\n}\n\nclass _FilterScreenState extends StatefulScreenWidgetState {\n  int moduleType;\n  bool isFromDrawer;\n  DisplayDataClass dictSearchData;\n  SavedSearchModel savedSearchModel;\n\n  _FilterScreenState(this.moduleType, this.isFromDrawer,\n      {this.dictSearchData, this.savedSearchModel});\n\n  List<SelectionPopupModel> selectedOptions = List();\n\n  int segmentedControlValue = 0;\n  PageController controller = PageController();\n  List<TabModel> arrTab = [];\n  List<FormBaseModel> arrList = [];\n  List<BottomTabModel> arrBottomTab;\n  String filterId;\n  List<FilterOptions> optionList = List<FilterOptions>();\n  Config config = Config();\n  List<SelectStatusModel> selectStatusModel = [];\n  bool isCompanySelected = false;\n  bool isStatusSelected = false;\n  bool isProgress = true;\n\n  //PopUp data for savedsearch...\n  List<SelectionPopupModel> saveSearchList = List<SelectionPopupModel>();\n\n  @override\n  void initState() {\n    super.initState();\n    registerRsBus();\n    selectStatusModel = [];\n    if (selectStatus != null && selectStatus.length > 0) {\n      isStatusSelected = true;\n    }\n    selectStatusModel.addAll(SelectStatusModel.dynamicList);\n    selectStatusModel.forEach((element) {\n      element.isSelected = false;\n    });\n\n    WidgetsBinding.instance.addPostFrameCallback((_) {\n      config.getFilterJson(isSearch: true).then((result) {\n        setState(() {\n          arrList = result.where((element) {\n            if (element.viewType == ViewTypes.selection) {\n              if (element is SelectionModel)\n                return !isNullEmptyOrFalse(element.masters);\n            }\n            return true;\n          }).toList();\n\n          if (!isNullEmptyOrFalse(this.dictSearchData)) {\n            arrList = FilterDataSource()\n                .prepareFilterDataSource(arrList, this.dictSearchData);\n          }\n        });\n      });\n      config.getTabJson().then((result) {\n        setState(() {\n          arrTab = result;\n        });\n      });\n    });\n    arrBottomTab = BottomTabBar.getFilterScreenBottomTabs(\n        isForEditSavedSearch: !isNullEmptyOrFalse(this.savedSearchModel));\n    setState(() {\n      //\n    });\n    app.resolve<PrefUtils>().saveCompany(null);\n    if (app.resolve<PrefUtils>().getCompanyDetails() != null) {\n      isCompanySelected = true;\n    }\n  }\n\n  @override\n  void dispose() {\n    RxBus.destroy(tag: eventMasterSelection);\n    RxBus.destroy(tag: eventMasterForDeSelectMake);\n    RxBus.destroy(tag: eventMasterForDeSelectMake);\n    RxBus.destroy(tag: eventMasterForGroupWidgetSelectAll);\n    super.dispose();\n  }\n\n  registerRsBus() {\n    RxBus.register<Map<MasterSelection, bool>>(tag: eventMasterSelection)\n        .listen(\n      (event) => setState(\n        () {\n          List<SelectionModel> list = arrList\n              .where((element) => element.viewType == ViewTypes.selection)\n              .toList()\n              .cast<SelectionModel>();\n\n          event.keys.first.masterToSelect.forEach((element) {\n            SelectionModel temp = list.firstWhere((mainElement) {\n              return mainElement.masterCode == element.code;\n            });\n            if (!isNullEmptyOrFalse(temp)) {\n              temp.masters.forEach((elementSubMaster) {\n                elementSubMaster.isSelected = false;\n\n                if (element.subMasters.contains(elementSubMaster.code)) {\n                  elementSubMaster.isSelected = event.values.first;\n                }\n              });\n            }\n          });\n        },\n      ),\n    );\n\n    RxBus.register<bool>(tag: eventMasterForDeSelectMake).listen(\n      (event) => setState(\n        () {\n          List<SelectionModel> list = arrList\n              .where((element) => element.viewType == ViewTypes.selection)\n              .toList()\n              .cast<SelectionModel>();\n\n          list.forEach((element) {\n            if (element.masterCode == MasterCode.make) {\n              element.masters.forEach((element) {\n                if (element.code != MasterCode.noBgm)\n                  element.isSelected = false;\n              });\n            }\n          });\n        },\n      ),\n    );\n\n    //Group selection for All\n    RxBus.register<Map<String, bool>>(tag: eventMasterForGroupWidgetSelectAll)\n        .listen((event) {\n      List<ColorModel> list = arrList\n          .where((element) => element.viewType == ViewTypes.groupWidget)\n          .toList()\n          .cast<ColorModel>();\n\n      List<ColorModel> list2 = list\n          .where((element) => element.masterCode == event.keys.first)\n          .toList()\n          .cast<ColorModel>();\n\n      list2.forEach((element) {\n        element.mainMasters.forEach((element) {\n          if (element.sId != R.string.commonString.showMore) {\n            element.isSelected = event.values.first;\n          }\n        });\n      });\n      list2.forEach((element) {\n        element.groupMaster.forEach((element) {\n          if (element.sId != R.string.commonString.showMore) {\n            element.isSelected = event.values.first;\n          }\n        });\n      });\n    });\n\n    RxBus.register<Map<String, dynamic>>(\n            tag: eventMasterForSingleItemOfGroupSelection)\n        .listen((event) {\n      String masterCode = event[\"masterCode\"];\n      String selectedMasterCode = event[\"selectedMasterCode\"];\n      bool isSelected = event[\"isSelected\"];\n      List<MasterSelection> masterSelection = event[\"masterSelection\"];\n      bool isGroupSelected = event[\"isGroupSelected\"];\n\n      List<ColorModel> list = arrList\n          .where((element) => element.viewType == ViewTypes.groupWidget)\n          .toList()\n          .cast<ColorModel>();\n\n      List<ColorModel> list2 = list\n          .where((element) => element.masterCode == masterCode)\n          .toList()\n          .cast<ColorModel>();\n\n      if (!isNullEmptyOrFalse(list2)) {\n        if (isGroupSelected) {\n          for (var item in masterSelection) {\n            if (item.code == selectedMasterCode) {\n              if (isGroupSelected) {\n                for (var subMaster in item.masterToSelect) {\n                  subMaster.subMasters.forEach((strCode) {\n                    list2.first.mainMasters.forEach((element) {\n                      if (element.code == strCode) {\n                        element.isSelected = isSelected;\n                      }\n                    });\n                  });\n                }\n              }\n            }\n          }\n        } else {\n          list2.first.groupMaster.forEach((element) {\n            element.isSelected = false;\n          });\n\n          List<Master> masters = list2.first.mainMasters\n              .where((element) => element.isSelected == true)\n              .toList();\n\n          List<String> masterCodes = masters.map((e) => e.code).toList();\n\n          for (var item in masterSelection) {\n            item.masterToSelect.forEach((element) {\n              if (element.subMasters\n                      .where((f) => masterCodes.contains(f))\n                      .toList()\n                      .length ==\n                  element.subMasters.length) {\n                list2.first.groupMaster.forEach((element) {\n                  if (element.code == item.code) {\n                    element.isSelected = true;\n                  }\n                });\n              }\n            });\n          }\n        }\n      }\n    });\n  }\n\n  bool checkedValue = false;\n\n  @override\n  Widget build(BuildContext context) {\n    if (selectStatus != null && selectStatus.length > 0) {\n      isStatusSelected = true;\n    }\n//    app.resolve<PrefUtils>().saveCompany(null);\n    return GestureDetector(\n      onTap: () {\n        FocusManager.instance.primaryFocus.unfocus();\n      },\n      child: Stack(\n        children: [\n          Scaffold(\n            backgroundColor: appTheme.whiteColor,\n            appBar: getAppBar(\n                context,\n                moduleType ==\n                        DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH\n                    ? R.string.screenTitle.searchOffline\n                    : R.string.screenTitle.searchDiamond,\n                bgColor: appTheme.whiteColor,\n                leadingButton: isFromDrawer\n                    ? getDrawerButton(context, true)\n                    : getBackButton(context),\n                centerTitle: false,\n                actionItems: [\n                  if (!app.resolve<PrefUtils>().isUserCustomer())\n                    InkWell(\n                      onTap: () {\n                        Navigator.push(\n                          context,\n                          MaterialPageRoute(\n                            builder: (BuildContext context) {\n                              return SelectionScreen(\n                                title: R.string.screenTitle.selectCompany,\n                                hintText: R.string.commonString.search,\n                                positiveButtonTitle:\n                                    R.string.commonString.apply,\n                                negativeButtonTitle:\n                                    R.string.commonString.cancel,\n                                isSearchEnable: true,\n                                type: CellType.Company,\n                                isMultiSelectionEnable: false,\n                                applyFilterCallBack: (\n                                    {List<SelectionPopupModel>\n                                        multiSelectedItem}) {\n                                  isCompanySelected = true;\n                                  app\n                                      .resolve<PrefUtils>()\n                                      .saveCompany(multiSelectedItem.first);\n                                  setState(() {});\n                                },\n                              );\n                            },\n                          ),\n                        );\n                      },\n                      child: Padding(\n                        padding: EdgeInsets.only(\n                          right: getSize(Spacing.rightPadding),\n                          left: getSize(8.0),\n                        ),\n                        child: Stack(\n                          alignment: Alignment.topCenter,\n                          children: [\n                            Center(\n                              child: Image.asset(\n                                buildingIcon,\n                                height: getSize(20),\n                                width: getSize(20),\n                              ),\n                            ),\n                            Visibility(\n                              visible: isCompanySelected,\n                              child: Container(\n                                margin: EdgeInsets.only(\n                                  top: getSize(10),\n                                ),\n                                height: getSize(8),\n                                width: getSize(8),\n                                decoration: BoxDecoration(\n                                  shape: BoxShape.circle,\n                                  color: appTheme.colorPrimary,\n                                ),\n                              ),\n                            )\n                          ],\n                        ),\n                      ),\n                    ),\n                  if (!app.resolve<PrefUtils>().isUserCustomer())\n                    InkWell(\n                      onTap: () {\n                        openDialogueForSelectStatus(context);\n                      },\n                      child: Padding(\n                        padding: EdgeInsets.only(\n                          right: getSize(Spacing.rightPadding),\n                          left: getSize(8.0),\n                        ),\n                        child: Stack(\n                          alignment: Alignment.topCenter,\n                          children: [\n                            Center(\n                              child: Image.asset(\n                                descendantIcon,\n                                height: getSize(20),\n                                width: getSize(20),\n                              ),\n                            ),\n                            Visibility(\n                              visible: isStatusSelected,\n                              child: Container(\n                                margin: EdgeInsets.only(\n                                  top: getSize(10),\n                                ),\n                                height: getSize(8),\n                                width: getSize(8),\n                                decoration: BoxDecoration(\n                                  shape: BoxShape.circle,\n                                  color: appTheme.colorPrimary,\n                                ),\n                              ),\n                            )\n                          ],\n                        ),\n                      ),\n                    ),\n                  InkWell(\n                    onTap: () {\n                      arrList.forEach((element) {\n                        if (element is SelectionModel) {\n                          element.masters.forEach((element) {\n                            element.isSelected = false;\n                          });\n                          element.isShowAllSelected = false;\n                          element.caratRangeChipsToShow = [];\n                        }\n                        if (element is KeyToSymbolModel) {\n                          element.masters.forEach((element) {\n                            element.isSelected = false;\n                          });\n                        }\n                        if (element is FromToModel) {\n                          element.valueFrom = \"\";\n                          element.valueTo = \"\";\n                        }\n                        if (element is ColorModel) {\n                          element.masters.forEach((element) {\n                            element.isSelected = false;\n                          });\n                          element.mainMasters.forEach((element) {\n                            element.isSelected = false;\n                          });\n                          element.groupMaster.forEach((element) {\n                            element.isSelected = false;\n                          });\n                          element.intensity.forEach((element) {\n                            element.isSelected = false;\n                          });\n                          element.overtone.forEach((element) {\n                            element.isSelected = false;\n                          });\n                        }\n                      });\n                      selectStatus.clear();\n                      selectStatusModel.forEach((element) {\n                        element.isSelected = false;\n                      });\n                      isStatusSelected = false;\n                      isCompanySelected = false;\n                      app.resolve<PrefUtils>().saveCompany(null);\n                      setState(() {});\n\n                      //  NavigationUtilities.pushRoute(Notifications.route);\n                    },\n                    child: Padding(\n                      padding: EdgeInsets.only(\n                          right: getSize(Spacing.rightPadding),\n                          left: getSize(8.0)),\n                      child: Image.asset(\n                        reset,\n                        height: getSize(22),\n                        width: getSize(22),\n                      ),\n                    ),\n                  ),\n                  InkWell(\n                    onTap: () {\n                      NavigationUtilities.pushRoute(Notifications.route);\n                    },\n                    child: Padding(\n                      padding: EdgeInsets.only(\n                          right: getSize(8.0),\n                          left: getSize(Spacing.leftPadding)),\n                      child: Image.asset(\n                        notification,\n                        height: getSize(20),\n                        width: getSize(20),\n                      ),\n                    ),\n                  ),\n                ]),\n            body: Column(\n              mainAxisSize: MainAxisSize.min,\n              children: [\n                Padding(\n                  padding: EdgeInsets.only(top: getSize(8)),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n                    children: [\n                      for (int i = 0; i < arrTab.length; i++)\n                        setTitleOfSegment(arrTab[i].title, i)\n                    ],\n                  ),\n                ),\n                // isNullEmptyOrFalse(arrTab)\n                //     ? SizedBox()\n                //     : SizedBox(height: getSize(16)),\n                // isNullEmptyOrFalse(arrTab) ? SizedBox() : _segmentedControl(),\n                Expanded(\n                  child: Container(\n                    color: Colors.transparent,\n                    child: isNullEmptyOrFalse(arrList)\n                        ? SizedBox()\n                        : getPageView(),\n                  ),\n                ),\n              ],\n            ),\n            bottomNavigationBar: getBottomTab(),\n          ),\n          (app\n                          .resolve<PrefUtils>()\n                          .isDisplayedTour(PrefUtils().keySearchTour) ==\n                      false &&\n                  this.moduleType == DiamondModuleConstant.MODULE_TYPE_SEARCH)\n              ? OverlayScreen(\n                  moduleType,\n                  finishTakeTour: () {\n                    setState(() {});\n                  },\n                  scrollIndex: (index) {\n                    // if (index == 0 || index == 1) {\n                    //   Scrollable.ensureVisible(searchKey.currentContext);\n                    // } else if (index == 2) {\n                    //   Scrollable.ensureVisible(savedSearchKey.currentContext);\n                    // } else if (index == 3) {\n                    //   Scrollable.ensureVisible(sellerKey.currentContext);\n                    // }\n                  },\n                )\n              : SizedBox(),\n        ],\n      ),\n    );\n  }\n\n  List<String> selectStatus = [];\n  List<String> oldSelectStatus = [];\n\n  openDialogueForSelectStatus(BuildContext context) {\n    return showDialog(\n      context: context,\n      builder: (BuildContext localContext) {\n//        selectStatusModel.forEach((element) {\n//          selectStatus.forEach((item) {\n//                print(element.typeConstant);\n//                print(item);\n//                print(element.typeConstant == item);\n//            if (element.typeConstant == item) {\n//              element.isSelected = true;\n////              selectStatus.add(element.typeConstant);\n//            }\n//          });\n//        });\n        return Dialog(\n          insetPadding: EdgeInsets.symmetric(\n            horizontal: getSize(20),\n            vertical: getSize(20),\n          ),\n          shape: RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(\n              getSize(25),\n            ),\n          ),\n          child: StatefulBuilder(builder: (localContext, StateSetter setState) {\n            return Column(\n              crossAxisAlignment: CrossAxisAlignment.center,\n              mainAxisSize: MainAxisSize.min,\n              children: [\n                Padding(\n                  padding: EdgeInsets.only(\n                    top: getSize(30),\n                    bottom: getSize(14),\n                  ),\n                  child: Text(\n                    \"Select Status\",\n                    style: appTheme.black18TextStyle,\n                  ),\n                ),\n                ListView.builder(\n                  itemCount: selectStatusModel.length,\n                  shrinkWrap: true,\n                  itemBuilder: (localContext, int index) {\n                    var mapData = selectStatusModel[index];\n                    return CheckboxListTile(\n                      title: Text(\n                        mapData.title,\n                        style: appTheme.black14TextStyle,\n                      ),\n                      value: mapData.isSelected,\n                      activeColor: appTheme.colorPrimary,\n                      onChanged: (newValue) {\n                        setState(() {\n                          mapData.isSelected = newValue;\n                        });\n                      },\n                      controlAffinity: ListTileControlAffinity\n                          .leading, //  <-- leading Checkbox\n                    );\n                  },\n                ),\n                Padding(\n                  padding: EdgeInsets.only(\n                    top: getSize(20),\n                    bottom: getSize(30),\n                  ),\n                  child: Row(\n                    children: [\n                      Expanded(\n                        child: Container(\n                          margin: EdgeInsets.only(\n                            left: getSize(20),\n                            right: getSize(20),\n                          ),\n                          child: AppButton.flat(\n                            onTap: () {\n                              selectStatus = oldSelectStatus;\n                              selectStatusModel.forEach((element) {\n                                element.isSelected = false;\n                              });\n                              selectStatusModel.forEach((element) {\n                                selectStatus.forEach((item) {\n                                  print(element.typeConstant);\n                                  print(item);\n                                  print(element.typeConstant == item);\n                                  if (element.typeConstant == item) {\n                                    element.isSelected = true;\n                                  }\n                                });\n                              });\n                              Navigator.pop(context, true);\n                              setState(() {});\n                            },\n                            text: \"cancel\",\n                            borderRadius: getSize(5),\n                            textColor: appTheme.colorPrimary,\n                            backgroundColor: appTheme.whiteColor,\n                            fitWidth: true,\n                            isBorder: true,\n                          ),\n                        ),\n                      ),\n                      Expanded(\n                        child: Container(\n                          margin: EdgeInsets.only(\n                            right: getSize(20),\n                          ),\n                          child: AppButton.flat(\n                            onTap: () {\n                              selectStatus.clear();\n                              selectStatusModel.forEach((element) {\n                                if (element.isSelected) {\n                                  selectStatus.add(element.typeConstant);\n                                }\n                              });\n                              selectStatus = selectStatus.toSet().toList();\n                              oldSelectStatus = selectStatus;\n                              if (selectStatus.length > 0) {\n                                isStatusSelected = true;\n                              } else {\n                                isStatusSelected = false;\n                              }\n                              print(selectStatus);\n                              Navigator.pop(context, true);\n                            },\n                            text: \"Apply\",\n                            backgroundColor: appTheme.colorPrimary,\n                            borderRadius: getSize(5),\n                            fitWidth: true,\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                )\n              ],\n            );\n          }),\n        );\n      },\n    ).then((value) {\n      setState(() {});\n    });\n  }\n\n  setTitleOfSegment(String title, int index) {\n    return InkWell(\n      onTap: () {\n        setState(() {\n          segmentedControlValue = index;\n          controller.animateToPage(segmentedControlValue,\n              duration: Duration(milliseconds: 500), curve: Curves.easeIn);\n        });\n      },\n      child: Column(\n        children: [\n          Text(\n            title ?? \"\",\n            style: segmentedControlValue == index\n                ? appTheme.blackSemiBold18TitleColorblack\n                : appTheme.greySemibold18TitleColor,\n          ),\n          Padding(\n            padding: EdgeInsets.only(top: getSize(8)),\n            child: Container(\n                height: getSize(3),\n                width: getSize(50),\n                color: segmentedControlValue == index\n                    ? appTheme.colorPrimary\n                    : Colors.transparent),\n          ),\n        ],\n      ),\n    );\n  }\n\n  //my demand popUP\n  String _selectedDate;\n  String diamondTitle;\n\n  callApiForAddDemand(String selectedDate, String diamondTitle) {\n    Map<String, dynamic> dict = {};\n    dict[\"filter\"] = FilterRequest().createRequest(arrList);\n    dict[\"name\"] = diamondTitle;\n    dict[\"searchType\"] = DiamondSearchType.DEMAND;\n    dict[\"expiryDate\"] = selectedDate;\n\n    NetworkCall<AddDemandModel>()\n        .makeCall(\n      () => app.resolve<ServiceModule>().networkService().addDemand(dict),\n      context,\n      isProgress: true,\n    )\n        .then((diamondListResp) async {\n      app.resolve<CustomDialogs>().confirmDialog(\n        context,\n        title: R.string.commonString.demandadded,\n        desc: R.string.commonString.demandAddedSuccessfully,\n        negativeBtnTitle: R.string.commonString.myDemand,\n        positiveBtnTitle: R.string.commonString.ok,\n        onClickCallback: (click) {\n          if (click == ButtonType.NagativeButtonClick) {\n            //   AppNavigation.shared.movetoHome(isPopAndSwitch: true);\n            // } else {\n            Map<String, dynamic> dict = {};\n            dict[ArgumentConstant.ModuleType] =\n                DiamondModuleConstant.MODULE_TYPE_MY_DEMAND;\n            NavigationUtilities.pushRoute(MyDemandScreen.route, args: dict);\n          }\n        },\n      );\n      // showToast(R.string.commonString.demandAddedSuccessfully,\n      //     context: context);\n    }).catchError((onError) {\n      print(onError.toString());\n    });\n  }\n\n  //my demand popup end.\n  getAddDemand() {\n    SyncManager.instance.callAnalytics(context,\n        page: PageAnalytics.MY_DEMAND,\n        section: SectionAnalytics.ADD,\n        action: ActionAnalytics.OPEN);\n\n    showDialog(\n      context: context,\n      barrierDismissible: true,\n      builder: (BuildContext context) {\n        return Dialog(\n          insetPadding: EdgeInsets.symmetric(\n              horizontal: getSize(20), vertical: getSize(20)),\n          shape: RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(getSize(25)),\n          ),\n          child: AddDemand(\n              title: R.string.commonString.addDemand,\n              arrList: arrList,\n              applyCallBack: ({String selectedDate, String diamondTitle}) {\n                callApiForAddDemand(selectedDate, diamondTitle);\n              }),\n        );\n      },\n    );\n  }\n\n  getUpcoming() {\n    SyncManager.instance.callAnalytics(context,\n        page: PageAnalytics.MYSAVED_SEARCH,\n        section: SectionAnalytics.LIST,\n        action: ActionAnalytics.CLICK);\n  }\n\n  getSavedSearchPopUp() {\n    SyncManager.instance.callAnalytics(context,\n        page: PageAnalytics.MYSAVED_SEARCH,\n        section: SectionAnalytics.LIST,\n        action: ActionAnalytics.CLICK);\n\n    if (!isNullEmptyOrFalse(saveSearchList)) {\n      showDialog(\n        context: context,\n        builder: (BuildContext context) {\n          return Dialog(\n            insetPadding: EdgeInsets.symmetric(\n                horizontal: getSize(20), vertical: getSize(20)),\n            shape: RoundedRectangleBorder(\n              borderRadius: BorderRadius.circular(getSize(25)),\n            ),\n            child: SelectionDialogue(\n              title: R.string.commonString.savedSearch,\n              hintText: R.string.commonString.searchSavedSearch,\n              selectionOptions: saveSearchList,\n              showViewAllButton: true,\n              showViewAllButtonCallBack: () {\n                NavigationUtilities.pushRoute(SavedSearchScreen.route);\n              },\n              applyFilterCallBack: (\n                  {SelectionPopupModel selectedItem,\n                  List<SelectionPopupModel> multiSelectedItem}) {\n                Map<String, dynamic> dict = new HashMap();\n                dict[\"filterId\"] = selectedItem.id;\n                dict[ArgumentConstant.ModuleType] =\n                    DiamondModuleConstant.MODULE_TYPE_MY_SAVED_SEARCH;\n                NavigationUtilities.pushRoute(\n                  DiamondListScreen.route,\n                  args: dict,\n                );\n              },\n            ),\n          );\n        },\n      );\n    } else {\n      SyncManager.instance.callAnalytics(context,\n          page: PageAnalytics.MYSAVED_SEARCH,\n          section: SectionAnalytics.ADD,\n          action: ActionAnalytics.CLICK);\n\n      Map<String, dynamic> dict = {};\n      dict[\"type\"] = SavedSearchType.savedSearch;\n      dict[\"isAppendMasters\"] = true;\n\n      NetworkCall<SavedSearchResp>()\n          .makeCall(\n        () => app.resolve<ServiceModule>().networkService().mySavedSearch(dict),\n        context,\n      )\n          .then((savedSearchResp) async {\n        for (var item in savedSearchResp.data.list) {\n          saveSearchList\n              .add(SelectionPopupModel(item.id, item.name, isSelected: false));\n        }\n        ;\n        showDialog(\n          context: context,\n          builder: (BuildContext context) {\n            return Dialog(\n              insetPadding: EdgeInsets.symmetric(\n                  horizontal: getSize(20), vertical: getSize(20)),\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(getSize(25)),\n              ),\n              child: SelectionDialogue(\n                hintText: R.string.commonString.searchSavedSearch,\n                title: R.string.commonString.savedSearch,\n                selectionOptions: saveSearchList,\n                showViewAllButton: true,\n                showViewAllButtonCallBack: () {\n                  NavigationUtilities.pushRoute(SavedSearchScreen.route);\n                },\n                applyFilterCallBack: (\n                    {SelectionPopupModel selectedItem,\n                    List<SelectionPopupModel> multiSelectedItem}) {\n                  Map<String, dynamic> dict = new HashMap();\n                  dict[\"filterId\"] = selectedItem.id;\n                  dict[ArgumentConstant.ModuleType] =\n                      DiamondModuleConstant.MODULE_TYPE_MY_SAVED_SEARCH;\n                  NavigationUtilities.pushRoute(\n                    DiamondListScreen.route,\n                    args: dict,\n                  );\n                },\n              ),\n            );\n          },\n        );\n      }).catchError((onError) {\n        showToast(R.string.commonString.noSavedSearch, context: context);\n      });\n    }\n  }\n\n  Widget getBottomTab() {\n    return BottomTabbarWidget(\n      arrBottomTab: arrBottomTab,\n      onClickCallback: (obj) async {\n        //\n        if (obj.code == BottomCodeConstant.filterSearchUpcoming) {\n          if (app\n              .resolve<PrefUtils>()\n              .getModulePermission(\n                  ModulePermissionConstant.permission_searchupcoming)\n              .view) {\n            callApiForUpcoming(DiamondModuleConstant.MODULE_TYPE_UPCOMING);\n          } else {\n            app.resolve<CustomDialogs>().accessDenideDialog(context);\n          }\n        }\n        if (obj.code == BottomCodeConstant.filterSearchNewArrival) {\n          if (app\n              .resolve<PrefUtils>()\n              .getModulePermission(\n                  ModulePermissionConstant.permission_searchnewarrival)\n              .view) {\n            callApiForNewArrival(DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL);\n          } else {\n            app.resolve<CustomDialogs>().accessDenideDialog(context);\n          }\n        } else if (obj.code == BottomCodeConstant.filterAddDemamd) {\n          if (app\n              .resolve<PrefUtils>()\n              .getModulePermission(ModulePermissionConstant.permission_myDemand)\n              .insert) {\n            if (!isNullEmptyOrFalse(FilterRequest().createRequest(arrList))) {\n              Map<String, dynamic> map = FilterRequest()\n                  .createRequest(arrList, selectedStatus: selectStatus);\n              if (app.resolve<PrefUtils>().getUserDetails().type ==\n                      UserConstant.CUSTOMER &&\n                  map.length < 3) {\n                app.resolve<CustomDialogs>().errorDialog(\n                      context,\n                      \"\",\n                      \"Please select any 2 criteria.\",\n                      btntitle: R.string.commonString.ok,\n                    );\n              } else\n                getAddDemand();\n            } else {\n              showToast(R.string.commonString.selectAtleastOneFilter,\n                  context: context);\n            }\n            // place code\n          } else {\n            app.resolve<CustomDialogs>().accessDenideDialog(context);\n          }\n        } else if (obj.code == BottomCodeConstant.filterSearch) {\n          //Check internet is online or not\n          var connectivityResult = await Connectivity().checkConnectivity();\n          if (connectivityResult == ConnectivityResult.none) {\n            //Save filter Param offline\n            Map<String, dynamic> payload = {};\n            payload[\"module\"] =\n                DiamondModuleConstant.MODULE_TYPE_FILTER_OFFLINE_NOTI_CLICK;\n\n            payload[\"payload\"] = FilterRequest().createRequest(arrList);\n\n            app.resolve<PrefUtils>().saveFilterOffline(payload);\n\n            showToast(\n                \"You are offline, Your search is saved. When you are connected with internet, You will be notified and you can continue your search.\",\n                context: context);\n          } else {\n            if (app\n                    .resolve<PrefUtils>()\n                    .getModulePermission(\n                        ModulePermissionConstant.permission_offline_stock)\n                    .view &&\n                moduleType ==\n                    DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n              //Query for sembast\n              Map<String, dynamic> dict = new HashMap();\n              dict[\"filterModel\"] = arrList;\n              dict[ArgumentConstant.ModuleType] = moduleType;\n              NavigationUtilities.pushRoute(\n                DiamondListScreen.route,\n                args: dict,\n              );\n            } else if (segmentedControlValue == 2) {\n              print(\"-------------------------\");\n              if (app\n                  .resolve<PrefUtils>()\n                  .getModulePermission(\n                      ModulePermissionConstant.permission_matchPair)\n                  .view) {\n                Map<String, dynamic> map = FilterRequest().createRequest(\n                    arrList,\n                    selectedStatus: selectStatus,\n                    isFromMatch: true);\n\n                SyncManager.instance.callApiForMatchPair(context, map,\n                    (diamondListResp) {\n                  Map<String, dynamic> dict = new HashMap();\n                  dict[\"filterId\"] = diamondListResp.data.filter.id;\n                  dict[\"filter\"] = FilterRequest().createRequest(arrList);\n                  dict[ArgumentConstant.ModuleType] =\n                      DiamondModuleConstant.MODULE_TYPE_MATCH_PAIR;\n                  NavigationUtilities.pushRoute(DiamondListScreen.route,\n                      args: dict);\n                }, (onError) {});\n//                }\n              } else {\n                app.resolve<CustomDialogs>().accessDenideDialog(context);\n              }\n              // place code\n            } else if (segmentedControlValue == 3) {\n              if (app\n                  .resolve<PrefUtils>()\n                  .getModulePermission(\n                      ModulePermissionConstant.permission_layout)\n                  .view) {\n                Map<String, dynamic> map = FilterRequest().createRequest(\n                    arrList,\n                    selectedStatus: selectStatus,\n                    isFromLayout: true);\n                if (map.length < 3) {\n                  app.resolve<CustomDialogs>().errorDialog(\n                        context,\n                        \"\",\n                        \"Please select atleast one shape.\",\n                        btntitle: R.string.commonString.ok,\n                      );\n                } else {\n                  SyncManager.instance.callApiForDiamondList(\n                    context,\n                    map,\n                    (diamondListResp) {\n                      Map<String, dynamic> dict = new HashMap();\n                      dict[\"filterId\"] = diamondListResp.data.filter.id;\n                      dict[ArgumentConstant.ModuleType] =\n                          DiamondModuleConstant.MODULE_TYPE_LAYOUT;\n                      NavigationUtilities.pushRoute(DiamondListScreen.route,\n                          args: dict);\n                    },\n                    (onError) {\n                      //print(\"Error\");\n                    },\n                  );\n                }\n              }\n              // callApiForGetFilterId(DiamondModuleConstant.MODULE_TYPE_LAYOUT,\n              // isLayout: true);\n            } else if (app\n                .resolve<PrefUtils>()\n                .getModulePermission(\n                    ModulePermissionConstant.permission_searchResult)\n                .view) {\n              callApiForGetFilterId(DiamondModuleConstant.MODULE_TYPE_SEARCH,\n                  isSearch: true);\n            } else {\n              app.resolve<CustomDialogs>().accessDenideDialog(context);\n            }\n          }\n        } else if (obj.code == BottomCodeConstant.filterSaveAndSearch) {\n          if (app\n              .resolve<PrefUtils>()\n              .getModulePermission(\n                  ModulePermissionConstant.permission_mySavedSearch)\n              .insert) {\n            if (!isNullEmptyOrFalse(FilterRequest().createRequest(arrList))) {\n              callApiForGetFilterId(DiamondModuleConstant.MODULE_TYPE_SEARCH,\n                  isSavedSearch: true, isSearch: true);\n            } else {\n              showToast(R.string.commonString.selectAtleastOneFilter,\n                  context: context);\n            }\n          } else {\n            app.resolve<CustomDialogs>().accessDenideDialog(context);\n          }\n        } else if (obj.code == BottomCodeConstant.filterReset) {\n          arrList.forEach((element) {\n            if (element is SelectionModel) {\n              element.masters.forEach((element) {\n                element.isSelected = false;\n              });\n              element.isShowAllSelected = false;\n              element.caratRangeChipsToShow = [];\n            }\n            if (element is KeyToSymbolModel) {\n              element.masters.forEach((element) {\n                element.isSelected = false;\n              });\n            }\n            if (element is FromToModel) {\n              element.valueFrom = \"\";\n              element.valueTo = \"\";\n            }\n            if (element is ColorModel) {\n              element.masters.forEach((element) {\n                element.isSelected = false;\n              });\n              element.mainMasters.forEach((element) {\n                element.isSelected = false;\n              });\n              element.groupMaster.forEach((element) {\n                element.isSelected = false;\n              });\n              element.intensity.forEach((element) {\n                element.isSelected = false;\n              });\n              element.overtone.forEach((element) {\n                element.isSelected = false;\n              });\n            }\n          });\n          selectStatus.clear();\n          selectStatusModel.forEach((element) {\n            element.isSelected = false;\n          });\n          isStatusSelected = false;\n          isCompanySelected = false;\n          app.resolve<PrefUtils>().saveCompany(null);\n          setState(() {});\n        }\n      },\n    );\n  }\n\n  callApiForUpcoming(int moduleType) {\n    Map<String, dynamic> map = FilterRequest().createRequest(arrList,\n        selectedStatus: selectStatus,\n        isFromLayout: segmentedControlValue == 3 ? true : false);\n    SyncManager.instance.callApiForUpcomingDiamondList(\n      context,\n      map,\n      (diamondListResp) {\n        if (diamondListResp.data.count == 0) {\n          app.resolve<CustomDialogs>().confirmDialog(context,\n              desc: R.string.commonString.noDiamondFound,\n              positiveBtnTitle: R.string.commonString.ok,\n              negativeBtnTitle: R.string.screenTitle.addDemand,\n              onClickCallback: (buttonType) {\n            if (buttonType == ButtonType.NagativeButtonClick) {\n              if (app\n                  .resolve<PrefUtils>()\n                  .getModulePermission(\n                      ModulePermissionConstant.permission_myDemand)\n                  .insert) {\n                if (!isNullEmptyOrFalse(FilterRequest().createRequest(arrList)))\n                  getAddDemand();\n                else {\n                  showToast(R.string.commonString.selectAtleastOneFilter,\n                      context: context);\n                }\n                // place code\n              }\n            }\n          });\n        } else {\n          Map<String, dynamic> dict = new HashMap();\n          dict[\"filterId\"] = diamondListResp.data.filter.id;\n          dict[\"filters\"] = FilterRequest().createRequest(arrList);\n          dict['isCompanySelected'] = isCompanySelected ?? false;\n          dict['isLayoutSearch'] = segmentedControlValue == 3 ? true : false;\n          dict[ArgumentConstant.ModuleType] = moduleType;\n          NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);\n        }\n      },\n      (onError) {\n        //print(\"Error\");\n      },\n    );\n  }\n\n  callApiForNewArrival(int moduleType) {\n    Map<String, dynamic> map = FilterRequest().createRequest(arrList,\n        selectedStatus: selectStatus,\n        isFromLayout: segmentedControlValue == 3 ? true : false);\n    SyncManager.instance.callApiForNewArrivalDiamondList(\n      context,\n      map,\n      (diamondListResp) {\n        if (diamondListResp.data.count == 0) {\n          app.resolve<CustomDialogs>().confirmDialog(context,\n              desc: R.string.commonString.noDiamondFound,\n              positiveBtnTitle: R.string.commonString.ok,\n              negativeBtnTitle: R.string.screenTitle.addDemand,\n              onClickCallback: (buttonType) {\n            if (buttonType == ButtonType.NagativeButtonClick) {\n              if (app\n                  .resolve<PrefUtils>()\n                  .getModulePermission(\n                      ModulePermissionConstant.permission_myDemand)\n                  .insert) {\n                if (!isNullEmptyOrFalse(FilterRequest().createRequest(arrList)))\n                  getAddDemand();\n                else {\n                  showToast(R.string.commonString.selectAtleastOneFilter,\n                      context: context);\n                }\n                // place code\n              }\n            }\n          });\n        } else {\n          Map<String, dynamic> dict = new HashMap();\n          dict[\"filterId\"] = diamondListResp.data.filter.id;\n          dict[\"filters\"] = FilterRequest().createRequest(arrList);\n          dict['isCompanySelected'] = isCompanySelected ?? false;\n          dict['isLayoutSearch'] = segmentedControlValue == 3 ? true : false;\n          dict[ArgumentConstant.ModuleType] = moduleType;\n          NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);\n        }\n      },\n      (onError) {\n        //print(\"Error\");\n      },\n    );\n  }\n\n  callApiForGetFilterId(int moduleType,\n      {bool isSavedSearch = false,\n      bool isSearch = false,\n      bool isUpcoming = false,\n      bool isNewArrival = false,\n      bool isLayout = false}) {\n    SyncManager.instance.callAnalytics(context,\n        page: PageAnalytics.DIAMOND_SEARCH,\n        section: SectionAnalytics.SEARCH,\n        action: ActionAnalytics.CLICK);\n    Map<String, dynamic> map = FilterRequest().createRequest(arrList,\n        selectedStatus: selectStatus,\n        isFromLayout: segmentedControlValue == 3 ? true : false);\n\n//    if (app.resolve<PrefUtils>().isUserCustomer() &&\n//        map.length < 3) {\n//      app.resolve<CustomDialogs>().errorDialog(\n//            context,\n//            \"\",\n//            \"Please select any 2 criteria.\",\n//            btntitle: R.string.commonString.ok,\n//          );\n//    } else {\n    SyncManager.instance.callApiForDiamondList(\n      context,\n      map,\n      (diamondListResp) {\n        if (isSavedSearch) {\n          openBottomSheetForSavedSearch(\n              context,\n              FilterRequest()\n                  .createRequest(arrList, selectedStatus: selectStatus),\n              isSearch: isSearch,\n              savedSearchModel: this.savedSearchModel);\n        } else {\n          if (isSearch) {\n            if (diamondListResp.data.count == 0) {\n              app.resolve<CustomDialogs>().confirmDialog(context,\n                  desc: R.string.commonString.noDiamondFound,\n                  positiveBtnTitle: R.string.commonString.ok,\n                  negativeBtnTitle: R.string.screenTitle.addDemand,\n                  onClickCallback: (buttonType) {\n                if (buttonType == ButtonType.NagativeButtonClick) {\n                  if (app\n                      .resolve<PrefUtils>()\n                      .getModulePermission(\n                          ModulePermissionConstant.permission_myDemand)\n                      .insert) {\n                    if (!isNullEmptyOrFalse(\n                        FilterRequest().createRequest(arrList)))\n                      getAddDemand();\n                    else {\n                      showToast(R.string.commonString.selectAtleastOneFilter,\n                          context: context);\n                    }\n                    // place code\n                  }\n                }\n              });\n            } else if (diamondListResp.data.count > 250) {\n              app.resolve<CustomDialogs>().confirmDialog(context,\n                  title: R.string.commonString.diamond250,\n                  desc: R.string.commonString.narrowSearch,\n                  positiveBtnTitle: R.string.commonString.ok);\n              //negativeBtnTitle: R.string.screenTitle.addDemand,\n              // onClickCallback: (buttonType) {\n              //   if (buttonType == ButtonType.NagativeButtonClick) {\n              //     if (app\n              //         .resolve<PrefUtils>()\n              //         .getModulePermission(\n              //         ModulePermissionConstant.permission_myDemand)\n              //         .insert) {\n              //       if (!isNullEmptyOrFalse(\n              //           FilterRequest().createRequest(arrList)))\n              //         getAddDemand();\n              //       else {\n              //         showToast(R.string.commonString.selectAtleastOneFilter,\n              //             context: context);\n              //       }\n              //       // place code\n              //     }\n              //   }\n              // });\n            } else {\n              Map<String, dynamic> dict = new HashMap();\n              dict[\"filterId\"] = diamondListResp.data.filter.id;\n              dict[\"filters\"] = FilterRequest().createRequest(arrList);\n              dict['isCompanySelected'] = isCompanySelected ?? false;\n              dict['isLayoutSearch'] =\n                  segmentedControlValue == 3 ? true : false;\n              dict[ArgumentConstant.ModuleType] = moduleType;\n              NavigationUtilities.pushRoute(DiamondListScreen.route,\n                  args: dict);\n            }\n          } else if (isLayout == true) {\n            Map<String, dynamic> dict = new HashMap();\n            dict[\"filterId\"] = diamondListResp.data.filter.id;\n            dict[ArgumentConstant.ModuleType] =\n                DiamondModuleConstant.MODULE_TYPE_LAYOUT;\n            NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);\n          } else {\n            Map<String, dynamic> dict = new HashMap();\n            dict[\"filterId\"] = diamondListResp.data.filter.id;\n            dict[\"filters\"] = FilterRequest().createRequest(arrList);\n            dict['isCompanySelected'] = isCompanySelected ?? false;\n            dict['isLayoutSearch'] = segmentedControlValue == 3 ? true : false;\n            dict[ArgumentConstant.ModuleType] = moduleType;\n            NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);\n          }\n        }\n      },\n      (onError) {\n        //print(\"Error\");\n      },\n    );\n//    }\n  }\n\n  callApiForGetFilterIdForSales(int moduleType,\n      {bool isSavedSearch = false, bool isSearch = false}) {\n    SyncManager.instance.callAnalytics(context,\n        page: PageAnalytics.DIAMOND_SEARCH,\n        section: SectionAnalytics.SEARCH,\n        action: ActionAnalytics.CLICK);\n\n    SyncManager.instance.callApiForDiamondList(\n      context,\n      FilterRequest().createRequest(arrList, selectedStatus: selectStatus),\n      (diamondListResp) {\n        if (isSavedSearch) {\n          openBottomSheetForSavedSearch(\n              context, FilterRequest().createRequest(arrList),\n              isSearch: isSearch, savedSearchModel: this.savedSearchModel);\n        } else {\n          if (isSearch) {\n            if (diamondListResp.data.count == 0) {\n              app.resolve<CustomDialogs>().confirmDialog(context,\n                  desc: R.string.commonString.noDiamondFound,\n                  positiveBtnTitle: R.string.commonString.ok,\n                  negativeBtnTitle: R.string.screenTitle.addDemand,\n                  onClickCallback: (buttonType) {\n                if (buttonType == ButtonType.NagativeButtonClick) {\n                  if (app\n                      .resolve<PrefUtils>()\n                      .getModulePermission(\n                          ModulePermissionConstant.permission_myDemand)\n                      .insert) {\n                    if (!isNullEmptyOrFalse(\n                        FilterRequest().createRequest(arrList)))\n                      getAddDemand();\n                    else {\n                      showToast(R.string.commonString.selectAtleastOneFilter,\n                          context: context);\n                    }\n                    // place code\n                  }\n                }\n              });\n            } else {\n              Map<String, dynamic> dict = new HashMap();\n              dict[\"filterId\"] = diamondListResp.data.filter.id;\n              dict[\"filters\"] = FilterRequest().createRequest(arrList);\n              dict['isCompanySelected'] = isCompanySelected ?? false;\n              dict[ArgumentConstant.ModuleType] = moduleType;\n              NavigationUtilities.pushRoute(DiamondListScreen.route,\n                  args: dict);\n            }\n          } else {\n            Map<String, dynamic> dict = new HashMap();\n            dict[\"filterId\"] = diamondListResp.data.filter.id;\n            dict[\"filters\"] = FilterRequest().createRequest(arrList);\n            dict['isCompanySelected'] = isCompanySelected ?? false;\n            dict[ArgumentConstant.ModuleType] = moduleType;\n            NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);\n          }\n        }\n      },\n      (onError) {\n        //print(\"Error\");\n      },\n    );\n  }\n\n  Widget _segmentedControl() {\n    return Container(\n      width: MathUtilities.screenWidth(context),\n      child: CupertinoSegmentedControl<int>(\n        selectedColor: appTheme.colorPrimary,\n        unselectedColor: Colors.white,\n        pressedColor: Colors.transparent,\n        borderColor: appTheme.colorPrimary,\n        children: getSegmentChildren(),\n        onValueChanged: (int val) {\n          setState(() {\n            segmentedControlValue = val;\n            controller.animateToPage(segmentedControlValue,\n                duration: Duration(milliseconds: 500), curve: Curves.easeIn);\n          });\n        },\n        groupValue: segmentedControlValue,\n      ),\n    );\n  }\n\n  Map<int, Widget> getSegmentChildren() {\n    Map<int, Widget> tab = Map<int, Widget>();\n    for (int i = 0; i < arrTab.length; i++) {\n      tab[i] = getTextWidget(arrTab[i].title, i);\n    }\n\n    return tab;\n  }\n\n  getTextWidget(String text, int index) {\n    return Text(\n      text,\n      style: TextStyle(\n        fontSize: getFontSize(14),\n        fontWeight: FontWeight.w500,\n        color: index != segmentedControlValue\n            ? appTheme.colorPrimary\n            : appTheme.whiteColor,\n      ),\n    );\n  }\n\n  getPageView() {\n    return PageView.builder(\n      controller: controller,\n      itemCount: isNullEmptyOrFalse(arrTab) ? 1 : arrTab.length,\n      physics: NeverScrollableScrollPhysics(),\n      itemBuilder: (context, position) {\n        if (isNullEmptyOrFalse(arrTab)) {\n          return FilterItem(\n            arrList,\n            moduleType: moduleType,\n          );\n        } else if ((segmentedControlValue == 1 &&\n                arrTab[position].tab == \"matchpair\") ||\n            (segmentedControlValue == 1 && arrTab[position].tab == \"layout\") ||\n            (segmentedControlValue != 1)) {\n          arrList.forEach((element) {\n            if (element is SelectionModel) {\n              element.masters.forEach((element) {\n                element.isSelected = false;\n              });\n              element.isShowAllSelected = false;\n              element.caratRangeChipsToShow = [];\n            }\n            if (element is KeyToSymbolModel) {\n              element.masters.forEach((element) {\n                element.isSelected = false;\n              });\n            }\n            if (element is FromToModel) {\n              element.valueFrom = \"\";\n              element.valueTo = \"\";\n            }\n            if (element is ColorModel) {\n              element.masters.forEach((element) {\n                element.isSelected = false;\n              });\n              element.mainMasters.forEach((element) {\n                element.isSelected = false;\n              });\n              element.groupMaster.forEach((element) {\n                element.isSelected = false;\n              });\n              element.intensity.forEach((element) {\n                element.isSelected = false;\n              });\n              element.overtone.forEach((element) {\n                element.isSelected = false;\n              });\n            }\n          });\n          selectStatus.clear();\n          selectStatusModel.forEach((element) {\n            element.isSelected = false;\n          });\n          isStatusSelected = false;\n          isCompanySelected = false;\n        }\n        return FilterItem(\n          arrList\n              .where((element) => element.tab == arrTab[position].tab)\n              .toList(),\n          moduleType: moduleType,\n        );\n      },\n    );\n  }\n}\n\nclass FilterItem extends StatefulWidget {\n  List<FormBaseModel> arrList = [];\n  int moduleType;\n  bool isSearch;\n  bool isMatchPair;\n  bool isLayout;\n\n  FilterItem(\n    this.arrList, {\n    this.moduleType,\n    this.isSearch = false,\n    this.isMatchPair = false,\n    this.isLayout = false,\n  });\n\n  @override\n  _FilterItemState createState() => _FilterItemState();\n}\n\nclass _FilterItemState extends State<FilterItem> {\n  final TextEditingController _searchController = TextEditingController();\n  var _focusSearch = FocusNode();\n  final TextEditingController _searchStoneIdController =\n      TextEditingController();\n  var _focusSearchStoneId = FocusNode();\n  bool isManualSearch = true;\n  bool isAutoSearch = false;\n\n  @override\n  Widget build(BuildContext context) {\n    print(\"..............................hello coming soon\");\n    return ListView.builder(\n      shrinkWrap: true,\n      itemCount: widget.arrList.length,\n      itemBuilder: (context, index) {\n        return getWidgets(widget.arrList[index]);\n      },\n    );\n  }\n\n  getWidgets(FormBaseModel model) {\n    if (model.viewType == \"searchText\") {\n      return getSearchTextField();\n    } else if (model.viewType == ViewTypes.seperator) {\n      return SeperatorWidget(model, callBack: (model) {\n        model.isExpand = !model.isExpand;\n        for (int i = 0; i < widget.arrList.length; i++) {\n          if (model.childrenApiKeys.contains(widget.arrList[i].apiKey)) {\n            widget.arrList[i].isExpanded = model.isExpand;\n          }\n        }\n\n        // model.childrenApiKeys;\n        // widgetToggal(model.childrenViewType);\n        setState(() {});\n      });\n    } else if (model.viewType == ViewTypes.selection) {\n      return !model.isExpanded\n          ? Container()\n          : Padding(\n              padding: EdgeInsets.only(\n                  left: getSize(Spacing.leftPadding),\n                  right: getSize(Spacing.rightPadding),\n                  top: getSize(8),\n                  bottom: getSize(8)),\n              child: SelectionWidget(model),\n            );\n    } else if (model.viewType == ViewTypes.fromTo) {\n      return !model.isExpanded\n          ? Container()\n          : Padding(\n              padding: EdgeInsets.only(\n                  left: getSize(Spacing.leftPadding),\n                  right: getSize(Spacing.rightPadding),\n                  top: getSize(8),\n                  bottom: getSize(8)),\n              child: FromToWidget(model),\n            );\n    } else if (model.viewType == ViewTypes.certNo) {\n      return !model.isExpanded\n          ? Container()\n          : Padding(\n              padding: EdgeInsets.only(\n                  left: getSize(Spacing.leftPadding),\n                  right: getSize(Spacing.rightPadding),\n                  top: getSize(8),\n                  bottom: getSize(8)),\n              child: CertNoWidget(model),\n            );\n    } else if (model.viewType == ViewTypes.keytosymbol) {\n      return !model.isExpanded\n          ? Container()\n          : Padding(\n              padding: EdgeInsets.only(\n                  left: getSize(Spacing.leftPadding),\n                  right: getSize(Spacing.rightPadding),\n                  top: getSize(8),\n                  bottom: getSize(8)),\n              child: KeyToSymbolWidget(model),\n            );\n    } else if (model.viewType == ViewTypes.groupWidget) {\n      return !model.isExpanded\n          ? Container()\n          : Padding(\n              padding: EdgeInsets.only(\n                  left: getSize(Spacing.leftPadding),\n                  right: getSize(Spacing.rightPadding),\n                  top: getSize(8),\n                  bottom: getSize(8)),\n              child: (model as ColorModel).showGroup\n                  ? ColorWidget(model)\n                  : ColorWhiteFancyWidget(model),\n            );\n    } else if (model.viewType == ViewTypes.caratRange) {\n      return !model.isExpanded\n          ? Container()\n          : Padding(\n              padding: EdgeInsets.only(\n                  left: getSize(Spacing.leftPadding),\n                  right: getSize(Spacing.rightPadding),\n                  top: getSize(8),\n                  bottom: getSize(8)),\n              child: CaratRangeWidget(model),\n            );\n    } else if (model.viewType == ViewTypes.shapeWidget) {\n      return !model.isExpanded\n          ? Container()\n          : Padding(\n              padding: EdgeInsets.only(\n                  left: getSize(Spacing.leftPadding),\n                  right: getSize(Spacing.rightPadding),\n                  top: getSize(8),\n                  bottom: getSize(8)),\n              child: ShapeWidget(model),\n            );\n    }\n  }\n\n  Widget getSearchTextField() {\n    if (!(app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_searchDiamond)\n        .view)) {\n      return SizedBox();\n    }\n    return Column(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: [\n        if (!app.resolve<PrefUtils>().isUserCustomer())\n          Padding(\n            padding: EdgeInsets.only(top: getSize(16.0), bottom: getSize(16.0)),\n            child: Row(\n              crossAxisAlignment: CrossAxisAlignment.center,\n              children: [\n                Expanded(\n                  child: Hero(\n                    tag: 'searchTextField',\n                    child: Material(\n                      color: appTheme.whiteColor,\n                      child: Padding(\n                        padding: EdgeInsets.only(\n                          left: getSize(Spacing.leftPadding),\n                          right: getSize(Spacing.rightPadding),\n                        ),\n                        child: Container(\n                          height: getSize(40),\n                          decoration: BoxDecoration(\n                            color: appTheme.whiteColor,\n                            borderRadius: BorderRadius.circular(getSize(5)),\n                            border: Border.all(\n                              color: appTheme.colorPrimary,\n                              width: getSize(1),\n                            ),\n                          ),\n                          child: TextField(\n                            textAlignVertical: TextAlignVertical(y: 1.0),\n                            textInputAction: TextInputAction.done,\n                            focusNode: _focusSearch,\n                            readOnly: true,\n                            autofocus: false,\n                            controller: _searchController,\n                            obscureText: false,\n                            style: appTheme.black16TextStyle,\n                            keyboardType: TextInputType.text,\n                            textCapitalization: TextCapitalization.none,\n                            cursorColor: appTheme.colorPrimary,\n                            inputFormatters: [\n                              WhitelistingTextInputFormatter(\n                                  new RegExp(alphaRegEx)),\n                              BlacklistingTextInputFormatter(\n                                  RegExp(RegexForEmoji))\n                            ],\n                            decoration: InputDecoration(\n                              fillColor: fromHex(\"#FFEFEF\"),\n                              enabledBorder: OutlineInputBorder(\n                                borderRadius: BorderRadius.all(\n                                  Radius.circular(\n                                    getSize(5),\n                                  ),\n                                ),\n                                borderSide: BorderSide(\n                                    color: appTheme.dividerColor,\n                                    width: getSize(1)),\n                              ),\n                              focusedBorder: OutlineInputBorder(\n                                borderRadius: BorderRadius.all(\n                                    Radius.circular(getSize(5))),\n                                borderSide: BorderSide(\n                                  color: appTheme.dividerColor,\n                                  width: getSize(1),\n                                ),\n                              ),\n                              border: OutlineInputBorder(\n                                borderRadius: BorderRadius.all(\n                                    Radius.circular(getSize(5))),\n                                borderSide: BorderSide(\n                                    color: appTheme.dividerColor,\n                                    width: getSize(1)),\n                              ),\n\n                              hintStyle: appTheme.grey16HintTextStyle,\n                              hintText: R.string.commonString\n                                  .searchStoneIdCertificateNo,\n                              labelStyle: TextStyle(\n                                color: appTheme.textColor,\n                                fontSize: getFontSize(16),\n                              ),\n                              // suffix: widget.textOption.postfixWidOnFocus,\n                              suffixIcon: Padding(\n                                  padding: EdgeInsets.all(getSize(10)),\n                                  child: Image.asset(search)),\n                            ),\n                            onChanged: (String text) {\n                              //\n                            },\n                            onEditingComplete: () {\n                              //\n                              _focusSearch.unfocus();\n                            },\n                            onTap: () {\n                              Map<String, dynamic> dict = new HashMap();\n                              dict[\"isFromSearch\"] = true;\n                              dict[\"isFromManual\"] = isManualSearch ?? true;\n                              NavigationUtilities.pushRoute(\n                                SearchScreen.route,\n                                args: dict,\n                              );\n                            },\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                ),\n                Center(\n                  child: Row(\n                    mainAxisSize: MainAxisSize.min,\n                    crossAxisAlignment: CrossAxisAlignment.center,\n                    children: [\n                      InkWell(\n                        onTap: () {\n                          isManualSearch = true;\n                          isAutoSearch = false;\n                          print(isManualSearch);\n                          setState(() {});\n                        },\n                        child: Padding(\n                          padding: EdgeInsets.only(right: getSize(20)),\n                          child: Text(\n                            \"M\",\n                            style: appTheme.blue20TextStyle.copyWith(\n                              color: isManualSearch\n                                  ? appTheme.blackColor\n                                  : appTheme.textGray,\n                              decoration: TextDecoration.underline,\n                            ),\n                          ),\n                        ),\n                      ),\n                      InkWell(\n                        onTap: () {\n                          isManualSearch = false;\n                          isAutoSearch = true;\n                          print(isAutoSearch);\n                          setState(() {});\n                        },\n                        child: Padding(\n                          padding: EdgeInsets.only(right: getSize(20)),\n                          child: Text(\n                            \"A\",\n                            style: appTheme.blue20TextStyle.copyWith(\n                              color: isAutoSearch\n                                  ? appTheme.blackColor\n                                  : appTheme.textGray,\n                              decoration: TextDecoration.underline,\n                            ),\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                )\n//              if (widget.moduleType !=\n//                  DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH)\n//                Center(\n//                  child: InkWell(\n//                    onTap: () {\n////                      NavigationUtilities.pushRoute(VoiceSearch.route);\n//                    },\n//                    child: Padding(\n//                      padding: EdgeInsets.only(\n//                        right: getSize(Spacing.leftPadding),\n//                      ),\n//                      child: Image.asset(\n//                        microphone,\n//                        alignment: Alignment.centerRight,\n//                        width: getSize(26),\n//                        height: getSize(26),\n//                      ),\n//                    ),\n//                  ),\n//                )\n              ],\n            ),\n          ),\n        if (app.resolve<PrefUtils>().isUserCustomer())\n          Padding(\n            padding: EdgeInsets.only(top: getSize(16.0), bottom: getSize(16.0)),\n            child: Row(\n              crossAxisAlignment: CrossAxisAlignment.center,\n              children: [\n                Expanded(\n                  child: Hero(\n                    tag: 'searchTextField',\n                    child: Material(\n                      color: appTheme.whiteColor,\n                      child: Padding(\n                        padding: EdgeInsets.only(\n                          left: getSize(Spacing.leftPadding),\n                          right: getSize(Spacing.rightPadding),\n                        ),\n                        child: Container(\n                          height: getSize(40),\n                          decoration: BoxDecoration(\n                            color: appTheme.whiteColor,\n                            borderRadius: BorderRadius.circular(getSize(5)),\n                            border: Border.all(\n                              color: appTheme.colorPrimary,\n                              width: getSize(1),\n                            ),\n                          ),\n                          child: TextField(\n                            textAlignVertical: TextAlignVertical(y: 1.0),\n                            textInputAction: TextInputAction.done,\n                            focusNode: _focusSearch,\n                            readOnly: true,\n                            autofocus: false,\n                            controller: _searchController,\n                            obscureText: false,\n                            style: appTheme.black16TextStyle,\n                            keyboardType: TextInputType.text,\n                            textCapitalization: TextCapitalization.none,\n                            cursorColor: appTheme.colorPrimary,\n                            inputFormatters: [\n                              WhitelistingTextInputFormatter(\n                                  new RegExp(alphaRegEx)),\n                              BlacklistingTextInputFormatter(\n                                  RegExp(RegexForEmoji))\n                            ],\n                            decoration: InputDecoration(\n                              fillColor: fromHex(\"#FFEFEF\"),\n                              enabledBorder: OutlineInputBorder(\n                                borderRadius: BorderRadius.all(\n                                  Radius.circular(\n                                    getSize(5),\n                                  ),\n                                ),\n                                borderSide: BorderSide(\n                                    color: appTheme.dividerColor,\n                                    width: getSize(1)),\n                              ),\n                              focusedBorder: OutlineInputBorder(\n                                borderRadius: BorderRadius.all(\n                                    Radius.circular(getSize(5))),\n                                borderSide: BorderSide(\n                                  color: appTheme.dividerColor,\n                                  width: getSize(1),\n                                ),\n                              ),\n                              border: OutlineInputBorder(\n                                borderRadius: BorderRadius.all(\n                                    Radius.circular(getSize(5))),\n                                borderSide: BorderSide(\n                                    color: appTheme.dividerColor,\n                                    width: getSize(1)),\n                              ),\n\n                              hintStyle: appTheme.grey16HintTextStyle,\n                              hintText: R.string.commonString\n                                  .searchStoneIdCertificateNo,\n                              labelStyle: TextStyle(\n                                color: appTheme.textColor,\n                                fontSize: getFontSize(16),\n                              ),\n                              // suffix: widget.textOption.postfixWidOnFocus,\n                              suffixIcon: Padding(\n                                  padding: EdgeInsets.all(getSize(10)),\n                                  child: Image.asset(search)),\n                            ),\n                            onChanged: (String text) {\n                              //\n                            },\n                            onEditingComplete: () {\n                              //\n                              _focusSearch.unfocus();\n                            },\n                            onTap: () {\n                              Map<String, dynamic> dict = new HashMap();\n                              dict[\"isFromSearch\"] = true;\n                              dict[\"isFromManual\"] = false;\n                              NavigationUtilities.pushRoute(\n                                SearchScreen.route,\n                                args: dict,\n                              );\n                            },\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                ),\n                if (widget.moduleType !=\n                    DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH)\n                  Center(\n                    child: InkWell(\n                      onTap: () {\n                        NavigationUtilities.pushRoute(VoiceSearch.route);\n                      },\n                      child: Padding(\n                        padding: EdgeInsets.only(\n                          right: getSize(Spacing.leftPadding),\n                        ),\n                        child: Image.asset(\n                          microphone,\n                          alignment: Alignment.centerRight,\n                          width: getSize(26),\n                          height: getSize(26),\n                        ),\n                      ),\n                    ),\n                  )\n              ],\n            ),\n          ),\n      ],\n    );\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/components/Screens/Filter/FilterScreen.dart b/lib/components/Screens/Filter/FilterScreen.dart
--- a/lib/components/Screens/Filter/FilterScreen.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/components/Screens/Filter/FilterScreen.dart	(date 1635250828490)
@@ -731,6 +731,13 @@
           segmentedControlValue = index;
           controller.animateToPage(segmentedControlValue,
               duration: Duration(milliseconds: 500), curve: Curves.easeIn);
+          arrBottomTab = BottomTabBar.getFilterScreenBottomTabs(
+            isForEditSavedSearch: !isNullEmptyOrFalse(this.savedSearchModel),
+            segment: segmentedControlValue,
+          );
+          setState(() {
+            //
+          });
         });
       },
       child: Column(
Index: lib/components/Screens/Filter/Widget/DownLoadAndShareScreen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\nimport 'dart:io';\n\nimport 'package:diamnow/app/Helper/SyncManager.dart';\nimport 'package:diamnow/app/app.export.dart';\nimport 'package:diamnow/app/base/BaseList.dart';\nimport 'package:diamnow/app/constant/EnumConstant.dart';\nimport 'package:diamnow/app/localization/app_locales.dart';\nimport 'package:diamnow/app/network/NetworkCall.dart';\nimport 'package:diamnow/app/network/ServiceModule.dart';\nimport 'package:diamnow/app/utils/BaseDialog.dart';\nimport 'package:diamnow/app/utils/BottomSheet.dart';\nimport 'package:diamnow/models/excel/ExcelApiResponse.dart';\nimport 'package:flutter_spinkit/flutter_spinkit.dart';\nimport 'package:path/path.dart' as path;\nimport 'package:flutter_email_sender/flutter_email_sender.dart';\nimport 'package:diamnow/app/utils/CustomDialog.dart';\nimport 'package:diamnow/models/DiamondList/download.dart';\nimport 'package:flutter/material.dart';\nimport 'package:intl/intl.dart';\nimport 'package:path_provider/path_provider.dart';\nimport 'package:share/share.dart';\nimport 'package:url_launcher/url_launcher.dart';\nimport 'package:webview_flutter/webview_flutter.dart';\n\nclass DownLoadAndShareScreen extends StatefulWidget {\n  String title = \"\";\n  List<DiamondModel> diamondList;\n  bool isFromDetailScreen = false;\n  bool isForShare = false;\n\n  Function(List<SelectionPopupModel>) onDownload;\n\n  DownLoadAndShareScreen({\n    this.title,\n    this.diamondList,\n    this.onDownload,\n    this.isForShare,\n    this.isFromDetailScreen = false,\n  });\n\n  @override\n  _DownLoadAndShareScreenState createState() => _DownLoadAndShareScreenState(\n        title,\n        isForShare: isForShare,\n        diamondList: this.diamondList,\n        onDownload: onDownload,\n      );\n}\n\nclass _DownLoadAndShareScreenState extends State<DownLoadAndShareScreen> {\n  List<DiamondModel> diamondList;\n  Function onDownload;\n\n  String title = \"\";\n  List<SelectionPopupModel> firstImageList = List<SelectionPopupModel>();\n  List<SelectionPopupModel> secondImageList = List<SelectionPopupModel>();\n  List<SelectionPopupModel> firstVideoList = List<SelectionPopupModel>();\n  List<SelectionPopupModel> secondVideoList = List<SelectionPopupModel>();\n  List<SelectionPopupModel> firstCertificateList = List<SelectionPopupModel>();\n  List<SelectionPopupModel> firstExcelList = List<SelectionPopupModel>();\n  List<SelectionPopupModel> secondCertificateList = List<SelectionPopupModel>();\n  List<SelectionPopupModel> firstRoughList = List<SelectionPopupModel>();\n  List<SelectionPopupModel> secondRoughList = List<SelectionPopupModel>();\n  List<SelectionPopupModel> totalList;\n\n  bool isAllImageSelected = false;\n  bool isAllVideoSelected = false;\n  bool isAllCertificateSelected = false;\n  bool isAllExcelSelected = false;\n  bool isAllRoughSelected = false;\n  bool isAllSelected = false;\n  bool isImageExpanded = true;\n  bool isVideoExpanded = true;\n  bool isCertificateExpanded = true;\n  bool isExcelExpanded = true;\n  bool isRoughExpanded = true;\n\n  List<String> selectMenuString = [];\n  List<String> selectMenuString1 = [];\n  String select;\n  List<String> savePath = [];\n  Email email;\n  List<String> data = [];\n  String platformResponse;\n  String saveExcel;\n  List<String> allPath = [];\n  bool isForShare;\n  bool isPath;\n  int shareValue = 0;\n\n  _DownLoadAndShareScreenState(\n    this.title, {\n    this.diamondList,\n    this.isForShare,\n    this.onDownload,\n  });\n\n  @override\n  void initState() {\n    setDataInList();\n    print(isForShare);\n    super.initState();\n  }\n\n  checkValidation1() {\n    totalList = (firstImageList +\n            secondImageList +\n            firstVideoList +\n            secondVideoList +\n            firstCertificateList +\n            secondCertificateList +\n            firstExcelList)\n        .where((element) {\n      return element.isSelected;\n    }).toList();\n    List<String> data = [];\n    diamondList.forEach(\n      (element) async {\n        await totalList.forEach(\n          (v) {\n            data.add(v.url + element.vStnId);\n          },\n        );\n      },\n    );\n    selectMenuString = data;\n    debugPrint(\"------------------------------${selectMenuString.toString()}\");\n\n    return !isNullEmptyOrFalse(totalList);\n  }\n\n  checkValidation() async {\n    totalList = (firstImageList +\n            secondImageList +\n            firstVideoList +\n            secondVideoList +\n            firstCertificateList +\n            secondCertificateList +\n            firstExcelList)\n        .where((element) {\n      return element.isSelected;\n    }).toList();\n    DownloadState downloadStateObj = DownloadState();\n    final dir = await downloadStateObj.getDownloadDirectory();\n    DateTime now = new DateTime.now();\n    String savePath1;\n    String fileName;\n    shareValue = 0;\n\n    bool excelTitle = false;\n    selectMenuString = [];\n    savePath = [];\n    data = [];\n    isPath = false;\n    allPath = [];\n    int p = 0;\n    String formattedDate;\n    var formatter = DateFormat('dd_MM_yyyy_hh_mm_ss');\n    diamondList.forEach(\n      (element) async {\n        await totalList.forEach(\n          (v) async {\n            p++;\n            formattedDate = formatter.format(now) + \"${p}\";\n            if (v.title == \"Certificate\") {\n              data.add(v.url + element.vStnId + \".pdf\");\n              fileName = \"Certificate_${formattedDate}.pdf\";\n            } else if (v.title == \"Ideal Image\" ||\n                v.title == \"Natural Image\" ||\n                v.title == \"Fluorescence Image\" ||\n                v.title == \"Heart & Arrow Image\" ||\n                v.title == \"Plot Image\" ||\n                v.title == \"Propotion Image\") {\n              data.add(v.url + element.vStnId + \".jpg\");\n              fileName = \"Image${formattedDate}.jpg\";\n            } else if (v.title == \"Natural Video\" || v.title == \"HD Video\") {\n              data.add(v.url + element.vStnId + \".mp4\");\n              fileName = \"Video${formattedDate}.mp4\";\n            } else if (v.title == \"Excel\") {\n              excelTitle = true;\n            } else {\n              print(\"No Action\");\n            }\n            savePath1 = path.join(dir.path, fileName);\n            savePath.add(savePath1);\n          },\n        );\n      },\n    );\n    selectMenuString = data;\n    if (excelTitle == true) {\n      callApiForExcel(context, diamondList, callback: (url) async {\n        print(\"..............................value.$selectMenuString\");\n        await Share.shareFiles(\n          [url],\n          text: selectMenuString.map((e) => e.toString()).toList().join(\"\\n\\n\"),\n          subject: \"Diamond Details\",\n        );\n      });\n      print(\"........................$saveExcel\");\n    } else if (excelTitle == false) {\n      //For Download And Share\n\n      // for (int v = 0; v < selectMenuString.length; v++) {\n      //   print(selectMenuString.length);\n      //   print(\"..................................\");\n      //   await downloadAll(selectMenuString[v], savePath[v], context);\n      // }\n\n      //Only Share links\n      await Share.share(\n          selectMenuString.map((e) => e.toString()).toList().join(\"\\n\\n\"),\n          subject: \"Diamond Details\");\n    }\n    return !isNullEmptyOrFalse(totalList);\n  }\n\n  callApiForExcel(BuildContext context, List<DiamondModel> diamondList,\n      {bool isForShare = false, void callback(String)}) {\n    final Completer<WebViewController> _controller =\n        Completer<WebViewController>();\n\n    List<String> stoneId = [];\n    diamondList.forEach((element) {\n      stoneId.add(element.id);\n    });\n    Map<String, dynamic> dict = {};\n    dict[\"id\"] = stoneId;\n\n    NetworkCall<ExcelApiResponse>()\n        .makeCall(\n      () => app.resolve<ServiceModule>().networkService().getExcel(dict),\n      context,\n    )\n        .then((excelApiResponse) async {\n      // success(diamondListResp);\n      String url = ApiConstants.baseURLForExcel + excelApiResponse.data.data;\n      String excelFileUrl = url;\n      print(\"Excel file URL : \" + url);\n      print(\"Final ExcelFile Viewer Url : \" + url);\n\n      DownloadState downloadStateObj = DownloadState();\n      final dir = await downloadStateObj.getDownloadDirectory();\n      DateTime now = new DateTime.now();\n      var formatter = DateFormat('dd_MM_yyyy_hh_mm_ss');\n      String formattedDate = formatter.format(now);\n      String fileName = \"FinalExcel_${formattedDate}.xlsx\";\n      saveExcel = path.join(dir.path, fileName);\n      print(\"file:/\" + saveExcel);\n      Dio dio = Dio();\n      dio\n          .download(\n        excelFileUrl,\n        saveExcel,\n        deleteOnError: true,\n      )\n          .then((value) async {\n        callback(saveExcel);\n      });\n    }).catchError((onError) {\n      showToast(\"There is problem on server, please try again later.\",\n          context: context);\n      print(onError);\n    });\n  }\n\n  downloadAll(String excelFileUrl, String savePath1, BuildContext context,\n      {void callback(String), bool isPaths}) {\n    Dio dio = Dio();\n    dio\n        .download(\n      excelFileUrl,\n      savePath1,\n      deleteOnError: true,\n    )\n        .catchError((onError) {\n      shareValue++;\n      if (selectMenuString.length == shareValue) {\n        app.resolve<CustomDialogs>().errorDialog(\n              NavigationUtilities.key.currentState.overlay.context,\n              \"Oops!!!\",\n              \"No Data Found!\",\n              btntitle: R.string.commonString.ok,\n            );\n      }\n    }).then((value) async {\n      shareValue++;\n      allPath.add(savePath1);\n      if (selectMenuString.length == shareValue) {\n        await Share.shareFiles(allPath, subject: \"Diamond Details\");\n        // await Share.share(\n        //     selectMenuString.map((e) => e.toString()).toList().join(\"\\n\\n\"),\n        //     subject: \"Diamond Details\");\n      }\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: appTheme.whiteColor,\n      appBar: getAppBar(context, title,\n          bgColor: appTheme.whiteColor,\n          leadingButton: getBackButton(context),\n          centerTitle: false,\n          textalign: TextAlign.left,\n          actionItems: [\n            GestureDetector(\n              onTap: () {\n                isAllSelected = !isAllSelected;\n                isAllImageSelected = isAllSelected;\n                isAllVideoSelected = isAllSelected;\n                isAllCertificateSelected = isAllSelected;\n                isAllExcelSelected = isAllSelected;\n                isAllRoughSelected = isAllSelected;\n                firstImageList.forEach((element) {\n                  element.isSelected = isAllSelected;\n                });\n                secondImageList.forEach((element) {\n                  element.isSelected = isAllSelected;\n                });\n                firstVideoList.forEach((element) {\n                  element.isSelected = isAllSelected;\n                });\n                secondVideoList.forEach((element) {\n                  element.isSelected = isAllSelected;\n                });\n                // firstExcelList.forEach((element) {\n                //   element.isSelected = isAllSelected;\n                // });\n                firstCertificateList.forEach((element) {\n                  element.isSelected = isAllSelected;\n                });\n                secondCertificateList.forEach((element) {\n                  element.isSelected = isAllSelected;\n                });\n                firstRoughList.forEach((element) {\n                  element.isSelected = isAllSelected;\n                });\n                secondRoughList.forEach((element) {\n                  element.isSelected = isAllSelected;\n                });\n                setState(() {});\n              },\n              child: Padding(\n                  padding:\n                      EdgeInsets.only(right: getSize(8), left: getSize(16)),\n                  child: Row(\n                    children: [\n                      Image.asset(\n                        isAllSelected ? selectedCheckbox : unSelectedCheckbox,\n                        height: getSize(20),\n                        width: getSize(20),\n                      ),\n                      SizedBox(\n                        width: getSize(5),\n                      ),\n                      Text(\n                        \"Select All\",\n                        style: appTheme.black12TextStyleBold,\n                      ),\n                    ],\n                  )),\n            )\n          ]),\n      bottomNavigationBar: Container(\n        color: title == R.string.screenTitle.shareStone\n            ? appTheme.whiteColor\n            : appTheme.colorPrimary,\n        padding: EdgeInsets.symmetric(\n          horizontal: getSize(16),\n          vertical: getSize(8),\n        ),\n        child: title == R.string.screenTitle.shareStone\n            ? Row(\n                children: [\n//                   Expanded(\n//                     child: InkWell(\n//                       onTap: () {\n//                         if (checkValidation()) {\n// //                          whatsAppOpen();\n//                           /*openURLWithApp(\n//                               \"whatsapp://send?phone=&text=${selectMenuString.map((e) => e.toString()).toList().join(\"\\n\\n\")}\",\n//                               context,\n//                               isPop: true);*/\n//                         } else {\n//                           app.resolve<CustomDialogs>().errorDialog(\n//                               context, title, \"Please select any\",\n//                               btntitle: R.string.commonString.ok);\n// //                          showToast(\"Please select any\", context: context);\n//                         }\n//                       },\n//                       child: Container(\n//                         height: getSize(46),\n//                         alignment: Alignment.center,\n//                         decoration: BoxDecoration(\n//                           color: appTheme.whiteColor,\n//                           borderRadius: BorderRadius.circular(getSize(5)),\n//                         ),\n//                         child: Text(\n//                           \"WhatsApp\",\n//                           textAlign: TextAlign.center,\n//                           style: appTheme.white16TextStyle.copyWith(\n//                             color: appTheme.whatsAppColor,\n//                           ),\n//                         ),\n//                       ),\n//                     ),\n//                   ),\n//                   SizedBox(\n//                     width: getSize(16),\n//                   ),\n                  Expanded(\n                    child: InkWell(\n                      onTap: () {\n                        //callEmailApi();\n                        if (checkValidation()) {\n//                           openURLWithApp(\n//                               \"mailto:?subject=Diamond%20Details&body= Dear Sir / Madam Greetings of the day from Arjiv Team. Please have a look at below stock file.\\n\\n${selectMenuString.map((e) => e.toString()).toList().join(\"\\n\\n\")}\",\n// //                              \"mailto:?subject=DiamNow&body=DiamNow\",\n//                               context,\n//                               isPop: true);\n//                           Navigator.pop(context);\n                        } else {\n                          app.resolve<CustomDialogs>().errorDialog(\n                              context, title, \"Please select any\",\n                              btntitle: R.string.commonString.ok);\n                        }\n                      },\n                      child: Container(\n                        height: getSize(46),\n                        alignment: Alignment.center,\n                        decoration: BoxDecoration(\n                          color: appTheme.whiteColor,\n                          borderRadius: BorderRadius.circular(getSize(5)),\n                        ),\n                        child: Text(\n                          \"Share\",\n                          textAlign: TextAlign.center,\n                          style: appTheme.white16TextStyle.copyWith(\n                            color: appTheme.gmailColor,\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                  // SizedBox(\n                  //   width: getSize(16),\n                  // ),\n                  // Expanded(\n                  //   child: InkWell(\n                  //     onTap: () {\n                  //       if (checkValidation()) {\n                  //         print(\n                  //             \"------------------skype:?chat=${selectMenuString.map((e) => e.toString()).toList().join(\"\\n\\n\")}\");\n                  //         // openURLWithApp(\n                  //         //     \"skype:?chat=${selectMenuString.map((e) => e.toString()).toList().join(\"\\n\\n\")}\",\n                  //         //     context,\n                  //         //     isPop: true);\n                  //       } else {\n                  //         app.resolve<CustomDialogs>().errorDialog(\n                  //             context, title, \"Please select any\",\n                  //             btntitle: R.string.commonString.ok);\n                  //       }\n                  //     },\n                  //     child: Container(\n                  //       height: getSize(46),\n                  //       alignment: Alignment.center,\n                  //       decoration: BoxDecoration(\n                  //         color: appTheme.whiteColor,\n                  //         borderRadius: BorderRadius.circular(getSize(5)),\n                  //       ),\n                  //       child: Text(\n                  //         \"Skype\",\n                  //         textAlign: TextAlign.center,\n                  //         style: appTheme.white16TextStyle.copyWith(\n                  //           color: appTheme.skypeColor,\n                  //         ),\n                  //       ),\n                  //     ),\n                  //   ),\n                  // )\n                ],\n              )\n            : Row(\n                children: [\n                  Expanded(\n                    child: InkWell(\n                      onTap: () {\n                        Navigator.pop(context);\n                      },\n                      child: Container(\n                        height: getSize(46),\n                        alignment: Alignment.center,\n                        decoration: BoxDecoration(\n                          border: Border.all(\n                              color: appTheme.colorPrimary, width: getSize(1)),\n                          borderRadius: BorderRadius.circular(getSize(5)),\n                        ),\n                        child: Text(\n                          R.string.commonString.cancel,\n                          textAlign: TextAlign.center,\n                          style: appTheme.blue14TextStyle.copyWith(\n                            fontSize: getFontSize(16),\n                            color: appTheme.whiteColor,\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                  SizedBox(\n                    width: getSize(20),\n                  ),\n                  Expanded(\n                    child: InkWell(\n                      onTap: () {\n                        Navigator.pop(context);\n                        onDownload((firstImageList +\n                                secondImageList +\n                                firstVideoList +\n                                secondVideoList +\n                                firstCertificateList +\n                                secondCertificateList +\n                                firstExcelList +\n                                firstRoughList +\n                                secondRoughList)\n                            .where((element) {\n                          return element.isSelected;\n                        }).toList());\n                      },\n                      child: Container(\n                        height: getSize(46),\n                        alignment: Alignment.center,\n                        decoration: BoxDecoration(\n                            color: appTheme.whiteColor,\n                            borderRadius: BorderRadius.circular(getSize(60)),\n                            boxShadow: getBoxShadow(context)),\n                        child: Text(\n                          R.string.commonString.download,\n                          textAlign: TextAlign.center,\n                          style: appTheme.white16TextStyle\n                              .copyWith(color: appTheme.colorPrimary),\n                        ),\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n      ),\n      body: ListView(\n        physics: BouncingScrollPhysics(),\n        children: [\n          getRowWithTitle(\n              title: \"Images\",\n              type: DownloadDataType.Images,\n              firstList: firstImageList,\n              secondList: secondImageList),\n          getRowWithTitle(\n              title: \"Video\",\n              type: DownloadDataType.Video,\n              firstList: firstVideoList,\n              secondList: secondVideoList),\n          getRowWithTitle(\n              title: \"Certificate\",\n              type: DownloadDataType.Certificate,\n              firstList: firstCertificateList,\n              secondList: secondCertificateList),\n          // isForShare == false\n          //     ? getRowWithTitle(\n          //         title: \"Excel\",\n          //         type: DownloadDataType.Excel,\n          //         firstList: firstExcelList)\n          //     : SizedBox(),\n          // getRowWithTitle(\n          //     title: \"Rough\",\n          //     type: DownloadDataType.Rough,\n          //     firstList: firstRoughList,\n          //     secondList: secondRoughList),\n        ],\n      ),\n    );\n  }\n\n  _openMail() async {\n    String uri = 'mailto:?subject=DiamNow&body=DiamNow';\n    if (await canLaunch(uri)) {\n      await launch(uri);\n    } else {\n      app.resolve<CustomDialogs>().confirmDialog(\n            context,\n            title: R.string.commonString.error,\n            desc: \"Could not launch $uri\",\n            positiveBtnTitle: R.string.commonString.ok,\n          );\n    }\n  }\n\n//  callEmailApi() async {\n//    ShareThroughEmailReq req = ShareThroughEmailReq();\n//\n//    NetworkCall<BaseApiResp>()\n//        .makeCall(\n//            () => app.resolve<ServiceModule>().networkService().shareThroughEmail(req),\n//        context,\n//        isProgress: true)\n//        .then((resp) async {\n//          showToast(\"Email Send Successfully\");\n//      Navigator.pop(context);\n//    }).catchError((onError) {\n//      app.resolve<CustomDialogs>().confirmDialog(\n//        context,\n//        title: R.string.commonString.error,\n//        desc: onError.message,\n//        positiveBtnTitle: R.string.commonString.btnTryAgain,\n//      );\n//    });\n//  }\n\n  getRowWithTitle(\n      {String title,\n      DownloadDataType type,\n      List<SelectionPopupModel> firstList,\n      List<SelectionPopupModel> secondList}) {\n    bool titleBool;\n    return Container(\n      margin: EdgeInsets.symmetric(\n        horizontal: getSize(16),\n        vertical: getSize(10),\n      ),\n      decoration: BoxDecoration(\n        borderRadius: BorderRadius.circular(\n          getSize(15),\n        ),\n        border: Border.all(\n          // horizontal: BorderSide(\n          color: appTheme.borderColor,\n          width: getSize(1),\n          // ),\n        ),\n      ),\n      // color: Colors.red,\n      child: Column(\n        children: [\n          InkWell(\n            highlightColor: Colors.transparent,\n            onTap: () {\n              if (type == DownloadDataType.Images) {\n                this.isAllImageSelected = !this.isAllImageSelected;\n                titleBool = isAllImageSelected;\n              } else if (type == DownloadDataType.Video) {\n                this.isAllVideoSelected = !this.isAllVideoSelected;\n                titleBool = isAllVideoSelected;\n              } else if (type == DownloadDataType.Excel) {\n                this.isAllExcelSelected = !this.isAllExcelSelected;\n                titleBool = isAllExcelSelected;\n              } else if (type == DownloadDataType.Rough) {\n                this.isAllRoughSelected = !this.isAllRoughSelected;\n                titleBool = isAllRoughSelected;\n              } else if (type == DownloadDataType.Certificate) {\n                this.isAllCertificateSelected = !this.isAllCertificateSelected;\n                titleBool = isAllCertificateSelected;\n              }\n              if (titleBool) {\n                if (firstList != null)\n                  firstList.forEach((element) {\n                    element.isSelected = true;\n                  });\n                if (secondList != null)\n                  secondList.forEach((element) {\n                    element.isSelected = true;\n                  });\n              } else {\n                if (firstList != null)\n                  firstList.forEach((element) {\n                    element.isSelected = false;\n                  });\n                if (secondList != null)\n                  secondList.forEach((element) {\n                    element.isSelected = false;\n                  });\n              }\n\n              setState(() {});\n            },\n            child: Container(\n              height: getSize(46),\n              padding: EdgeInsets.symmetric(\n                horizontal: getSize(16),\n              ),\n              // decoration: BoxDecoration(\n              //   // color: appTheme.extraLightBGColor,\n              //   border: Border.symmetric(\n              //     horizontal: BorderSide(\n              //       color: appTheme.borderColor,\n              //       width: getSize(1),\n              //     ),\n              //   ),\n              // ),\n              child: Row(\n                children: [\n                  Container(\n                    height: getSize(20),\n                    width: getSize(20),\n                    child: Image.asset(getConditionValue(type)\n                        ? selectedFilter\n                        : unselectedFilter),\n                  ),\n                  SizedBox(\n                    width: getSize(10),\n                  ),\n                  Expanded(\n                    child: Text(\n                      title,\n                      style: appTheme.black16MediumTextStyle,\n                    ),\n                  ),\n                  InkWell(\n                    highlightColor: Colors.transparent,\n                    onTap: () {\n                      setState(() {\n                        if (type == DownloadDataType.Images) {\n                          this.isImageExpanded = !this.isImageExpanded;\n                        } else if (type == DownloadDataType.Video) {\n                          this.isVideoExpanded = !this.isVideoExpanded;\n                        } else if (type == DownloadDataType.Excel) {\n                          this.isExcelExpanded = !this.isExcelExpanded;\n                        } else if (type == DownloadDataType.Rough) {\n                          this.isRoughExpanded = !this.isRoughExpanded;\n                        } else if (type == DownloadDataType.Certificate) {\n                          this.isCertificateExpanded =\n                              !this.isCertificateExpanded;\n                        }\n                      });\n                    },\n                    child: Padding(\n                      padding: EdgeInsets.symmetric(\n                        horizontal: getSize(10),\n                      ),\n                      child: Container(\n                        height: getSize(16),\n                        width: getSize(16),\n                        child: Image.asset(\n                            getExpandedValue(type) ? upArrow : downArrow),\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n            ),\n          ),\n          if (getExpandedValue(type))\n            Padding(\n              padding: EdgeInsets.only(\n                  left: getSize(16), top: getSize(8), bottom: getSize(20)),\n              child: Row(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  firstList != null\n                      ? Expanded(\n                          child: Column(\n                            mainAxisAlignment: MainAxisAlignment.start,\n                            children: [\n                              ListView.builder(\n                                physics: BouncingScrollPhysics(),\n                                padding: EdgeInsets.all(0),\n                                shrinkWrap: true,\n                                itemCount: firstList.length,\n                                itemBuilder: (BuildContext context, int index) {\n                                  return InkWell(\n                                    highlightColor: Colors.transparent,\n                                    onTap: () {\n                                      firstList[index].isSelected =\n                                          !firstList[index].isSelected;\n                                      if (!firstList[index].isSelected) {\n                                        enableDisableValue(type, false);\n                                      }\n                                      var containFirst;\n                                      var containSecond;\n                                      if (firstList != null) {\n                                        containFirst = firstList.where(\n                                            (element) =>\n                                                element.isSelected == false);\n                                      }\n                                      if (secondList != null) {\n                                        containSecond = secondList.where(\n                                            (element) =>\n                                                element.isSelected == false);\n                                      }\n                                      if (containFirst != null &&\n                                          containSecond != null) {\n                                        if (containFirst.isEmpty &&\n                                            containSecond.isEmpty) {\n                                          enableDisableValue(type, true);\n                                        }\n                                      } else if (containFirst != null) {\n                                        if (containFirst.isEmpty) {\n                                          enableDisableValue(type, true);\n                                        }\n                                      } else if (containSecond != null) {\n                                        if (containSecond.isEmpty) {\n                                          enableDisableValue(type, true);\n                                        }\n                                      }\n//                                    if (containFirst.isEmpty &&\n//                                        containSecond.isEmpty) {\n//                                      enableDisableValue(type, true);\n//                                    }\n                                      setState(() {});\n                                    },\n                                    child: Padding(\n                                      padding: EdgeInsets.symmetric(\n                                          vertical: getSize(6)),\n                                      child: Row(\n                                        crossAxisAlignment:\n                                            CrossAxisAlignment.start,\n                                        children: [\n                                          Container(\n                                            height: getSize(20),\n                                            width: getSize(20),\n                                            child: Image.asset(\n                                                firstList[index].isSelected\n                                                    ? selectedFilter\n                                                    : unselectedFilter),\n                                          ),\n                                          SizedBox(\n                                            width: getSize(11),\n                                          ),\n                                          Text(\n                                            firstList[index].title,\n                                            style:\n                                                appTheme.black14W400TextStyle,\n                                          )\n                                        ],\n                                      ),\n                                    ),\n                                  );\n                                },\n                              ),\n                            ],\n                          ),\n                        )\n                      : SizedBox(),\n                  secondList != null\n                      ? Expanded(\n                          child: Column(\n                            mainAxisAlignment: MainAxisAlignment.start,\n                            children: [\n                              ListView.builder(\n                                physics: BouncingScrollPhysics(),\n                                padding: EdgeInsets.all(0),\n                                shrinkWrap: true,\n                                itemCount: secondList.length,\n                                itemBuilder: (BuildContext context, int index) {\n                                  return InkWell(\n                                    highlightColor: Colors.transparent,\n                                    onTap: () {\n                                      secondList[index].isSelected =\n                                          !secondList[index].isSelected;\n                                      if (!secondList[index].isSelected) {\n                                        enableDisableValue(type, false);\n                                      }\n                                      var containFirst = firstList.where(\n                                          (element) =>\n                                              element.isSelected == false);\n                                      var containSecond = secondList.where(\n                                          (element) =>\n                                              element.isSelected == false);\n                                      if (containFirst.isEmpty &&\n                                          containSecond.isEmpty) {\n                                        enableDisableValue(type, true);\n                                      }\n                                      setState(() {});\n                                    },\n                                    child: Padding(\n                                      padding: EdgeInsets.symmetric(\n                                          vertical: getSize(6)),\n                                      child: Row(\n                                        crossAxisAlignment:\n                                            CrossAxisAlignment.start,\n                                        children: [\n                                          Container(\n                                            height: getSize(16),\n                                            width: getSize(16),\n                                            child: Image.asset(\n                                                secondList[index].isSelected\n                                                    ? selectedFilter\n                                                    : unselectedFilter),\n                                          ),\n                                          SizedBox(\n                                            width: getSize(8),\n                                          ),\n                                          Text(\n                                            secondList[index].title,\n                                            style:\n                                                appTheme.black14W300TextStyle,\n                                          )\n                                        ],\n                                      ),\n                                    ),\n                                  );\n                                },\n                              ),\n                            ],\n                          ),\n                        )\n                      : SizedBox(),\n                ],\n              ),\n            ),\n        ],\n      ),\n    );\n  }\n\n  void whatsAppOpen(String phoneNo, {String message = \"\"}) async {\n    phoneNo = \"91\" + phoneNo;\n    String url() {\n      if (Platform.isIOS) {\n        return \"whatsapp://wa.me/$phoneNo/?text=${message}\";\n      } else {\n        return \"whatsapp://send?phone=$phoneNo&text=${message}\";\n      }\n    }\n\n    if (await canLaunch(url())) {\n      await launch(url());\n    } else {\n      throw showToast(\"whatspp is not installed in this device\",\n          context: context);\n    }\n  }\n\n  void setDataInList() {\n    //\n\n    firstImageList.add(\n      SelectionPopupModel(\n        \"1\",\n        \"Ideal Image\",\n        fileType: DownloadAndShareDialogueConstant.realImage1,\n        url: DiamondUrls.image,\n      ),\n    );\n    firstImageList.add(\n      SelectionPopupModel(\n        \"2\",\n        \"Natural Image\",\n        fileType: DownloadAndShareDialogueConstant.naturalImage,\n        url: DiamondUrls.naturalImage,\n      ),\n    );\n    firstImageList.add(\n      SelectionPopupModel(\n        \"3\",\n        \"Fluorescence Image\",\n        fileType: DownloadAndShareDialogueConstant.flouresenceImg,\n        url: DiamondUrls.flouresenceImg,\n      ),\n    );\n\n    //\n\n    // firstImageList.add(\n    //   SelectionPopupModel(\n    //     \"3\",\n    //     \"Asset Scope\",\n    //     fileType: DownloadAndShareDialogueConstant.assetScopeImg,\n    //     url: DiamondUrls.share_assetScopeImg,\n    //   ),\n    // );\n    // secondImageList.add(\n    //   SelectionPopupModel(\n    //     \"7\",\n    //     \"Heart & Arrow\",\n    //     fileType: DownloadAndShareDialogueConstant.heartAndArrowImg,\n    //     url: DiamondUrls.share_heartImg,\n    //   ),\n    // );\n    firstImageList.add(\n      SelectionPopupModel(\n        \"4\",\n        \"Heart & Arrow Image\",\n        fileType: DownloadAndShareDialogueConstant.heartAndArrowImg,\n        url: DiamondUrls.heartImage,\n      ),\n    );\n\n    firstImageList.add(\n      SelectionPopupModel(\n        \"5\",\n        \"Plot Image\",\n        fileType: DownloadAndShareDialogueConstant.plottingImg,\n        url: DiamondUrls.plotting,\n      ),\n    );\n    firstImageList.add(\n      SelectionPopupModel(\n        \"6\",\n        \"Propotion Image\",\n        fileType: DownloadAndShareDialogueConstant.propimage,\n        url: DiamondUrls.proportion,\n      ),\n    );\n    // firstImageList.add(\n    //   SelectionPopupModel(\n    //     \"4\",\n    //     \"Ideal Scope Image\",\n    //     fileType: DownloadAndShareDialogueConstant.idealScopeImg,\n    //     url: DiamondUrls.proportion,\n    //   ),\n    // );\n    // secondImageList.add(\n    //   SelectionPopupModel(\n    //     \"6\",\n    //     \"Real Image - 2\",\n    //     fileType: DownloadAndShareDialogueConstant.realImage2,\n    //     url: DiamondUrls.share_realImg,\n    //   ),\n    // );\n    // secondImageList.add(\n    //   SelectionPopupModel(\n    //     \"7\",\n    //     \"Heart & Arrow\",\n    //     fileType: DownloadAndShareDialogueConstant.heartAndArrowImg,\n    //     url: DiamondUrls.share_heartImg,\n    //   ),\n    // );\n    // secondImageList.add(\n    //   SelectionPopupModel(\n    //     \"8\",\n    //     \"Arrow Image\",\n    //     fileType: DownloadAndShareDialogueConstant.arrowImg,\n    //     url: DiamondUrls.share_arrowImg,\n    //   ),\n    // );\n    // secondImageList.add(\n    //   SelectionPopupModel(\n    //     \"9\",\n    //     \"Dark - Field Image\",\n    //     fileType: DownloadAndShareDialogueConstant.darkFieldImg,\n    //     url: DiamondUrls.share_dartFieldImg,\n    //   ),\n    // );\n    // secondImageList.add(\n    //   SelectionPopupModel(\n    //     \"10\",\n    //     \"Flouresence Image\",\n    //     fileType: DownloadAndShareDialogueConstant.flouresenceImg,\n    //     url: DiamondUrls.share_flouresenceImg,\n    //   ),\n    // );\n    firstVideoList.add(\n      SelectionPopupModel(\n        \"1\",\n        \"Natural Video\",\n        fileType: DownloadAndShareDialogueConstant.video1,\n        url: DiamondUrls.natural,\n      ),\n    );\n    firstVideoList.add(\n      SelectionPopupModel(\n        \"2\",\n        \"HD Video\",\n        fileType: DownloadAndShareDialogueConstant.video2,\n        url: DiamondUrls.videomp4,\n      ),\n    );\n    firstCertificateList.add(\n      SelectionPopupModel(\n        \"1\",\n        \"Certificate\",\n        fileType: DownloadAndShareDialogueConstant.certificate,\n        url: DiamondUrls.certificate,\n      ),\n    );\n    // secondCertificateList.add(\n    //   SelectionPopupModel(\n    //     \"2\",\n    //     \"Type IIA\",\n    //     fileType: DownloadAndShareDialogueConstant.typeIIA,\n    //     url: DiamondUrls.share_typeIIAImg,\n    //   ),\n    // );\n    firstExcelList.add(\n      SelectionPopupModel(\n        \"1\",\n        \"Excel\",\n        fileType: DownloadAndShareDialogueConstant.excel,\n      ),\n    );\n    // firstRoughList.add(\n    //   SelectionPopupModel(\n    //     \"1\",\n    //     \"Rough Scope\",\n    //     fileType: DownloadAndShareDialogueConstant.roughScope,\n    //     url: DiamondUrls.share_realImg,\n    //   ),\n    // );\n    // firstRoughList.add(\n    //   SelectionPopupModel(\n    //     \"2\",\n    //     \"Rough Video\",\n    //     fileType: DownloadAndShareDialogueConstant.roughVideo,\n    //     url: DiamondUrls.share_roughVideoImg,\n    //   ),\n    // );\n    // secondRoughList.add(\n    //   SelectionPopupModel(\n    //     \"3\",\n    //     \"3D Image\",\n    //     fileType: DownloadAndShareDialogueConstant.img3D,\n    //     url: DiamondUrls.share_planImg,\n    //   ),\n    // );\n  }\n\n  getConditionValue(DownloadDataType type) {\n    // print(\"..............................\");\n    if (type == DownloadDataType.Images) {\n      return isAllImageSelected;\n    } else if (type == DownloadDataType.Video) {\n      return isAllVideoSelected;\n    } else if (type == DownloadDataType.Excel) {\n      return isAllExcelSelected;\n    } else if (type == DownloadDataType.Rough) {\n      return isAllRoughSelected;\n    } else if (type == DownloadDataType.Certificate) {\n      return isAllCertificateSelected;\n    }\n  }\n\n  getExpandedValue(DownloadDataType type) {\n    if (type == DownloadDataType.Images) {\n      return isImageExpanded;\n    } else if (type == DownloadDataType.Video) {\n      return this.isVideoExpanded;\n    } else if (type == DownloadDataType.Excel) {\n      return isExcelExpanded;\n    } else if (type == DownloadDataType.Rough) {\n      return isRoughExpanded;\n    } else if (type == DownloadDataType.Certificate) {\n      return isCertificateExpanded;\n    }\n  }\n\n  void enableDisableValue(DownloadDataType type, bool value) {\n    if (type == DownloadDataType.Images) {\n      isAllImageSelected = value;\n    } else if (type == DownloadDataType.Video) {\n      isAllVideoSelected = value;\n    } else if (type == DownloadDataType.Excel) {\n      isAllExcelSelected = value;\n    } else if (type == DownloadDataType.Rough) {\n      isAllRoughSelected = value;\n    } else if (type == DownloadDataType.Certificate) {\n      isAllCertificateSelected = value;\n    }\n  }\n\n  isShareOrDownload(String title) {\n    if (title == \"Share\") {\n      return false;\n    }\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/components/Screens/Filter/Widget/DownLoadAndShareScreen.dart b/lib/components/Screens/Filter/Widget/DownLoadAndShareScreen.dart
--- a/lib/components/Screens/Filter/Widget/DownLoadAndShareScreen.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/components/Screens/Filter/Widget/DownLoadAndShareScreen.dart	(date 1635249331214)
@@ -119,7 +119,9 @@
       (element) async {
         await totalList.forEach(
           (v) {
-            data.add(v.url + element.vStnId);
+            data.add(
+              v.url + element.vStnId,
+            );
           },
         );
       },
@@ -943,12 +945,10 @@
       ),
     );
     firstImageList.add(
-      SelectionPopupModel(
-        "2",
-        "Natural Image",
-        fileType: DownloadAndShareDialogueConstant.naturalImage,
-        url: DiamondUrls.naturalImage,
-      ),
+      SelectionPopupModel("2", "Natural Image",
+          fileType: DownloadAndShareDialogueConstant.naturalImage,
+          url: DiamondUrls.naturalImage,
+          subTitle: "dd"),
     );
     firstImageList.add(
       SelectionPopupModel(
Index: lib/models/FilterModel/BottomTabModel.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:diamnow/app/app.export.dart';\nimport 'package:diamnow/app/localization/app_locales.dart';\nimport 'package:diamnow/app/theme/app_theme.dart';\nimport 'package:flutter/material.dart';\n\nclass BottomCodeConstant {\n  //filter\n\n  static const String filterSearchUpcoming = \"FILTER_SEARCH_UPCOMING\";\n  static const String filterSearchNewArrival = \"FILTER_SEARCH_NEW_ARRIVAL\";\n  static const String filterSavedSearch = \"FILTER_SAVED_SEARCH\";\n  static const String filterAddDemamd = \"FILTER_ADD_DEMAND\";\n  static const String filterSearch = \"FILTER_SEARCH\";\n  static const String filterSaveAndSearch = \"FILTER_SAVE_SEARCH\";\n  static const String filteMatchPair = \"FILTER_MATCH_PAIR\";\n  static const String filterReset = \"FILTER_RESET\";\n\n  //DIAMOND LIST\n  static const String dLShowSelected = \"DL_SHOWSELECTED\";\n  static const String dLCompare = \"DL_COMPARE\";\n  static const String dLMore = \"DL_MORE\";\n  static const String dLStatus = \"DL_STATUS\";\n\n//DIAMOND DETAIL\n  static const String dDEnquiry = \"DD_ENQUIRY\";\n  static const String dDAddToCart = \"DD_ADD_TO_CART\";\n  static const String dDAddToWatchlist = \"DD_ADD_TO_WATCHLIST\";\n  static const String dDPlaceOrder = \"DD_PLACEORDER\";\n  static const String dDComment = \"DD_COMMENT\";\n  static const String dDMore = \"DD_MORE\";\n\n  //Toolbar Constant\n\n  static const String TBSelectAll = \"TB_SELECT_ALL\";\n  static const String TBGrideView = \"TB_GRIDE_VIEW\";\n  static const String TBSortView = \"TB_SORT_VIEW\";\n  static const String TBDownloadView = \"TB_DOWNLOAD_VIEW\";\n  static const String TBShare = \"TB_SHARE\";\n  static const String TBClock = \"TB_CLOCK\";\n  static const String TBCompanySelection = \"TB_COMPANY_SELECTION\";\n\n  static const String TBProfile = \"TB_PROFILE\";\n  static const String TBNotification = \"TB_NOTIFICATION\";\n}\n\nclass TabConfiguration {\n  Color imageColor;\n  Color textColor;\n  Color backgroundColor;\n  Color centerImageBackgroundColor;\n\n  TabConfiguration(\n      {this.textColor,\n      this.backgroundColor,\n      this.centerImageBackgroundColor,\n      this.imageColor});\n\n  TabConfiguration.fromJson(Map<String, dynamic> json) {\n    textColor = fromHex(\n        json['textColor'] ?? \"#${appTheme.whiteColor.value.toRadixString(16)}\");\n    backgroundColor = fromHex(json['backgroundColor'] ??\n        \"#${appTheme.colorPrimary.value.toRadixString(16)}\");\n    centerImageBackgroundColor = fromHex(json['centerImageBackgroundColor'] ??\n        \"#${appTheme.whiteColor.value.toRadixString(16)}\");\n  }\n\n  Map<String, dynamic> toJson() {\n    final Map<String, dynamic> data = new Map<String, dynamic>();\n    data['textColor'] = this.textColor;\n    data['backgroundColor'] = this.backgroundColor;\n    data['centerImageBackgroundColor'] = this.centerImageBackgroundColor;\n    return data;\n  }\n\n  Color getBackgroundColor() {\n    return backgroundColor ?? appTheme.colorPrimary;\n  }\n\n  Color getTextColor() {\n    return backgroundColor ?? appTheme.whiteColor;\n  }\n\n  Color getCenterImageBackgroundColor() {\n    return backgroundColor ?? appTheme.whiteColor;\n  }\n}\n\nclass BottomTabModel extends TabConfiguration {\n  String title;\n  String image;\n  String selectedImage;\n  String code;\n  int type;\n  int sequence;\n  Color color;\n  bool isCenter = true;\n  bool isSelected;\n  VoidCallback onTap;\n  Widget widget;\n\n  BottomTabModel({\n    this.title,\n    this.image,\n    this.selectedImage,\n    this.code,\n    this.sequence,\n    this.isCenter,\n    this.type,\n    this.color,\n    this.isSelected = false,\n    this.onTap,\n    this.widget,\n  });\n\n  BottomTabModel.fromJson(Map<String, dynamic> json) : super.fromJson(json) {\n    title = json['title'];\n    image = json['image'];\n    sequence = json['sequence'];\n    isCenter = json['isCenter'] ?? false;\n  }\n\n  Map<String, dynamic> toJson() {\n    final Map<String, dynamic> data = super.toJson();\n    data['title'] = this.title;\n    data['image'] = this.image;\n    data['sequence'] = this.sequence;\n    data['isCenter'] = this.isCenter;\n    return data;\n  }\n}\n\nclass BottomTabBar {\n  //\n\n  static List<BottomTabModel> getFilterScreenBottomTabs(\n      {bool isForEditSavedSearch = false}) {\n    List<BottomTabModel> arrBootomTab = List<BottomTabModel>();\n    arrBootomTab.add(\n      BottomTabModel(\n        title: R.string.screenTitle.upcoming,\n        image: upcoming,\n        code: BottomCodeConstant.filterSearchUpcoming,\n        sequence: 0,\n        isCenter: false,\n        color: Colors.white,\n      ),\n    );\n    arrBootomTab.add(\n      BottomTabModel(\n        title: R.string.screenTitle.newArrival,\n        image: newArrival,\n        code: BottomCodeConstant.filterSearchNewArrival,\n        sequence: 1,\n        isCenter: false,\n        color: Colors.white,\n      ),\n    );\n    // arrBootomTab.add(BottomTabModel(\n    //     title: R.string.screenTitle.savedSearch,\n    //     image: savedSearch,\n    //     code: BottomCodeConstant.filterSavedSearch,\n    //     sequence: 0,\n    //     isCenter: false));\n\n    arrBootomTab.add(BottomTabModel(\n        title: \"\",\n        image: search,\n        code: BottomCodeConstant.filterSearch,\n        sequence: 2,\n        isCenter: true));\n    arrBootomTab.add(BottomTabModel(\n        title: isForEditSavedSearch\n            ? R.string.screenTitle.updateAndSearch\n            : R.string.screenTitle.savedAndSearch,\n        image: saveAndSearch,\n        code: BottomCodeConstant.filterSaveAndSearch,\n        sequence: 3,\n        isCenter: false));\n    arrBootomTab.add(BottomTabModel(\n        title: R.string.screenTitle.addDemand,\n        image: addDemand,\n        code: BottomCodeConstant.filterAddDemamd,\n        sequence: 1,\n        isCenter: false));\n//    arrBootomTab.add(BottomTabModel(\n//        title: R.string.screenTitle.matchPair,\n//        image: matchPair,\n//        code: BottomCodeConstant.filteMatchPair,\n//        sequence: 4,\n//        isCenter: false));\n//     arrBootomTab.add(BottomTabModel(\n//         title: \"Reset\",\n//         image: reset,\n//         code: BottomCodeConstant.filterReset,\n//         sequence: 4,\n//         isCenter: false));\n    return arrBootomTab;\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/models/FilterModel/BottomTabModel.dart b/lib/models/FilterModel/BottomTabModel.dart
--- a/lib/models/FilterModel/BottomTabModel.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/models/FilterModel/BottomTabModel.dart	(date 1635305394066)
@@ -38,6 +38,8 @@
   static const String TBShare = "TB_SHARE";
   static const String TBClock = "TB_CLOCK";
   static const String TBCompanySelection = "TB_COMPANY_SELECTION";
+  static const String TBCreditLimit = "TB_CREDIT_LIMIT";
+  static const String TBContactUs = "TB_CONTACT_US";
 
   static const String TBProfile = "TB_PROFILE";
   static const String TBNotification = "TB_NOTIFICATION";
@@ -133,67 +135,111 @@
   //
 
   static List<BottomTabModel> getFilterScreenBottomTabs(
-      {bool isForEditSavedSearch = false}) {
+      {bool isForEditSavedSearch = false, int segment = 0}) {
     List<BottomTabModel> arrBootomTab = List<BottomTabModel>();
-    arrBootomTab.add(
-      BottomTabModel(
-        title: R.string.screenTitle.upcoming,
-        image: upcoming,
-        code: BottomCodeConstant.filterSearchUpcoming,
-        sequence: 0,
-        isCenter: false,
-        color: Colors.white,
-      ),
-    );
-    arrBootomTab.add(
-      BottomTabModel(
-        title: R.string.screenTitle.newArrival,
-        image: newArrival,
-        code: BottomCodeConstant.filterSearchNewArrival,
-        sequence: 1,
-        isCenter: false,
-        color: Colors.white,
-      ),
-    );
-    // arrBootomTab.add(BottomTabModel(
-    //     title: R.string.screenTitle.savedSearch,
-    //     image: savedSearch,
-    //     code: BottomCodeConstant.filterSavedSearch,
-    //     sequence: 0,
-    //     isCenter: false));
+    if (segment == 0 || segment == 1) {
+      arrBootomTab.add(
+        BottomTabModel(
+          title: R.string.screenTitle.upcoming,
+          image: upcoming,
+          code: BottomCodeConstant.filterSearchUpcoming,
+          sequence: 0,
+          isCenter: false,
+          color: Colors.white,
+        ),
+      );
+      arrBootomTab.add(
+        BottomTabModel(
+          title: R.string.screenTitle.newArrival,
+          image: newArrival,
+          code: BottomCodeConstant.filterSearchNewArrival,
+          sequence: 1,
+          isCenter: false,
+          color: Colors.white,
+        ),
+      );
+      // arrBootomTab.add(BottomTabModel(
+      //     title: R.string.screenTitle.savedSearch,
+      //     image: savedSearch,
+      //     code: BottomCodeConstant.filterSavedSearch,
+      //     sequence: 0,
+      //     isCenter: false));
 
-    arrBootomTab.add(BottomTabModel(
-        title: "",
-        image: search,
-        code: BottomCodeConstant.filterSearch,
-        sequence: 2,
-        isCenter: true));
-    arrBootomTab.add(BottomTabModel(
-        title: isForEditSavedSearch
-            ? R.string.screenTitle.updateAndSearch
-            : R.string.screenTitle.savedAndSearch,
-        image: saveAndSearch,
-        code: BottomCodeConstant.filterSaveAndSearch,
-        sequence: 3,
-        isCenter: false));
-    arrBootomTab.add(BottomTabModel(
-        title: R.string.screenTitle.addDemand,
-        image: addDemand,
-        code: BottomCodeConstant.filterAddDemamd,
-        sequence: 1,
-        isCenter: false));
+      arrBootomTab.add(BottomTabModel(
+          title: "",
+          image: search,
+          code: BottomCodeConstant.filterSearch,
+          sequence: 2,
+          isCenter: true));
+      arrBootomTab.add(BottomTabModel(
+          title: isForEditSavedSearch
+              ? R.string.screenTitle.updateAndSearch
+              : R.string.screenTitle.savedAndSearch,
+          image: saveAndSearch,
+          code: BottomCodeConstant.filterSaveAndSearch,
+          sequence: 3,
+          isCenter: false));
+      arrBootomTab.add(BottomTabModel(
+          title: R.string.screenTitle.addDemand,
+          image: addDemand,
+          code: BottomCodeConstant.filterAddDemamd,
+          sequence: 1,
+          isCenter: false));
+    }
+    if (segment == 2) {
+      arrBootomTab.add(BottomTabModel(
+          title: isForEditSavedSearch
+              ? R.string.screenTitle.updateAndSearch
+              : R.string.screenTitle.savedAndSearch,
+          image: saveAndSearch,
+          code: BottomCodeConstant.filterSaveAndSearch,
+          sequence: 3,
+          isCenter: false));
+      arrBootomTab.add(BottomTabModel(
+          title: "",
+          image: search,
+          code: BottomCodeConstant.filterSearch,
+          sequence: 2,
+          isCenter: true));
+      arrBootomTab.add(BottomTabModel(
+          title: "Reset",
+          image: reset,
+          color: ColorConstants.white,
+          code: BottomCodeConstant.filterReset,
+          sequence: 4,
+          isCenter: false));
+    }
+    if (segment == 3) {
+      arrBootomTab.add(BottomTabModel(
+          title: isForEditSavedSearch
+              ? R.string.screenTitle.updateAndSearch
+              : R.string.screenTitle.savedAndSearch,
+          image: saveAndSearch,
+          code: BottomCodeConstant.filterSaveAndSearch,
+          sequence: 3,
+          isCenter: false));
+      arrBootomTab.add(BottomTabModel(
+          title: "",
+          image: search,
+          code: BottomCodeConstant.filterSearch,
+          sequence: 2,
+          isCenter: true));
+      arrBootomTab.add(BottomTabModel(
+          title: "Reset",
+          image: reset,
+          color: ColorConstants.white,
+          code: BottomCodeConstant.filterReset,
+          sequence: 4,
+          isCenter: false));
+    }
+
 //    arrBootomTab.add(BottomTabModel(
 //        title: R.string.screenTitle.matchPair,
 //        image: matchPair,
 //        code: BottomCodeConstant.filteMatchPair,
 //        sequence: 4,
 //        isCenter: false));
-//     arrBootomTab.add(BottomTabModel(
-//         title: "Reset",
-//         image: reset,
-//         code: BottomCodeConstant.filterReset,
-//         sequence: 4,
-//         isCenter: false));
+
     return arrBootomTab;
   }
 }
Index: lib/models/DiamondList/DiamondConfig.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:async';\nimport 'dart:collection';\nimport 'dart:convert';\nimport 'dart:io';\n\nimport 'package:diamnow/Setting/SettingModel.dart';\nimport 'package:diamnow/app/Helper/NetworkClient.dart';\nimport 'package:diamnow/app/Helper/OfflineStockManager.dart';\nimport 'package:diamnow/app/Helper/SyncManager.dart';\nimport 'package:diamnow/app/app.export.dart';\nimport 'package:diamnow/app/constant/EnumConstant.dart';\nimport 'package:diamnow/app/constant/ImageConstant.dart';\nimport 'package:diamnow/app/localization/app_locales.dart';\nimport 'package:diamnow/app/network/NetworkCall.dart';\nimport 'package:diamnow/app/network/ServiceModule.dart';\nimport 'package:diamnow/app/utils/AnalyticsReport.dart';\nimport 'package:diamnow/app/utils/BaseDialog.dart';\nimport 'package:diamnow/app/utils/BottomSheet.dart';\nimport 'package:diamnow/app/utils/CustomBorder.dart';\nimport 'package:diamnow/app/utils/CustomDialog.dart';\nimport 'package:diamnow/app/utils/date_utils.dart';\nimport 'package:diamnow/app/utils/price_utility.dart';\nimport 'package:diamnow/components/Screens/Auth/Widget/DialogueList.dart';\nimport 'package:diamnow/components/Screens/DiamondList/DiamondActionBottomSheet.dart';\nimport 'package:diamnow/components/Screens/DiamondList/DiamondActionScreen.dart';\nimport 'package:diamnow/components/Screens/DiamondList/DiamondCompareScreen.dart';\nimport 'package:diamnow/components/Screens/DiamondList/DiamondListScreen.dart';\nimport 'package:diamnow/components/Screens/DiamondList/Widget/OfflineDownloadPopup.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/DownLoadAndShareDialogue.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/DownLoadAndShareScreen.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/DownLoadAndShareScreen.dart';\nimport 'package:diamnow/components/Screens/More/OfferViewScreen.dart';\nimport 'package:diamnow/components/Screens/MyBid/MyBidScreen.dart';\nimport 'package:diamnow/components/Screens/SalesPerson/BuyNowScreen.dart';\nimport 'package:diamnow/components/Screens/SalesPerson/HoldStoneScreen.dart';\nimport 'package:diamnow/components/Screens/SalesPerson/MemoStoneScreen.dart';\nimport 'package:diamnow/components/Screens/StaticPage/StaticPage.dart';\nimport 'package:diamnow/components/widgets/shared/CommonDateTimePicker.dart';\nimport 'package:diamnow/models/DiamondList/DiamondConstants.dart';\nimport 'package:diamnow/models/DiamondList/DiamondListModel.dart';\nimport 'package:diamnow/models/DiamondList/DiamondTrack.dart';\nimport 'package:diamnow/models/DiamondList/download.dart';\nimport 'package:diamnow/models/FilterModel/BottomTabModel.dart';\nimport 'package:diamnow/models/OfflineSearchHistory/OfflineStockTrack.dart';\nimport 'package:diamnow/models/excel/ExcelApiResponse.dart';\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/material.dart';\nimport 'package:path/path.dart' as path;\nimport 'package:share/share.dart';\nimport 'package:uuid/uuid.dart';\n\nimport '../../main.dart';\n\nclass DiamondCalculation {\n  String totalCarat = \"0\";\n  String totalDisc = \"0\";\n  String totalPriceCrt = \"0\";\n  String totalAmount = \"0\";\n  String pcs = \"0\";\n  bool isAccountTerm = false;\n\n  setAverageCalculation(List<DiamondModel> arraDiamond,\n      {bool isFinalCalculation = false}) {\n    isAccountTerm = isFinalCalculation;\n    double carat = 0.0;\n    double avgDisc = 0.0;\n    double avgRapCrt = 0.0;\n    double avgPriceCrt = 0.0;\n    double avgAmount = 0.0;\n    double totalamt = 0.0;\n\n    List<DiamondModel> filterList = [];\n    Iterable<DiamondModel> list = arraDiamond.where((item) {\n      return item.isSelected == true;\n    });\n    if (list == null || list.length == 0) {\n      filterList = arraDiamond;\n    } else {\n      filterList = list.toList();\n    }\n    List<num> arrValues =\n        SyncManager.instance.getTotalCaratAvgRapAmount(filterList);\n    List<num> arrFinalValues =\n        SyncManager.instance.getFinalCalculations(filterList);\n    carat = arrValues[0];\n    totalamt = arrValues[2];\n    avgRapCrt = arrValues[3];\n    avgPriceCrt = arrValues[4];\n\n    totalPriceCrt = PriceUtilities.getPrice(avgPriceCrt ?? 0);\n    if (isAccountTerm) {\n      totalDisc = PriceUtilities.getPercent(\n          arrFinalValues[2].isNaN || arrFinalValues[2].isInfinite\n              ? 0\n              : arrFinalValues[2] ?? 0);\n      totalAmount = PriceUtilities.getPrice(\n          arrFinalValues[1].isNaN || arrFinalValues[1].isInfinite\n              ? 0\n              : arrFinalValues[1] ?? 0);\n      totalPriceCrt = PriceUtilities.getPrice(\n          arrFinalValues[0].isNaN || arrFinalValues[0].isInfinite\n              ? 0\n              : arrFinalValues[0] ?? 0);\n    } else {\n      avgDisc = (1 - (avgPriceCrt / avgRapCrt)) * (-100);\n      totalDisc = PriceUtilities.getPercent(\n          avgDisc.isNaN || avgDisc.isInfinite ? 0 : avgDisc ?? 0);\n      avgAmount = arrValues[1];\n      totalAmount = PriceUtilities.getPrice(\n          avgAmount.isNaN || avgAmount.isInfinite ? 0 : avgAmount ?? 0);\n    }\n\n    totalCarat = PriceUtilities.getDoubleValue(\n        carat.isNaN || carat.isInfinite ? 0 : carat ?? 0);\n    pcs = filterList.length.toString();\n  }\n}\n\nclass DiamondConfig {\n  int moduleType;\n  bool isCompare = false;\n  List<BottomTabModel> arrMoreMenu;\n  List<BottomTabModel> arrBottomTab;\n  List<BottomTabModel> arrStatusMenu;\n  BottomMenuSetting bottomMenuSetting;\n  List<BottomTabModel> toolbarList = [];\n  TrackBlockData trackBlockData;\n\n  DiamondConfig(this.moduleType, {this.isCompare = false});\n\n  initItems({bool isDetail = false}) {\n    bottomMenuSetting = BottomMenuSetting(moduleType);\n    toolbarList = getToolbarItem(isDetail: isDetail);\n    arrBottomTab = bottomMenuSetting.getBottomMenuItems(moduleType,\n        isDetail: isDetail, isCompare: isCompare);\n    arrMoreMenu = bottomMenuSetting.getMoreMenuItems(\n        isDetail: isDetail, isCompare: isCompare);\n    if (!isDetail) {\n      arrStatusMenu = bottomMenuSetting.getStatusMenuItems();\n    }\n  }\n\n  String getScreenTitle() {\n    switch (moduleType) {\n      case DiamondModuleConstant.MODULE_TYPE_MY_CART:\n        return R.string.screenTitle.myCart;\n      case DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST:\n        return R.string.screenTitle.myWatchlist;\n      case DiamondModuleConstant.MODULE_TYPE_MY_OFFER:\n        return R.string.screenTitle.myOffer;\n      case DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY:\n        return R.string.screenTitle.myEnquiry;\n      case DiamondModuleConstant.MODULE_TYPE_MY_REMINDER:\n        return R.string.screenTitle.myReminder;\n      case DiamondModuleConstant.MODULE_TYPE_MY_BID:\n        return R.string.screenTitle.myBid;\n      case DiamondModuleConstant.MODULE_TYPE_MY_HOLD:\n        return R.string.screenTitle.myHold;\n      case DiamondModuleConstant.MODULE_TYPE_MY_ORDER:\n        return R.string.screenTitle.confirmStone;\n      case DiamondModuleConstant.MODULE_TYPE_MY_OFFICE:\n        return R.string.screenTitle.myOffice;\n      case DiamondModuleConstant.MODULE_TYPE_MY_OFFER:\n        return R.string.screenTitle.myOffer;\n      case DiamondModuleConstant.MODULE_TYPE_MY_COMMENT:\n        return R.string.screenTitle.myComment;\n      case DiamondModuleConstant.MODULE_TYPE_MY_PURCHASE:\n        return R.string.screenTitle.myPurchased;\n      case DiamondModuleConstant.MODULE_TYPE_HOME:\n        return R.string.screenTitle.home;\n      case DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION:\n        return R.string.screenTitle.diamondOnAuction;\n      case DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL:\n        return R.string.screenTitle.newArrival;\n      case DiamondModuleConstant.MODULE_TYPE_EXCLUSIVE_DIAMOND:\n        return R.string.screenTitle.exclusiveDiamonds;\n      case DiamondModuleConstant.MODULE_TYPE_UPCOMING:\n        return R.string.screenTitle.upcoming;\n      case DiamondModuleConstant.MODULE_TYPE_PROFILE:\n        return R.string.screenTitle.myProfile;\n      case DiamondModuleConstant.MODULE_TYPE_STONE_OF_THE_DAY:\n        return R.string.screenTitle.stoneOfTheDays;\n      case DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK:\n      case DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH:\n        return R.string.screenTitle.searchResult + \" (Offline)\";\n      default:\n        return R.string.screenTitle.searchResult;\n    }\n  }\n\n  String getActionScreenTitle(int actionType) {\n    switch (actionType) {\n      case DiamondTrackConstant.TRACK_TYPE_WATCH_LIST:\n        return R.string.screenTitle.addToWatchList;\n      case DiamondTrackConstant.TRACK_TYPE_CART:\n        return R.string.screenTitle.addToCart;\n      case DiamondTrackConstant.TRACK_TYPE_OFFER:\n        return R.string.screenTitle.placeAnOffer;\n      case DiamondTrackConstant.TRACK_TYPE_BID:\n        return R.string.screenTitle.bidStone;\n      case DiamondTrackConstant.TRACK_TYPE_PLACE_ORDER:\n        return R.string.screenTitle.confirmStone;\n      case DiamondTrackConstant.TRACK_TYPE_FINAL_CALCULATION:\n        return R.string.screenTitle.finalCalculation;\n      case DiamondTrackConstant.TRACK_TYPE_OFFICE:\n        return R.string.screenTitle.bookOffice;\n      case DiamondTrackConstant.TRACK_TYPE_COMMENT:\n        return R.string.screenTitle.addComment;\n      default:\n        return R.string.screenTitle.addToWatchList;\n    }\n  }\n\n  Future<DiamondListResp> getApiCall(\n      int moduleType, Map<String, dynamic> dict) {\n    switch (moduleType) {\n      case DiamondModuleConstant.MODULE_TYPE_SEARCH:\n      case DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL:\n      case DiamondModuleConstant.MODULE_TYPE_EXCLUSIVE_DIAMOND:\n      case DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION:\n      case DiamondModuleConstant.MODULE_TYPE_UPCOMING:\n      case DiamondModuleConstant.MODULE_TYPE_QUICK_SEARCH:\n      case DiamondModuleConstant.MODULE_TYPE_MY_DEMAND:\n      case DiamondModuleConstant.MODULE_TYPE_RECENT_SEARCH:\n      case DiamondModuleConstant.MODULE_TYPE_MY_SAVED_SEARCH:\n      case DiamondModuleConstant.MODULE_TYPE_STONE_OF_THE_DAY:\n//        if(app.resolve<PrefUtils>().getUserDetails().type == UserConstant.SALES)\n        return !app.resolve<PrefUtils>().isUserCustomer()\n            ? app\n                .resolve<ServiceModule>()\n                .networkService()\n                .salesDiamondListPaginate(dict)\n            : app\n                .resolve<ServiceModule>()\n                .networkService()\n                .diamondListPaginate(dict);\n\n      case DiamondModuleConstant.MODULE_TYPE_MY_CART:\n      case DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST:\n      case DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY:\n      case DiamondModuleConstant.MODULE_TYPE_MY_OFFER:\n      case DiamondModuleConstant.MODULE_TYPE_MY_REMINDER:\n        return app\n            .resolve<ServiceModule>()\n            .networkService()\n            .diamondTrackList(dict);\n      case DiamondModuleConstant.MODULE_TYPE_MY_COMMENT:\n        return app\n            .resolve<ServiceModule>()\n            .networkService()\n            .diamondCommentList(dict);\n      case DiamondModuleConstant.MODULE_TYPE_MY_BID:\n        return app\n            .resolve<ServiceModule>()\n            .networkService()\n            .diamondBidList(dict);\n      case DiamondModuleConstant.MODULE_TYPE_MATCH_PAIR:\n        return app\n            .resolve<ServiceModule>()\n            .networkService()\n            .diamondMatchPairList(dict);\n      case DiamondModuleConstant.MODULE_TYPE_LAYOUT:\n        return app\n            .resolve<ServiceModule>()\n            .networkService()\n            .diamondMatchPairList(dict);\n      case DiamondModuleConstant.MODULE_TYPE_INNER_LAYOUT:\n        return app\n            .resolve<ServiceModule>()\n            .networkService()\n            .diamondMatchPairList(dict);\n      case DiamondModuleConstant.MODULE_TYPE_MY_OFFICE:\n        return app\n            .resolve<ServiceModule>()\n            .networkService()\n            .diamondOfficeList(dict);\n      case DiamondModuleConstant.MODULE_TYPE_MY_HOLD:\n        return app\n            .resolve<ServiceModule>()\n            .networkService()\n            .holdListPaginate(dict);\n\n      // case DiamondModuleConstant.MODULE_TYPE_STONE_OF_THE_DAY:\n      //   return app\n      //       .resolve<ServiceModule>()\n      //       .networkService()\n      //       .stoneOfTheDay(dict);\n    }\n  }\n\n  List<BottomTabModel> getToolbarItem({bool isDetail = false}) {\n    List<BottomTabModel> list = [];\n\n    switch (moduleType) {\n      case DiamondModuleConstant.MODULE_TYPE_HOME:\n        if (app\n            .resolve<PrefUtils>()\n            .getModulePermission(\n                ModulePermissionConstant.permission_notification)\n            .view)\n          list.add(BottomTabModel(\n              title: \"\",\n              image: notification,\n              code: BottomCodeConstant.TBNotification,\n              sequence: 1,\n              isCenter: true));\n        list.add(BottomTabModel(\n            title: \"\",\n            image: userTemp,\n            code: BottomCodeConstant.TBProfile,\n            sequence: 2,\n            isCenter: true));\n\n        break;\n\n      default:\n        if (isCompare) {\n          list.add(BottomTabModel(\n              title: \"\",\n              image: download,\n              code: BottomCodeConstant.TBDownloadView,\n              sequence: 3,\n              isCenter: true));\n        } else if (isDetail) {\n          list.add(\n            BottomTabModel(\n              title: \"\",\n              image: share,\n              code: BottomCodeConstant.TBShare,\n              sequence: 0,\n              isCenter: true,\n            ),\n          );\n          // list.add(\n          //   BottomTabModel(\n          //     title: \"\",\n          //     image: download,\n          //     code: BottomCodeConstant.TBDownloadView,\n          //     sequence: 1,\n          //     isCenter: true,\n          //   ),\n          // );\n          // list.add(BottomTabModel(\n          //     title: \"\",\n          //     image: clock,\n          //     code: BottomCodeConstant.TBClock,\n          //     sequence: 0,\n          //     isCenter: true));\n          if ((app.resolve<PrefUtils>().getUserDetails().account?.isApproved ??\n                  KYCStatus.pending) ==\n              KYCStatus.approved) {\n            list.add(\n              BottomTabModel(\n                title: \"\",\n                image: download,\n                code: BottomCodeConstant.TBDownloadView,\n                sequence: 3,\n                isCenter: true,\n              ),\n            );\n          }\n        } else {\n          if (!app.resolve<PrefUtils>().isUserCustomer())\n            list.add(BottomTabModel(\n              title: \"\",\n              image: buildingIcon,\n              code: BottomCodeConstant.TBCompanySelection,\n              sequence: 0,\n              isCenter: true,\n            ));\n          list.add(BottomTabModel(\n              title: \"\",\n              image: selectAll,\n              selectedImage: selectList,\n              code: BottomCodeConstant.TBSelectAll,\n              sequence: 1,\n              isCenter: true));\n          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MATCH_PAIR &&\n              moduleType != DiamondModuleConstant.MODULE_TYPE_MY_OFFER &&\n              moduleType != DiamondModuleConstant.MODULE_TYPE_MY_OFFICE) {\n            list.add(BottomTabModel(\n                title: \"\",\n                image: gridView,\n                selectedImage: selectGridList,\n                code: BottomCodeConstant.TBGrideView,\n                sequence: 2,\n                isCenter: true));\n          }\n          if (moduleType != DiamondModuleConstant.MODULE_TYPE_UPCOMING &&\n              moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK) {\n            list.add(BottomTabModel(\n                title: \"\",\n                image: filter,\n                code: BottomCodeConstant.TBSortView,\n                sequence: 3,\n                isCenter: true));\n          }\n\n          // if (app\n          //         .resolve<PrefUtils>()\n          //         .getModulePermission(getPermissionFromModuleType(moduleType))\n          //         .downloadExcel ==\n          //     true && if (moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK) {) {\n\n          if (moduleType == DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK ||\n              moduleType ==\n                  DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n          } else {\n            if (app.resolve<PrefUtils>().isUserCustomer())\n              list.add(BottomTabModel(\n                  title: \"\",\n                  image: download,\n                  code: BottomCodeConstant.TBDownloadView,\n                  sequence: 4,\n                  isCenter: true));\n          }\n        }\n        break;\n    }\n\n    return list;\n  }\n\n  manageDiamondAction(\n    BuildContext context,\n    List<DiamondModel> list,\n    BottomTabModel bottomTabModel,\n    Function refreshList, {\n    int moduleType,\n    bool isFromDetailScreen = false,\n  }) async {\n    switch (bottomTabModel.type) {\n      case ActionMenuConstant.ACTION_TYPE_FINAL_CALCULATION:\n        actionForFinalCalculation(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_DELETE:\n        actionDelete(context, list, moduleType, refreshList);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_ADD_TO_CART:\n        actionAddToCart(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_ENQUIRY:\n        actionAddToEnquiry(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_WISHLIST:\n        actionAddToWishList(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_PLACE_ORDER:\n        if (!app.resolve<PrefUtils>().isUserCustomer()) {\n          actionBuyNow(context, list, refreshList);\n        } else {\n          actionPlaceOrder(context, list, refreshList);\n        }\n        break;\n      case ActionMenuConstant.ACTION_TYPE_REMINDER:\n        actionReminder(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_COMMENT:\n        actionComment(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_OFFER:\n        actionOffer(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_BID:\n        actionBid(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_APPOINTMENT:\n        actionAppointment(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_HOLD:\n        actionHold(context, list, refreshList);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_MEMO:\n        actionMemo(context, list, refreshList);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_DOWNLOAD:\n        showDialog(\n            barrierDismissible: true,\n            context: context,\n            builder: (BuildContext context) {\n              return StatefulBuilder(builder: (context, setState) {\n                return Dialog(\n                    insetPadding: EdgeInsets.only(\n                        left: getSize(Spacing.leftPadding),\n                        right: getSize(Spacing.rightPadding)),\n                    shape: RoundedRectangleBorder(\n                        borderRadius:\n                            BorderRadius.all(Radius.circular(getSize(15)))),\n                    child: Container(\n                      width: MathUtilities.screenWidth(context),\n                      padding: EdgeInsets.symmetric(\n                        horizontal: getSize(20),\n                        vertical: getSize(29),\n                      ),\n                      child: Column(\n                        mainAxisSize: MainAxisSize.min,\n                        children: <Widget>[\n                          Text(\n                            \"Download\",\n                            textAlign: TextAlign.center,\n                            style: appTheme.blackSemiBold18TitleColorblack,\n                          ),\n                          SizedBox(\n                            height: getSize(20),\n                          ),\n                          Container(\n                            margin: EdgeInsets.only(\n                              top: getSize(24),\n                            ),\n                            child: Row(\n                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n                              children: <Widget>[\n                                Expanded(\n                                  child: InkWell(\n                                    onTap: () {\n                                      // Navigator.pop(context);\n                                      actionDownload(context, list,\n                                          isDownloadSearched: true);\n                                      // details = false;\n                                      // _onShare(context, list, details);\n                                    },\n                                    child: Container(\n                                      height: getSize(50),\n                                      decoration: BoxDecoration(\n                                        color: appTheme.colorPrimary\n                                            .withOpacity(0.15),\n                                        border: Border.all(\n                                          color: appTheme.colorPrimary,\n                                          width: getSize(1),\n                                        ),\n                                        borderRadius:\n                                            BorderRadius.circular(getSize(5)),\n                                      ),\n                                      child: Padding(\n                                        padding: EdgeInsets.fromLTRB(\n                                            getSize(8),\n                                            getSize(14),\n                                            getSize(8),\n                                            getSize(14)),\n                                        child: Text(\n                                          \"Diamond Details\",\n                                          textAlign: TextAlign.center,\n                                          style: appTheme\n                                              .commonAlertDialogueDescStyle\n                                              .copyWith(\n                                            color: appTheme.blackColor,\n                                            fontSize: getFontSize(16),\n                                          ),\n                                        ),\n                                      ),\n                                    ),\n                                  ),\n                                ),\n                                SizedBox(\n                                  width: getSize(20),\n                                ),\n                                Expanded(\n                                  child: InkWell(\n                                    onTap: () {\n                                      Navigator.pop(context);\n                                      SyncManager sync = SyncManager();\n                                      sync.callApiForExcel(context, list);\n                                      // details = true;\n                                      // _onShare(context, list, details);\n                                    },\n                                    child: Container(\n                                      height: getSize(50),\n                                      decoration: BoxDecoration(\n                                        color: appTheme.colorPrimary\n                                            .withOpacity(0.15),\n                                        border: Border.all(\n                                          color: appTheme.colorPrimary,\n                                          width: getSize(1),\n                                        ),\n                                        borderRadius:\n                                            BorderRadius.circular(getSize(5)),\n                                      ),\n                                      child: Padding(\n                                        padding: EdgeInsets.fromLTRB(\n                                            getSize(8),\n                                            getSize(14),\n                                            getSize(8),\n                                            getSize(14)),\n                                        child: Text(\n                                          \"Excel\",\n                                          textAlign: TextAlign.center,\n                                          style: appTheme\n                                              .commonAlertDialogueDescStyle\n                                              .copyWith(\n                                            color: appTheme.blackColor,\n                                            fontSize: getFontSize(16),\n                                          ),\n                                        ),\n                                      ),\n                                    ),\n                                  ),\n                                ),\n                              ],\n                            ),\n                          ),\n                        ],\n                      ),\n                    ));\n              });\n            });\n        // actionDownload(context, list, isDownloadSearched: true);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_EXCEL:\n        actionExportExcel(context, list);\n        break;\n      case ActionMenuConstant.ACTION_TYPE_SHARE:\n        showDialog(\n            barrierDismissible: true,\n            context: context,\n            builder: (BuildContext context) {\n              return StatefulBuilder(builder: (context, setState) {\n                return Dialog(\n                    insetPadding: EdgeInsets.only(\n                        left: getSize(Spacing.leftPadding),\n                        right: getSize(Spacing.rightPadding)),\n                    shape: RoundedRectangleBorder(\n                        borderRadius:\n                            BorderRadius.all(Radius.circular(getSize(15)))),\n                    child: Container(\n                      width: MathUtilities.screenWidth(context),\n                      padding: EdgeInsets.symmetric(\n                        horizontal: getSize(20),\n                        vertical: getSize(29),\n                      ),\n                      child: Column(\n                        mainAxisSize: MainAxisSize.min,\n                        children: <Widget>[\n                          Text(\n                            \"Share\",\n                            textAlign: TextAlign.center,\n                            style: appTheme.blackSemiBold18TitleColorblack,\n                          ),\n                          SizedBox(\n                            height: getSize(20),\n                          ),\n                          Container(\n                            margin: EdgeInsets.only(\n                              top: getSize(24),\n                            ),\n                            child: Row(\n                              mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n                              children: <Widget>[\n                                Expanded(\n                                  child: InkWell(\n                                    onTap: () {\n                                      Navigator.pop(context);\n                                      actionDownload(context, list,\n                                          isForShare: true);\n                                      // details = false;\n                                      // _onShare(context, list, details);\n                                    },\n                                    child: Container(\n                                      height: getSize(50),\n                                      decoration: BoxDecoration(\n                                        color: appTheme.colorPrimary\n                                            .withOpacity(0.15),\n                                        border: Border.all(\n                                          color: appTheme.colorPrimary,\n                                          width: getSize(1),\n                                        ),\n                                        borderRadius:\n                                            BorderRadius.circular(getSize(5)),\n                                      ),\n                                      child: Padding(\n                                        padding: EdgeInsets.fromLTRB(\n                                            getSize(8),\n                                            getSize(14),\n                                            getSize(8),\n                                            getSize(14)),\n                                        child: Text(\n                                          \"Diamond Details\",\n                                          textAlign: TextAlign.center,\n                                          style: appTheme\n                                              .commonAlertDialogueDescStyle\n                                              .copyWith(\n                                            color: appTheme.blackColor,\n                                            fontSize: getFontSize(16),\n                                          ),\n                                        ),\n                                      ),\n                                    ),\n                                  ),\n                                ),\n                                SizedBox(\n                                  width: getSize(20),\n                                ),\n                                Expanded(\n                                  child: InkWell(\n                                    onTap: () {\n                                      Navigator.pop(context);\n                                      SyncManager sync = SyncManager();\n                                      sync.callApiForExcel(context, list,\n                                          isForShare: true);\n                                      // details = true;\n                                      // _onShare(context, list, details);\n                                    },\n                                    child: Container(\n                                      height: getSize(50),\n                                      decoration: BoxDecoration(\n                                        color: appTheme.colorPrimary\n                                            .withOpacity(0.15),\n                                        border: Border.all(\n                                          color: appTheme.colorPrimary,\n                                          width: getSize(1),\n                                        ),\n                                        borderRadius:\n                                            BorderRadius.circular(getSize(5)),\n                                      ),\n                                      child: Padding(\n                                        padding: EdgeInsets.fromLTRB(\n                                            getSize(8),\n                                            getSize(14),\n                                            getSize(8),\n                                            getSize(14)),\n                                        child: Text(\n                                          \"Excel\",\n                                          textAlign: TextAlign.center,\n                                          style: appTheme\n                                              .commonAlertDialogueDescStyle\n                                              .copyWith(\n                                            color: appTheme.blackColor,\n                                            fontSize: getFontSize(16),\n                                          ),\n                                        ),\n                                      ),\n                                    ),\n                                  ),\n                                ),\n                              ],\n                            ),\n                          ),\n                        ],\n                      ),\n                    ));\n              });\n            });\n        //actionDownload(context, list, isForShare: true);\n\n        break;\n\n      case ActionMenuConstant.ACTION_TYPE_COMPARE:\n        if (list.length < 2) {\n          app.resolve<CustomDialogs>().confirmDialog(\n                context,\n                title: \"\",\n                desc: R.string.commonString.enter2Stone,\n                positiveBtnTitle: R.string.commonString.ok,\n              );\n          return;\n        }\n        var dict = Map<String, dynamic>();\n        print(\"-----------list-------${list.length}\");\n        print(\"-----------moduleType-------${moduleType}\");\n        dict[ArgumentConstant.DiamondList] = list;\n        dict[ArgumentConstant.ModuleType] =\n            DiamondModuleConstant.MODULE_TYPE_SEARCH;\n        // NavigationUtilities.pushRoute(DiamondCompareScreen.route, args: dict);\n        bool isBack = await Navigator.of(context).push(MaterialPageRoute(\n          settings: RouteSettings(name: DiamondCompareScreen.route),\n          builder: (context) => DiamondCompareScreen(dict),\n        ));\n        if (isBack != null && isBack) {\n          refreshList();\n        }\n        break;\n    }\n  }\n\n  actionAddToCart(BuildContext context, List<DiamondModel> list) {\n    // var filter = list\n    //     .where((element) =>\n    //         element.wSts == DiamondStatus.DIAMOND_STATUS_HOLD ||\n    //         element.wSts == DiamondStatus.DIAMOND_STATUS_ON_MINE)\n    //     .toList();\n    //\n    // if (isNullEmptyOrFalse(filter)) {\n    callApiFoCreateTrack(context, list, DiamondTrackConstant.TRACK_TYPE_CART,\n        isPop: false, title: R.string.screenTitle.addedInCart);\n    // } else {\n    //   app.resolve<CustomDialogs>().errorDialog(\n    //         context,\n    //         \"\",\n    //         R.string.commonString.holdMemoStatusDiamondAddToCart,\n    //         btntitle: R.string.commonString.ok,\n    //       );\n    // }\n\n    // callApiFoCreateTrack(context, list, DiamondTrackConstant.TRACK_TYPE_CART,\n    //     isPop: false, title: R.string.screenTitle.addedInCart);\n    // List<DiamondModel> selectedList = [];\n    // DiamondModel model;\n    // list.forEach((element) {\n    //   model = DiamondModel.fromJson(element.toJson());\n    //   selectedList.add(model);\n    // });\n\n    // openDiamondActionAcreen(\n    //     context, DiamondTrackConstant.TRACK_TYPE_CART, selectedList);\n  }\n\n  actionUpdateNote(BuildContext context, List<DiamondModel> list) {\n    // callApiFoCreateTrack(context, list, DiamondTrackConstant.TRACK_TYPE_CART,\n    //     isPop: false, title: R.string.screenTitle.addedInCart);\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      model.isNoteEditable = true;\n      model.isNotes = false;\n      selectedList.add(model);\n    });\n\n    openDiamondActionAcreen(\n        context, DiamondTrackConstant.TRACK_TYPE_UPDATE_COMMENT, selectedList);\n  }\n\n  actionForFinalCalculation(BuildContext context, List<DiamondModel> list) {\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      model.isFinalCalculation = true;\n      selectedList.add(model);\n    });\n    openDiamondActionAcreen(context,\n        DiamondTrackConstant.TRACK_TYPE_FINAL_CALCULATION, selectedList);\n  }\n\n  actionDelete(BuildContext context, List<DiamondModel> list, int moduleType,\n      Function refreshList) {\n    app.resolve<CustomDialogs>().confirmDialog(context,\n        title: \"\",\n        desc: R.string.errorString.deleteStoneMsg,\n        positiveBtnTitle: R.string.commonString.yes,\n        negativeBtnTitle: R.string.commonString.no,\n        onClickCallback: (PositveButtonClick) {\n      if (PositveButtonClick == ButtonType.PositveButtonClick) {\n        if (moduleType == DiamondModuleConstant.MODULE_TYPE_MY_OFFICE) {\n          callApiForDeleteOffice(context, list, refreshList);\n        } else {\n          callApiForDeleteTrack(context, list, moduleType, refreshList);\n        }\n      }\n    });\n  }\n\n  actionAddToEnquiry(BuildContext context, List<DiamondModel> list) {\n    showEnquiryDialog(context, (manageClick) {\n      if (manageClick.type == clickConstant.CLICK_TYPE_CONFIRM) {\n        callApiFoCreateTrack(\n            context, list, DiamondTrackConstant.TRACK_TYPE_ENQUIRY,\n            isPop: true, remark: manageClick.remark, title: \"Added in Enquiry\");\n      }\n    });\n  }\n\n  actionAddToWishList(BuildContext context, List<DiamondModel> list) {\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      model.isAddToWatchList = true;\n      selectedList.add(model);\n    });\n    openDiamondActionAcreen(\n        context, DiamondTrackConstant.TRACK_TYPE_WATCH_LIST, selectedList);\n\n    // if (manageClick.type == clickConstant.CLICK_TYPE_CONFIRM) {\n    /* callApiFoCreateTrack(\n        context, list, DiamondTrackConstant.TRACK_TYPE_WATCH_LIST,\n        isPop: false, title: \"Added in Watchlist\");*/\n    // }\n    /*showWatchListDialog(context, selectedList, (manageClick) {\n      if (manageClick.type == clickConstant.CLICK_TYPE_CONFIRM) {\n        callApiFoCreateTrack(\n            context, list, DiamondTrackConstant.TRACK_TYPE_WATCH_LIST,\n            isPop: true, title: \"Added in Watchlist\");\n      }\n      ( The selected diamond(s) C1713-1B, C1861-1B is in Hold/Memo/Upcoming. )\n\n    });*/\n  }\n\n  openDiamondActionAcreen(\n      BuildContext context, int actionType, List<DiamondModel> list,\n      {List<DiamondModel> list2, Function placeOrder}) async {\n    var dict = Map<String, dynamic>();\n\n    // list.forEach((element) async {\n    //   if(element.wSts!=\"A\"){\n    //     app.resolve<CustomDialogs>().errorDialog(\n    //       context,\n    //       \"\",\n    //       \"( The selected diamond(s) C1713-1B, C1861-1B is in Hold/Memo/Upcoming. )\",\n    //       btntitle: R.string.commonString.ok,\n    //     );\n    //   }\n    //   else {\n    dict[ArgumentConstant.DiamondList] = list;\n    dict[ArgumentConstant.ModuleType] = moduleType;\n    dict[ArgumentConstant.ActionType] = actionType;\n    dict[ArgumentConstant.DiamondList1] = list2;\n    // }\n    // });\n    bool isBack = await Navigator.of(context).push(MaterialPageRoute(\n      settings: RouteSettings(name: DiamondActionScreen.route),\n      builder: (context) => DiamondActionScreen(dict),\n    ));\n    if (isBack != null && isBack && placeOrder != null) {\n      placeOrder();\n    }\n  }\n\n  actionPlaceOrder(\n      BuildContext context, List<DiamondModel> list, Function placeOrder) {\n    List<DiamondModel> selectedList = [];\n    List<DiamondModel> selectedList1 = [];\n    DiamondModel model;\n    list.forEach((element) {\n      if (element.wSts == \"A\") {\n        model = DiamondModel.fromJson(element.toJson());\n        selectedList.add(model);\n      } else {\n        model = DiamondModel.fromJson(element.toJson());\n        selectedList1.add(model);\n      }\n    });\n\n    // var filter = list\n    //     .where((element) =>\n    //         element.wSts == DiamondStatus.DIAMOND_STATUS_HOLD ||\n    //         element.wSts == DiamondStatus.DIAMOND_STATUS_ON_MINE)\n    //     .toList();\n    // if (isNullEmptyOrFalse(filter)) {\n    openDiamondActionAcreen(\n        context, DiamondTrackConstant.TRACK_TYPE_PLACE_ORDER, selectedList,\n        list2: selectedList1, placeOrder: placeOrder);\n    // } else {\n    //   app.resolve<CustomDialogs>().errorDialog(\n    //     context,\n    //     \"\",\n    //     R.string.commonString.holdMemoStatusDiamondOrder,\n    //     btntitle: R.string.commonString.ok,\n    //   );\n    // }\n//      showToast(R.string.commonString.holdMemoStatusDiamondorder,\n//          context: context);\n\n    /*showPlaceOrderDialog(context, (manageClick) {\n      if (manageClick.type == clickConstant.CLICK_TYPE_CONFIRM) {\n        callApiFoPlaceOrder(context, list, placeOrder,\n            isPop: true,\n            remark: manageClick.remark,\n            companyName: manageClick.companyName,\n            date: manageClick.date);\n      }\n    });*/\n  }\n\n  actionComment(BuildContext context, List<DiamondModel> list) {\n    // showNotesDialog(context, (manageClick) {\n    //   if (manageClick.type == clickConstant.CLICK_TYPE_CONFIRM) {\n    //     callApiFoCreateTrack(\n    //         context, list, DiamondTrackConstant.TRACK_TYPE_COMMENT,\n    //         isPop: true, remark: manageClick.remark);\n    //   }\n    // });\n\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      model.isNoteEditable = true;\n      model.isNotes = true;\n      selectedList.add(model);\n    });\n    openDiamondActionAcreen(\n        context, DiamondTrackConstant.TRACK_TYPE_COMMENT, selectedList);\n  }\n\n  actionOffer(BuildContext context, List<DiamondModel> list) {\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      model.isAddToOffer = true;\n      selectedList.add(model);\n    });\n\n    AnalyticsReport.shared.sendAnalyticsData(\n      buildContext: context,\n      page: PageAnalytics.DIAMOND_LIST,\n      section: SectionAnalytics.MYOFFER,\n      action: ActionAnalytics.OPEN,\n    );\n\n    var filter = list\n        .where((element) =>\n            element.wSts == DiamondStatus.DIAMOND_STATUS_HOLD ||\n            element.wSts == DiamondStatus.DIAMOND_STATUS_ON_MINE)\n        .toList();\n\n    if (isNullEmptyOrFalse(filter)) {\n      openDiamondActionAcreen(\n          context, DiamondTrackConstant.TRACK_TYPE_OFFER, selectedList);\n    } else {\n      app.resolve<CustomDialogs>().errorDialog(\n            context,\n            \"\",\n            R.string.commonString.holdMemoStatusDiamondOffer,\n            btntitle: R.string.commonString.ok,\n          );\n    }\n    /* showOfferListDialog(context, selectedList, (manageClick) {\n      if (manageClick.type == clickConstant.CLICK_TYPE_CONFIRM) {\n        callApiFoCreateTrack(\n            context, list, DiamondTrackConstant.TRACK_TYPE_OFFER,\n            remark: manageClick.remark,\n            companyName: manageClick.companyName,\n            isPop: true);\n      }\n    });*/\n  }\n\n  actionAll(\n    BuildContext context,\n    List<DiamondModel> list,\n    int trackType, {\n    String remark,\n    int selectHour,\n    String companyName,\n    String date,\n    bool isFromOffer = false,\n  }) {\n    switch (trackType) {\n      case DiamondTrackConstant.TRACK_TYPE_WATCH_LIST:\n        callApiFoCreateTrack(\n            context, list, DiamondTrackConstant.TRACK_TYPE_WATCH_LIST,\n            isPop: true, title: R.string.screenTitle.addedInWatchList);\n        break;\n      case DiamondTrackConstant.TRACK_TYPE_CART:\n        callApiFoCreateTrack(\n            context, list, DiamondTrackConstant.TRACK_TYPE_CART,\n            isPop: true, title: R.string.screenTitle.addedInCart);\n        break;\n      case DiamondTrackConstant.TRACK_TYPE_OFFER:\n        callApiFoCreateTrack(\n          context,\n          list,\n          DiamondTrackConstant.TRACK_TYPE_OFFER,\n          remark: remark,\n          isPop: true,\n          title: R.string.screenTitle.addedInOffer,\n        );\n        break;\n      case DiamondTrackConstant.TRACK_TYPE_BID:\n        callApiFoCreateTrack(context, list, DiamondTrackConstant.TRACK_TYPE_BID,\n            isPop: true, title: R.string.screenTitle.addedInBid);\n        break;\n      case DiamondTrackConstant.TRACK_TYPE_PLACE_ORDER:\n        callApiFoPlaceOrder(context, list, () {\n          Navigator.pop(context, true);\n        },\n            isPop: true,\n            remark: remark,\n            companyName: companyName,\n            date: date,\n            isFromOffer: isFromOffer);\n        break;\n      case DiamondTrackConstant.TRACK_TYPE_UPDATE_COMMENT:\n        print('Update Comment api');\n        callApiFoCreateTrack(\n            context, list, DiamondTrackConstant.TRACK_TYPE_UPDATE_COMMENT,\n            isPop: true);\n        break;\n\n      case DiamondTrackConstant.TRACK_TYPE_COMMENT:\n        print('Add Note api');\n        callApiFoCreateTrack(\n            context, list, DiamondTrackConstant.TRACK_TYPE_COMMENT,\n            isPop: true);\n\n        break;\n    }\n  }\n\n  actionBid(BuildContext context, List<DiamondModel> list) {\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      model.isAddToBid = true;\n      selectedList.add(model);\n    });\n    app.resolve<CustomDialogs>().confirmDialog(context,\n        title: R.string.screenTitle.declaimer,\n        desc: R.string.commonString.packetNo +\n            list.map((item) => item.vStnId).toList().join(', ') +\n            R.string.commonString.bidDesc,\n        negativeBtnTitle: R.string.commonString.quit,\n        positiveBtnTitle: R.string.commonString.agree,\n        onClickCallback: (buttonType) {\n      if (buttonType == ButtonType.PositveButtonClick) {\n        openDiamondActionAcreen(\n            context, DiamondTrackConstant.TRACK_TYPE_BID, selectedList);\n        /*showBidListDialog(context, selectedList, (manageClick) {\n          if (manageClick.type == clickConstant.CLICK_TYPE_CONFIRM) {\n            callApiFoCreateTrack(\n                context, selectedList, DiamondTrackConstant.TRACK_TYPE_BID,\n                isPop: true);\n          }\n        });*/\n      }\n    });\n  }\n\n  actionAppointment(BuildContext context, List<DiamondModel> list) {\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      model.isAddAppointment = true;\n      selectedList.add(model);\n    });\n    var dict = Map<String, dynamic>();\n    dict[ArgumentConstant.DiamondList] = selectedList;\n    NavigationUtilities.pushRoute(OfferViewScreen.route, args: dict);\n    // openDiamondActionAcreen(\n    //     context, DiamondTrackConstant.TRACK_TYPE_OFFICE, selectedList);\n    /* showOfferListDialog(context, selectedList, (manageClick) {\n      if (manageClick.type == clickConstant.CLICK_TYPE_CONFIRM) {\n        callApiFoCreateTrack(\n            context, list, DiamondTrackConstant.TRACK_TYPE_OFFER,\n            remark: manageClick.remark,\n            companyName: manageClick.companyName,\n            isPop: true);\n      }\n    });*/\n  }\n\n  actionBuyNow(\n      BuildContext context, List<DiamondModel> list, Function refreshList) {\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      selectedList.add(model);\n    });\n    Map<String, dynamic> dict = new HashMap();\n    dict[ArgumentConstant.IsFromDrawer] = false;\n    dict[ArgumentConstant.ModuleType] = moduleType;\n    dict[ArgumentConstant.DiamondList] = selectedList;\n    Navigator.of(context)\n        .push(MaterialPageRoute(\n          settings: RouteSettings(name: BuyNowScreen.route),\n          builder: (context) => BuyNowScreen(dict),\n        ))\n        .then((value) => {\n              if (value != null && value) {refreshList()}\n            });\n  }\n\n  actionHold(\n      BuildContext context, List<DiamondModel> list, Function refreshList) {\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      selectedList.add(model);\n    });\n    Map<String, dynamic> dict = new HashMap();\n    dict[ArgumentConstant.IsFromDrawer] = false;\n    dict[ArgumentConstant.ModuleType] = moduleType;\n    dict[ArgumentConstant.DiamondList] = selectedList;\n    Navigator.of(context)\n        .push(MaterialPageRoute(\n          settings: RouteSettings(name: HoldStoneScreen.route),\n          builder: (context) => HoldStoneScreen(dict),\n        ))\n        .then((value) => {\n              if (value != null && value) {refreshList()}\n            });\n  }\n\n  actionMemo(\n      BuildContext context, List<DiamondModel> list, Function refreshList) {\n    List<DiamondModel> selectedList = [];\n    DiamondModel model;\n    list.forEach((element) {\n      model = DiamondModel.fromJson(element.toJson());\n      selectedList.add(model);\n    });\n    Map<String, dynamic> dict = new HashMap();\n    dict[ArgumentConstant.IsFromDrawer] = false;\n    dict[ArgumentConstant.ModuleType] = moduleType;\n    dict[ArgumentConstant.DiamondList] = selectedList;\n\n    Navigator.of(context)\n        .push(MaterialPageRoute(\n          settings: RouteSettings(name: MemoStoneScreen.route),\n          builder: (context) => MemoStoneScreen(dict),\n        ))\n        .then((value) => {\n              if (value != null && value) {refreshList()}\n            });\n  }\n\n  actionDownloadOffline(BuildContext context, Function refreshList,\n      {String filterId,\n      List<Map<String, dynamic>> sortRequest,\n      Map<String, dynamic> filterCriteria}) {\n    showDialog(\n      context: context,\n      barrierDismissible: false,\n      builder: (BuildContext context) {\n        return OfflineDownloadPopup(\n          onAccept: (isDownloadSearched, selectedDate) {\n            List<SelectionPopupModel> downloadOptionList =\n                List<SelectionPopupModel>();\n            downloadOptionList.add(SelectionPopupModel(\"1\", \"Certificate\",\n                fileType: DownloadAndShareDialogueConstant.certificate));\n            downloadOptionList.add(SelectionPopupModel(\"2\", \"Image\",\n                fileType: DownloadAndShareDialogueConstant.realImage1));\n\n            showDialog(\n              context: context,\n              barrierDismissible: false,\n              builder: (BuildContext context) {\n                return WillPopScope(\n                  onWillPop: () {\n                    return Future.value(false);\n                  },\n                  child: Dialog(\n                    insetPadding: EdgeInsets.symmetric(\n                        horizontal: getSize(20), vertical: getSize(5)),\n                    shape: RoundedRectangleBorder(\n                      borderRadius: BorderRadius.circular(getSize(25)),\n                    ),\n                    child: SelectionDialogue(\n                      isSearchEnable: false,\n                      title: R.string.commonString.download,\n                      isMultiSelectionEnable: true,\n                      positiveButtonTitle: R.string.commonString.download,\n                      selectionOptions: downloadOptionList,\n                      applyFilterCallBack: (\n                          {SelectionPopupModel selectedItem,\n                          List<SelectionPopupModel> multiSelectedItem}) {\n                        // Navigator.pop(context);\n                        //check condition for only excel,if so then redirect to static page\n                        //else show showDialog method.\n\n                        OfflineStockManager.shared.downloadData(\n                          allDiamondPreviewThings: multiSelectedItem,\n                          filterId: isDownloadSearched ? filterId : null,\n                          sortRequest: sortRequest,\n                          date: selectedDate,\n                        );\n                      },\n                    ),\n//          child: DownLoadAndShareDialogue(\n//            title: R.string.commonString.download,\n//          ),\n                  ),\n                );\n              },\n            );\n          },\n        );\n      },\n    );\n  }\n\n  actionExportExcel(\n    BuildContext context,\n    List<DiamondModel> list,\n  ) {\n    return showDialog(\n      barrierDismissible: true,\n      context: context,\n      builder: (BuildContext context) {\n        return StatefulBuilder(\n          builder: (context, setState) {\n            return Dialog(\n              insetPadding: EdgeInsets.only(\n                  left: getSize(Spacing.leftPadding),\n                  right: getSize(Spacing.rightPadding)),\n              shape: RoundedRectangleBorder(\n                  borderRadius: BorderRadius.all(Radius.circular(getSize(15)))),\n              child: Container(\n                width: MathUtilities.screenWidth(context),\n                padding: EdgeInsets.symmetric(\n                  horizontal: getSize(20),\n                  vertical: getSize(29),\n                ),\n                child: Column(\n                  mainAxisSize: MainAxisSize.min,\n                  children: <Widget>[\n                    Text(\n                      \"Export Excel\",\n                      textAlign: TextAlign.center,\n                      style: appTheme.blackSemiBold18TitleColorblack,\n                    ),\n                    SizedBox(\n                      height: getSize(20),\n                    ),\n                    Container(\n                      margin: EdgeInsets.only(\n                        top: getSize(24),\n                      ),\n                      child: Row(\n                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n                        children: <Widget>[\n                          Expanded(\n                            child: InkWell(\n                              onTap: () {\n                                callApiForExcel(\n                                  context,\n                                  list,\n                                  isSummary: true,\n                                );\n                              },\n                              child: Container(\n                                height: getSize(50),\n                                decoration: BoxDecoration(\n                                  color:\n                                      appTheme.colorPrimary.withOpacity(0.15),\n                                  border: Border.all(\n                                    color: appTheme.colorPrimary,\n                                    width: getSize(1),\n                                  ),\n                                  borderRadius:\n                                      BorderRadius.circular(getSize(5)),\n                                ),\n                                child: Padding(\n                                  padding: EdgeInsets.fromLTRB(getSize(8),\n                                      getSize(14), getSize(8), getSize(14)),\n                                  child: Text(\n                                    \"With Summary\",\n                                    textAlign: TextAlign.center,\n                                    style: appTheme.commonAlertDialogueDescStyle\n                                        .copyWith(\n                                      color: appTheme.blackColor,\n                                      fontSize: getFontSize(16),\n                                    ),\n                                  ),\n                                ),\n                              ),\n                            ),\n                          ),\n                          SizedBox(\n                            width: getSize(20),\n                          ),\n                          Expanded(\n                            child: InkWell(\n                              onTap: () {\n                                callApiForExcel(\n                                  context,\n                                  list,\n                                  isSummary: false,\n                                );\n                              },\n                              child: Container(\n                                height: getSize(50),\n                                decoration: BoxDecoration(\n                                  color:\n                                      appTheme.colorPrimary.withOpacity(0.15),\n                                  border: Border.all(\n                                    color: appTheme.colorPrimary,\n                                    width: getSize(1),\n                                  ),\n                                  borderRadius:\n                                      BorderRadius.circular(getSize(5)),\n                                ),\n                                child: Padding(\n                                  padding: EdgeInsets.fromLTRB(getSize(8),\n                                      getSize(14), getSize(8), getSize(14)),\n                                  child: Text(\n                                    \"Without Summary\",\n                                    textAlign: TextAlign.center,\n                                    style: appTheme.commonAlertDialogueDescStyle\n                                        .copyWith(\n                                      color: appTheme.blackColor,\n                                      fontSize: getFontSize(16),\n                                    ),\n                                  ),\n                                ),\n                              ),\n                            ),\n                          ),\n                        ],\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n            );\n          },\n        );\n      },\n    );\n  }\n\n  callApiForExcel(BuildContext context, List<DiamondModel> diamondList,\n      {bool isForShare = false, void callback(String), bool isSummary}) {\n    var dio = Dio();\n\n    List<String> stoneId = [];\n    diamondList.forEach((element) {\n      stoneId.add(element.id);\n    });\n\n    Map<String, dynamic> dict = {};\n    dict[\"id\"] = stoneId;\n    if (isSummary) {\n      dict[\"allSummary\"] = true;\n    } else {\n      dict[\"allSummary\"] = false;\n    }\n\n    NetworkCall<ExcelApiResponse>()\n        .makeCall(\n      () => app.resolve<ServiceModule>().networkService().getExcel(dict),\n      context,\n    )\n        .then((excelApiResponse) async {\n      // success(diamondListResp);\n      Navigator.pop(context);\n      String url = ApiConstants.baseURLForExcel + excelApiResponse.data.data;\n      String excelFileUrl = url;\n      print(\"Excel file URL : \" + url);\n      if (!Platform.isIOS) {\n        url = \"https://docs.google.com/viewer?embedded=true&url=\" + url;\n      }\n      print(\"Final ExcelFile Viewer Url : \" + url);\n\n      //navigate to static page...\n      DownloadState downloadStateObj = DownloadState();\n      final dir = await downloadStateObj.getDownloadDirectory();\n      String fileName = \"FinalExcel.xlsx\";\n      final savePath = path.join(dir.path, fileName);\n      print(\"file:/\" + savePath);\n\n      if (isForShare) {\n        callback(url);\n      } else {\n        download2(dio, excelFileUrl, savePath);\n        if (Platform.isIOS) {\n          Map<String, dynamic> dict = {};\n          dict[\"strUrl\"] = url;\n          dict['filePath'] = savePath;\n          dict[ArgumentConstant.IsFromDrawer] = false;\n          dict[\"isForExcel\"] = true;\n          dict[\"screenTitle\"] = excelApiResponse.data.excelName;\n          NavigationUtilities.pushRoute(StaticPageScreen.route, args: dict);\n        } else {\n          Map<String, dynamic> dict = {};\n          dict[\"strUrl\"] = url;\n          dict['filePath'] = savePath;\n          dict[ArgumentConstant.IsFromDrawer] = false;\n          dict[\"isForExcel\"] = true;\n          dict[\"screenTitle\"] = excelApiResponse.data.excelName;\n          NavigationUtilities.pushRoute(StaticPageScreen.route, args: dict);\n        }\n      }\n      // getWebView(context, url);\n    }).catchError((onError) {\n      showToast(\"There is problem on server, please try again later.\",\n          context: context);\n      print(onError);\n    });\n  }\n\n  void showDownloadProgress(received, total) {\n    if (total != -1) {\n      print((received / total * 100).toStringAsFixed(0) + \"%\");\n    }\n  }\n\n  Future download2(Dio dio, String url, String savePath) async {\n    try {\n      Response response = await dio.get(\n        url,\n        onReceiveProgress: showDownloadProgress,\n        //Received data with List<int>\n        options: Options(\n            responseType: ResponseType.bytes,\n            followRedirects: false,\n            validateStatus: (status) {\n              return status < 500;\n            }),\n      );\n      print(\"------------------${response.headers}\");\n      File file = File(savePath);\n      var raf = file.openSync(mode: FileMode.write);\n      // response.data is List<int> type\n      raf.writeFromSync(response.data);\n      await raf.close();\n    } catch (e) {\n      print(e);\n    }\n  }\n\n  //Download excel\n  downloadExcel(String excelFileUrl, String savePath) {\n    Dio dio = Dio();\n\n    dio\n        .download(\n      excelFileUrl,\n      savePath,\n      deleteOnError: true,\n    )\n        .then((value) {\n      print(\"excel downlaoded\");\n    });\n  }\n\n  actionDownload(\n    BuildContext context,\n    List<DiamondModel> list, {\n    bool isForShare = false,\n    bool isDownloadSearched = false,\n  }) {\n    List<SelectionPopupModel> downloadOptionList = List<SelectionPopupModel>();\n    List<SelectionPopupModel> selectedOptions = List<SelectionPopupModel>();\n    // downloadOptionList.add(SelectionPopupModel(\"1\", \"Excel\",\n    //     fileType: DownloadAndShareDialogueConstant.excel));\n    downloadOptionList.add(SelectionPopupModel(\"2\", \"Certificate\",\n        fileType: DownloadAndShareDialogueConstant.certificate));\n    downloadOptionList.add(SelectionPopupModel(\"3\", \"Real Image\",\n        fileType: DownloadAndShareDialogueConstant.realImage1));\n    // downloadOptionList.add(SelectionPopupModel(\"4\", \"Plotting Image\",\n    //     fileType: DownloadAndShareDialogueConstant.plottingImg));\n    downloadOptionList.add(SelectionPopupModel(\"4\", \"Heart Image\",\n        fileType: DownloadAndShareDialogueConstant.heartAndArrowImg));\n    downloadOptionList.add(SelectionPopupModel(\"5\", \"Arrow Image\",\n        fileType: DownloadAndShareDialogueConstant.arrowImg));\n    downloadOptionList.add(SelectionPopupModel(\"6\", \"Asset Scope\",\n        fileType: DownloadAndShareDialogueConstant.assetScopeImg));\n    downloadOptionList.add(SelectionPopupModel(\"7\", \"Video\",\n        fileType: DownloadAndShareDialogueConstant.video1));\n    AnalyticsReport.shared.sendAnalyticsData(\n      buildContext: context,\n      page: PageAnalytics.OFFLINE_DOWNLOAD,\n      section: SectionAnalytics.SHARE,\n      action: ActionAnalytics.OPEN,\n    );\n    print(\"++++++++++++++++${isDownloadSearched}+++++++++${isForShare}\");\n    NavigationUtilities.push(DownLoadAndShareScreen(\n      isForShare: isForShare,\n      diamondList: list,\n      title: isDownloadSearched\n          ? R.string.commonString.download\n          : R.string.screenTitle.shareStone,\n      onDownload: (selectedOptions) {\n        showDialog(\n            context: context,\n            builder: (BuildContext context) {\n              return WillPopScope(\n                onWillPop: () {\n                  return Future.value(false);\n                },\n                child: Dialog(\n                  insetPadding: EdgeInsets.symmetric(\n                      horizontal: getSize(20), vertical: getSize(20)),\n                  shape: RoundedRectangleBorder(\n                    borderRadius: BorderRadius.circular(getSize(25)),\n                  ),\n                  child: Download(\n                    allDiamondPreviewThings: selectedOptions,\n                    diamondList: list,\n                  ),\n                ),\n              );\n            });\n      },\n    ));\n//     showDialog(\n//       context: context,\n//       barrierDismissible: false,\n//       builder: (BuildContext context) {\n//         return WillPopScope(\n//           onWillPop: () {\n//             return Future.value(false);\n//           },\n//           child: Dialog(\n//             insetPadding: EdgeInsets.symmetric(\n//                 horizontal: getSize(20), vertical: getSize(5)),\n//             shape: RoundedRectangleBorder(\n//               borderRadius: BorderRadius.circular(getSize(25)),\n//             ),\n//             child: SelectionDialogue(\n//               isSearchEnable: false,\n//               title: isForShare\n//                   ? R.string.commonString.share\n//                   : R.string.commonString.download,\n//               isMultiSelectionEnable: true,\n//               positiveButtonTitle: isForShare\n//                   ? R.string.commonString.share\n//                   : R.string.commonString.download,\n//               selectionOptions: downloadOptionList,\n//               applyFilterCallBack: (\n//                   {SelectionPopupModel selectedItem,\n//                   List<SelectionPopupModel> multiSelectedItem}) {\n//                 selectedOptions = multiSelectedItem;\n//                 // Navigator.pop(context);\n//                 //check condition for only excel,if so then redirect to static page\n//                 //else show showDialog method.\n//                 if (isForShare) {\n//                   _onShare(context, list, isForShare, selectedOptions);\n//                 } else {\n//                   showDialog(\n//                       context: context,\n//                       builder: (BuildContext context) {\n//                         return WillPopScope(\n//                           onWillPop: () {\n//                             return Future.value(false);\n//                           },\n//                           child: Dialog(\n//                             insetPadding: EdgeInsets.symmetric(\n//                                 horizontal: getSize(20), vertical: getSize(20)),\n//                             shape: RoundedRectangleBorder(\n//                               borderRadius: BorderRadius.circular(getSize(25)),\n//                             ),\n//                             child: Download(\n//                               allDiamondPreviewThings: selectedOptions,\n//                               diamondList: list,\n//                             ),\n//                           ),\n//                         );\n//                       });\n//                 }\n//               },\n//             ),\n// //          child: DownLoadAndShareDialogue(\n// //            title: R.string.commonString.download,\n// //          ),\n//           ),\n//         );\n//       },\n//     );\n  }\n\n  _onShare(BuildContext context, List<DiamondModel> list, bool isForShare,\n      List<SelectionPopupModel> selectedOptions) async {\n    List<String> links = List<String>();\n\n    for (int i = 0; i < list.length; i++) {\n      DiamondModel model = list[i];\n      String diamondDetailUrl = ApiConstants.shareUrl + model.id;\n      links.add(diamondDetailUrl);\n\n      // selectedOptions.forEach((element) {\n      //   if (element.fileType == DownloadAndShareDialogueConstant.realImage1 &&\n      //       element.isSelected) {\n      //     element.url = DiamondUrls.image + model.vStnId + \"/\" + \"still.jpg\";\n      //   } else if (element.fileType ==\n      //           DownloadAndShareDialogueConstant.arrowImg &&\n      //       element.isSelected) {\n      //     element.url =\n      //         DiamondUrls.arroImage + model.vStnId + \"/\" + \"Arrow_Black_BG.jpg\";\n      //   } else if (element.fileType ==\n      //           DownloadAndShareDialogueConstant.assetScopeImg &&\n      //       element.isSelected) {\n      //     element.url = DiamondUrls.image +\n      //         model.vStnId +\n      //         \"/\" +\n      //         \"Office_Light_Black_BG.jpg\";\n      //   } else if (element.fileType ==\n      //           DownloadAndShareDialogueConstant.heartAndArrowImg &&\n      //       element.isSelected) {\n      //     element.url = DiamondUrls.heartImage +\n      //         model.vStnId +\n      //         \"/\" +\n      //         \"Heart_Black_BG.jpg\";\n      //   } else if (element.fileType ==\n      //           DownloadAndShareDialogueConstant.video1 &&\n      //       element.isSelected) {\n      //     element.url =\n      //         DiamondUrls.video + model.vStnId + \"/\" + model.vStnId + \".html\";\n      //   } else if (element.fileType ==\n      //           DownloadAndShareDialogueConstant.certificate &&\n      //       element.isSelected) {\n      //     element.url = DiamondUrls.certificate + model.rptNo + \".pdf\";\n      //   }\n      // });\n\n      // selectedOptions.forEach((element) {\n      //   if (element.isSelected &&\n      //       element.fileType != DownloadAndShareDialogueConstant.excel) {\n      //     links.add(element.url);\n      //   }\n      // });\n    }\n\n    var filter = selectedOptions\n        .where((element) =>\n            element.fileType == DownloadAndShareDialogueConstant.excel &&\n            element.isSelected == true)\n        .toList();\n    if (isNullEmptyOrFalse(filter)) {\n      shareURls(links);\n    } else {\n      SyncManager syncManager = SyncManager();\n      syncManager.callApiForExcel(context, list, isForShare: isForShare,\n          callback: (url) async {\n        links.add(\"\\nExcelFile :- \");\n        links.add(url);\n        shareURls(links);\n      });\n    }\n  }\n\n  shareURls(\n    List<String> links,\n  ) async {\n    List<String> urls = [];\n    for (int i = 0; i < links.length; i++) {\n      urls.add(links[i]);\n    }\n\n    String strUrlToShare = \"\\nDiamond Details\\n\\n\" + urls.join(\"\\n\\n\");\n\n    if (!isNullEmptyOrFalse(strUrlToShare)) {\n      await Share.share(\n        \"$APPNAME : $strUrlToShare\",\n        // subject: \"DiamNow\",\n        // sharePositionOrigin: box.localToGlobal(Offset.zero) & box.size,\n      );\n    }\n  }\n\n  actionShare(BuildContext context, List<DiamondModel> list) {\n//    _onShare(context, list);\n    showDialog(\n      context: context,\n      builder: (BuildContext context) {\n        return Dialog(\n          insetPadding: EdgeInsets.symmetric(\n              horizontal: getSize(20), vertical: getSize(20)),\n          shape: RoundedRectangleBorder(\n            borderRadius: BorderRadius.circular(getSize(25)),\n          ),\n          child: DownLoadAndShareDialogue(\n            title: R.string.commonString.share,\n            diamondList: list,\n          ),\n        );\n      },\n    );\n//    openSharePopUp(context);\n  }\n\n  actionReminder(BuildContext context, List<DiamondModel> list) {\n    openAddReminder(context, (manageClick) {\n      callApiFoCreateTrack(\n          context, list, DiamondTrackConstant.TRACK_TYPE_REMINDER,\n          date: manageClick.date);\n    });\n  }\n\n  callApiFoCreateTrack(\n      BuildContext context, List<DiamondModel> list, int trackType,\n      {bool isPop = false,\n      String remark,\n      String companyName,\n      String date,\n      String title}) {\n    Map<String, dynamic> param = {};\n\n    OfflineStockTrackModel trackModel = OfflineStockTrackModel();\n    CreateDiamondTrackReq req = CreateDiamondTrackReq();\n    switch (trackType) {\n      case DiamondTrackConstant.TRACK_TYPE_OFFER:\n        req.remarks = remark ?? \"\";\n        req.trackType = trackType;\n        param[\"remarks\"] = remark ?? \"\";\n        param[\"trackType\"] = trackType;\n        break;\n      case DiamondTrackConstant.TRACK_TYPE_CART:\n      case DiamondTrackConstant.TRACK_TYPE_ENQUIRY:\n      case DiamondTrackConstant.TRACK_TYPE_WATCH_LIST:\n      case DiamondTrackConstant.TRACK_TYPE_REMINDER:\n        req.trackType = trackType;\n        param[\"trackType\"] = trackType;\n        break;\n      case DiamondTrackConstant.TRACK_TYPE_BID:\n        req.bidType = BidConstant.BID_TYPE_ADD;\n        param[\"bidType\"] = BidConstant.BID_TYPE_ADD;\n        break;\n    }\n    req.diamonds = [];\n    Diamonds diamonds;\n\n    List<Map<String, dynamic>> arrDiamonds = [];\n    list.forEach((element) {\n      //Creating request for offline stock\n      Map<String, dynamic> reqDiamond = {};\n      reqDiamond[\"diamond\"] = element.id;\n      reqDiamond[\"trackDiscount\"] = element.back;\n      reqDiamond[\"trackAmount\"] = element.amt;\n      reqDiamond[\"trackPricePerCarat\"] = element.ctPr;\n      reqDiamond[\"newDiscount\"] = element.newDiscount;\n\n      diamonds = Diamonds(\n          diamond: element.id,\n          trackDiscount: element.back,\n          trackAmount: element.amt,\n          trackPricePerCarat: element.ctPr,\n          newDiscount: element.newDiscount);\n      switch (trackType) {\n        // case DiamondTrackConstant.TRACK_TYPE_WATCH_LIST:\n        //   diamonds.newDiscount = num.parse(element.selectedBackPer);\n        //   break;\n        case DiamondTrackConstant.TRACK_TYPE_COMMENT:\n        case DiamondTrackConstant.TRACK_TYPE_UPDATE_COMMENT:\n          diamonds.remarks = element.remarks;\n          reqDiamond[\"remarks\"] = element.remarks;\n          break;\n        case DiamondTrackConstant.TRACK_TYPE_ENQUIRY:\n          diamonds.remarks = remark;\n          reqDiamond[\"remarks\"] = remark;\n          break;\n        case DiamondTrackConstant.TRACK_TYPE_OFFER:\n          diamonds.vStnId = element.vStnId;\n          diamonds.newDiscount = num.parse(element.offeredDiscount);\n          diamonds.newAmount = element.offeredAmount;\n          diamonds.newPricePerCarat = num.parse(element.offeredPricePerCarat);\n          diamonds.offerValidDate = element.offerValidDate;\n          diamonds.validityHours = element.hours;\n\n          reqDiamond[\"vStnId\"] = element.vStnId;\n          reqDiamond[\"newDiscount\"] = num.parse(element.offeredDiscount);\n          reqDiamond[\"validityHours\"] = element.hours;\n          reqDiamond[\"offerValidDate\"] = element.offerValidDate;\n          reqDiamond[\"newAmount\"] = element.offeredAmount;\n          reqDiamond[\"newPricePerCarat\"] =\n              num.parse(element.offeredPricePerCarat);\n          // reqDiamond[\"offerValidDate\"] = date;\n          break;\n        case DiamondTrackConstant.TRACK_TYPE_BID:\n          diamonds.vStnId = element.vStnId;\n          diamonds.bidAmount = element.getBidFinalAmount();\n          diamonds.bidPricePerCarat = element.getBidFinalRate();\n          diamonds.bidDiscount = element.getbidFinalDiscount();\n\n          reqDiamond[\"vStnId\"] = element.vStnId;\n          reqDiamond[\"bidAmount\"] = element.getBidFinalAmount();\n          reqDiamond[\"bidPricePerCarat\"] = element.getBidFinalRate();\n          reqDiamond[\"bidDiscount\"] = element.getbidFinalDiscount();\n          break;\n\n        case DiamondTrackConstant.TRACK_TYPE_REMINDER:\n          diamonds.reminderDate = date;\n          reqDiamond[\"reminderDate\"] = date;\n\n          break;\n      }\n      arrDiamonds.add(reqDiamond);\n      req.diamonds.add(diamonds);\n    });\n\n    param[\"diamonds\"] = arrDiamonds;\n    param[\"uuid\"] = Uuid().v1();\n\n    trackModel.diamonds = json.encode(list);\n    trackModel.request = json.encode(param);\n    trackModel.trackType = trackType;\n    trackModel.isSync = false;\n    trackModel.strDate = DateUtilities().getFormattedDateString(DateTime.now(),\n        formatter: DateUtilities.dd_mm_yyyy_hh_mm_a);\n    trackModel.uuid = Uuid().v1();\n\n    callApiForTrackDiamonds(\n      context,\n      trackType: trackType,\n      req: req,\n      isPop: isPop,\n      trackModel: trackModel,\n      title: title,\n      arrList: list,\n    );\n  }\n\n  callApiForTrackDiamonds(\n    BuildContext context, {\n    int trackType,\n    CreateDiamondTrackReq req,\n    OfflineStockTrackModel trackModel,\n    bool isPop,\n    String title,\n    List<DiamondModel> arrList,\n  }) async {\n    var connectivityResult = await Connectivity().checkConnectivity();\n    if (connectivityResult == ConnectivityResult.none &&\n        app\n            .resolve<PrefUtils>()\n            .getModulePermission(\n                ModulePermissionConstant.permission_offline_stock)\n            .view) {\n      print(\"No connection\");\n      await AppDatabase.instance.offlineStockTracklDao\n          .addOrUpdate([trackModel]);\n\n      if (trackType == DiamondTrackConstant.TRACK_TYPE_COMMENT) {\n        app.resolve<CustomDialogs>().confirmDialog(\n              context,\n              desc: \"${arrList.length} diamond(s) added in offline comment\",\n              positiveBtnTitle: R.string.commonString.ok,\n            );\n      } else if (trackType == DiamondTrackConstant.TRACK_TYPE_REMINDER) {\n        app.resolve<CustomDialogs>().confirmDialog(\n              context,\n              desc: \"${arrList.length} diamond(s) added in offline reminder\",\n              positiveBtnTitle: R.string.commonString.ok,\n            );\n      } else if (trackType == DiamondTrackConstant.TRACK_TYPE_CART) {\n        app.resolve<CustomDialogs>().confirmDialog(\n              context,\n              desc: \"${arrList.length} diamond(s) added in offline cart\",\n              positiveBtnTitle: R.string.commonString.ok,\n            );\n      } else if (trackType == DiamondTrackConstant.TRACK_TYPE_WATCH_LIST) {\n        app.resolve<CustomDialogs>().confirmDialog(\n              context,\n              desc: \"${arrList.length} diamond(s) added in offline watchlist\",\n              positiveBtnTitle: R.string.commonString.ok,\n            );\n      } else if (trackType == DiamondTrackConstant.TRACK_TYPE_ENQUIRY) {\n        app.resolve<CustomDialogs>().confirmDialog(\n              context,\n              desc: \"${arrList.length} diamond(s) added in offline enquiry\",\n              positiveBtnTitle: R.string.commonString.ok,\n            );\n      }\n    } else {\n      SyncManager.instance.callAnalytics(\n        context,\n        page: PageAnalytics.getPageAnalyticsFromModuleType(moduleType),\n        section: SectionAnalytics.ADD,\n        action: ActionAnalytics.OPEN,\n      );\n      SyncManager.instance.callApiForCreateDiamondTrack(\n        context,\n        trackType,\n        req,\n        (resp) {\n          if (isPop) {\n            Navigator.pop(context);\n          }\n          app.resolve<CustomDialogs>().confirmDialog(context,\n              title: title,\n              desc: resp.message,\n              positiveBtnTitle: R.string.commonString.ok,\n              negativeBtnTitle: getNegativeButtonTitle(trackType),\n              onClickCallback: (type) {\n            if (type == ButtonType.NagativeButtonClick) {\n              openDiamondList(trackType);\n            }\n          });\n        },\n        (onError) {\n          if (onError.message != null) {\n            app.resolve<CustomDialogs>().confirmDialog(\n                  context,\n                  title: \"\",\n                  desc: onError.message,\n                  positiveBtnTitle: R.string.commonString.ok,\n                );\n          }\n        },\n      );\n    }\n  }\n\n  String getNegativeButtonTitle(int trackType) {\n    switch (trackType) {\n      case DiamondTrackConstant.TRACK_TYPE_WATCH_LIST:\n        return R.string.commonString.goToMyWatchList;\n\n      case DiamondTrackConstant.TRACK_TYPE_COMMENT:\n        return R.string.commonString.gotToMyComments;\n      case DiamondTrackConstant.TRACK_TYPE_ENQUIRY:\n        return R.string.commonString.gotToMyEnquiry;\n      case DiamondTrackConstant.TRACK_TYPE_OFFER:\n        return R.string.commonString.gotToMyOffer;\n      case DiamondTrackConstant.TRACK_TYPE_BID:\n        return R.string.commonString.gotToMyBid;\n\n      case DiamondTrackConstant.TRACK_TYPE_REMINDER:\n        return R.string.commonString.gotToMyReminder;\n\n      case DiamondTrackConstant.TRACK_TYPE_PLACE_ORDER:\n        return R.string.commonString.goToMyOrder;\n      default:\n        return null;\n    }\n  }\n\n  openDiamondList(int trackType) {\n    Map<String, dynamic> dict = new HashMap();\n    switch (trackType) {\n      case DiamondTrackConstant.TRACK_TYPE_WATCH_LIST:\n        dict[ArgumentConstant.ModuleType] =\n            DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST;\n        break;\n\n      case DiamondTrackConstant.TRACK_TYPE_COMMENT:\n        dict[ArgumentConstant.ModuleType] =\n            DiamondModuleConstant.MODULE_TYPE_MY_COMMENT;\n        break;\n\n      case DiamondTrackConstant.TRACK_TYPE_ENQUIRY:\n        dict[ArgumentConstant.ModuleType] =\n            DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY;\n        break;\n\n      case DiamondTrackConstant.TRACK_TYPE_OFFER:\n        dict[ArgumentConstant.ModuleType] =\n            DiamondModuleConstant.MODULE_TYPE_MY_OFFER;\n        break;\n\n      case DiamondTrackConstant.TRACK_TYPE_BID:\n        dict[ArgumentConstant.ModuleType] =\n            DiamondModuleConstant.MODULE_TYPE_MY_BID;\n        break;\n\n      case DiamondTrackConstant.TRACK_TYPE_REMINDER:\n        dict[ArgumentConstant.ModuleType] =\n            DiamondModuleConstant.MODULE_TYPE_MY_REMINDER;\n        break;\n\n      case DiamondTrackConstant.TRACK_TYPE_PLACE_ORDER:\n        dict[ArgumentConstant.ModuleType] =\n            DiamondModuleConstant.MODULE_TYPE_MY_ORDER;\n        break;\n\n      default:\n        dict[ArgumentConstant.ModuleType] =\n            DiamondModuleConstant.MODULE_TYPE_SEARCH;\n        break;\n    }\n\n    dict[ArgumentConstant.IsFromDrawer] = false;\n    if (trackType == DiamondTrackConstant.TRACK_TYPE_BID) {\n      NavigationUtilities.pushRoute(MyBidScreen.route, args: dict);\n    } else {\n      NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);\n    }\n  }\n\n  callApiForDeleteTrack(BuildContext context, List<DiamondModel> list,\n      int moduleType, Function refreshList) {\n    TrackDelReq req = TrackDelReq();\n    int trackType;\n    req.id = [];\n    list.forEach((element) {\n      switch (moduleType) {\n        case DiamondModuleConstant.MODULE_TYPE_MY_CART:\n          req.trackType = DiamondTrackConstant.TRACK_TYPE_CART;\n          req.id.add(element.trackItemCart?.trackId ?? \"\");\n          trackType = req.trackType;\n          break;\n\n        case DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST:\n          req.trackType = DiamondTrackConstant.TRACK_TYPE_WATCH_LIST;\n          req.id.add(element.trackItemWatchList?.trackId ?? \"\");\n          trackType = req.trackType;\n          break;\n        case DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY:\n          req.trackType = DiamondTrackConstant.TRACK_TYPE_ENQUIRY;\n          req.id.add(element.trackItemEnquiry?.trackId ?? \"\");\n          trackType = req.trackType;\n          break;\n        case DiamondModuleConstant.MODULE_TYPE_MY_OFFER:\n          req.trackType = DiamondTrackConstant.TRACK_TYPE_OFFER;\n          req.id.add(element.trackItemOffer?.trackId ?? \"\");\n          trackType = req.trackType;\n          break;\n        case DiamondModuleConstant.MODULE_TYPE_MY_REMINDER:\n          req.trackType = DiamondTrackConstant.TRACK_TYPE_REMINDER;\n          req.id.add(element.trackItemReminder?.trackId ?? \"\");\n          trackType = req.trackType;\n          break;\n        case DiamondModuleConstant.MODULE_TYPE_MY_COMMENT:\n          req.id.add(element.trackItemComment?.trackId ?? \"\");\n          trackType = DiamondTrackConstant.TRACK_TYPE_COMMENT;\n          break;\n        case DiamondModuleConstant.MODULE_TYPE_MY_BID:\n          req.id.add(element.trackItemBid?.trackId ?? \"\");\n          trackType = DiamondTrackConstant.TRACK_TYPE_BID;\n          break;\n      }\n    });\n\n    SyncManager.instance.callAnalytics(context,\n        page: PageAnalytics.getPageAnalyticsFromModuleType(moduleType),\n        section: SectionAnalytics.DELETE,\n        action: ActionAnalytics.LIST);\n\n    SyncManager.instance.callApiForDeleteDiamondTrack(\n      context,\n      trackType,\n      req,\n      (resp) {\n        app.resolve<CustomDialogs>().confirmDialog(context,\n            desc: resp.message, positiveBtnTitle: R.string.commonString.ok,\n            onClickCallback: (click) {\n          if (click == ButtonType.PositveButtonClick) {\n            //Navigator.pop(context);\n            refreshList();\n          }\n        });\n      },\n      (onError) {\n        if (onError.message != null) {\n          app.resolve<CustomDialogs>().confirmDialog(context,\n              desc: onError.message, positiveBtnTitle: R.string.commonString.ok,\n              onClickCallback: (click) {\n            if (click == ButtonType.PositveButtonClick) {}\n          });\n        }\n      },\n    );\n  }\n\n  callApiForDeleteOffice(\n      BuildContext context, List<DiamondModel> list, Function refreshList) {\n    var req = Map<String, dynamic>();\n    var arr = List<Map<String, dynamic>>();\n\n    for (var item in list) {\n      var mapIndex = arr.indexWhere((element) => element[\"id\"] == item.memoNo);\n      if (mapIndex < 0) {\n        var dict = Map<String, dynamic>();\n        dict[\"id\"] = item.memoNo;\n        dict[\"diamonds\"] = [item.id];\n        arr.add(dict);\n      } else {\n        arr[mapIndex]['diamonds'].add(item.id);\n      }\n    }\n    // for (var item in list) {\n    //   var dict = Map<String, dynamic>();\n    //   dict[\"id\"] = item.memoNo;\n    //   dict[\"diamonds\"] = [item.id];\n    //   arr.add(dict);\n    // }\n\n    req[\"schedule\"] = arr;\n    app.resolve<CustomDialogs>().showProgressDialog(context, \"\");\n\n    NetworkClient.getInstance.callApi(\n        context, baseURL, ApiConstants.deleteOffice, MethodType.Post,\n        params: req, headers: NetworkClient.getInstance.getAuthHeaders(),\n        successCallback: (response, message) {\n      app.resolve<CustomDialogs>().hideProgressDialog();\n      app.resolve<CustomDialogs>().confirmDialog(context,\n          desc: message,\n          positiveBtnTitle: R.string.commonString.ok, onClickCallback: (click) {\n        if (click == ButtonType.PositveButtonClick) {\n          refreshList();\n        }\n      });\n    }, failureCallback: (status, message) {\n      app.resolve<CustomDialogs>().hideProgressDialog();\n      app.resolve<CustomDialogs>().confirmDialog(context,\n          desc: message,\n          positiveBtnTitle: R.string.commonString.ok, onClickCallback: (click) {\n        if (click == ButtonType.PositveButtonClick) {}\n      });\n    });\n  }\n\n  callApiFoPlaceOrder(\n      BuildContext context, List<DiamondModel> list, Function placeOrder,\n      {bool isPop = false,\n      String remark,\n      String companyName,\n      String title,\n      String date,\n      bool isFromOffer = false}) async {\n    Map<String, dynamic> dict = {};\n    PlaceOrderReq req = PlaceOrderReq();\n    OfflineStockTrackModel trackModel = OfflineStockTrackModel();\n\n    if (isFromOffer == true) {\n      req.isFromCounterOffer = isFromOffer;\n      dict['isFromCounterOffer'] = isFromOffer;\n    }\n\n    req.company = companyName;\n    req.comment = remark;\n\n    dict[\"company\"] = companyName;\n    dict[\"comment\"] = comment;\n\n    switch (date) {\n      case InvoiceTypesString.today:\n        req.date = OrderInvoiceData.today.toString();\n        break;\n      case InvoiceTypesString.tomorrow:\n        req.date = OrderInvoiceData.tommorow.toString();\n        break;\n      case InvoiceTypesString.later:\n        req.date = OrderInvoiceData.later.toString();\n        break;\n    }\n\n    dict[\"date\"] = req.date;\n    req.diamonds = [];\n\n    List<String> arrDiamonds = [];\n    list.forEach((element) {\n      req.diamonds.add(element.id);\n      arrDiamonds.add(element.id);\n    });\n\n    dict[\"diamonds\"] = arrDiamonds;\n\n    trackModel.diamonds = json.encode(list);\n    trackModel.request = json.encode(dict);\n    trackModel.trackType = DiamondTrackConstant.TRACK_TYPE_PLACE_ORDER;\n    trackModel.isSync = false;\n    trackModel.strDate = DateUtilities().getFormattedDateString(DateTime.now(),\n        formatter: DateUtilities.dd_mm_yyyy_hh_mm_a);\n    trackModel.uuid = Uuid().v1();\n\n    var connectivityResult = await Connectivity().checkConnectivity();\n    if (connectivityResult == ConnectivityResult.none &&\n        app\n            .resolve<PrefUtils>()\n            .getModulePermission(\n                ModulePermissionConstant.permission_offline_stock)\n            .view) {\n      print(\"No connection\");\n      await AppDatabase.instance.offlineStockTracklDao\n          .addOrUpdate([trackModel]);\n      app.resolve<CustomDialogs>().confirmDialog(\n            context,\n            desc:\n                \"${list.length} diamond(s) order placed offline, When you connect with internet. Your order will placed\",\n            positiveBtnTitle: R.string.commonString.ok,\n          );\n    } else {\n      SyncManager.instance.callApiForPlaceOrder(\n        context,\n        req,\n        (resp) {\n          app.resolve<CustomDialogs>().confirmDialog(context,\n              barrierDismissible: true,\n              title: \"\",\n              desc: resp.message,\n              positiveBtnTitle: R.string.commonString.ok,\n              onClickCallback: (buttonType) {\n            if (buttonType == ButtonType.PositveButtonClick) {\n              placeOrder();\n            }\n          });\n        },\n        (onError) {\n          if (onError.message != null) {\n            app.resolve<CustomDialogs>().confirmDialog(\n                  context,\n                  barrierDismissible: true,\n                  title: \"\",\n                  desc: onError.message,\n                  positiveBtnTitle: R.string.commonString.ok,\n                );\n          }\n        },\n      );\n    }\n  }\n\n  callApiForBlock(BuildContext context, List<DiamondModel> list,\n      Function(TrackBlockData) success,\n      {bool isProgress = false}) {\n    TrackDataReq req =\n        TrackDataReq(blockType: [DiamondBlockType.HOLD, DiamondBlockType.MEMO]);\n    SyncManager.instance.callApiForBlock(context, req, (resp) {\n      trackBlockData = resp.data;\n      setBlockDetail(resp.data, list, success);\n    }, (onError) {}, isProgress: isProgress);\n  }\n\n  setBlockDetail(TrackBlockData trackBlockData, List<DiamondModel> list,\n      Function(TrackBlockData) success) {\n    for (int i = 0; i < list.length; i++) {\n      trackBlockData.inTrackDiamonds.forEach((element) {\n        element.diamonds.forEach((diamond) {\n          if (list[i].id == diamond.id)\n            switch (element.iId) {\n              case DiamondTrackConstant.TRACK_TYPE_CART:\n                list[i].trackItemCart = diamond;\n                break;\n              case DiamondTrackConstant.TRACK_TYPE_WATCH_LIST:\n                list[i].trackItemWatchList = diamond;\n                break;\n              case DiamondTrackConstant.TRACK_TYPE_ENQUIRY:\n                list[i].trackItemEnquiry = diamond;\n                break;\n              case DiamondTrackConstant.TRACK_TYPE_OFFER:\n                list[i].trackItemOffer = diamond;\n                break;\n              case DiamondTrackConstant.TRACK_TYPE_REMINDER:\n                list[i].trackItemReminder = diamond;\n                break;\n              case DiamondTrackConstant.TRACK_TYPE_COMMENT:\n                list[i].trackItemComment = diamond;\n                break;\n              case DiamondTrackConstant.TRACK_TYPE_BID:\n                list[i].trackItemBid = diamond;\n                break;\n            }\n        });\n      });\n    }\n    success(trackBlockData);\n  }\n\n  List<Map<String, dynamic>> getExclusiveDiamondReq() {\n    List<Map<String, dynamic>> caratRequest = [];\n    Map<String, dynamic> mainDic = Map<String, dynamic>();\n    Map<String, dynamic> dict = Map<String, dynamic>();\n    dict[\">=\"] = \"5.0\";\n    dict[\"<=\"] = \"5.99\";\n    mainDic[\"crt\"] = dict;\n    caratRequest.add(mainDic);\n    Map<String, dynamic> mainDic1 = Map<String, dynamic>();\n    Map<String, dynamic> dict1 = Map<String, dynamic>();\n    dict1[\">=\"] = \"6.0\";\n    dict1[\"<=\"] = \"9.99\";\n    mainDic1[\"crt\"] = dict1;\n    caratRequest.add(mainDic1);\n    Map<String, dynamic> mainDic2 = Map<String, dynamic>();\n    Map<String, dynamic> dict2 = Map<String, dynamic>();\n    dict2[\">=\"] = \"10.0\";\n    dict2[\"<=\"] = \"19.99\";\n    mainDic2[\"crt\"] = dict2;\n    caratRequest.add(mainDic2);\n    Map<String, dynamic> mainDic3 = Map<String, dynamic>();\n    Map<String, dynamic> dict3 = Map<String, dynamic>();\n    dict3[\">=\"] = \"20.0\";\n    dict3[\"<=\"] = \"100\";\n    mainDic3[\"crt\"] = dict3;\n    caratRequest.add(mainDic3);\n    return caratRequest;\n  }\n\n  void setMatchPairItem(List<DiamondModel> arraDiamond,\n      {bool isLayoutSearch = false}) {\n    if (isLayoutSearch) {\n      DiamondModel diamondItem;\n      if (arraDiamond.length == 1) {\n        diamondItem = arraDiamond[0];\n        if (diamondItem.layoutNo == null) {\n          diamondItem.layoutNo = \"\";\n        }\n        diamondItem.isMatchPair = true;\n        diamondItem.borderType = BorderConstant.BORDER_NONE;\n        diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n        diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n      } else {\n        for (int i = 0; i < arraDiamond.length; i++) {\n          diamondItem = arraDiamond[i];\n          if (diamondItem.layoutNo == null) {\n            diamondItem.layoutNo = \"\";\n          }\n          diamondItem.isMatchPair = true;\n          if (i == 0) {\n            if (arraDiamond[i + 1].layoutNo != diamondItem.layoutNo) {\n              diamondItem.borderType = BorderConstant.BORDER_NONE;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            } else {\n              diamondItem.borderType = BorderConstant.BORDER_TOP;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n            }\n          } else if (i == arraDiamond.length - 1) {\n            if (arraDiamond[i - 1].layoutNo != diamondItem.layoutNo) {\n              diamondItem.borderType = BorderConstant.BORDER_NONE;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            } else {\n              diamondItem.borderType = BorderConstant.BORDER_BOTTOM;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            }\n          } else {\n            if (arraDiamond[i - 1].layoutNo != diamondItem.layoutNo &&\n                arraDiamond[i + 1].layoutNo != diamondItem.layoutNo) {\n              diamondItem.borderType = BorderConstant.BORDER_NONE;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            } else if (arraDiamond[i - 1].layoutNo != diamondItem.layoutNo) {\n              diamondItem.borderType = BorderConstant.BORDER_TOP;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n            } else if (arraDiamond[i + 1].layoutNo != diamondItem.layoutNo) {\n              diamondItem.borderType = BorderConstant.BORDER_BOTTOM;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            } else {\n              diamondItem.borderType = BorderConstant.BORDER_LEFT_RIGHT;\n            }\n          }\n        }\n      }\n    } else if (moduleType == DiamondModuleConstant.MODULE_TYPE_MY_OFFER) {\n      for (int i = 0; i < arraDiamond.length; i++) {\n        if (i == 0 || (arraDiamond[i].memoNo != arraDiamond[i - 1].memoNo)) {\n          arraDiamond[i].displayTitle = \"#${arraDiamond[i].memoNo}\";\n          arraDiamond[i].displayDesc = DateUtilities()\n              .convertServerDateToFormatterString(arraDiamond[i].createdAt,\n                  formatter: DateUtilities.dd_mm_yyyy_);\n          arraDiamond[i].showCheckBox = true;\n        }\n\n        /*if (arraDiamond.length == 1) {\n          arraDiamond[i].isSectionOfferDisplay = true;\n        } else if (i > 0 &&\n            (arraDiamond[i].memoNo != arraDiamond[i - 1].memoNo)) {\n          arraDiamond[i - 1].isSectionOfferDisplay = true;\n        }\n        if (i == arraDiamond.length - 1) {\n          arraDiamond[i].isSectionOfferDisplay = true;\n        }\n        arraDiamond[i].isGrouping = true;*/\n      }\n    } else if (moduleType == DiamondModuleConstant.MODULE_TYPE_MY_OFFICE) {\n      for (int i = 0; i < arraDiamond.length; i++) {\n        if (i == 0 || (arraDiamond[i].memoNo != arraDiamond[i - 1].memoNo)) {\n          arraDiamond[i].displayTitle = \"#${arraDiamond[i].memoNo}\";\n          arraDiamond[i].displayDesc = DateUtilities()\n              .convertServerDateToFormatterString(arraDiamond[i].createdAt,\n                  formatter: DateUtilities.dd_mm_yyyy_hh_mm_ss);\n          arraDiamond[i].showCheckBox = true;\n        }\n\n        if (arraDiamond.length == 1) {\n          arraDiamond[i].isSectionOfferDisplay = true;\n        } else if (i > 0 &&\n            (arraDiamond[i].memoNo != arraDiamond[i - 1].memoNo)) {\n          arraDiamond[i - 1].isSectionOfferDisplay = true;\n        }\n        if (i == arraDiamond.length - 1) {\n          arraDiamond[i].isSectionOfferDisplay = true;\n        }\n        arraDiamond[i].isGrouping = true;\n      }\n    }\n    /*else if (moduleType == DiamondModuleConstant.MODULE_TYPE_UPCOMING) {\n      for (int i = 0; i < arraDiamond.length; i++) {\n        if (i == 0 || (arraDiamond[i].inDt != arraDiamond[i - 1].inDt)) {\n          arraDiamond[i].displayTitle = DateUtilities()\n              .convertServerDateToFormatterString(arraDiamond[i].inDt,\n                  formatter: DateUtilities.dd_mm_yyyy);\n        }\n      }\n    } */\n    else if (moduleType == DiamondModuleConstant.MODULE_TYPE_MATCH_PAIR) {\n      DiamondModel diamondItem;\n      if (arraDiamond.length == 1) {\n        diamondItem = arraDiamond[0];\n        diamondItem.isMatchPair = true;\n        diamondItem.borderType = BorderConstant.BORDER_NONE;\n        diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n        diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n      } else {\n        for (int i = 0; i < arraDiamond.length; i++) {\n          diamondItem = arraDiamond[i];\n          diamondItem.isMatchPair = true;\n          if (i == 0) {\n            if (arraDiamond[i + 1].groupNo > diamondItem.groupNo) {\n              diamondItem.borderType = BorderConstant.BORDER_NONE;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            } else {\n              diamondItem.borderType = BorderConstant.BORDER_TOP;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n            }\n          } else if (i == arraDiamond.length - 1) {\n            if (arraDiamond[i - 1].groupNo < diamondItem.groupNo) {\n              diamondItem.borderType = BorderConstant.BORDER_NONE;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            } else {\n              diamondItem.borderType = BorderConstant.BORDER_BOTTOM;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            }\n          } else {\n            if (arraDiamond[i - 1].groupNo < diamondItem.groupNo &&\n                arraDiamond[i + 1].groupNo > diamondItem.groupNo) {\n              diamondItem.borderType = BorderConstant.BORDER_NONE;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            } else if (arraDiamond[i - 1].groupNo < diamondItem.groupNo) {\n              diamondItem.borderType = BorderConstant.BORDER_TOP;\n              diamondItem.marginTop = BorderConstant.BORDER_MARGIN;\n            } else if (arraDiamond[i + 1].groupNo > diamondItem.groupNo) {\n              diamondItem.borderType = BorderConstant.BORDER_BOTTOM;\n              diamondItem.marginBottom = BorderConstant.BORDER_MARGIN;\n            } else {\n              diamondItem.borderType = BorderConstant.BORDER_LEFT_RIGHT;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getLinks(List<String> link) {\n    link.forEach((element) {\n      return element.split(\",\");\n    });\n  }\n}\n\nRoundedBorderPainter getPaintingType(BuildContext context, int type) {\n  switch (type) {\n    case BorderConstant.BORDER_TOP:\n      return RoundedBorderPainter(\n        topRadius: 6,\n        bottomRadius: 0,\n        strokeWidth: 1,\n        bottomBorderColor: Colors.transparent,\n        leftBorderColor: appTheme.colorPrimary,\n        rightBorderColor: appTheme.colorPrimary,\n        topBorderColor: appTheme.colorPrimary,\n      );\n\n    case BorderConstant.BORDER_BOTTOM:\n      return RoundedBorderPainter(\n        topRadius: 0,\n        bottomRadius: 6,\n        strokeWidth: 1,\n        bottomBorderColor: appTheme.colorPrimary,\n        leftBorderColor: appTheme.colorPrimary,\n        rightBorderColor: appTheme.colorPrimary,\n        topBorderColor: Colors.transparent,\n      );\n\n    case BorderConstant.BORDER_LEFT_RIGHT:\n      return RoundedBorderPainter(\n        topRadius: 0,\n        bottomRadius: 0,\n        strokeWidth: 1,\n        bottomBorderColor: Colors.transparent,\n        leftBorderColor: appTheme.colorPrimary,\n        rightBorderColor: appTheme.colorPrimary,\n        topBorderColor: Colors.transparent,\n      );\n\n    case BorderConstant.BORDER_NONE:\n      return RoundedBorderPainter(\n        topRadius: 6,\n        bottomRadius: 6,\n        strokeWidth: 1,\n        bottomBorderColor: appTheme.colorPrimary,\n        leftBorderColor: appTheme.colorPrimary,\n        rightBorderColor: appTheme.colorPrimary,\n        topBorderColor: appTheme.colorPrimary,\n      );\n\n    default:\n      return RoundedBorderPainter(\n        topRadius: 0,\n        bottomRadius: 0,\n        strokeWidth: 1,\n        bottomBorderColor: Colors.transparent,\n        leftBorderColor: Colors.transparent,\n        rightBorderColor: Colors.transparent,\n        topBorderColor: Colors.transparent,\n      );\n  }\n}\n\nopenSharePopUp(BuildContext context) {\n  List<StoneModel> stoneList = [\n    StoneModel(1, \"Stock\"),\n    StoneModel(2, \"Cerificate\"),\n    StoneModel(3, \"Real Image\"),\n    StoneModel(4, \"Plotting Image\"),\n    StoneModel(5, \"Heart & Arrow\"),\n    StoneModel(6, \"Asset Scope\"),\n    StoneModel(7, \"Video\"),\n  ];\n\n  Future<void> share() async {\n    // var url = await createDynamicLink(\n    //     referalId: PrefUtilities.getInstance().getUser().referralCode);\n\n    var link = ApiConstants.shareAndEarn;\n    Share.share(\n        \"876654878\\n\"\n        \"Invite code : 655765757\"\n        \"App link : $link\",\n        subject: R.string.screenTitle.share,\n        sharePositionOrigin:\n            Rect.fromCenter(center: Offset.zero, width: 100, height: 100));\n  }\n\n  return showDialog(\n      context: context,\n      builder: (context) {\n        return Dialog(\n          child: StatefulBuilder(\n            builder: (context, StateSetter setsetter) {\n              return Padding(\n                padding: EdgeInsets.all(getSize(10)),\n                child: Column(\n                  mainAxisSize: MainAxisSize.min,\n                  children: [\n                    Text(\n                      R.string.screenTitle.shareStone,\n                      style: appTheme.black16TextStyle,\n                    ),\n                    ListView.builder(\n                      shrinkWrap: true,\n                      itemCount: stoneList.length,\n                      itemBuilder: (context, i) {\n                        return InkWell(\n                          onTap: () {\n                            setsetter(() {\n                              stoneList[i].isSelected =\n                                  !stoneList[i].isSelected;\n                            });\n                          },\n                          child: Padding(\n                            padding: EdgeInsets.only(\n                                left: getSize(20), bottom: getSize(10)),\n                            child: Row(\n                              children: [\n                                Image.asset(\n                                  stoneList[i].isSelected\n                                      ? selectedCheckbox\n                                      : unSelectedCheckbox,\n                                  height: getSize(20),\n                                  width: getSize(20),\n                                ),\n                                Padding(\n                                  padding: EdgeInsets.only(left: getSize(10)),\n                                  child: Text(\n                                    stoneList[i].title,\n                                    style: appTheme.black14TextStyle,\n                                  ),\n                                ),\n                              ],\n                            ),\n                          ),\n                        );\n                      },\n                    ),\n                    Row(\n                      children: [\n                        Expanded(\n                          child: InkWell(\n                            onTap: () {\n                              Navigator.pop(context);\n                            },\n                            child: Container(\n                              // alignment: Alignment.bottomCenter,\n                              padding: EdgeInsets.symmetric(\n                                vertical: getSize(15),\n                              ),\n                              decoration: BoxDecoration(\n                                border: Border.all(\n                                    color: appTheme.colorPrimary,\n                                    width: getSize(1)),\n                                borderRadius: BorderRadius.circular(getSize(5)),\n                              ),\n                              child: Text(\n                                R.string.commonString.cancel,\n                                textAlign: TextAlign.center,\n                                style: appTheme.blue14TextStyle\n                                    .copyWith(fontSize: getFontSize(16)),\n                              ),\n                            ),\n                          ),\n                        ),\n                        SizedBox(\n                          width: getSize(20),\n                        ),\n                        Expanded(\n                          child: InkWell(\n                            onTap: () {},\n                            child: Container(\n                              //alignment: Alignment.bottomCenter,\n                              padding: EdgeInsets.symmetric(\n                                vertical: getSize(15),\n                              ),\n                              decoration: BoxDecoration(\n                                  color: appTheme.colorPrimary,\n                                  borderRadius:\n                                      BorderRadius.circular(getSize(5)),\n                                  boxShadow: getBoxShadow(context)),\n                              child: Text(\n                                R.string.screenTitle.share,\n                                textAlign: TextAlign.center,\n                                style: appTheme.white16TextStyle,\n                              ),\n                            ),\n                          ),\n                        )\n                      ],\n                    )\n                  ],\n                ),\n              );\n            },\n          ),\n        );\n      });\n}\n\nopenAddReminder(BuildContext context, ActionClick actionClick) {\n  DateUtilities dateUtilities = DateUtilities();\n  List<StoneModel> reminderList = [\n    StoneModel(ReminderType.ReminderTypeToday, R.string.commonString.laterToday,\n        subtitle: \"6:00 pm\", image: sunrise),\n    StoneModel(\n        ReminderType.ReminderTypeTomorrow, R.string.commonString.toMorrow,\n        subtitle: \" ${dateUtilities.getTomorrowDay(DateTime.now())} 8:00 am\",\n        image: sun),\n    StoneModel(\n        ReminderType.ReminderTypeNextWeek, R.string.commonString.nextWeek,\n        subtitle: \"${dateUtilities.getNextWeekDay(DateTime.now())} 8:00 am\",\n        image: calender_week),\n    StoneModel(\n        ReminderType.ReminderTypeCustom, R.string.commonString.chooseAnother,\n        subtitle: R.string.commonString.dateTime, image: calender),\n  ];\n  return showDialog(\n    context: context,\n    builder: (context) {\n      return Dialog(\n        insetPadding: EdgeInsets.symmetric(\n            horizontal: getSize(20), vertical: getSize(20)),\n        // contentPadding: EdgeInsets.zero,\n        shape: RoundedRectangleBorder(\n          borderRadius: BorderRadius.circular(getSize(15)),\n        ),\n        backgroundColor: appTheme.whiteColor,\n        child: StatefulBuilder(\n          builder: (BuildContext context, StateSetter setState) {\n            return Padding(\n              padding: EdgeInsets.only(top: getSize(30), bottom: getSize(20)),\n              child: Column(\n                mainAxisSize: MainAxisSize.min,\n                children: [\n                  Text(\n                    R.string.screenTitle.addRemider,\n                    style: appTheme.black18TextStyle,\n                  ),\n                  SizedBox(height: getSize(20)),\n                  GridView.builder(\n                      shrinkWrap: true,\n                      gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                        crossAxisCount: 2,\n                        childAspectRatio: 1.4,\n                      ),\n                      itemCount: reminderList.length,\n                      itemBuilder: (context, i) {\n                        return InkWell(\n                          onTap: () {\n                            if (reminderList[i].id !=\n                                ReminderType.ReminderTypeCustom) {\n                              reminderList.forEach((element) {\n                                element.isSelected = false;\n                              });\n                              reminderList[i].isSelected =\n                                  !reminderList[i].isSelected;\n                            } else {\n                              openDateTimeDialog(context, (manageClick) {\n                                reminderList.forEach((element) {\n                                  element.isSelected = false;\n                                  if (element.id ==\n                                      ReminderType.ReminderTypeCustom) {\n                                    element.isSelected = true;\n                                    element.selectedDate = manageClick.date;\n                                    element.subtitle = DateUtilities()\n                                        .convertServerDateToFormatterString(\n                                            element.selectedDate,\n                                            formatter: DateUtilities\n                                                .dd_mm_yyyy_hh_mm_ss);\n                                  }\n                                });\n\n                                setState(() {});\n                              });\n                            }\n                            setState(() {});\n                          },\n                          child: Padding(\n                            padding: EdgeInsets.only(top: getSize(20)),\n                            child: Column(\n                              children: [\n                                Padding(\n                                  padding: EdgeInsets.only(bottom: getSize(8)),\n                                  child: Image.asset(\n                                    reminderList[i].image,\n                                    height: getSize(40),\n                                    width: getSize(40),\n                                    color: reminderList[i].isSelected\n                                        ? appTheme.colorPrimary\n                                        : appTheme.textBlackColor,\n                                  ),\n                                ),\n                                Padding(\n                                  padding: EdgeInsets.symmetric(\n                                      vertical: getSize(5)),\n                                  child: Text(\n                                    reminderList[i].title,\n                                    style: appTheme.black16TextStyle.copyWith(\n                                      color: reminderList[i].isSelected\n                                          ? appTheme.colorPrimary\n                                          : appTheme.textBlackColor,\n                                    ),\n                                  ),\n                                ),\n                                Text(\n                                  reminderList[i].subtitle,\n                                  style: appTheme.black12TextStyle.copyWith(\n                                    color: reminderList[i].isSelected\n                                        ? appTheme.colorPrimary\n                                        : appTheme.textBlackColor,\n                                  ),\n                                ),\n                              ],\n                            ),\n                          ),\n                        );\n                      }),\n                  Padding(\n                    padding: EdgeInsets.symmetric(\n                        horizontal: getSize(Spacing.leftPadding),\n                        vertical: getSize(16)),\n                    child: Row(\n                      children: [\n                        Expanded(\n                          child: InkWell(\n                            onTap: () {\n                              Navigator.pop(context);\n                            },\n                            child: Container(\n                              // alignment: Alignment.bottomCenter,\n                              padding: EdgeInsets.symmetric(\n                                vertical: getSize(15),\n                              ),\n                              decoration: BoxDecoration(\n                                border: Border.all(\n                                    color: appTheme.colorPrimary,\n                                    width: getSize(1)),\n                                borderRadius: BorderRadius.circular(getSize(5)),\n                              ),\n                              child: Text(\n                                R.string.commonString.cancel,\n                                textAlign: TextAlign.center,\n                                style: appTheme.blue14TextStyle\n                                    .copyWith(fontSize: getFontSize(16)),\n                              ),\n                            ),\n                          ),\n                        ),\n                        SizedBox(\n                          width: getSize(20),\n                        ),\n                        Expanded(\n                          child: InkWell(\n                            onTap: () {\n                              StoneModel stoneModel;\n                              reminderList.forEach((element) {\n                                if (element.isSelected) {\n                                  stoneModel = element;\n                                }\n                              });\n                              if (stoneModel != null) {\n                                DateTime dateTime = DateTime.now();\n\n                                String date =\n                                    dateTime.toUtc().toIso8601String();\n                                switch (stoneModel.id) {\n                                  case ReminderType.ReminderTypeToday:\n                                    DateTime dt = DateTime(dateTime.year,\n                                        dateTime.month, dateTime.day, 18, 0, 0);\n                                    date = dt.toUtc().toIso8601String();\n                                    break;\n                                  case ReminderType.ReminderTypeTomorrow:\n                                    DateTime dt = DateTime(\n                                        dateTime.year,\n                                        dateTime.month,\n                                        dateTime.day + 1,\n                                        8,\n                                        0,\n                                        0);\n                                    dt.add(Duration(days: 1));\n                                    date = dt.toUtc().toIso8601String();\n                                    break;\n                                  case ReminderType.ReminderTypeNextWeek:\n                                    DateTime dt = DateTime(\n                                        dateTime.year,\n                                        dateTime.month,\n                                        dateTime.day + 7,\n                                        8,\n                                        0,\n                                        0);\n\n                                    date = dt.toUtc().toIso8601String();\n                                    break;\n                                  case ReminderType.ReminderTypeCustom:\n                                    date = stoneModel.selectedDate;\n                                    break;\n                                }\n                                Navigator.pop(context);\n                                actionClick(ManageCLick(\n                                    type: clickConstant.CLICK_TYPE_CONFIRM,\n                                    date: date));\n                              } else {}\n                            },\n                            child: Container(\n                              //alignment: Alignment.bottomCenter,\n                              padding: EdgeInsets.symmetric(\n                                vertical: getSize(15),\n                              ),\n                              decoration: BoxDecoration(\n                                  color: appTheme.colorPrimary,\n                                  borderRadius:\n                                      BorderRadius.circular(getSize(5)),\n                                  boxShadow: getBoxShadow(context)),\n                              child: Text(\n                                R.string.commonString.btnSubmit,\n                                textAlign: TextAlign.center,\n                                style: appTheme.white16TextStyle,\n                              ),\n                            ),\n                          ),\n                        )\n                      ],\n                    ),\n                  ),\n                ],\n              ),\n            );\n          },\n        ),\n      );\n    },\n  );\n}\n\nclass StoneModel {\n  int id;\n  String title;\n  String subtitle;\n  String image;\n  bool isSelected;\n  String selectedDate;\n\n  StoneModel(\n    this.id,\n    this.title, {\n    this.subtitle,\n    this.image = \"\",\n    this.isSelected = false,\n  });\n}\n\nString getPermissionFromModuleType(int moduleType) {\n  switch (moduleType) {\n    case DiamondModuleConstant.MODULE_TYPE_SEARCH:\n      return ModulePermissionConstant.permission_searchDiamond;\n    case DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL:\n      return ModulePermissionConstant.permission_newGoods;\n    case DiamondModuleConstant.MODULE_TYPE_UPCOMING:\n      return ModulePermissionConstant.permission_upcomingDiamonds;\n    case DiamondModuleConstant.MODULE_TYPE_STONE_OF_THE_DAY:\n      return ModulePermissionConstant.permission_stone_of_the_day;\n    case DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST:\n      return ModulePermissionConstant.permission_watchlist;\n    case DiamondModuleConstant.MODULE_TYPE_MY_CART:\n      return ModulePermissionConstant.permission_cart;\n    case DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY:\n      return ModulePermissionConstant.permission_enquiry;\n    case DiamondModuleConstant.MODULE_TYPE_MY_COMMENT:\n      return ModulePermissionConstant.permission_comment;\n    case DiamondModuleConstant.MODULE_TYPE_MY_REMINDER:\n      return ModulePermissionConstant.permission_reminder;\n    case DiamondModuleConstant.MODULE_TYPE_MY_ORDER:\n      return ModulePermissionConstant.permission_order;\n    case DiamondModuleConstant.MODULE_TYPE_MY_PURCHASE:\n      return ModulePermissionConstant.permission_purchase;\n    default:\n      return ModulePermissionConstant.permission_searchDiamond;\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/models/DiamondList/DiamondConfig.dart b/lib/models/DiamondList/DiamondConfig.dart
--- a/lib/models/DiamondList/DiamondConfig.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/models/DiamondList/DiamondConfig.dart	(date 1635306453246)
@@ -293,6 +293,20 @@
 
     switch (moduleType) {
       case DiamondModuleConstant.MODULE_TYPE_HOME:
+        list.add(BottomTabModel(
+            title: "",
+            image: dollarWhite,
+            color: ColorConstants.white,
+            code: BottomCodeConstant.TBCreditLimit,
+            sequence: 1,
+            isCenter: true));
+        list.add(BottomTabModel(
+            title: "",
+            image: contactUs,
+            color: ColorConstants.white,
+            code: BottomCodeConstant.TBContactUs,
+            sequence: 1,
+            isCenter: true));
         if (app
             .resolve<PrefUtils>()
             .getModulePermission(
Index: lib/app/localization/app_locales.g.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// GENERATED CODE - DO NOT MODIFY BY HAND\n\npart of 'app_locales.dart';\n\n// **************************************************************************\n// CustomLocalizationGenerator\n// **************************************************************************\n\nclass R {\n  static English get string => _getDefaultLocal();\n\n  static String _appLocale;\n\n  static Map<String, English> _supportedLocales = {\n    \"English\": English(),\n    \"Chinese\": Chinese(),\n    \"French\": French(),\n    \"JAPAN\": Japan(),\n    \"Italian\": Italian(),\n    \"Spanish\": Spanish(),\n    \"Germany\": Germany(),\n    \"Arabic\": Arabic(),\n  };\n\n  static English _getDefaultLocal() {\n    //return default strings if locale is not set\n\n    if (_appLocale == null) return English();\n\n    //throw exception to notify given local is not found or not generated by the generator\n\n    if (!_supportedLocales.containsKey(_appLocale))\n      throw Exception(\n          \"$_appLocale is not found.\\n Make sure you have added this locale in JSON file\\n Try running flutter pub run build_runner\");\n\n    //return locale from map\n\n    return _supportedLocales[_appLocale];\n  }\n\n  static void changeLocale(String newLocale) {\n    _appLocale = newLocale;\n  }\n}\n\nclass English {\n  AuthStrings authStrings = AuthStrings();\n  CommonString commonString = CommonString();\n  ErrorString errorString = ErrorString();\n  NoDataStrings noDataStrings = NoDataStrings();\n  ScreenTitle screenTitle = ScreenTitle();\n  Dynamickeys dynamickeys = Dynamickeys();\n  static String get languageCode => \"English\";\n  static String get languageName => \"English\";\n}\n\nclass AuthStrings {\n  String sendEmailForForgetPassword =\n      \"We will send an email to your entered email address. Please enter the email address.\";\n  String editCompanyInformation = \"Edit Company Information\";\n  String selectNatureOfOrganization = \"Select Nature Of Organization\";\n  String setNewPassword = \"Set your new password and sign in again.\";\n  String enterCompanyName = \"Please enter Company Name.\";\n  String pleaseEnterCustomerOTP = \"Please enter customer ride code.\";\n  String pleaseEnterPickupOTP = \"Please enter customer pickup code.\";\n  String pleaseEnterDeliveryOTP = \"Please enter customer delivery code.\";\n  String verified = \"Verified\";\n  String verify = \"Verify\";\n  String addressLineOne = \"Address\";\n  String addressLineTwo = \"Address 2\";\n  String addressLineThree = \"Address 3\";\n  String oldPassword = \"Old Password\";\n  String skype = \"Skype\";\n  String whatsApp = \"Whatsapp Number\";\n  String pinCode = \"PinCode*\";\n  String verifyMobileDesc =\n      \"Please verify mobile number to update the profile.\";\n  String verifyNow = \"Verify Now\";\n  String password = \"Password\";\n  String backToHome = \"Go to Home\";\n  String forgotPassword = \"Forgot Password?\";\n  String signInCap = \"Sign In\";\n  String moveToLogIn = \"Move to Log In\";\n  String dontHaveAnAccount = \"Don't have an account? \";\n  String clickHere = \"Click here\";\n  String signUpHere = \"Sign Up\";\n  String reset = \"Reset\";\n  String haveRegisterCode = \"Have a registration code?\";\n  String welcome = \"Welcome Back!\";\n  String signInAsGuest = \"Sign In as Guest\";\n  String editProfileTitle = \"Edit Profile\";\n  String emaillbl = \"Email\";\n  String searchInventory = \"Search product\";\n  String emailAddress = \"Email Address*\";\n  String offlineFilter =\n      \"Unable to find the desired solitaire? We can help you get the best deal from our offline inventory.\";\n  String loginDesc =\n      \"Do you want to enable Touch Id/MPin to unlock Arjiv? Please choose an option to unlock app\";\n  String searchDiamonds = \"Search diamonds\";\n  String continueWithSearch = \"Do you want to continue your search?\";\n  String mobileNumber = \"Mobile Number\";\n  String searchHint = \"Search...\";\n  String selectYourCountry = \"Select Country\";\n  String resendCodeIn = \"Resend code in\";\n  String resendCode = \"Resend\";\n  String haveAnAccount = \"Already have an account?\";\n  String dontReceiveCode = \"If you didn't receive a code!\";\n  String inLogin = \"to log in.\";\n  String resetPwdDesc =\n      \"Add password and confirm password to reset your password.\";\n  String backToLogin = \"Back to Log In\";\n  String firstName = \"First Name*\";\n  String name = \"Username*\";\n  String lastName = \"Last Name*\";\n  String middleName = \"Middle Name*\";\n  String confirmPassword = \"Confirm Password\";\n  String currentPasswordErr = \"Current Password Error\";\n  String passwordChanged = \"Password Changed\";\n  String lblLogInErr = \"Log In Error\";\n  String enterYour = \"Enter your\";\n  String details = \"Details\";\n  String registerCode = \"Registration Code\";\n  String registerCodeDesc =\n      \"Add a registration code to start your enrolment with 3eco.\";\n  String uploadPhotoDesc = \"Take a selfie of your self\";\n  String updateProfile = \"Update Profile\";\n  String postalCode = \"Postal Code*\";\n  String removeButton = \"Remove\";\n  String gender = \"Gender\";\n  String male = \"Male\";\n  String female = \"Female\";\n  String changePassword = \"Change Password\";\n  String currentPassword = \"Current Password*\";\n  String newPassword = \"New Password*\";\n  String confirmNewPassword = \"Confirm Password*\";\n  String personalDocuments = \"Personal Documents\";\n  String assignedAuto = \"Assigned Auto\";\n  String logout = \"Log Out\";\n  String logoutConfirmationMsg = \"Are you sure you want to log out?\";\n  String address = \"Address*\";\n  String addressTwo = \"Address2*\";\n  String addressThree = \"Address3\";\n  String accountNumber = \"Account Number\";\n  String bankerName = \"Bankers Name\";\n  String nameLable = \"Name\";\n  String ifscCode = \"IFSC code\";\n  String businessRegistrationNumbr = \"Business Registration Number\";\n  String businessRelationshipPeriod = \"Business Relationship Period (In Years)\";\n  String designation = \"Designation\";\n  String nameofDesignation = \"Name of\";\n  String natureofOrganization = \"Nature of Organization\";\n  String uploadFile = \"No File Choosen\";\n  String update = \"UPDATE\";\n  String resetPwd = \"Reset Password\";\n  String pwdReset = \"Password reset\";\n  String signInWithMPIN = \"Sign In with MPIN\";\n  String pwdChanged = \"Password Changed\";\n  String successfullyPwdDesc =\n      \"You have successfully reset your password. Please use your new password when logging in.\";\n  String lblProfileSetup = \"Your profile is set up\";\n  String lblProfileSetupDesc = \"We have received your profile details\";\n  String hoursAvailable = \"Total Shifttime\";\n  String confirmStoneDetail = \"Confirm Stone Detail\";\n  String companyName = \"Company Name\";\n  String invoiceDate = \"Invoice Date\";\n  String companyCode = \"Company Code\";\n  String saveCompanyDetails = \"Save Company Details\";\n  String passwordNotChange = \"Password does not match\";\n  String rememberPassword = \"Remember Password?\";\n  String sendOTP = \"Send OTP\";\n  String resendNow = \"Resend Now\";\n  String didNotReceiveOTP = \"If you didn't receive an OTP!\";\n  String sendOTPToEmail =\n      \"We will send an OTP to your entered email address or user name. Please enter the email address or user name.\";\n  String enterOTP =\n      \"The OTP has been sent to your registered Email address. Please enter the OTP.\";\n  String backToSignIn = \"Back to Sign In\";\n  String passwordResetSuccessfully = \"Password reset successfully.\";\n  String emailAndUname = \"Email/UserName\";\n  String signUp = \"Sign Up\";\n  String promotionText = \"Promotional offers, newsletters and stock update\";\n  String termsAndCondition = \"Terms and Condition\";\n  String mustAgreeTermsAndCondition =\n      \"You must agree to terms and condition to Sign In as Guest User\";\n  String forgotPasswordTitle = \"Forgot Password\";\n  String uploadKYC = \"Upload KYC\";\n  String uploadKycDesc =\n      \"Please upload your KYC documents to access full features.\";\n  String hintPhotoIdentityProof = \"Photo Identity Proof*\";\n  String hintBussinerssProof = \"Business Identity Proof*\";\n  String btnFileUpload = \"File Upload\";\n  String pleaseUploadPhotoProof = \"Please upload Photo Identity Proof.\";\n  String pleaseUploadBussinessProof = \"Please upload Business Identity Proof.\";\n  String pleaseSelectFileFormat =\n      \"Please upload file in any of following formats : .jpg\";\n  String kycSubmitted = \"KYC Submitted\";\n  String kycSubmmittedDesc = \"Your KYC has been submitted successfully.\";\n  String btnMoveToHome = \"Move to Home\";\n  String kYCRejected = \"KYC Rejected\";\n  String kycRejectedDesc =\n      \"Your KYC has been rejected. Please upload your KYC documents again to access all features.\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass CommonString {\n  String seeMore = \"See More\";\n  String seeLess = \"See Less\";\n  String modify = \"Modify\";\n  String delete = \"Delete\";\n  String details = \"Details\";\n  String edit = \"Edit\";\n  String addDemand = \"Add Demand/Order Request\";\n  String demandTitle = \"Demand Title\";\n  String pleaseEnterDemandTitle = \"Please enter Demand Title\";\n  String demandAddedSuccessfully =\n      \"Your new demand request has been submitted successfully\";\n  String demandadded = \"Demand added\";\n  String selectAtleastOneFilter = \"Please\";\n  String savedSearch = \"Saved Search\";\n  String searchSavedSearch = \"Search Saved Search\";\n  String viewDetails = \"View Details\";\n  String viewLessDetails = \"View Less Details\";\n  String myDemand = \"My Demand\";\n  String date = \"Date\";\n  String selectTime = \"Select Time\";\n  String selectDate = \"Select Date\";\n  String offerVelidTill = \"Offer Valid Till\";\n  String officeVisitDate = \"Office Visit Date\";\n  String all = \"All\";\n  String status = \"Status\";\n  String save = \"Save\";\n  String verify = \"Verify\";\n  String readMore = \"Read More\";\n  String goodMorning = \"Good Morning\";\n  String goodAfternoon = \"Good Afternoon\";\n  String goodEvening = \"Good Evening\";\n  String btnSkip = \"Skip\";\n  String btnUpdate = \"Update\";\n  String btnContinue = \"Continue\";\n  String btnContinueCap = \"CONTINUE\";\n  String btnEdit = \"Edit\";\n  String btnSubmit = \"Submit\";\n  String btnNextCap = \"Next\";\n  String btnSaveCap = \"Update Password\";\n  String btnWithdrawCap = \"WITHDRAW\";\n  String btnSaveAndContinueCap = \"SAVE & CONTINUE\";\n  String btnUnregister = \"Unregistered Mobile\";\n  String btnClose = \"Close\";\n  String remove = \"Remove\";\n  String refresh = \"Refresh\";\n  String fetchLocationMessage = \"Please wait we are fetching your location\";\n  String done = \"Done\";\n  String doneCap = \"DONE\";\n  String cancel = \"Cancel\";\n  String allow = \"Allow\";\n  String countryFirst = \"Please Select Country First\";\n  String apply = \"Apply\";\n  String cancelCap = \"CANCEL\";\n  String uploadCap = \"UPLOAD\";\n  String yesCancelCap = \"YES\";\n  String upload = \"Upload\";\n  String ok = \"Ok\";\n  String home = \"Home\";\n  String goToMyWatchList = \"Go to My Watchlist\";\n  String goToMyOrder = \"Go to My Order\";\n  String gotToMyOffer = \"Go to My Offer\";\n  String gotToMyHold = \"Go to My Hold\";\n  String gotToMyEnquiry = \"Go to My Enquiry\";\n  String gotToMyBid = \"Go to My Bid\";\n  String gotToMyReminder = \"Go to My Reminder\";\n  String gotToMyComments = \"Go to My Notes\";\n  String yes = \"Yes\";\n  String no = \"No\";\n  String selectCountry = \"Select Country\";\n  String clickHere = \"Click Here\";\n  String btnAddNewAddress = \"ADD NEW ADDRESS\";\n  String btnCancel = \"CANCEL\";\n  String btnTakeSelfie = \"Take Selfie\";\n  String successfully = \"Successfully\";\n  String lblAppExit = \"Are you sure you want to exit?\";\n  String lblExit = \"Exit\";\n  String openAppSetting = \"Open Settings\";\n  String lblOr = \"Or\";\n  String fromLbl = \"From\";\n  String toLbl = \"To\";\n  String showMore = \"Show More\";\n  String showLess = \"Show Less\";\n  String selectCity = \"Select City\";\n  String notYetAvailable = \"Not yet available\";\n  String updateAvailable = \"Update Available!\";\n  String downloadAppFrom = \"Download application update from\";\n  String playStore = \"Play Store\";\n  String skipUpdate = \"Skip Update\";\n  String stateFirst = \"Please Select State First\";\n  String reallyExit = \"Really exit?\";\n  String alert = \"Alert!\";\n  String loading = \"Loading\";\n  String error = \"Error\";\n  String jumpToTop = \"Jump to top\";\n  String ihaveread = \"I have read and accept\";\n  String selected = \"Select\";\n  String lbllogout = \"Log Out\";\n  String lblThanx = \"Thank you\";\n  String lblSelectCity = \"Select City\";\n  String lblSelectState = \"Select State\";\n  String lblSelectCountry = \"Select Country\";\n  String lblCity = \"City\";\n  String lblCountry = \"Country\";\n  String lblName = \"Name\";\n  String lblPinCode = \"Zip Code\";\n  String lblMobileNumber = \"Mobile Number\";\n  String lblState = \"State\";\n  String lblCode = \"Code:\";\n  String lblFaxNumber = \"Fax Number\";\n  String lblOrderNo = \"Order No:\";\n  String lblOrderItem = \"Order Item:\";\n  String lblDelivered = \"Delivered\";\n  String lblTicketReady = \"Your ticket is ready\";\n  String lblPersonTicket = \"Ticket of 2 person\";\n  String lblShuttleBus = \"Shuttle Bus\";\n  String lblPickup = \"Pickup\";\n  String lblDropoff = \"Dropoff\";\n  String lblPassenger = \"Passenger\";\n  String lblDeliveryNo = \"Delivery No.\";\n  String lblPrice = \"Price\";\n  String lblValid = \"Valid For\";\n  String lblRenew = \"Renew\";\n  String lblDeparture = \"Departure\";\n  String lblArrived = \"Arrived\";\n  String lblSendtoFriend = \"Send to friend\";\n  String popupRenewTitle = \"Renew ticket\";\n  String popupRenewDesc = \"Lorem ipsum dolor sit amet\";\n  String popuplblPassenger = \"Passenger\";\n  String popuplblCancel = \"Cancel\";\n  String popupbtnRenew = \"Renew\";\n  String ridelblAwesome = \"Awesome\";\n  String ridebtnDone = \"Done\";\n  String offerPricePerCarat = \"Offered Price (Cts)\";\n  String dropOffText = \"Dropoff\";\n  String pickUpText = \"Pickup\";\n  String startAtText = \"Start at\";\n  String endAtText = \"End at\";\n  String personText = \"person\";\n  String paymentScreenTitle = \"Payment\";\n  String pickuplbl = \"Pickup\";\n  String droplbl = \"Dropoff\";\n  String makePaymentButtonlbl = \"Make payment\";\n  String pessangerslbl = \"Passengers\";\n  String priceBreakuplbl = \"Price Breakup\";\n  String tripPricelbl = \"Trip Price\";\n  String taxeslbl = \"Taxes\";\n  String totallbl = \"Total\";\n  String cardNumberhint = \"Card Number\";\n  String cvvhint = \"CVV\";\n  String datehint = \"MM/YY\";\n  String btnTryAgain = \"Try Again\";\n  String cityFirst = \"Please select city first\";\n  String enterFareDetails = \"Enter Sales Details\";\n  String fromDate = \"From Date\";\n  String toDate = \"Selected Date\";\n  String btnUnderstand = \"I Understand\";\n  String applicationUpdate = \"Application Update\";\n  String newVersionMessage = \"A new version of application is available\";\n  String paymentCollected = \"Payment Collected\";\n  String addComment = \"Add a note\";\n  String more = \"More\";\n  String carat = \"Carat\";\n  String pcs = \"Pcs\";\n  String cts = \"Cts\";\n  String disc = \"Disc %\";\n  String avgPriceCrt = \"Avg. Price/Ct\";\n  String amount = \"Amount\";\n  String confirmStone = \"Confirm Stone\";\n  String confirm = \"Confirm\";\n  String offered = \"Offered\";\n  String validTill = \"Valid till\";\n  String remark = \"Remark\";\n  String color = \"Color\";\n  String colorGroup = \"Color Group\";\n  String colorFancy = \"Fancy\";\n  String colorWhite = \"White\";\n  String clarity = \"Clarity\";\n  String clarityGroup = \"Clarity Group\";\n  String intensity = \"Intensity\";\n  String overtone = \"Overtone\";\n  String selectBusinessType = \"Select Business Type\";\n  String selectState = \"Select State\";\n  String search = \"Search\";\n  String profile = \"My Profile\";\n  String personal = \"Personal\";\n  String business = \"Business\";\n  String documents = \"Documents\";\n  String noSlotFound = \"No slots found\";\n  String noDiamondFound =\n      \"No Diamonds matching your search. Please add you demand.\";\n  String selectType = \"Select Virtual Type\";\n  String noSavedSearch = \"No Saved Search Exists\";\n  String searchCity = \"Search city\";\n  String searchCountry = \"Search Country\";\n  String searchState = \"Search state\";\n  String notifications = \"Notification\";\n  String enter2Stone = \"Please select at least 2 stone to compare.\";\n  String bidDesc =\n      \"is currently located in India and for delivery in any other country apart from india will take at least 7-10 working days.\";\n  String packetNo = \"Packet No:\";\n  String quit = \"Quit\";\n  String agree = \"I Agree\";\n  String laterToday = \"Later today\";\n  String later = \"Later\";\n  String toMorrow = \"Tomorrow\";\n  String nextWeek = \"Next week\";\n  String chooseAnother = \"Choose another\";\n  String dateTime = \"Date & time\";\n  String language = \"Language\";\n  String diamNow = \"DiamNow\";\n  String noDocument = \"No Documents Found\";\n  String searchBusinessType = \"Search Business Type\";\n  String hours = \"Hours\";\n  String hrs = \"hrs\";\n  String min = \"min\";\n  String sec = \"sec\";\n  String offerExpired = \"Offer Expired\";\n  String minutes = \"Minutes\";\n  String seconds = \"Seconds\";\n  String bidEndsIn = \"Bid ends in:\";\n  String shape = \"Shape\";\n  String download = \"Download\";\n  String share = \"Share\";\n  String placeOrder = \"Place order\";\n  String diamond250 = \">250 stone Found.\";\n  String narrowSearch = \"Please narrow your search criteria.\";\n  String enterComment = \"Please Enter Note\";\n  String deleteItem = \"Are you sure you want to delete?\";\n  String shippingPolicy = \"Shipping Policy\";\n  String offerSundayRestriction =\n      \"Sunday is not allowed. Office working days are Monday to Saturday\";\n  String weekAgo = \"1 week ago\";\n  String lastWeek = \"Last Week\";\n  String dayAgo = \"days ago\";\n  String onedayAgo = \"1 day ago\";\n  String yesterday = \"Yesterday\";\n  String hourAgo = \"hours ago\";\n  String onehourAgo = \"1 hour ago\";\n  String anhourAgo = \"An hour ago\";\n  String mintuesAgo = \"minutes ago\";\n  String onemintuesAgo = \"1 minute ago\";\n  String amintueAgo = \"A minute ago\";\n  String secondsAgo = \"seconds ago\";\n  String justNow = \"Just Now\";\n  String today = \"Today\";\n  String past = \"Past\";\n  String selectPhotoProof = \"Select document\";\n  String pleaseSelectPhotoProof = \"Please select document\";\n  String selectBusinessProof = \"Select document\";\n  String pleaseSelectBusinessProof = \"Please select document\";\n  String touchId = \"Touch Id\";\n  String faceId = \"Face Id\";\n  String enableTouchId = \"Enable Touch Id to unlock Arjiv?\";\n  String enableFaceId = \"Enable Face Id to unlock Arjiv?\";\n  String unlockWithTouchId = \"Unlock Arjiv using Touch Id\";\n  String unlockWithFaceId = \"Unlock Arjiv using Face Id.\";\n  String mPin = \"MPin\";\n  String holdMemoStatusDiamondOrder =\n      \"You can not confirmed stones which are already in hold or memo status\";\n  String holdMemoStatusDiamondOffer =\n      \"You can not make an offer for a stones which are already in hold or memo status\";\n  String holdMemoStatusDiamondAddToCart =\n      \"You can not add stones to cart which are already in hold or memo status\";\n  String holdMemoStatusDiamondMoreActions =\n      \"You can not perform any action on stones which are already in hold or memo status\";\n  String searchStoneIdCertificateNo = \"Search Stone Id/Certificate No\";\n  String createMPin = \"Create New MPin\";\n  String reentermpin = \"Reenter MPin\";\n  String forgotmpin = \"Forgot MPIN?\";\n  String verifympin = \"Verify Mpin\";\n  String enteryoursixdigitcode = \"Enter your 6 digit MPIN\";\n  String changempin = \"Change MPin\";\n  String faceidandtouchnotenable =\n      \"FaceId/TouchId is not enabled in your phone, Please enable to use this feature\";\n  String enablempintounlockmydiamonds =\n      \"Enable MPin to unlock app? It will disable Touch Id. Are you sure you want to continue?\";\n  String enabletouchidtounlockmydiamonds =\n      \"Enable Touch Id to unlock app? It will disable MPin. Are you sure you want to continue?\";\n  String rememberme = \"Remember Me\";\n  String usertouchid = \"Use Touch Id\";\n  String usempin = \"Use MPin\";\n  String filesarenotavailableonserver =\n      \"Files are not available on server,Please try again later\";\n  String allfileshavebeendownloaded = \"All files have been downloaded.\";\n  String filesisdownloaded = \"files is downloaded\";\n  String filesisnotdownloadedbcz =\n      \"files is not downloaded because it's not exist in the server.\";\n  String downloadingCanceled = \"Downloading canceled\";\n  String downloading = \"Downloading...\";\n  String expirydate = \"Expiry Date :\";\n  String youreallywanttodelete = \"You really want to delete\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ErrorString {\n  String accessDenide = \"Access denied\";\n  String pleaseSelectOfferTillDate = \"Please select offer till date.\";\n  String pleaseSelectOfficeVisitDate = \"Please select office visit date\";\n  String deleteStoneMsg = \"Are you sure you want to delete stone(s) ?\";\n  String acceptTermsAndCondition = \"Please accept terms and condition\";\n  String diamondCompareRemove = \"At least 2 Stones are required to compare.\";\n  String diamondSelectionError = \"Please select at least one stone.\";\n  String pleaseEnterCompanyName = \"Please enter company name.\";\n  String selectInvoiceDate = \"Select Invoice Date\";\n  String pleaseEnterComment = \"Please enter comment.\";\n  String pleaseEnterRemarks = \"Please enter remarks.\";\n  String selectExpiryDate = \"Please select expiry date.\";\n  String enterOTP = \"Please enter code\";\n  String pleaseEnterOTP = \"Please enter verification code.\";\n  String enteredCodeNotMatching = \"Entered code is not matching. Try again\";\n  String selectCancellationReason = \"Please select reason for cancellation\";\n  String enterDesc = \"Please enter description.\";\n  String enterTitle = \"Please enter title.\";\n  String enterEmailOrPhone = \"Please enter email/mobile.\";\n  String enterPassword = \"Password can't be empty. Please enter Password.\";\n  String enterConfirmPassword = \"Please enter confirm password.\";\n  String enterSkype = \"Please Enter Skype.\";\n  String enterRegisterCode = \"Please enter registration code\";\n  String enterEmail = \"Please enter the Email address.\";\n  String enterPhone = \"Please enter the Mobile Number.\";\n  String enterTelePhone = \"Please enter the TelePhone Number.\";\n  String enterFax = \"Please enter Fax Number.\";\n  String enterDesignation = \"Please select the designation.\";\n  String selectNatureOfOrganization =\n      \"Please select the Nature Of The Organization.\";\n  String selectCountry = \"Please select the country.\";\n  String selectState = \"Please select the State.\";\n  String selectCity = \"Please select the City.\";\n  String enterBusinessType = \"Please select the Business Type.\";\n  String enterUsername = \"Username can't be empty. Please enter Username.\";\n  String enterValidEmail = \"Please enter the valid Email address.\";\n  String enterValidPhone = \"Please enter the valid Mobile Number.\";\n  String enterValidTelePhone = \"Please enter the valid Telephone Number.\";\n  String enterValidFaxNumber = \"Please enter the valid fax number.\";\n  String enterValidWhatsappPhone =\n      \"Please enter the valid WhatsApp Mobile Number.\";\n  String enterValidPassword = \"Please enter 6 characters or long password.\";\n  String mismatchPassword = \"Password and confirm password is not matching.\";\n  String enterFirstName = \"Please enter the First Name.\";\n  String enterMiddleName = \"Please enter the Middle Name.\";\n  String enterPinCode = \"Please enter the Pin Code.\";\n  String enterName = \"Please enter name.\";\n  String enterLastName = \"Please enter the Last Name.\";\n  String enterAddress = \"Please enter address.\";\n  String enterValidPinCode = \"Please enter the Valid PinCode.\";\n  String enterValidZipCode = \"Please enter the valid Zip Code.\";\n  String enterValidAddress = \"Please enter 10 characters or long address.\";\n  String enterPostalCode = \"Please enter postal code.\";\n  String enterValidPostalCode = \"Please enter 6 digit numeric postal code.\";\n  String enterCurrentPassword = \"Please enter current password.\";\n  String enterNewPassword = \"Please enter new password.\";\n  String enterFareAmount = \"Please enter sales amount.\";\n  String enterOrderNO = \"Please enter order no.\";\n  String enterServiceType = \"Please select type of service.\";\n  String enterPaymentType = \"Please select payment type.\";\n  String enterValidFareAmount = \"Sales amount can not be zero.\";\n  String enterPassangerNo = \"Please enter no. of passengers.\";\n  String enterValidPassangerNo = \"No. of passengers can not be zero.\";\n  String notEnterMorePassangerNo =\n      \"No. of passengers can not be more than seven.\";\n  String drivingLicenseValidationText =\n      \"Please enter 15 digit alphanumeric driving licence number.\";\n  String pANCardValidationText =\n      \"Please enter 10 digit alphanumeric PAN card number.\";\n  String selectFromDate = \"Please select from date\";\n  String selectToDate = \"Please select to date\";\n  String fromGreaterTo = \"Selected date must be greater than current date\";\n  String wrongPassword =\n      \"Password must contains, Minimum 8 characters, 1 uppercase alphabet, 1 lower case alphabet, 1 digit, 1 special charater\";\n  String fromValueGreateThanTo =\n      \"From Value should be less than or equal to To value\";\n  String toValueGreaterThanFrom =\n      \"To Value should be greater than or equal to From value\";\n  String pleaseEnterCompanyCode = \"Please enter company code\";\n  String enterSamePassword =\n      \"Confirm Password does not match with New Password. Please enter confirm password same as New Password.\";\n  String selectAppointmentDate = \"Please select appointment date\";\n  String selectTimeSlot = \"Please select time slot\";\n  String enterComments = \"Please enter comment\";\n  String selectVirtualType = \"Please select virtual type\";\n  String versionError = \"Version Error\";\n  String enterParty = \"Please select and enter party.\";\n  String enterBuyer = \"Please select and enter buyer name.\";\n  String enterSales = \"Please select and enter salesman.\";\n  String enterHoldTime = \"Please select and enter time.\";\n  String minHoldTime = \"Min Hold Time: 1\";\n  String maxHoldTime = \"Max Hold Time: 72\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass NoDataStrings {\n  String noDataFound = \"No record found\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ScreenTitle {\n  String placeAnOffer = \"Apply Offer\";\n  String addedInWatchList = \"Added in Watchlist\";\n  String addedInOffer = \"Offer Submitted\";\n  String addedInCart = \"Added in Cart\";\n  String addedInBid = \"Added in Bid\";\n  String myEnquiry = \"My Enquiry\";\n  String delete = \"Delete\";\n  String addDemand = \"Order Request\";\n  String matchPair = \"Match Pair\";\n  String layout = \"Layout\";\n  String savedAndSearch = \"Save & Search\";\n  String updateAndSearch = \"Update & Search\";\n  String upcoming = \"Upcoming\";\n  String bidPricePerCt = \"Bid Price / Ct\";\n  String bidDisc = \"Bid Disc\";\n  String bidValue = \"Bid Value\";\n  String bidStone = \"Bid Stone\";\n  String myCart = \"My Cart\";\n  String myComment = \"My Notes\";\n  String compare = \"Compare\";\n  String compareStones = \"Compare Stone\";\n  String statusHold = \"On Hold\";\n  String statusOnMemo = \"On Memo\";\n  String statusAvailable = \"Available\";\n  String statusNew = \"New Arrival\";\n  String statusOffer = \"Stone Of The Day/Promotion\";\n  String statusMyHold = \"My Hold\";\n  String signup = \"Sign up\";\n  String addToOffice = \"Add To Office\";\n  String addComment = \"Add Comment\";\n  String addEnquiry = \"Enquiry\";\n  String finalOffer = \"Final Offer\";\n  String finalDisc = \"Final Disc\";\n  String finalRate = \"Final Rate\";\n  String finalValue = \"Final Value\";\n  String orderMsg =\n      \"1) The prices mentioned over here are fixed and hence not negotiable. \\\\n2) The grading, parameters mentioned on our website beyond GIA's Grading.\";\n  String orderMsg1 =\n      \"1) The prices mentioned over here are fixed and hence not negotiable.\";\n  String orderMsg2 =\n      \"2) The grading, parameters mentioned on our website beyond GIA's Grading.\";\n  String offerMsg =\n      \"Offered stone will directly be confirmed if the price gets approved so we request you to be sure before offering. Any stone(s) put in Offer list is not kept on hold for you as it is available for other customer's as well.\";\n  String note = \"Note\";\n  String hours = \"Hours\";\n  String offeredDisc = \"Offered Dis\";\n  String offeredPriceCt = \"Offered Pr/Ct\";\n  String addOffer = \"Add Offer\";\n  String expDiscPer = \"Expected Discount\";\n  String todayDiscPer = \"Today's Disc\";\n  String searchResult = \"Search Result\";\n  String searchDiamond = \"Search Diamond\";\n  String basic = \"Basic\";\n  String advanced = \"Advanced\";\n  String stoneIdCertNo = \"StoneID/Cert No\";\n  String takeSignature = \"Take Signature\";\n  String optional = \"Optional\";\n  String myAddress = \"My Address\";\n  String expiryDate = \"Expiry Date\";\n  String drivingLicenceDesc = \"Your driving licence picture\";\n  String panDesc = \"Your PAN card picture\";\n  String selfie = \"Selfie\";\n  String selfieDesc = \"Your selfie picture\";\n  String pending = \"Pending\";\n  String rejected = \"Rejected\";\n  String uploadAgain = \"Upload\";\n  String remove = \"Remove\";\n  String title = \"Title\";\n  String description = \"Description\";\n  String uploadYour = \"Upload your\";\n  String raiseDispute = \"Tell us about it\";\n  String drivingLicense = \"Driving Licence\";\n  String pANCard = \"PAN Card\";\n  String saveContinue = \"Save and Continue\";\n  String uploadFrontUmgText = \"Upload Front Side Image\";\n  String uploadPANCardImgText = \"Upload PAN Card Image\";\n  String uploadBackImageText = \"Upload Back Side Image\";\n  String helptopic = \"Help Topics\";\n  String newRideSharingRequest = \"New Ride Sharing Requests\";\n  String newRequest = \"New Requests\";\n  String welcomeTo = \"Welcome to\";\n  String welcomeDesc = \"Login to your existing account of Mani Jewel\";\n  String forgotPassword = \"Forgot your\";\n  String forgotPasswordDesc =\n      \"Enter your registered mobile number to recover your password.\";\n  String termsAndCondition = \"Terms & Condition\";\n  String privacyPolicy = \"Privacy Policy\";\n  String aboutUS = \"About Us\";\n  String otpVerification = \"Verify Ride Code\";\n  String otpVerificationDelivery = \"Verify Pickup Code\";\n  String otpVerificationDeliveryDone = \"Verify Delivery Code\";\n  String enterOtp = \"Enter 4-digit\";\n  String recoveryCode = \"Recovery code\";\n  String editProfile = \"Edit Profile\";\n  String myProfile = \"My Profile\";\n  String reset = \"Reset\";\n  String yourPassword = \"Your Password\";\n  String photo = \"Photo\";\n  String otpDesc =\n      \"The recovery code was sent to your mobile number. Please enter the code.\";\n  String otpVerifyDesc =\n      \"The verification code was sent to your mobile number. Please enter the code.\";\n  String diamondDetail = \"Diamond Detail\";\n  String home = \"Dashboard\";\n  String search = \"Stone Search\";\n  String quickSearch = \"Quick Search\";\n  String newArrival = \"New Arrival\";\n  String exclusiveDiamonds = \"Arjiv Exclusive\";\n  String diamondOnAuction = \"Bid It\";\n  String stoneOfTheDays = \"Best Buy\";\n  String myWatchlist = \"My Watchlist\";\n  String myBid = \"My Bid\";\n  String myHold = \"My Hold\";\n  String myOrder = \"My Ordered List\";\n  String confirmStone = \"My Confirm List\";\n  String myOffice = \"My Appointments\";\n  String myOffer = \"My Offer List\";\n  String myPurchased = \"My Invoices History\";\n  String mySavedSearch = \"Saved Search\";\n  String savedSearch = \"Saved Search\";\n  String myDemand = \"My Demand/Order Request\";\n  String contactUs = \"Contact Us\";\n  String changePassword = \"Change Password\";\n  String logout = \"Logout\";\n  String fareDetailsTitle = \"Enter Sales Details\";\n  String fairAmt = \"Sales Amount\";\n  String noOfPassengers = \"No. of Passengers\";\n  String remarks = \"Remarks\";\n  String orderNo = \"Order No.\";\n  String typeOfService = \"Type of Service\";\n  String paymentType = \"Payment Type*\";\n  String recentlyView = \"Recently View\";\n  String uploadImgValidationText =\n      \"Upload file must be .jpg, .jpeg, .png or .pdf having size 5 mb or less.\";\n  String drivingLicenseHintText = \"Driving Licence Number\";\n  String pANCARDHintText = \"PAN Card Number\";\n  String viewRide = \"View Rides\";\n  String myVehicle = \"My Vehicle\";\n  String personalDocument = \"Personal Documents\";\n  String help = \"HELP\";\n  String about = \"About\";\n  String bankDetails = \"Bank Details\";\n  String accountAndPayment = \"Account and Payment\";\n  String enquiry = \"Enquiry\";\n  String download = \"Download\";\n  String addToCart = \"Cart\";\n  String addToWatchList = \"Add To Watchlist\";\n  String memo = \"Memo\";\n  String memoStone = \"Memo Stone\";\n  String finalCalculation = \"Final Calculation\";\n  String bookOffice = \"Book Office\";\n  String clearSelection = \"Clear Selection\";\n  String hold = \"Hold\";\n  String holdStone = \"Hold Stone\";\n  String offer = \"Offer\";\n  String officeView = \"Office\";\n  String placeOrder = \"Place Order\";\n  String buyNow = \"Buy Now\";\n  String cancelStone = \"Cancel Stone\";\n  String share = \"Share\";\n  String watchlist = \"Watchlist\";\n  String exclusive = \"Exclusive\";\n  String featuredStones = \"Featured Stones\";\n  String stoneOfDay = \"Best Buy\";\n  String recentSearch = \"Recent Search\";\n  String viewAll = \"View All\";\n  String salesPersonDetail = \"Sales Person Detail\";\n  String searchTitle = \"Search Title\";\n  String enterSearchTitle = \"Enter Search Title\";\n  String timeSlots = \"Time Slots\";\n  String selectCustomDate = \"Select Custom date\";\n  String availableSlot = \"Available Slots\";\n  String reqOfficeView = \"Request Appointment\";\n  String myComments = \"My Note\";\n  String myReminder = \"My Reminder\";\n  String reminder = \"Reminder\";\n  String manageAddress = \"Manage Addresses\";\n  String myAccount = \"My Account\";\n  String declaimer = \"Disclaimer\";\n  String shareStone = \"Share Stone\";\n  String addRemider = \"Add reminder\";\n  String offlineSearch = \"Offline Search\";\n  String searchHistory = \"Search History\";\n  String offlineStock = \"Offline Stock\";\n  String searchOffline = \"Search (Offline)\";\n  String voiceSearch = \"Voice Search\";\n  String tapMictoSpeak = \"Tap mic to Speak\";\n  String typeToSearch = \"Type to Search\";\n  String typeWordsToSearch = \"Type at least 3 character to search\";\n  String selectCompany = \"Select Company\";\n  String selectParty = \"Select Party\";\n  String selectSalesman = \"Select Salesman\";\n  String selectBuyer = \"Select Buyer\";\n  String selectBroker = \"Select Broker\";\n  String selectBillType = \"Select Bill Type\";\n  String bankRate = \"Bank Rate\";\n  String selectInvoiceType = \"Select Invoice Type\";\n  String selectTermType = \"Select Term Type\";\n  String party = \"Party\";\n  String buyerName = \"Buyer Name\";\n  String salesman = \"Salesman\";\n  String broker = \"Broker\";\n  String invoicedate = \"Invoice Date\";\n  String billType = \"Bill Type\";\n  String terms = \"Terms\";\n  String comment = \"Note\";\n  String holdTimeTitle = \"Enter Hold Time (Hours)*\";\n  String appointment = \"Appointment\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass Dynamickeys {\n  String heightTitle = \"Height\";\n  String shape = \"Shape\";\n  String caratRange = \"Carat\";\n  String basicDetail = \"Basic Details\";\n  String measurementTitle = \"Measurements\";\n  String inclusionDetail = \"Inclusion Details\";\n  String other = \"Other\";\n  String stoneID = \"Stone ID\";\n  String labTitle = \"Lab\";\n  String certNo = \"Cert. No.\";\n  String locationTitle = \"Origin\";\n  String caratTitle = \"Carat\";\n  String colorTitle = \"Color\";\n  String clarityTitle = \"Clarity\";\n  String cutTitle = \"Cut\";\n  String polishTitle = \"Polish\";\n  String symmentryTitle = \"Symmentry\";\n  String fluorescenceTitle = \"Fluorescence\";\n  String rapTitle = \"Rap (%)\";\n  String discountTitle = \"Discount (%)\";\n  String priceAndCt = \"Price/Ct\";\n  String amountTitle = \"Amount\";\n  String eyeCleanTitle = \"Eye Clean\";\n  String brownTitle = \"Brown\";\n  String milkyTitle = \"Milky\";\n  String mixTingeTitle = \"Mix Tinge\";\n  String dimensionTitle = \"Dimensions  (MM)\";\n  String girdleTitle = \"Girdle (%)\";\n  String tableTitle = \"Table %\";\n  String crownAngleTitle = \"Crown Angle\";\n  String depthTitle = \"Depth %\";\n  String pavAngleTitle = \"Pav Angle\";\n  String crownHeightTitle = \"Crown Height(%)\";\n  String pavDepthTitle = \"Pavilion Depth (%)\";\n  String starLengthTitle = \"Star Length\";\n  String lowerHalfTitle = \"Lower Half\";\n  String gridleFacetedTitle = \"Gridle Faceted\";\n  String culetTitle = \"Culet\";\n  String rationTitle = \"Ratio\";\n  String blackInclusionTitle = \"Black Inclusion\";\n  String otherInclusionTitle = \"Other Inclusion\";\n  String openInclusionTitle = \"Open Inclusion\";\n  String extraFacetTitle = \"Extra Facet\";\n  String naturalTitle = \"Natural\";\n  String hAndATitle = \"H & A\";\n  String keyToSymbol = \"Key To Symbol\";\n  String labComments = \"Lab Comments\";\n  String laserInsTitle = \"Laser Ins\";\n  String basicTitle = \"Basic\";\n  String advancedTitle = \"Advanced\";\n  String stoneIdTitle = \"Stone ID/Cert No\";\n  String defaultTitle = \"Default\";\n  String newDiamondsTitle = \"New Diamonds\";\n  String priceLowToHigh = \"Price Low to High\";\n  String priceHighToLow = \"Price High to Low\";\n  String disLowToHigh = \"Discount Low to High\";\n  String disHighToLow = \"Discount High to Low\";\n  String colorLowToHigh = \"Color Low to High\";\n  String colorHighToLow = \"Color High to Low\";\n  String caratLowToHigh = \"Carat Low to High\";\n  String caratHighToLow = \"Carat High to Low\";\n  String clarityLowToHigh = \"Clarity Low to High\";\n  String clarityHighToLow = \"Clarity High to Low\";\n  String colorShadeTitle = \"Color Shade\";\n  String certiTitle = \"Certificate Number\";\n  String arrivalsTitle = \"Arrivals\";\n  String lengthTitle = \"Length\";\n  String widthTitle = \"Width\";\n  String pavilionAngleTitle = \"Pavilion Angle\";\n  String girdleConditionTitle = \"Girdle Condition\";\n  String cluetConditionTitle = \"Culet Condition\";\n  String disTitle = \"Dis%\";\n  String depthTitleWithoutPerc = \"Depth\";\n  String otherInformationTitle = \"Other Information\";\n  String matchPairTitle = \"Match Pair\";\n  String layoutTitle = \"Layout\";\n  String heartArrow = \"Heart and Arrow\";\n  String tableBlack = \"Table Black\";\n  String tableOpen = \"Table Open\";\n  String sideBlack = \"Side Black\";\n  String crownOpen = \"Crown Open\";\n  String tableInclusion = \"Table Inclusion\";\n  String sideInclusion = \"Side Inclusion\";\n  String pavillionOpen = \"Pavillion Open\";\n  String girdleOpen = \"Girdle Open\";\n  String pavHeight = \"Pav Height\";\n  String eTK = \"ETK\";\n  String bGMDetails = \"BGM Details\";\n  String brownTinge = \"Brown Tinge\";\n  String otherTinge = \"Other Tinge\";\n  String reportNo = \"Report No\";\n  String packetNo = \"Packet No\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"heightTitle\": \"Height\",\n    \"shape\": \"Shape\",\n    \"caratRange\": \"Carat\",\n    \"basicDetail\": \"Basic Details\",\n    \"measurementTitle\": \"Measurements\",\n    \"inclusionDetail\": \"Inclusion Details\",\n    \"other\": \"Other\",\n    \"stoneID\": \"Stone ID\",\n    \"labTitle\": \"Lab\",\n    \"certNo\": \"Cert. No.\",\n    \"locationTitle\": \"Origin\",\n    \"caratTitle\": \"Carat\",\n    \"colorTitle\": \"Color\",\n    \"clarityTitle\": \"Clarity\",\n    \"cutTitle\": \"Cut\",\n    \"polishTitle\": \"Polish\",\n    \"symmentryTitle\": \"Symmentry\",\n    \"fluorescenceTitle\": \"Fluorescence\",\n    \"rapTitle\": \"Rap (%)\",\n    \"discountTitle\": \"Discount (%)\",\n    \"priceAndCt\": \"Price/Ct\",\n    \"amountTitle\": \"Amount\",\n    \"eyeCleanTitle\": \"Eye Clean\",\n    \"brownTitle\": \"Brown\",\n    \"milkyTitle\": \"Milky\",\n    \"mixTingeTitle\": \"Mix Tinge\",\n    \"dimensionTitle\": \"Dimensions  (MM)\",\n    \"girdleTitle\": \"Girdle (%)\",\n    \"tableTitle\": \"Table %\",\n    \"crownAngleTitle\": \"Crown Angle\",\n    \"depthTitle\": \"Depth %\",\n    \"pavAngleTitle\": \"Pav Angle\",\n    \"crownHeightTitle\": \"Crown Height(%)\",\n    \"pavDepthTitle\": \"Pavilion Depth (%)\",\n    \"starLengthTitle\": \"Star Length\",\n    \"lowerHalfTitle\": \"Lower Half\",\n    \"gridleFacetedTitle\": \"Gridle Faceted\",\n    \"culetTitle\": \"Culet\",\n    \"rationTitle\": \"Ratio\",\n    \"blackInclusionTitle\": \"Black Inclusion\",\n    \"otherInclusionTitle\": \"Other Inclusion\",\n    \"openInclusionTitle\": \"Open Inclusion\",\n    \"extraFacetTitle\": \"Extra Facet\",\n    \"naturalTitle\": \"Natural\",\n    \"hAndATitle\": \"H & A\",\n    \"keyToSymbol\": \"Key To Symbol\",\n    \"labComments\": \"Lab Comments\",\n    \"laserInsTitle\": \"Laser Ins\",\n    \"basicTitle\": \"Basic\",\n    \"advancedTitle\": \"Advanced\",\n    \"stoneIdTitle\": \"Stone ID/Cert No\",\n    \"defaultTitle\": \"Default\",\n    \"newDiamondsTitle\": \"New Diamonds\",\n    \"priceLowToHigh\": \"Price Low to High\",\n    \"priceHighToLow\": \"Price High to Low\",\n    \"disLowToHigh\": \"Discount Low to High\",\n    \"disHighToLow\": \"Discount High to Low\",\n    \"colorLowToHigh\": \"Color Low to High\",\n    \"colorHighToLow\": \"Color High to Low\",\n    \"caratLowToHigh\": \"Carat Low to High\",\n    \"caratHighToLow\": \"Carat High to Low\",\n    \"clarityLowToHigh\": \"Clarity Low to High\",\n    \"clarityHighToLow\": \"Clarity High to Low\",\n    \"colorShadeTitle\": \"Color Shade\",\n    \"certiTitle\": \"Certificate Number\",\n    \"arrivalsTitle\": \"Arrivals\",\n    \"lengthTitle\": \"Length\",\n    \"widthTitle\": \"Width\",\n    \"pavilionAngleTitle\": \"Pavilion Angle\",\n    \"girdleConditionTitle\": \"Girdle Condition\",\n    \"cluetConditionTitle\": \"Culet Condition\",\n    \"disTitle\": \"Dis%\",\n    \"depthTitleWithoutPerc\": \"Depth\",\n    \"otherInformationTitle\": \"Other Information\",\n    \"matchPairTitle\": \"Match Pair\",\n    \"layoutTitle\": \"Layout\",\n    \"heartArrow\": \"Heart and Arrow\",\n    \"tableBlack\": \"Table Black\",\n    \"tableOpen\": \"Table Open\",\n    \"sideBlack\": \"Side Black\",\n    \"crownOpen\": \"Crown Open\",\n    \"tableInclusion\": \"Table Inclusion\",\n    \"sideInclusion\": \"Side Inclusion\",\n    \"pavillionOpen\": \"Pavillion Open\",\n    \"girdleOpen\": \"Girdle Open\",\n    \"pavHeight\": \"Pav Height\",\n    \"eTK\": \"ETK\",\n    \"bGMDetails\": \"BGM Details\",\n    \"brownTinge\": \"Brown Tinge\",\n    \"otherTinge\": \"Other Tinge\",\n    \"reportNo\": \"Report No\",\n    \"packetNo\": \"Packet No\",\n  };\n}\n\nclass Chinese extends English {\n  @override\n  get authStrings => ChineseAuthStrings();\n  @override\n  get commonString => ChineseCommonString();\n  @override\n  get errorString => ChineseErrorString();\n  @override\n  get noDataStrings => ChineseNoDataStrings();\n  @override\n  get screenTitle => ChineseScreenTitle();\n  @override\n  get dynamickeys => ChineseDynamickeys();\n  static String get languageCode => \"Chinese\";\n  static String get languageName => \"Chinese\";\n}\n\nclass ChineseAuthStrings extends AuthStrings {\n  @override\n  get editCompanyInformation => \"出问题了！ \\\\n下拉刷新\";\n  @override\n  get selectNatureOfOrganization => \"选择性质组织\";\n  @override\n  get setNewPassword => \"重新设置新密码，请请进进入系统\";\n  @override\n  get enterCompanyName => \"请输入公司名称。\";\n  @override\n  get pleaseEnterCustomerOTP => \"请输入客户乘坐的代码。\";\n  @override\n  get pleaseEnterPickupOTP => \"请输入自取代码。\";\n  @override\n  get pleaseEnterDeliveryOTP => \"请输入客户交付代码。\";\n  @override\n  get verified => \"验证\";\n  @override\n  get verify => \"校验\";\n  @override\n  get addressLineOne => \"地址1\";\n  @override\n  get addressLineTwo => \"地址2\";\n  @override\n  get addressLineThree => \"地址3\";\n  @override\n  get oldPassword => \"旧密码\";\n  @override\n  get skype => \"Skype的\";\n  @override\n  get whatsApp => \"WhatsApp的\";\n  @override\n  get pinCode => \"PIN码*\";\n  @override\n  get verifyMobileDesc => \"请确认手机号码，以更新的姿态。\";\n  @override\n  get verifyNow => \"立即验证\";\n  @override\n  get password => \"密码\";\n  @override\n  get backToHome => \"回家\";\n  @override\n  get forgotPassword => \"忘记密码？\";\n  @override\n  get signInCap => \"登入\";\n  @override\n  get moveToLogIn => \"移动登录\";\n  @override\n  get dontHaveAnAccount => \"#ERROR!\";\n  @override\n  get clickHere => \"点击这里\";\n  @override\n  get signUpHere => \"在此注册\";\n  @override\n  get reset => \"重启\";\n  @override\n  get haveRegisterCode => \"有注册码？\";\n  @override\n  get welcome => \"欢迎回来！\";\n  @override\n  get signInAsGuest => \"以访客身分登入\";\n  @override\n  get editProfileTitle => \"编辑个人资料\";\n  @override\n  get emaillbl => \"电子邮件\";\n  @override\n  get searchInventory => \"搜索产品\";\n  @override\n  get emailAddress => \"电子邮件地址*\";\n  @override\n  get offlineFilter => \"无法找到所需的纸牌？我们可以帮助你从我们的离线的库存最好的交易。\";\n  @override\n  get loginDesc => \"是否要启用触摸ID / M-PIN解锁我的钻石？请选择一个选项，以解锁应用\";\n  @override\n  get searchDiamonds => \"搜索钻石\";\n  @override\n  get continueWithSearch => \"你想继续搜索？\";\n  @override\n  get mobileNumber => \"移动\";\n  @override\n  get searchHint => \"搜索...\";\n  @override\n  get selectYourCountry => \"选择国家\";\n  @override\n  get resendCodeIn => \"在重新发送代码\";\n  @override\n  get resendCode => \"重发\";\n  @override\n  get haveAnAccount => \"已经有一个帐户？\";\n  @override\n  get dontReceiveCode => \"如果您没有收到代码！\";\n  @override\n  get inLogin => \"登录。\";\n  @override\n  get resetPwdDesc => \"添加密码和确认密码重置您的密码。\";\n  @override\n  get backToLogin => \"回到登入\";\n  @override\n  get firstName => \"名字*\";\n  @override\n  get name => \"用户名*\";\n  @override\n  get lastName => \"姓*\";\n  @override\n  get middleName => \"中间名字*\";\n  @override\n  get confirmPassword => \"确认密码\";\n  @override\n  get currentPasswordErr => \"当前密码错误\";\n  @override\n  get passwordChanged => \"密码已更改\";\n  @override\n  get lblLogInErr => \"登录错误\";\n  @override\n  get enterYour => \"输入您的\";\n  @override\n  get details => \"细节\";\n  @override\n  get registerCode => \"注册码\";\n  @override\n  get registerCodeDesc => \"添加一个注册码与3eco启动招生。\";\n  @override\n  get uploadPhotoDesc => \"把你自己的自拍照\";\n  @override\n  get updateProfile => \"更新配置文件\";\n  @override\n  get postalCode => \"邮政编码*\";\n  @override\n  get removeButton => \"去掉\";\n  @override\n  get gender => \"性别\";\n  @override\n  get male => \"男\";\n  @override\n  get female => \"女\";\n  @override\n  get changePassword => \"更改密码\";\n  @override\n  get currentPassword => \"当前密码*\";\n  @override\n  get newPassword => \"新密码*\";\n  @override\n  get confirmNewPassword => \"确认密码*\";\n  @override\n  get personalDocuments => \"个人文档\";\n  @override\n  get assignedAuto => \"自动分配\";\n  @override\n  get logout => \"登出\";\n  @override\n  get logoutConfirmationMsg => \"你确定要注销？\";\n  @override\n  get address => \"地址*\";\n  @override\n  get accountNumber => \"账号\";\n  @override\n  get bankerName => \"银行名称\";\n  @override\n  get nameLable => \"名称\";\n  @override\n  get ifscCode => \"IFSC代码\";\n  @override\n  get businessRegistrationNumbr => \"商业登记号码\";\n  @override\n  get businessRelationshipPeriod => \"业务关系期限（年）\";\n  @override\n  get designation => \"指定\";\n  @override\n  get nameofDesignation => \"的名字\";\n  @override\n  get natureofOrganization => \"组织的性质\";\n  @override\n  get uploadFile => \"没有文件Choosen\";\n  @override\n  get update => \"UPDATE\";\n  @override\n  get resetPwd => \"重设密码\";\n  @override\n  get pwdReset => \"重设密码\";\n  @override\n  get signInWithMPIN => \"请用M-PIN\";\n  @override\n  get pwdChanged => \"密码已更改\";\n  @override\n  get successfullyPwdDesc => \"您已成功重置您的密码。在登录时，请使用您的新密码。\";\n  @override\n  get lblProfileSetup => \"您的个人资料设置\";\n  @override\n  get lblProfileSetupDesc => \"我们已经收到您的个人资料详细信息\";\n  @override\n  get hoursAvailable => \"总Shifttime\";\n  @override\n  get confirmStoneDetail => \"确认石详细\";\n  @override\n  get companyName => \"公司名\";\n  @override\n  get invoiceDate => \"发票日期\";\n  @override\n  get companyCode => \"公司代码\";\n  @override\n  get saveCompanyDetails => \"保存公司信息\";\n  @override\n  get passwordNotChange => \"密码不匹配\";\n  @override\n  get rememberPassword => \"记住密码？\";\n  @override\n  get sendOTP => \"发送OTP\";\n  @override\n  get resendNow => \"现在重发\";\n  @override\n  get didNotReceiveOTP => \"如果您没有收到OTP！\";\n  @override\n  get sendOTPToEmail => \"我们将发送一个OTP到您输入的电子邮件地址或用户名。请输入电子邮件地址或用户名。\";\n  @override\n  get enterOTP => \"检察官办公室已经被发送到您注册的电子邮件地址。请输入OTP。\";\n  @override\n  get backToSignIn => \"返回登录\";\n  @override\n  get passwordResetSuccessfully => \"密码重置成功。\";\n  @override\n  get emailAndUname => \"Email /用户名\";\n  @override\n  get signUp => \"注册\";\n  @override\n  get promotionText => \"促销优惠\";\n  @override\n  get termsAndCondition => \"附带条约\";\n  @override\n  get mustAgreeTermsAndCondition => \"你必须同意的条款和条件，以访客身分登入用户\";\n  @override\n  get forgotPasswordTitle => \"忘记密码\";\n  @override\n  get uploadKYC => \"上传KYC\";\n  @override\n  get uploadKycDesc => \"请上传您的KYC文件来访问完整的功能。\";\n  @override\n  get hintPhotoIdentityProof => \"照片的身份证明*\";\n  @override\n  get hintBussinerssProof => \"商务身份证明*\";\n  @override\n  get btnFileUpload => \"上传文件\";\n  @override\n  get pleaseUploadPhotoProof => \"请上传照片的身份证明。\";\n  @override\n  get pleaseUploadBussinessProof => \"请上传商家身份证明。\";\n  @override\n  get pleaseSelectFileFormat => \"请所有的上传以下格式的文件名：.jpg\";\n  @override\n  get kycSubmitted => \"KYC提交\";\n  @override\n  get kycSubmmittedDesc => \"您的KYC已成功提交。\";\n  @override\n  get btnMoveToHome => \"移至首页\";\n  @override\n  get kYCRejected => \"KYC拒绝\";\n  @override\n  get kycRejectedDesc => \"您的KYC已被拒绝。请重新上传您的文件KYC访问所有功能。\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ChineseCommonString extends CommonString {\n  @override\n  get seeMore => \"查看更多\";\n  @override\n  get seeLess => \"较少见\";\n  @override\n  get modify => \"修改\";\n  @override\n  get delete => \"删除\";\n  @override\n  get details => \"细节\";\n  @override\n  get edit => \"编辑\";\n  @override\n  get addDemand => \"新增需求\";\n  @override\n  get demandTitle => \"需求标题\";\n  @override\n  get pleaseEnterDemandTitle => \"请输入需求标题\";\n  @override\n  get demandAddedSuccessfully => \"需求增加成功\";\n  @override\n  get selectAtleastOneFilter => \"请\";\n  @override\n  get savedSearch => \"保存的搜索\";\n  @override\n  get searchSavedSearch => \"搜索保存的搜索\";\n  @override\n  get viewDetails => \"查看详情\";\n  @override\n  get viewLessDetails => \"查看较少的细节\";\n  @override\n  get myDemand => \"我的需求\";\n  @override\n  get date => \"日期\";\n  @override\n  get selectTime => \"选择时间\";\n  @override\n  get selectDate => \"选择日期\";\n  @override\n  get offerVelidTill => \"优惠有效期至\";\n  @override\n  get officeVisitDate => \"办公室访问日期\";\n  @override\n  get all => \"所有\";\n  @override\n  get status => \"状态\";\n  @override\n  get save => \"保存\";\n  @override\n  get verify => \"校验\";\n  @override\n  get readMore => \"阅读更多\";\n  @override\n  get goodMorning => \"早上好\";\n  @override\n  get goodAfternoon => \"下午好\";\n  @override\n  get goodEvening => \"晚上好\";\n  @override\n  get btnSkip => \"跳跃\";\n  @override\n  get btnUpdate => \"更新\";\n  @override\n  get btnContinue => \"继续\";\n  @override\n  get btnContinueCap => \"继续\";\n  @override\n  get btnEdit => \"编辑\";\n  @override\n  get btnSubmit => \"提交\";\n  @override\n  get btnNextCap => \"下一个\";\n  @override\n  get btnSaveCap => \"更新密码\";\n  @override\n  get btnWithdrawCap => \"收回\";\n  @override\n  get btnSaveAndContinueCap => \"保存并继续\";\n  @override\n  get btnUnregister => \"未注册手机\";\n  @override\n  get btnClose => \"关\";\n  @override\n  get remove => \"去掉\";\n  @override\n  get refresh => \"刷新\";\n  @override\n  get fetchLocationMessage => \"请等待我们撷取你的位置\";\n  @override\n  get done => \"完成\";\n  @override\n  get doneCap => \"DONE\";\n  @override\n  get cancel => \"取消\";\n  @override\n  get allow => \"允许\";\n  @override\n  get countryFirst => \"请选择国家一\";\n  @override\n  get apply => \"应用\";\n  @override\n  get cancelCap => \"取消\";\n  @override\n  get uploadCap => \"上传\";\n  @override\n  get yesCancelCap => \"是\";\n  @override\n  get upload => \"上传\";\n  @override\n  get ok => \"好\";\n  @override\n  get home => \"家\";\n  @override\n  get goToMyWatchList => \"转到我的关注\";\n  @override\n  get goToMyOrder => \"转到我的订单\";\n  @override\n  get gotToMyOffer => \"转到我的报价\";\n  @override\n  get gotToMyHold => \"转到我保持\";\n  @override\n  get gotToMyEnquiry => \"转到我的询价\";\n  @override\n  get gotToMyBid => \"转到我的出价\";\n  @override\n  get gotToMyReminder => \"转到我的提醒\";\n  @override\n  get gotToMyComments => \"转到我的注释\";\n  @override\n  get yes => \"是\";\n  @override\n  get no => \"没有\";\n  @override\n  get selectCountry => \"选择国家\";\n  @override\n  get clickHere => \"点击这里\";\n  @override\n  get btnAddNewAddress => \"添加新地址\";\n  @override\n  get btnCancel => \"取消\";\n  @override\n  get btnTakeSelfie => \"就拿自拍\";\n  @override\n  get successfully => \"顺利\";\n  @override\n  get lblAppExit => \"你确定要离开？\";\n  @override\n  get lblExit => \"出口\";\n  @override\n  get openAppSetting => \"打开设置\";\n  @override\n  get lblOr => \"要么\";\n  @override\n  get fromLbl => \"从\";\n  @override\n  get toLbl => \"至\";\n  @override\n  get showMore => \"展示更多\";\n  @override\n  get showLess => \"显示较少\";\n  @override\n  get selectCity => \"选择城市\";\n  @override\n  get notYetAvailable => \"尚不可用\";\n  @override\n  get updateAvailable => \"有可用更新！\";\n  @override\n  get downloadAppFrom => \"下载应用程序更新从\";\n  @override\n  get playStore => \"应用商店\";\n  @override\n  get skipUpdate => \"跳过更新\";\n  @override\n  get stateFirst => \"请选择国家一\";\n  @override\n  get reallyExit => \"真的退出？\";\n  @override\n  get alert => \"警报！\";\n  @override\n  get loading => \"载入中\";\n  @override\n  get error => \"错误\";\n  @override\n  get jumpToTop => \"跳转到顶部\";\n  @override\n  get ihaveread => \"我已阅读并接受\";\n  @override\n  get selected => \"选择\";\n  @override\n  get lbllogout => \"登出\";\n  @override\n  get lblThanx => \"谢谢\";\n  @override\n  get lblSelectCity => \"选择城市\";\n  @override\n  get lblSelectState => \"选择国家\";\n  @override\n  get lblSelectCountry => \"选择国家\";\n  @override\n  get lblCity => \"市\";\n  @override\n  get lblCountry => \"国家\";\n  @override\n  get lblName => \"名称\";\n  @override\n  get lblPinCode => \"PIN码\";\n  @override\n  get lblMobileNumber => \"手机号码\";\n  @override\n  get lblState => \"州\";\n  @override\n  get lblCode => \"码：\";\n  @override\n  get lblOrderNo => \"订单号：\";\n  @override\n  get lblOrderItem => \"订购：\";\n  @override\n  get lblDelivered => \"交付\";\n  @override\n  get lblTicketReady => \"你的票了\";\n  @override\n  get lblPersonTicket => \"2人门票\";\n  @override\n  get lblShuttleBus => \"机场摆渡车\";\n  @override\n  get lblPickup => \"拾起\";\n  @override\n  get lblDropoff => \"放下\";\n  @override\n  get lblPassenger => \"乘客\";\n  @override\n  get lblDeliveryNo => \"交货号\";\n  @override\n  get lblPrice => \"价钱\";\n  @override\n  get lblValid => \"有效期\";\n  @override\n  get lblRenew => \"更新\";\n  @override\n  get lblDeparture => \"离开\";\n  @override\n  get lblArrived => \"到达\";\n  @override\n  get lblSendtoFriend => \"发送给朋友\";\n  @override\n  get popupRenewTitle => \"续订票\";\n  @override\n  get popupRenewDesc => \"Lorem存有悲坐阿梅德\";\n  @override\n  get popuplblPassenger => \"乘客\";\n  @override\n  get popuplblCancel => \"取消\";\n  @override\n  get popupbtnRenew => \"更新\";\n  @override\n  get ridelblAwesome => \"真棒\";\n  @override\n  get ridebtnDone => \"完成\";\n  @override\n  get offerPricePerCarat => \"所报的价格（CTS）\";\n  @override\n  get dropOffText => \"放下\";\n  @override\n  get pickUpText => \"拾起\";\n  @override\n  get startAtText => \"在开始\";\n  @override\n  get endAtText => \"在结束\";\n  @override\n  get personText => \"人\";\n  @override\n  get paymentScreenTitle => \"付款\";\n  @override\n  get pickuplbl => \"拾起\";\n  @override\n  get droplbl => \"放下\";\n  @override\n  get makePaymentButtonlbl => \"付款\";\n  @override\n  get pessangerslbl => \"乘客\";\n  @override\n  get priceBreakuplbl => \"价格解体\";\n  @override\n  get tripPricelbl => \"旅行价格\";\n  @override\n  get taxeslbl => \"税\";\n  @override\n  get totallbl => \"总\";\n  @override\n  get cardNumberhint => \"卡号\";\n  @override\n  get cvvhint => \"CVV\";\n  @override\n  get datehint => \"MM / YY\";\n  @override\n  get btnTryAgain => \"再试一次\";\n  @override\n  get cityFirst => \"首先请选择城市\";\n  @override\n  get enterFareDetails => \"进入销售详细信息\";\n  @override\n  get fromDate => \"从日期\";\n  @override\n  get toDate => \"选定的日期\";\n  @override\n  get btnUnderstand => \"我明白\";\n  @override\n  get applicationUpdate => \"应用程序更新\";\n  @override\n  get newVersionMessage => \"应用程序的新版本可用\";\n  @override\n  get paymentCollected => \"收集付款\";\n  @override\n  get addComment => \"添加评论\";\n  @override\n  get more => \"更多\";\n  @override\n  get carat => \"克拉\";\n  @override\n  get pcs => \"PCS\";\n  @override\n  get cts => \"CTS\";\n  @override\n  get disc => \"光盘％\";\n  @override\n  get avgPriceCrt => \"平均。价格/ CT\";\n  @override\n  get amount => \"量\";\n  @override\n  get confirmStone => \"确认石\";\n  @override\n  get confirm => \"确认\";\n  @override\n  get offered => \"参团\";\n  @override\n  get validTill => \"有效期至\";\n  @override\n  get remark => \"备注\";\n  @override\n  get color => \"颜色\";\n  @override\n  get colorGroup => \"色集团\";\n  @override\n  get colorFancy => \"幻想\";\n  @override\n  get colorWhite => \"白色\";\n  @override\n  get clarity => \"明晰\";\n  @override\n  get clarityGroup => \"清晰度集团\";\n  @override\n  get intensity => \"强度\";\n  @override\n  get overtone => \"弦外之音\";\n  @override\n  get selectBusinessType => \"选择业务类型\";\n  @override\n  get selectState => \"选择国家\";\n  @override\n  get search => \"搜索\";\n  @override\n  get profile => \"我的简历\";\n  @override\n  get personal => \"个人\";\n  @override\n  get business => \"商业\";\n  @override\n  get documents => \"文件\";\n  @override\n  get noSlotFound => \"没有找到插槽\";\n  @override\n  get noDiamondFound => \"没有钻石符合搜索。请添加您的需求。\";\n  @override\n  get selectType => \"选择虚拟类型\";\n  @override\n  get noSavedSearch => \"没有保存的搜索已存在\";\n  @override\n  get searchCity => \"搜索城市\";\n  @override\n  get searchCountry => \"搜索国家\";\n  @override\n  get searchState => \"搜索状态\";\n  @override\n  get notifications => \"通知\";\n  @override\n  get enter2Stone => \"请选择至少2个石头比较。\";\n  @override\n  get bidDesc => \"目前位于印度和用于分离任何其他国家交付印度至少需要7-10个工作日。\";\n  @override\n  get packetNo => \"包号：\";\n  @override\n  get quit => \"放弃\";\n  @override\n  get agree => \"我同意\";\n  @override\n  get laterToday => \"今天晚些时候\";\n  @override\n  get toMorrow => \"明天\";\n  @override\n  get nextWeek => \"下周\";\n  @override\n  get chooseAnother => \"另一种选择\";\n  @override\n  get dateTime => \"约会时间\";\n  @override\n  get language => \"语言\";\n  @override\n  get diamNow => \"DiamNow\";\n  @override\n  get noDocument => \"找不到任何文档\";\n  @override\n  get searchBusinessType => \"搜索业务类型\";\n  @override\n  get hours => \"小时\";\n  @override\n  get minutes => \"分钟\";\n  @override\n  get seconds => \"秒\";\n  @override\n  get bidEndsIn => \"投标结束在：\";\n  @override\n  get shape => \"形状\";\n  @override\n  get download => \"下载\";\n  @override\n  get share => \"分享\";\n  @override\n  get placeOrder => \"下订单\";\n  @override\n  get enterComment => \"请填写评论\";\n  @override\n  get deleteItem => \"你确定你要删除？\";\n  @override\n  get shippingPolicy => \"航运政策\";\n  @override\n  get offerSundayRestriction => \"周日是不允许的。办公室工作日为周一至周六\";\n  @override\n  get weekAgo => \"1周前\";\n  @override\n  get lastWeek => \"上个星期\";\n  @override\n  get dayAgo => \"几天前\";\n  @override\n  get onedayAgo => \"1天前\";\n  @override\n  get yesterday => \"昨天\";\n  @override\n  get hourAgo => \"小时前\";\n  @override\n  get onehourAgo => \"1小时前\";\n  @override\n  get anhourAgo => \"一小时前\";\n  @override\n  get mintuesAgo => \"几分钟前\";\n  @override\n  get onemintuesAgo => \"1分钟前\";\n  @override\n  get amintueAgo => \"一分钟前\";\n  @override\n  get secondsAgo => \"秒前\";\n  @override\n  get justNow => \"现在\";\n  @override\n  get today => \"今天\";\n  @override\n  get past => \"过去\";\n  @override\n  get selectPhotoProof => \"选择文档\";\n  @override\n  get pleaseSelectPhotoProof => \"请选择文件\";\n  @override\n  get selectBusinessProof => \"选择文档\";\n  @override\n  get pleaseSelectBusinessProof => \"请选择文件\";\n  @override\n  get touchId => \"触摸标识\";\n  @override\n  get faceId => \"面部识别\";\n  @override\n  get enableTouchId => \"允许使用Touch ID解锁我的钻石？\";\n  @override\n  get enableFaceId => \"启用面部识别解锁我的钻石？\";\n  @override\n  get unlockWithTouchId => \"采用触摸式标识解锁我的钻石\";\n  @override\n  get unlockWithFaceId => \"解锁使用面部识别我的钻石。\";\n  @override\n  get mPin => \"M-PIN\";\n  @override\n  get holdMemoStatusDiamondorder => \"你不能确诊的石块，已经在保持或备忘录状态\";\n  @override\n  get searchStoneIdCertificateNo => \"搜索石ID /证书号\";\n  @override\n  get createMPin => \"创建新的M-PIN\";\n  @override\n  get reentermpin => \"重新输入M-PIN\";\n  @override\n  get forgotmpin => \"忘记了M-PIN？\";\n  @override\n  get verifympin => \"验证M-PIN\";\n  @override\n  get enteryoursixdigitcode => \"输入您的6位M-PIN\";\n  @override\n  get changempin => \"更改M-PIN\";\n  @override\n  get faceidandtouchnotenable => \"FaceId / TouchId在您的手机未启用，请启用使用此功能\";\n  @override\n  get enablempintounlockmydiamonds => \"启用M-PIN解锁应用程序？这将禁用触摸标识。你确定你要继续吗？\";\n  @override\n  get enabletouchidtounlockmydiamonds => \"允许使用Touch ID解锁应用？这将禁用M-PIN。你确定你要继续吗？\";\n  @override\n  get rememberme => \"记得我\";\n  @override\n  get usertouchid => \"使用触摸标识\";\n  @override\n  get usempin => \"使用M-PIN\";\n  @override\n  get filesarenotavailableonserver => \"文件不可用的服务器，请稍后重试\";\n  @override\n  get allfileshavebeendownloaded => \"所有文件都被下载。\";\n  @override\n  get filesisdownloaded => \"文件下载\";\n  @override\n  get filesisnotdownloadedbcz => \"文件没有下载，因为它不是在服务器存在。\";\n  @override\n  get downloadingCanceled => \"取消下载\";\n  @override\n  get downloading => \"下载...\";\n  @override\n  get expirydate => \"到期日 ：\";\n  @override\n  get youreallywanttodelete => \"你真的要删除\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"packetNo\": \"包号：\",\n    \"shape\": \"形状\",\n  };\n}\n\nclass ChineseErrorString extends ErrorString {\n  @override\n  get accessDenide => \"拒绝访问\";\n  @override\n  get pleaseSelectOfferTillDate => \"请选择报价，直到日期。\";\n  @override\n  get pleaseSelectOfficeVisitDate => \"请选择办公室访问日期\";\n  @override\n  get deleteStoneMsg => \"你确定要删除石（S）？\";\n  @override\n  get acceptTermsAndCondition => \"请接受条款和条件\";\n  @override\n  get diamondCompareRemove => \"至少2块石头都需要进行比较。\";\n  @override\n  get diamondSelectionError => \"请选择至少一石。\";\n  @override\n  get pleaseEnterCompanyName => \"请输入公司名称。\";\n  @override\n  get selectInvoiceDate => \"选择发票日期\";\n  @override\n  get pleaseEnterComment => \"请输入评论。\";\n  @override\n  get pleaseEnterRemarks => \"请输入备注。\";\n  @override\n  get selectExpiryDate => \"请选择到期日。\";\n  @override\n  get enterOTP => \"请输入代码\";\n  @override\n  get pleaseEnterOTP => \"请输入验证码。\";\n  @override\n  get enteredCodeNotMatching => \"输入的代码不匹配。再试一次\";\n  @override\n  get selectCancellationReason => \"请选择取消原因\";\n  @override\n  get enterDesc => \"请输入描述。\";\n  @override\n  get enterTitle => \"请输入标题。\";\n  @override\n  get enterEmailOrPhone => \"请输入电子邮件/移动。\";\n  @override\n  get enterPassword => \"密码不能为空。请输入密码。\";\n  @override\n  get enterConfirmPassword => \"请输入确认密码。\";\n  @override\n  get enterSkype => \"请输入Skype的。\";\n  @override\n  get enterRegisterCode => \"请输入注册码\";\n  @override\n  get enterEmail => \"请输入电子邮件地址。\";\n  @override\n  get enterPhone => \"请输入手机号码。\";\n  @override\n  get enterUsername => \"用户名不能为空。请输入用户名。\";\n  @override\n  get enterValidEmail => \"请输入有效电子邮件地址。\";\n  @override\n  get enterValidPhone => \"请输入有效的手机号码。\";\n  @override\n  get enterValidWhatsappPhone => \"请输入有效的WhatsApp的手机号码。\";\n  @override\n  get enterValidPassword => \"请输入6个字符或长密码。\";\n  @override\n  get mismatchPassword => \"密码和确认密码不匹配。\";\n  @override\n  get enterFirstName => \"请输入名字。\";\n  @override\n  get enterMiddleName => \"请输入中间名。\";\n  @override\n  get enterPinCode => \"请输入PIN码。\";\n  @override\n  get enterName => \"请输入名称。\";\n  @override\n  get enterLastName => \"请输入姓氏。\";\n  @override\n  get enterAddress => \"请输入地址。\";\n  @override\n  get enterValidPinCode => \"输入pin码有效。\";\n  @override\n  get enterValidAddress => \"请输入10个字符或长地址。\";\n  @override\n  get enterPostalCode => \"请输入邮政编码。\";\n  @override\n  get enterValidPostalCode => \"请输入6位数字的邮政编码。\";\n  @override\n  get enterCurrentPassword => \"请输入当前的密码。\";\n  @override\n  get enterNewPassword => \"请输入新的密码。\";\n  @override\n  get enterFareAmount => \"请输入销售金额。\";\n  @override\n  get enterOrderNO => \"请输入任何命令。\";\n  @override\n  get enterServiceType => \"请选择服务类型。\";\n  @override\n  get enterPaymentType => \"请选择付款方式。\";\n  @override\n  get enterValidFareAmount => \"销售金额不能为零。\";\n  @override\n  get enterPassangerNo => \"请输入no。的乘客。\";\n  @override\n  get enterValidPassangerNo => \"乘客人数不能为零。\";\n  @override\n  get notEnterMorePassangerNo => \"乘客人数不能超过7。\";\n  @override\n  get drivingLicenseValidationText => \"请输入15位的字母数字驾驶执照号码。\";\n  @override\n  get pANCardValidationText => \"请输入10位的字母数字PAN卡号码。\";\n  @override\n  get selectFromDate => \"请从日期选择\";\n  @override\n  get selectToDate => \"请选择最新\";\n  @override\n  get fromGreaterTo => \"选定的日期必须大于当前日期\";\n  @override\n  get wrongPassword => \"密码必须含有至少8个字符，1个大写字母，1个小写字母，1位，1个特殊系统字符\";\n  @override\n  get fromValueGreateThanTo => \"从值应小于或等于要值\";\n  @override\n  get toValueGreaterThanFrom => \"价值应大于或等于从价值\";\n  @override\n  get pleaseEnterCompanyCode => \"请输入公司代码\";\n  @override\n  get enterSamePassword => \"确认密码不匹配新密码。请输入确认密码相同的新密码。\";\n  @override\n  get selectAppointmentDate => \"请选择预约日期\";\n  @override\n  get selectTimeSlot => \"请选择时隙\";\n  @override\n  get enterComments => \"请填写评论\";\n  @override\n  get selectVirtualType => \"请选择虚拟型\";\n  @override\n  get versionError => \"版本错误\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ChineseNoDataStrings extends NoDataStrings {\n  @override\n  get noDataFound => \"没有找到记录\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ChineseScreenTitle extends ScreenTitle {\n  @override\n  get placeAnOffer => \"将报价\";\n  @override\n  get addedInWatchList => \"加入监视列表\";\n  @override\n  get addedInOffer => \"提交报价\";\n  @override\n  get addedInCart => \"加入购物车\";\n  @override\n  get addedInBid => \"加入投标\";\n  @override\n  get myEnquiry => \"我的询价\";\n  @override\n  get delete => \"删除\";\n  @override\n  get addDemand => \"添加请求\";\n  @override\n  get matchPair => \"比赛配对\";\n  @override\n  get savedAndSearch => \"保存和搜索\";\n  @override\n  get updateAndSearch => \"更新和搜索\";\n  @override\n  get upcoming => \"即将到来\";\n  @override\n  get bidPricePerCt => \"买入价/ CT\";\n  @override\n  get bidDisc => \"竞价盘\";\n  @override\n  get bidValue => \"投标值\";\n  @override\n  get bidStone => \"投标石\";\n  @override\n  get myCart => \"我的车\";\n  @override\n  get myComment => \"我的笔记\";\n  @override\n  get compare => \"比较\";\n  @override\n  get compareStones => \"比较石头\";\n  @override\n  get statusHold => \"等候接听\";\n  @override\n  get statusOnMemo => \"在备忘录\";\n  @override\n  get statusAvailable => \"可得到\";\n  @override\n  get statusNew => \"新品到货\";\n  @override\n  get statusOffer => \"石天/促销\";\n  @override\n  get statusMyHold => \"我保持\";\n  @override\n  get signup => \"注册\";\n  @override\n  get addToOffice => \"添加到办公室\";\n  @override\n  get addComment => \"添加评论\";\n  @override\n  get addEnquiry => \"加入询价\";\n  @override\n  get finalOffer => \"最终发\";\n  @override\n  get finalDisc => \"最终光盘\";\n  @override\n  get finalRate => \"最终速率\";\n  @override\n  get finalValue => \"最终值\";\n  @override\n  get orderMsg => \"1）价格提到在这里是固定的，因此没有商量的余地。 \\\\ N2）分级，参数上我们超越GIA的分级网站提及。\";\n  @override\n  get offerMsg =>\n      \"如果价格得到批准，所以我们要求你要发行之前，请确保所提供的石头会直接予以确认。放在发售列表中的所有石（S）没有保持搁置了你，因为它是供其他客户也是如此。\";\n  @override\n  get note => \"注意\";\n  @override\n  get hours => \"小时\";\n  @override\n  get offeredDisc => \"参团派息\";\n  @override\n  get offeredPriceCt => \"提供镨/ CT\";\n  @override\n  get addOffer => \"新增优惠\";\n  @override\n  get expDiscPer => \"预计折扣\";\n  @override\n  get todayDiscPer => \"今天的盘\";\n  @override\n  get searchResult => \"搜索结果\";\n  @override\n  get searchDiamond => \"搜索钻石\";\n  @override\n  get basic => \"基本\";\n  @override\n  get advanced => \"高级\";\n  @override\n  get stoneIdCertNo => \"StoneID /证书号\";\n  @override\n  get takeSignature => \"拿签名\";\n  @override\n  get optional => \"可选的\";\n  @override\n  get myAddress => \"我的地址\";\n  @override\n  get expiryDate => \"到期日\";\n  @override\n  get drivingLicenceDesc => \"你的驾驶执照图片\";\n  @override\n  get panDesc => \"您的PAN卡图片\";\n  @override\n  get selfie => \"自拍\";\n  @override\n  get selfieDesc => \"您的自拍照片\";\n  @override\n  get pending => \"待定\";\n  @override\n  get rejected => \"拒绝\";\n  @override\n  get uploadAgain => \"上传\";\n  @override\n  get remove => \"去掉\";\n  @override\n  get title => \"标题\";\n  @override\n  get description => \"描述\";\n  @override\n  get uploadYour => \"上传\";\n  @override\n  get raiseDispute => \"告诉我们\";\n  @override\n  get drivingLicense => \"驾照\";\n  @override\n  get pANCard => \"PAN卡\";\n  @override\n  get saveContinue => \"保存并继续\";\n  @override\n  get uploadFrontUmgText => \"上传正面图像\";\n  @override\n  get uploadPANCardImgText => \"上传PAN卡图片\";\n  @override\n  get uploadBackImageText => \"上传背面图像\";\n  @override\n  get helptopic => \"帮助主题\";\n  @override\n  get newRideSharingRequest => \"新的拼车要求\";\n  @override\n  get newRequest => \"新要求\";\n  @override\n  get welcomeTo => \"欢迎来到\";\n  @override\n  get welcomeDesc => \"登录到您的现有帐户摩尼宝石的\";\n  @override\n  get forgotPassword => \"忘了你的\";\n  @override\n  get forgotPasswordDesc => \"输入你的手机号码，以恢复您的密码。\";\n  @override\n  get termsAndCondition => \"条款和条件\";\n  @override\n  get privacyPolicy => \"隐私政策\";\n  @override\n  get aboutUS => \"关于我们\";\n  @override\n  get otpVerification => \"验证码换乘\";\n  @override\n  get otpVerificationDelivery => \"验证应答码\";\n  @override\n  get otpVerificationDeliveryDone => \"验证码交付\";\n  @override\n  get enterOtp => \"输入4位数\";\n  @override\n  get recoveryCode => \"恢复码\";\n  @override\n  get editProfile => \"编辑个人资料\";\n  @override\n  get myProfile => \"我的简历\";\n  @override\n  get reset => \"重启\";\n  @override\n  get yourPassword => \"你的密码\";\n  @override\n  get photo => \"照片\";\n  @override\n  get otpDesc => \"恢复码已发送到您的手机号码。请输入验证码。\";\n  @override\n  get otpVerifyDesc => \"验证码已发送到您的手机号码。请输入验证码。\";\n  @override\n  get diamondDetail => \"钻石详细\";\n  @override\n  get home => \"家\";\n  @override\n  get search => \"搜索\";\n  @override\n  get quickSearch => \"快速搜索\";\n  @override\n  get newArrival => \"新品到货\";\n  @override\n  get exclusiveDiamonds => \"独家钻石级\";\n  @override\n  get diamondOnAuction => \"钻石拍卖\";\n  @override\n  get stoneOfTheDays => \"百思买\";\n  @override\n  get myWatchlist => \"我的关注\";\n  @override\n  get myBid => \"我的出价\";\n  @override\n  get myHold => \"我保持\";\n  @override\n  get myOrder => \"我的有序列表\";\n  @override\n  get confirmStone => \"确认石\";\n  @override\n  get myOffice => \"我的办公室查看\";\n  @override\n  get myOffer => \"我的报价列表\";\n  @override\n  get myPurchased => \"我购买的历史\";\n  @override\n  get mySavedSearch => \"我保存的搜索\";\n  @override\n  get savedSearch => \"保存的搜索\";\n  @override\n  get myDemand => \"我的需求\";\n  @override\n  get contactUs => \"联系我们\";\n  @override\n  get changePassword => \"更改密码\";\n  @override\n  get logout => \"登出\";\n  @override\n  get fareDetailsTitle => \"进入销售详细信息\";\n  @override\n  get fairAmt => \"销售额\";\n  @override\n  get noOfPassengers => \"乘客人数\";\n  @override\n  get remarks => \"备注\";\n  @override\n  get orderNo => \"订单号。\";\n  @override\n  get typeOfService => \"服务类型\";\n  @override\n  get paymentType => \"支付方式*\";\n  @override\n  get recentlyView => \"最近查看\";\n  @override\n  get uploadImgValidationText => \"具有大小为5 MB或更少上传文件必须是.JPG，.JPEG，png格式或.PDF。\";\n  @override\n  get drivingLicenseHintText => \"驾驶执照号码\";\n  @override\n  get pANCARDHintText => \"PAN卡号码\";\n  @override\n  get viewRide => \"查看游戏机\";\n  @override\n  get myVehicle => \"我的车\";\n  @override\n  get personalDocument => \"个人文档\";\n  @override\n  get help => \"救命\";\n  @override\n  get about => \"关于\";\n  @override\n  get bankDetails => \"银行明细\";\n  @override\n  get accountAndPayment => \"帐户和付费\";\n  @override\n  get enquiry => \"查询\";\n  @override\n  get download => \"下载\";\n  @override\n  get addToCart => \"添加到购物车\";\n  @override\n  get addToWatchList => \"加入观看列表\";\n  @override\n  get finalCalculation => \"最终计算\";\n  @override\n  get bookOffice => \"图书办公室\";\n  @override\n  get clearSelection => \"清空选项\";\n  @override\n  get comment => \"评论\";\n  @override\n  get hold => \"保持\";\n  @override\n  get offer => \"提供\";\n  @override\n  get officeView => \"办公室查看\";\n  @override\n  get placeOrder => \"下订单\";\n  @override\n  get buyNow => \"立即购买\";\n  @override\n  get cancelStone => \"取消石\";\n  @override\n  get share => \"分享\";\n  @override\n  get watchlist => \"监视列表\";\n  @override\n  get exclusive => \"独家\";\n  @override\n  get featuredStones => \"特色石材\";\n  @override\n  get stoneOfDay => \"日石\";\n  @override\n  get recentSearch => \"最近的搜索\";\n  @override\n  get viewAll => \"查看全部\";\n  @override\n  get salesPersonDetail => \"销售人员详细\";\n  @override\n  get searchTitle => \"搜索标题\";\n  @override\n  get enterSearchTitle => \"输入搜索标题\";\n  @override\n  get timeSlots => \"时隙\";\n  @override\n  get selectCustomDate => \"选择自定义日期\";\n  @override\n  get availableSlot => \"可用插槽\";\n  @override\n  get reqOfficeView => \"要求事务查看\";\n  @override\n  get myComments => \"我的评论\";\n  @override\n  get myReminder => \"我的提醒\";\n  @override\n  get reminder => \"提醒\";\n  @override\n  get manageAddress => \"管理地址\";\n  @override\n  get myAccount => \"我的帐户\";\n  @override\n  get declaimer => \"放弃\";\n  @override\n  get shareStone => \"分享石\";\n  @override\n  get addRemider => \"添加提醒\";\n  @override\n  get offlineSearch => \"在线搜索\";\n  @override\n  get searchHistory => \"搜索历史记录\";\n  @override\n  get offlineStock => \"脱机股票\";\n  @override\n  get searchOffline => \"搜索（离线）\";\n  @override\n  get voiceSearch => \"声音搜索\";\n  @override\n  get tapMictoSpeak => \"点击麦克风讲\";\n  @override\n  get typeToSearch => \"键入搜索\";\n  @override\n  get typeWordsToSearch => \"键入至少3个字进行搜索石头\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ChineseDynamickeys extends Dynamickeys {\n  @override\n  get shape => \"形状\";\n  @override\n  get caratRange => \"克拉范围\";\n  @override\n  get basicDetail => \"基本详情\";\n  @override\n  get measurementTitle => \"测量\";\n  @override\n  get inclusionDetail => \"包容详情\";\n  @override\n  get other => \"其他\";\n  @override\n  get stoneID => \"石ID\";\n  @override\n  get labTitle => \"实验室\";\n  @override\n  get certNo => \"CERT。没有。\";\n  @override\n  get locationTitle => \"位置\";\n  @override\n  get shapeTitle => \"形状\";\n  @override\n  get caratTitle => \"克拉\";\n  @override\n  get colorTitle => \"颜色\";\n  @override\n  get clarityTitle => \"明晰\";\n  @override\n  get cutTitle => \"切\";\n  @override\n  get polishTitle => \"抛光\";\n  @override\n  get symmentryTitle => \"Symmentry\";\n  @override\n  get fluorescenceTitle => \"荧光\";\n  @override\n  get rapTitle => \"Rap（％）\";\n  @override\n  get discountTitle => \"折扣（％）\";\n  @override\n  get priceAndCt => \"价格/ CT\";\n  @override\n  get amountTitle => \"量\";\n  @override\n  get eyeCleanTitle => \"眼部清洁\";\n  @override\n  get brownTitle => \"棕色\";\n  @override\n  get milkyTitle => \"乳白色\";\n  @override\n  get mixTingeTitle => \"MIX色彩\";\n  @override\n  get dimensionTitle => \"尺寸（mm）\";\n  @override\n  get girdleTitle => \"腰带（％）\";\n  @override\n  get tableTitle => \"表％\";\n  @override\n  get crownAngleTitle => \"皇冠角\";\n  @override\n  get depthTitle => \"深度％\";\n  @override\n  get pavAngleTitle => \"Pav Angle\";\n  @override\n  get crownHeightTitle => \"冠高（％）\";\n  @override\n  get pavDepthTitle => \"亭深比（％）\";\n  @override\n  get starLengthTitle => \"长星\";\n  @override\n  get lowerHalfTitle => \"下半\";\n  @override\n  get gridleTitle => \"腰带\";\n  @override\n  get gridleFacetedTitle => \"束带FACETED\";\n  @override\n  get culetTitle => \"底尖\";\n  @override\n  get rationTitle => \"比\";\n  @override\n  get blackInclusionTitle => \"黑色包裹体\";\n  @override\n  get otherInclusionTitle => \"其他入选\";\n  @override\n  get openInclusionTitle => \"打开包裹\";\n  @override\n  get extraFacetTitle => \"EXTRA FACET\";\n  @override\n  get naturalTitle => \"自然\";\n  @override\n  get hAndATitle => \"哈\";\n  @override\n  get keyToSymbol => \"关键符号\";\n  @override\n  get labComments => \"LAB评论\";\n  @override\n  get laserInsTitle => \"激光惯导系统\";\n  @override\n  get basicTitle => \"基本\";\n  @override\n  get advancedTitle => \"高级\";\n  @override\n  get stoneIdTitle => \"石ID /证书号\";\n  @override\n  get defaultTitle => \"默认\";\n  @override\n  get newDiamondsTitle => \"新的钻石\";\n  @override\n  get priceLowToHigh => \"价格由低到高\";\n  @override\n  get priceHighToLow => \"价格从高到低\";\n  @override\n  get disLowToHigh => \"折扣低到高\";\n  @override\n  get disHighToLow => \"折扣高至低\";\n  @override\n  get colorLowToHigh => \"颜色从低到高\";\n  @override\n  get colorHighToLow => \"颜色从高到低\";\n  @override\n  get caratLowToHigh => \"克拉低到高\";\n  @override\n  get caratHighToLow => \"克拉从高到低\";\n  @override\n  get clarityLowToHigh => \"净度从低到高\";\n  @override\n  get clarityHighToLow => \"净度从高到低\";\n  @override\n  get colorShadeTitle => \"色光\";\n  @override\n  get certiTitle => \"证书编号\";\n  @override\n  get arrivalsTitle => \"到达\";\n  @override\n  get lengthTitle => \"长度\";\n  @override\n  get widthTitle => \"宽度\";\n  @override\n  get pavilionAngleTitle => \"亭角\";\n  @override\n  get girdleConditionTitle => \"束带条件\";\n  @override\n  get cluetConditionTitle => \"底尖状况\";\n  @override\n  get disTitle => \"派息％\";\n  @override\n  get depthTitleWithoutPerc => \"深度\";\n  @override\n  get otherInformationTitle => \"其他信息\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"shape\": \"形状\",\n    \"caratRange\": \"克拉范围\",\n    \"basicDetail\": \"基本详情\",\n    \"measurementTitle\": \"测量\",\n    \"inclusionDetail\": \"包容详情\",\n    \"other\": \"其他\",\n    \"stoneID\": \"石ID\",\n    \"labTitle\": \"实验室\",\n    \"certNo\": \"CERT。没有。\",\n    \"locationTitle\": \"位置\",\n    \"caratTitle\": \"克拉\",\n    \"colorTitle\": \"颜色\",\n    \"clarityTitle\": \"明晰\",\n    \"cutTitle\": \"切\",\n    \"polishTitle\": \"抛光\",\n    \"symmentryTitle\": \"Symmentry\",\n    \"fluorescenceTitle\": \"荧光\",\n    \"rapTitle\": \"Rap（％）\",\n    \"discountTitle\": \"折扣（％）\",\n    \"priceAndCt\": \"价格/ CT\",\n    \"amountTitle\": \"量\",\n    \"eyeCleanTitle\": \"眼部清洁\",\n    \"brownTitle\": \"棕色\",\n    \"milkyTitle\": \"乳白色\",\n    \"mixTingeTitle\": \"MIX色彩\",\n    \"dimensionTitle\": \"尺寸（mm）\",\n    \"girdleTitle\": \"腰带（％）\",\n    \"tableTitle\": \"表％\",\n    \"crownAngleTitle\": \"皇冠角\",\n    \"depthTitle\": \"深度％\",\n    \"pavAngleTitle\": \"Pav Angle\",\n    \"crownHeightTitle\": \"冠高（％）\",\n    \"pavDepthTitle\": \"亭深比（％）\",\n    \"starLengthTitle\": \"长星\",\n    \"lowerHalfTitle\": \"下半\",\n    \"gridleTitle\": \"腰带\",\n    \"gridleFacetedTitle\": \"束带FACETED\",\n    \"culetTitle\": \"底尖\",\n    \"rationTitle\": \"比\",\n    \"blackInclusionTitle\": \"黑色包裹体\",\n    \"otherInclusionTitle\": \"其他入选\",\n    \"openInclusionTitle\": \"打开包裹\",\n    \"extraFacetTitle\": \"EXTRA FACET\",\n    \"naturalTitle\": \"自然\",\n    \"hAndATitle\": \"哈\",\n    \"keyToSymbol\": \"关键符号\",\n    \"labComments\": \"LAB评论\",\n    \"laserInsTitle\": \"激光惯导系统\",\n    \"basicTitle\": \"基本\",\n    \"advancedTitle\": \"高级\",\n    \"stoneIdTitle\": \"石ID /证书号\",\n    \"defaultTitle\": \"默认\",\n    \"newDiamondsTitle\": \"新的钻石\",\n    \"priceLowToHigh\": \"价格由低到高\",\n    \"priceHighToLow\": \"价格从高到低\",\n    \"disLowToHigh\": \"折扣低到高\",\n    \"disHighToLow\": \"折扣高至低\",\n    \"colorLowToHigh\": \"颜色从低到高\",\n    \"colorHighToLow\": \"颜色从高到低\",\n    \"caratLowToHigh\": \"克拉低到高\",\n    \"caratHighToLow\": \"克拉从高到低\",\n    \"clarityLowToHigh\": \"净度从低到高\",\n    \"clarityHighToLow\": \"净度从高到低\",\n    \"colorShadeTitle\": \"色光\",\n    \"certiTitle\": \"证书编号\",\n    \"arrivalsTitle\": \"到达\",\n    \"lengthTitle\": \"长度\",\n    \"widthTitle\": \"宽度\",\n    \"pavilionAngleTitle\": \"亭角\",\n    \"girdleConditionTitle\": \"束带条件\",\n    \"cluetConditionTitle\": \"底尖状况\",\n    \"disTitle\": \"派息％\",\n    \"depthTitleWithoutPerc\": \"深度\",\n    \"otherInformationTitle\": \"其他信息\",\n  };\n}\n\nclass French extends English {\n  @override\n  get authStrings => FrenchAuthStrings();\n  @override\n  get commonString => FrenchCommonString();\n  @override\n  get errorString => FrenchErrorString();\n  @override\n  get noDataStrings => FrenchNoDataStrings();\n  @override\n  get screenTitle => FrenchScreenTitle();\n  @override\n  get dynamickeys => FrenchDynamickeys();\n  static String get languageCode => \"French\";\n  static String get languageName => \"French\";\n}\n\nclass FrenchAuthStrings extends AuthStrings {\n  @override\n  get editCompanyInformation =>\n      \"Quelque chose a mal tourné! \\\\n Déroulez Actualiser\";\n  @override\n  get selectNatureOfOrganization => \"Sélectionnez la nature de l'organisation\";\n  @override\n  get setNewPassword =>\n      \"Définissez votre nouveau mot de passe et vous connecter à nouveau.\";\n  @override\n  get enterCompanyName => \"S'il vous plaît entrer Nom de la société.\";\n  @override\n  get pleaseEnterCustomerOTP =>\n      \"S'il vous plaît entrer le code de conduite du client.\";\n  @override\n  get pleaseEnterPickupOTP =>\n      \"S'il vous plaît entrer le code de pick-up à la clientèle.\";\n  @override\n  get pleaseEnterDeliveryOTP =>\n      \"S'il vous plaît entrer le code de livraison du client.\";\n  @override\n  get verified => \"Vérifié\";\n  @override\n  get verify => \"Vérifier\";\n  @override\n  get addressLineOne => \"Adresse 1\";\n  @override\n  get addressLineTwo => \"Adresse 2\";\n  @override\n  get addressLineThree => \"adresse 3\";\n  @override\n  get oldPassword => \"ancien mot de passe\";\n  @override\n  get skype => \"Skype\";\n  @override\n  get whatsApp => \"WhatsApp\";\n  @override\n  get pinCode => \"Code PIN*\";\n  @override\n  get verifyMobileDesc =>\n      \"S'il vous plaît vérifier le numéro mobile pour mettre à jour le profil.\";\n  @override\n  get verifyNow => \"Vérifiez maintenant\";\n  @override\n  get password => \"Mot de passe\";\n  @override\n  get backToHome => \"Aller à la maison\";\n  @override\n  get forgotPassword => \"Mot de passe oublié?\";\n  @override\n  get signInCap => \"Se connecter\";\n  @override\n  get moveToLogIn => \"Déplacer vers Connexion\";\n  @override\n  get dontHaveAnAccount => \"#ERROR!\";\n  @override\n  get clickHere => \"Cliquez ici\";\n  @override\n  get signUpHere => \"Inscrivez-vous ici\";\n  @override\n  get reset => \"Réinitialiser\";\n  @override\n  get haveRegisterCode => \"Un code d'enregistrement?\";\n  @override\n  get welcome => \"Nous saluons le retour!\";\n  @override\n  get signInAsGuest => \"Se connecter comme invité\";\n  @override\n  get editProfileTitle => \"Editer le profil\";\n  @override\n  get emaillbl => \"Email\";\n  @override\n  get searchInventory => \"Recherche produit\";\n  @override\n  get emailAddress => \"Adresse e-mail*\";\n  @override\n  get offlineFilter =>\n      \"Impossible de trouver le solitaire désiré? Nous pouvons vous aider à obtenir la meilleure affaire de notre inventaire hors ligne.\";\n  @override\n  get loginDesc =>\n      \"Est-ce que vous voulez activer tactile Id / Ampin pour déverrouiller Mes diamants? S'il vous plaît choisir une option pour l'application déverrouiller\";\n  @override\n  get searchDiamonds => \"Recherche diamants\";\n  @override\n  get continueWithSearch => \"Voulez-vous continuer votre recherche?\";\n  @override\n  get mobileNumber => \"Mobile\";\n  @override\n  get searchHint => \"Chercher...\";\n  @override\n  get selectYourCountry => \"Choisissez le pays\";\n  @override\n  get resendCodeIn => \"Code Renvoyez\";\n  @override\n  get resendCode => \"Recevoir à nouveau\";\n  @override\n  get haveAnAccount => \"Vous avez déjà un compte?\";\n  @override\n  get dontReceiveCode => \"Si vous ne recevez pas de code!\";\n  @override\n  get inLogin => \"ouvrir une session.\";\n  @override\n  get resetPwdDesc =>\n      \"Ajouter un mot de passe et confirmez le mot de passe pour réinitialiser votre mot de passe.\";\n  @override\n  get backToLogin => \"Retour connexion\";\n  @override\n  get firstName => \"Prénom*\";\n  @override\n  get name => \"Nom d'utilisateur*\";\n  @override\n  get lastName => \"Nom de famille*\";\n  @override\n  get middleName => \"Deuxième nom*\";\n  @override\n  get confirmPassword => \"Confirmez le mot de passe\";\n  @override\n  get currentPasswordErr => \"Erreur de mot de passe actuel\";\n  @override\n  get passwordChanged => \"Mot de passe changé\";\n  @override\n  get lblLogInErr => \"Erreur d'identification\";\n  @override\n  get enterYour => \"Entrez votre\";\n  @override\n  get details => \"Détails\";\n  @override\n  get registerCode => \"Code d'enregistrement\";\n  @override\n  get registerCodeDesc =>\n      \"Ajouter un code d'enregistrement pour commencer votre inscription avec 3Eco.\";\n  @override\n  get uploadPhotoDesc => \"Prenez un selfie de votre auto\";\n  @override\n  get updateProfile => \"Mettre à jour le profil\";\n  @override\n  get postalCode => \"Code postal*\";\n  @override\n  get removeButton => \"Retirer\";\n  @override\n  get gender => \"Le sexe\";\n  @override\n  get male => \"Masculin\";\n  @override\n  get female => \"Femme\";\n  @override\n  get changePassword => \"Changer le mot de passe\";\n  @override\n  get currentPassword => \"Mot de passe actuel*\";\n  @override\n  get newPassword => \"Nouveau mot de passe*\";\n  @override\n  get confirmNewPassword => \"Confirmez le mot de passe*\";\n  @override\n  get personalDocuments => \"Documents personnels\";\n  @override\n  get assignedAuto => \"attribué automatiquement\";\n  @override\n  get logout => \"Se déconnecter\";\n  @override\n  get logoutConfirmationMsg => \"Êtes-vous sûr de vouloir vous déconnecter?\";\n  @override\n  get address => \"Adresse*\";\n  @override\n  get accountNumber => \"Numéro de compte\";\n  @override\n  get bankerName => \"Les banquiers Nom\";\n  @override\n  get nameLable => \"Nom\";\n  @override\n  get ifscCode => \"Code IFSC\";\n  @override\n  get businessRegistrationNumbr => \"Numéro d'enregistrement professionel\";\n  @override\n  get businessRelationshipPeriod => \"Relation d'affaires Période (en années)\";\n  @override\n  get designation => \"La désignation\";\n  @override\n  get nameofDesignation => \"Nom de\";\n  @override\n  get natureofOrganization => \"Nature de l'organisation\";\n  @override\n  get uploadFile => \"Aucun fichier Choosen\";\n  @override\n  get update => \"METTRE À JOUR\";\n  @override\n  get resetPwd => \"réinitialiser le mot de passe\";\n  @override\n  get pwdReset => \"Réinitialisation du mot de passe\";\n  @override\n  get signInWithMPIN => \"Connectez-vous avec MPIN\";\n  @override\n  get pwdChanged => \"Mot de passe changé\";\n  @override\n  get successfullyPwdDesc =>\n      \"Vous avez réussi à réinitialiser votre mot de passe. S'il vous plaît utiliser votre nouveau mot de passe lors de la connexion.\";\n  @override\n  get lblProfileSetup => \"Votre profil est mis en place\";\n  @override\n  get lblProfileSetupDesc => \"Nous avons reçu les détails de votre profil\";\n  @override\n  get hoursAvailable => \"total des Shifttime\";\n  @override\n  get confirmStoneDetail => \"Confirmer Détail Pierre\";\n  @override\n  get companyName => \"Nom de la compagnie\";\n  @override\n  get invoiceDate => \"date de la facture\";\n  @override\n  get companyCode => \"Code de l'entreprise\";\n  @override\n  get saveCompanyDetails => \"Enregistrer sur la société\";\n  @override\n  get passwordNotChange => \"Le mot de passe ne correspond pas\";\n  @override\n  get rememberPassword => \"Se souvenir du mot de passe?\";\n  @override\n  get sendOTP => \"Envoyer OTP\";\n  @override\n  get resendNow => \"maintenant Renvoyer\";\n  @override\n  get didNotReceiveOTP => \"Si vous ne recevez pas un OTP!\";\n  @override\n  get sendOTPToEmail =>\n      \"Nous vous ferons parvenir un OTP à votre adresse e-mail indiquée ou nom d'utilisateur. S'il vous plaît entrez l'adresse e-mail ou nom d'utilisateur.\";\n  @override\n  get enterOTP =>\n      \"Le Bureau du Procureur a été envoyé à votre adresse e-mail enregistrée. S'il vous plaît entrer dans le Bureau du Procureur.\";\n  @override\n  get backToSignIn => \"Retour à Se connecter\";\n  @override\n  get passwordResetSuccessfully => \"Mot de passe remis à zéro.\";\n  @override\n  get emailAndUname => \"Email /\";\n  @override\n  get signUp => \"S'inscrire\";\n  @override\n  get promotionText => \"Offres promotionnelles\";\n  @override\n  get termsAndCondition => \"Termes et conditions\";\n  @override\n  get mustAgreeTermsAndCondition =>\n      \"Vous devez accepter les termes et condition Se connecter comme Utilisateur invité\";\n  @override\n  get forgotPasswordTitle => \"Mot de passe oublié\";\n  @override\n  get uploadKYC => \"Télécharger KYC\";\n  @override\n  get uploadKycDesc =>\n      \"S'il vous plaît télécharger vos documents KYC pour accéder aux fonctionnalités complètes.\";\n  @override\n  get hintPhotoIdentityProof => \"Photo preuve d'identité *\";\n  @override\n  get hintBussinerssProof => \"Identité d'entreprise Preuve *\";\n  @override\n  get btnFileUpload => \"Téléchargement de fichiers\";\n  @override\n  get pleaseUploadPhotoProof =>\n      \"S'il vous plaît télécharger Preuve photo d'identité.\";\n  @override\n  get pleaseUploadBussinessProof =>\n      \"S'il vous plaît télécharger Une preuve d'identité d'entreprise.\";\n  @override\n  get pleaseSelectFileFormat =>\n      \"S'il vous plaît télécharger le fichier dans l'un des formats suivants: .jpg\";\n  @override\n  get kycSubmitted => \"KYC Soumis\";\n  @override\n  get kycSubmmittedDesc => \"Votre KYC a été soumis avec succès.\";\n  @override\n  get btnMoveToHome => \"Déplacer à l'accueil\";\n  @override\n  get kYCRejected => \"KYC Rejeté\";\n  @override\n  get kycRejectedDesc =>\n      \"Votre KYC a été rejetée. S'il vous plaît télécharger vos documents KYC à nouveau pour accéder à toutes les fonctionnalités.\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass FrenchCommonString extends CommonString {\n  @override\n  get seeMore => \"voir plus\";\n  @override\n  get seeLess => \"Voir Moins\";\n  @override\n  get modify => \"Modifier\";\n  @override\n  get delete => \"Effacer\";\n  @override\n  get details => \"Détails\";\n  @override\n  get edit => \"Éditer\";\n  @override\n  get addDemand => \"Ajouter la demande\";\n  @override\n  get demandTitle => \"Titre de la demande\";\n  @override\n  get pleaseEnterDemandTitle => \"S'il vous plaît entrer le titre de la demande\";\n  @override\n  get demandAddedSuccessfully => \"La demande d'ajout avec succès\";\n  @override\n  get selectAtleastOneFilter => \"S'il vous plaît\";\n  @override\n  get savedSearch => \"Recherche sauvegardée\";\n  @override\n  get searchSavedSearch => \"Recherche sauvegardée Recherche\";\n  @override\n  get viewDetails => \"Voir les détails\";\n  @override\n  get viewLessDetails => \"Voir Moins de détails\";\n  @override\n  get myDemand => \"ma demande\";\n  @override\n  get date => \"Date\";\n  @override\n  get selectTime => \"Sélectionnez Heure\";\n  @override\n  get selectDate => \"Sélectionner une date\";\n  @override\n  get offerVelidTill => \"Offre valable jusqu'au\";\n  @override\n  get officeVisitDate => \"Bureau Date de la visite\";\n  @override\n  get all => \"Tout\";\n  @override\n  get status => \"Statut\";\n  @override\n  get save => \"sauver\";\n  @override\n  get verify => \"Vérifier\";\n  @override\n  get readMore => \"Lire la suite\";\n  @override\n  get goodMorning => \"Bonjour\";\n  @override\n  get goodAfternoon => \"Bonne après-midi\";\n  @override\n  get goodEvening => \"Bonsoir\";\n  @override\n  get btnSkip => \"Sauter\";\n  @override\n  get btnUpdate => \"Mettre à jour\";\n  @override\n  get btnContinue => \"Continuer\";\n  @override\n  get btnContinueCap => \"CONTINUER\";\n  @override\n  get btnEdit => \"Éditer\";\n  @override\n  get btnSubmit => \"Soumettre\";\n  @override\n  get btnNextCap => \"Prochain\";\n  @override\n  get btnSaveCap => \"Mettre à jour le mot de passe\";\n  @override\n  get btnWithdrawCap => \"SE DÉSISTER\";\n  @override\n  get btnSaveAndContinueCap => \"ENREGISTRER CONTINUER\";\n  @override\n  get btnUnregister => \"non enregistré mobile\";\n  @override\n  get btnClose => \"Fermer\";\n  @override\n  get remove => \"Retirer\";\n  @override\n  get refresh => \"Rafraîchir\";\n  @override\n  get fetchLocationMessage =>\n      \"S'il vous plaît attendre que nous récupérions votre emplacement\";\n  @override\n  get done => \"Terminé\";\n  @override\n  get doneCap => \"TERMINÉ\";\n  @override\n  get cancel => \"Annuler\";\n  @override\n  get allow => \"Autoriser\";\n  @override\n  get countryFirst => \"Choisissez un pays d'abord\";\n  @override\n  get apply => \"Appliquer\";\n  @override\n  get cancelCap => \"ANNULER\";\n  @override\n  get uploadCap => \"TÉLÉCHARGER\";\n  @override\n  get yesCancelCap => \"OUI\";\n  @override\n  get upload => \"Télécharger\";\n  @override\n  get ok => \"D'accord\";\n  @override\n  get home => \"Accueil\";\n  @override\n  get goToMyWatchList => \"Allez à ma liste\";\n  @override\n  get goToMyOrder => \"Allez à ma commande\";\n  @override\n  get gotToMyOffer => \"Aller à mon offre\";\n  @override\n  get gotToMyHold => \"Allez à mon attente\";\n  @override\n  get gotToMyEnquiry => \"Allez à mon enquête\";\n  @override\n  get gotToMyBid => \"Allez à mon offre\";\n  @override\n  get gotToMyReminder => \"Allez à Mon Rappel\";\n  @override\n  get gotToMyComments => \"Aller à Mes notes\";\n  @override\n  get yes => \"Oui\";\n  @override\n  get no => \"Non\";\n  @override\n  get selectCountry => \"Choisissez le pays\";\n  @override\n  get clickHere => \"Cliquez ici\";\n  @override\n  get btnAddNewAddress => \"AJOUTER UNE NOUVELLE ADRESSE\";\n  @override\n  get btnCancel => \"ANNULER\";\n  @override\n  get btnTakeSelfie => \"prenez selfie\";\n  @override\n  get successfully => \"Avec succès\";\n  @override\n  get lblAppExit => \"Êtes-vous sûr de vouloir quitter?\";\n  @override\n  get lblExit => \"Sortie\";\n  @override\n  get openAppSetting => \"ouvrir les paramètres\";\n  @override\n  get lblOr => \"Ou\";\n  @override\n  get fromLbl => \"De\";\n  @override\n  get toLbl => \"À\";\n  @override\n  get showMore => \"Montre plus\";\n  @override\n  get showLess => \"Montrer moins\";\n  @override\n  get selectCity => \"Sélectionnez une ville\";\n  @override\n  get notYetAvailable => \"Pas encore disponible\";\n  @override\n  get updateAvailable => \"Mise à jour disponible!\";\n  @override\n  get downloadAppFrom => \"Télécharger l'application de mise à jour\";\n  @override\n  get playStore => \"Play Store\";\n  @override\n  get skipUpdate => \"Sauter Mise à jour\";\n  @override\n  get stateFirst => \"Veuillez sélectionner État d'abord\";\n  @override\n  get reallyExit => \"Vraiment quitter?\";\n  @override\n  get alert => \"Alerte!\";\n  @override\n  get loading => \"Chargement\";\n  @override\n  get error => \"Erreur\";\n  @override\n  get jumpToTop => \"Sauter vers le haut\";\n  @override\n  get ihaveread => \"j'ai lu et accepté\";\n  @override\n  get selected => \"Sélectionner\";\n  @override\n  get lbllogout => \"Se déconnecter\";\n  @override\n  get lblThanx => \"Je vous remercie\";\n  @override\n  get lblSelectCity => \"Sélectionnez une ville\";\n  @override\n  get lblSelectState => \"Sélectionnez l'état\";\n  @override\n  get lblSelectCountry => \"Choisissez le pays\";\n  @override\n  get lblCity => \"Ville\";\n  @override\n  get lblCountry => \"Pays\";\n  @override\n  get lblName => \"Nom\";\n  @override\n  get lblPinCode => \"Code PIN\";\n  @override\n  get lblMobileNumber => \"Numéro de portable\";\n  @override\n  get lblState => \"Etat\";\n  @override\n  get lblCode => \"Code:\";\n  @override\n  get lblOrderNo => \"N ° de commande:\";\n  @override\n  get lblOrderItem => \"Passer commande Référence:\";\n  @override\n  get lblDelivered => \"Livré\";\n  @override\n  get lblTicketReady => \"Votre billet est prêt\";\n  @override\n  get lblPersonTicket => \"Ticket de 2 personnes\";\n  @override\n  get lblShuttleBus => \"Navette\";\n  @override\n  get lblPickup => \"Ramasser\";\n  @override\n  get lblDropoff => \"Déposer\";\n  @override\n  get lblPassenger => \"Passager\";\n  @override\n  get lblDeliveryNo => \"No. de livraison\";\n  @override\n  get lblPrice => \"Prix\";\n  @override\n  get lblValid => \"Valable\";\n  @override\n  get lblRenew => \"Renouveler\";\n  @override\n  get lblDeparture => \"Départ\";\n  @override\n  get lblArrived => \"Arrivée\";\n  @override\n  get lblSendtoFriend => \"Envoyer à un ami\";\n  @override\n  get popupRenewTitle => \"renouveler billet\";\n  @override\n  get popupRenewDesc => \"Lorem ipsum dolor sit amet\";\n  @override\n  get popuplblPassenger => \"Passager\";\n  @override\n  get popuplblCancel => \"Annuler\";\n  @override\n  get popupbtnRenew => \"Renouveler\";\n  @override\n  get ridelblAwesome => \"Impressionnant\";\n  @override\n  get ridebtnDone => \"Terminé\";\n  @override\n  get offerPricePerCarat => \"Prix \u200B\u200Boffert (Cts)\";\n  @override\n  get dropOffText => \"Déposer\";\n  @override\n  get pickUpText => \"Ramasser\";\n  @override\n  get startAtText => \"Commencer à\";\n  @override\n  get endAtText => \"Fin à\";\n  @override\n  get personText => \"la personne\";\n  @override\n  get paymentScreenTitle => \"Paiement\";\n  @override\n  get pickuplbl => \"Ramasser\";\n  @override\n  get droplbl => \"Déposer\";\n  @override\n  get makePaymentButtonlbl => \"Effectuer le paiement\";\n  @override\n  get pessangerslbl => \"Les passagers\";\n  @override\n  get priceBreakuplbl => \"Prix \u200B\u200BBreakup\";\n  @override\n  get tripPricelbl => \"Prix \u200B\u200Bde voyage\";\n  @override\n  get taxeslbl => \"impôts\";\n  @override\n  get totallbl => \"Total\";\n  @override\n  get cardNumberhint => \"Numéro de carte\";\n  @override\n  get cvvhint => \"CVV\";\n  @override\n  get datehint => \"MM / AA\";\n  @override\n  get btnTryAgain => \"Réessayer\";\n  @override\n  get cityFirst => \"S'il vous plaît sélectionner la ville première\";\n  @override\n  get enterFareDetails => \"Entrez détails de vente\";\n  @override\n  get fromDate => \"Partir de la date\";\n  @override\n  get toDate => \"date sélectionnée\";\n  @override\n  get btnUnderstand => \"Je comprends\";\n  @override\n  get applicationUpdate => \"Mise à jour d'application\";\n  @override\n  get newVersionMessage =>\n      \"Une nouvelle version de l'application est disponible\";\n  @override\n  get paymentCollected => \"paiement Collected\";\n  @override\n  get addComment => \"Ajouter un commentaire\";\n  @override\n  get more => \"Plus\";\n  @override\n  get carat => \"Carat\";\n  @override\n  get pcs => \"pcs\";\n  @override\n  get cts => \"Cts\";\n  @override\n  get disc => \"disque%\";\n  @override\n  get avgPriceCrt => \"Moy. Prix \u200B\u200B/ Ct\";\n  @override\n  get amount => \"Montant\";\n  @override\n  get confirmStone => \"Confirmer pierre\";\n  @override\n  get confirm => \"Confirmer\";\n  @override\n  get offered => \"Offert\";\n  @override\n  get validTill => \"Valable jusqu'au\";\n  @override\n  get remark => \"Remarque\";\n  @override\n  get color => \"Couleur\";\n  @override\n  get colorGroup => \"Groupe de couleurs\";\n  @override\n  get colorFancy => \"Fantaisie\";\n  @override\n  get colorWhite => \"blanc\";\n  @override\n  get clarity => \"Clarté\";\n  @override\n  get clarityGroup => \"Groupe clarté\";\n  @override\n  get intensity => \"Intensité\";\n  @override\n  get overtone => \"Harmonique\";\n  @override\n  get selectBusinessType => \"Sélectionner le type d'entreprise\";\n  @override\n  get selectState => \"Sélectionnez l'état\";\n  @override\n  get search => \"Chercher\";\n  @override\n  get profile => \"Mon profil\";\n  @override\n  get personal => \"Personnel\";\n  @override\n  get business => \"Affaires\";\n  @override\n  get documents => \"documents\";\n  @override\n  get noSlotFound => \"Aucun emplacement trouvé\";\n  @override\n  get noDiamondFound =>\n      \"Aucun diamants correspondant à votre recherche. S'il vous plaît vous ajoutez exigez.\";\n  @override\n  get selectType => \"Sélectionner le type virtuel\";\n  @override\n  get noSavedSearch => \"Aucune recherche enregistrée Exists\";\n  @override\n  get searchCity => \"ville Recherche\";\n  @override\n  get searchCountry => \"Recherche Pays\";\n  @override\n  get searchState => \"État de recherche\";\n  @override\n  get notifications => \"Notification\";\n  @override\n  get enter2Stone =>\n      \"S'il vous plaît sélectionner au moins 2 pierre à comparer.\";\n  @override\n  get bidDesc =>\n      \"est actuellement situé en Inde et pour la livraison dans un autre pays en dehors de l'Inde prendra au moins 7-10 jours ouvrables.\";\n  @override\n  get packetNo => \"Non paquet:\";\n  @override\n  get quit => \"Quitter\";\n  @override\n  get agree => \"Je suis d'accord\";\n  @override\n  get laterToday => \"Plus tard aujourd'hui\";\n  @override\n  get toMorrow => \"Demain\";\n  @override\n  get nextWeek => \"Prochaine semaine\";\n  @override\n  get chooseAnother => \"Choisis un autre\";\n  @override\n  get dateTime => \"Date et heure\";\n  @override\n  get language => \"Langue\";\n  @override\n  get diamNow => \"DiamNow\";\n  @override\n  get noDocument => \"Aucun document trouvé\";\n  @override\n  get searchBusinessType => \"Rechercher Type d'entreprise\";\n  @override\n  get hours => \"Heures\";\n  @override\n  get minutes => \"Minutes\";\n  @override\n  get seconds => \"secondes\";\n  @override\n  get bidEndsIn => \"Offre se termine par:\";\n  @override\n  get shape => \"Forme\";\n  @override\n  get download => \"Télécharger\";\n  @override\n  get share => \"Partager\";\n  @override\n  get placeOrder => \"Passer la commande\";\n  @override\n  get enterComment => \"S'il vous plaît écrire votre commentaire\";\n  @override\n  get deleteItem => \"Etes-vous sûr que vous voulez supprimer?\";\n  @override\n  get shippingPolicy => \"Politique des transports maritimes\";\n  @override\n  get offerSundayRestriction =>\n      \"Dimanche n'est pas autorisé. Bureau journées de travail sont du lundi au samedi\";\n  @override\n  get weekAgo => \"Il ya 1 semaine\";\n  @override\n  get lastWeek => \"La semaine dernière\";\n  @override\n  get dayAgo => \"il y a quelques jours\";\n  @override\n  get onedayAgo => \"il y a 1 jour\";\n  @override\n  get yesterday => \"Hier\";\n  @override\n  get hourAgo => \"il y a des heures\";\n  @override\n  get onehourAgo => \"Il ya 1 heure\";\n  @override\n  get anhourAgo => \"Il y a une heure\";\n  @override\n  get mintuesAgo => \"il y a quelques minutes\";\n  @override\n  get onemintuesAgo => \"il y a 1 minute\";\n  @override\n  get amintueAgo => \"Il y'a une minute\";\n  @override\n  get secondsAgo => \"il y a quelques instants\";\n  @override\n  get justNow => \"Juste maintenant\";\n  @override\n  get today => \"Aujourd'hui\";\n  @override\n  get past => \"Passé\";\n  @override\n  get selectPhotoProof => \"sélection du document\";\n  @override\n  get pleaseSelectPhotoProof => \"S'il vous plaît sélectionner le document\";\n  @override\n  get selectBusinessProof => \"sélection du document\";\n  @override\n  get pleaseSelectBusinessProof => \"S'il vous plaît sélectionner le document\";\n  @override\n  get touchId => \"Id tactile\";\n  @override\n  get faceId => \"Id visage\";\n  @override\n  get enableTouchId => \"Activer tactile Id pour déverrouiller Mes diamants?\";\n  @override\n  get enableFaceId => \"Activer Id Face à déverrouiller Mes diamants?\";\n  @override\n  get unlockWithTouchId => \"Débloquer Mes diamants à l'aide tactile Id\";\n  @override\n  get unlockWithFaceId => \"Déverrouillez Mes diamants en utilisant Id Face.\";\n  @override\n  get mPin => \"Ampin\";\n  @override\n  get holdMemoStatusDiamondorder =>\n      \"Vous ne pouvez pas confirmer les pierres qui sont déjà en attente ou de l'état mémo\";\n  @override\n  get searchStoneIdCertificateNo => \"Recherche Pierre Id / certificat Non\";\n  @override\n  get createMPin => \"Créer un nouveau Ampin\";\n  @override\n  get reentermpin => \"reenter Ampin\";\n  @override\n  get forgotmpin => \"Mot MPIN?\";\n  @override\n  get verifympin => \"vérifier Ampin\";\n  @override\n  get enteryoursixdigitcode => \"Entrez votre 6 chiffres MPIN\";\n  @override\n  get changempin => \"changement Ampin\";\n  @override\n  get faceidandtouchnotenable =>\n      \"FaceID / TouchId n'est pas activé dans votre téléphone, activez S'il vous plaît utiliser cette fonctionnalité\";\n  @override\n  get enablempintounlockmydiamonds =>\n      \"Activer Ampin pour application déverrouiller? Il désactivera tactile Id. Es-tu sur de vouloir continuer?\";\n  @override\n  get enabletouchidtounlockmydiamonds =>\n      \"Activer tactile Id pour l'application déverrouiller? Il désactive Ampin. Es-tu sur de vouloir continuer?\";\n  @override\n  get rememberme => \"Souviens-toi de moi\";\n  @override\n  get usertouchid => \"Utilisation tactile Id\";\n  @override\n  get usempin => \"Utilisez Ampin\";\n  @override\n  get filesarenotavailableonserver =>\n      \"Les fichiers ne sont pas disponibles sur le serveur, S'il vous plaît réessayer plus tard\";\n  @override\n  get allfileshavebeendownloaded => \"Tous les fichiers ont été téléchargés.\";\n  @override\n  get filesisdownloaded => \"fichiers est téléchargé\";\n  @override\n  get filesisnotdownloadedbcz =>\n      \"les fichiers ne sont pas téléchargés parce qu'il est existe pas dans le serveur.\";\n  @override\n  get downloadingCanceled => \"le téléchargement annulé\";\n  @override\n  get downloading => \"Téléchargement...\";\n  @override\n  get expirydate => \"Date d'expiration :\";\n  @override\n  get youreallywanttodelete => \"Vous voulez vraiment supprimer\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"packetNo\": \"Non paquet:\",\n    \"shape\": \"Forme\",\n  };\n}\n\nclass FrenchErrorString extends ErrorString {\n  @override\n  get accessDenide => \"Accès refusé\";\n  @override\n  get pleaseSelectOfferTillDate =>\n      \"S'il vous plaît sélectionner l'offre jusqu'à ce jour.\";\n  @override\n  get pleaseSelectOfficeVisitDate =>\n      \"S'il vous plaît choisir la date de visite de bureau\";\n  @override\n  get deleteStoneMsg => \"Êtes-vous sûr de vouloir lapider delete (s)?\";\n  @override\n  get acceptTermsAndCondition =>\n      \"S'il vous plaît accepter les termes et conditions\";\n  @override\n  get diamondCompareRemove =>\n      \"Au moins 2 pierres sont nécessaires pour comparer.\";\n  @override\n  get diamondSelectionError =>\n      \"S'il vous plaît sélectionner au moins une pierre.\";\n  @override\n  get pleaseEnterCompanyName =>\n      \"S'il vous plaît entrez le nom de l'entreprise.\";\n  @override\n  get selectInvoiceDate => \"Sélectionnez Date de la facture\";\n  @override\n  get pleaseEnterComment => \"S'il vous plaît écrire votre commentaire.\";\n  @override\n  get pleaseEnterRemarks => \"S'il vous plaît entrer des remarques.\";\n  @override\n  get selectExpiryDate => \"S'il vous plaît choisir la date d'expiration.\";\n  @override\n  get enterOTP => \"S'il vous plaît entrer le code\";\n  @override\n  get pleaseEnterOTP => \"S'il vous plaît entrer le code de vérification.\";\n  @override\n  get enteredCodeNotMatching => \"code saisi ne correspond pas à. Réessayer\";\n  @override\n  get selectCancellationReason =>\n      \"S'il vous plaît choisir raison de l'annulation\";\n  @override\n  get enterDesc => \"S'il vous plaît entrer la description.\";\n  @override\n  get enterTitle => \"Veuillez entrer le titre.\";\n  @override\n  get enterEmailOrPhone => \"S'il vous plaît entrer un email / mobile.\";\n  @override\n  get enterPassword =>\n      \"Mot de passe ne peut pas être vide. Veuillez entrer le mot de passe.\";\n  @override\n  get enterConfirmPassword =>\n      \"S'il vous plaît entrer le mot de passe de confirmation.\";\n  @override\n  get enterSkype => \"Entrez s'il vous plaît Skype.\";\n  @override\n  get enterRegisterCode => \"S'il vous plaît entrer le code d'inscription\";\n  @override\n  get enterEmail => \"S'il vous plaît entrer votre adresse mail.\";\n  @override\n  get enterPhone => \"S'il vous plaît entrer numéro de mobile.\";\n  @override\n  get enterUsername =>\n      \"Nom d'utilisateur ne peut pas être vide. S'il vous plaît entrer Nom d'utilisateur.\";\n  @override\n  get enterValidEmail => \"S'il vous plaît entrer l'adresse email valide.\";\n  @override\n  get enterValidPhone => \"S'il vous plaît entrer le numéro de mobile valide.\";\n  @override\n  get enterValidWhatsappPhone =>\n      \"S'il vous plaît entrer le numéro de mobile valide WhatsApp.\";\n  @override\n  get enterValidPassword =>\n      \"S'il vous plaît entrer 6 caractères ou long mot de passe.\";\n  @override\n  get mismatchPassword =>\n      \"Mot de passe et le mot de passe de confirmation ne correspond pas à.\";\n  @override\n  get enterFirstName => \"S'il vous plaît entrer le prénom.\";\n  @override\n  get enterMiddleName => \"S'il vous plaît entrer le prénom.\";\n  @override\n  get enterPinCode => \"S'il vous plaît entrer le code PIN.\";\n  @override\n  get enterName => \"S'il vous plaît entrez le nom.\";\n  @override\n  get enterLastName => \"S'il vous plaît entrer Nom.\";\n  @override\n  get enterAddress => \"S'il vous plaît entrer l'adresse.\";\n  @override\n  get enterValidPinCode => \"Entrez Valid PinCode.\";\n  @override\n  get enterValidAddress =>\n      \"S'il vous plaît entrer 10 caractères ou adresse longue.\";\n  @override\n  get enterPostalCode => \"S'il vous plaît entrer le code postal.\";\n  @override\n  get enterValidPostalCode =>\n      \"S'il vous plaît entrer le code postal numérique à 6 chiffres.\";\n  @override\n  get enterCurrentPassword => \"S'il vous plaît entrer le mot de passe actuel.\";\n  @override\n  get enterNewPassword => \"S'il vous plaît entrer un nouveau mot de passe.\";\n  @override\n  get enterFareAmount => \"S'il vous plaît entrer le montant des ventes.\";\n  @override\n  get enterOrderNO => \"S'il vous plaît entrer N ° de commande.\";\n  @override\n  get enterServiceType => \"S'il vous plaît sélectionner le type de service.\";\n  @override\n  get enterPaymentType => \"S'il vous plaît sélectionner le type de paiement.\";\n  @override\n  get enterValidFareAmount =>\n      \"montant des ventes ne peut pas être égale à zéro.\";\n  @override\n  get enterPassangerNo => \"S'il vous plaît entrer pas. des passagers.\";\n  @override\n  get enterValidPassangerNo => \"Nombre de passagers ne peut pas être nul.\";\n  @override\n  get notEnterMorePassangerNo =>\n      \"Nombre de passagers ne peut être plus de sept.\";\n  @override\n  get drivingLicenseValidationText =>\n      \"S'il vous plaît entrer 15 chiffres alphanumériques numéro de permis de conduire.\";\n  @override\n  get pANCardValidationText =>\n      \"S'il vous plaît entrez 10 chiffres alphanumériques numéro de carte PAN.\";\n  @override\n  get selectFromDate => \"S'il vous plaît sélectionner la date\";\n  @override\n  get selectToDate => \"S'il vous plaît sélectionner à ce jour\";\n  @override\n  get fromGreaterTo =>\n      \"La date sélectionnée doit être supérieure à la date actuelle\";\n  @override\n  get wrongPassword =>\n      \"Mot de passe doit contient 8 caractères minimum, 1 alphabet en majuscules, 1 alphabet minuscules, chiffres 1, 1 charater spéciale\";\n  @override\n  get fromValueGreateThanTo =>\n      \"De valeur doit être inférieure ou égale à la valeur A\";\n  @override\n  get toValueGreaterThanFrom =>\n      \"Pour la valeur doit être supérieure ou égale à la valeur A partir de\";\n  @override\n  get pleaseEnterCompanyCode =>\n      \"S'il vous plaît entrer le code de l'entreprise\";\n  @override\n  get enterSamePassword =>\n      \"Confirmer mot de passe ne correspond pas à nouveau mot de passe. S'il vous plaît entrer le mot de passe Confirmer même que nouveau mot de passe.\";\n  @override\n  get selectAppointmentDate => \"S'il vous plaît choisir la date de rendez-vous\";\n  @override\n  get selectTimeSlot => \"S'il vous plaît, sélectionner l'emplacement de temps\";\n  @override\n  get enterComments => \"S'il vous plaît écrire votre commentaire\";\n  @override\n  get selectVirtualType => \"S'il vous plaît sélectionner le type virtuel\";\n  @override\n  get versionError => \"erreur version\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass FrenchNoDataStrings extends NoDataStrings {\n  @override\n  get noDataFound => \"Aucun Enregistrement Trouvé\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass FrenchScreenTitle extends ScreenTitle {\n  @override\n  get placeAnOffer => \"Placez une offre\";\n  @override\n  get addedInWatchList => \"Ajouté à la liste de suivi\";\n  @override\n  get addedInOffer => \"offre Submitted\";\n  @override\n  get addedInCart => \"Ajouté au panier\";\n  @override\n  get addedInBid => \"Ajouté dans l'offre\";\n  @override\n  get myEnquiry => \"mon enquête sur\";\n  @override\n  get delete => \"Effacer\";\n  @override\n  get addDemand => \"Ajouter la demande\";\n  @override\n  get matchPair => \"match Paire\";\n  @override\n  get savedAndSearch => \"Enregistrer recherche\";\n  @override\n  get updateAndSearch => \"Mise à jour et recherche\";\n  @override\n  get upcoming => \"A venir\";\n  @override\n  get bidPricePerCt => \"Prix \u200B\u200BOffre / Ct\";\n  @override\n  get bidDisc => \"offre disque\";\n  @override\n  get bidValue => \"offre Valeur\";\n  @override\n  get bidStone => \"Pierre offre\";\n  @override\n  get myCart => \"mon panier\";\n  @override\n  get myComment => \"Mes notes\";\n  @override\n  get compare => \"Comparer\";\n  @override\n  get compareStones => \"Pierres comparer\";\n  @override\n  get statusHold => \"En attente\";\n  @override\n  get statusOnMemo => \"le Mémo\";\n  @override\n  get statusAvailable => \"Disponible\";\n  @override\n  get statusNew => \"Nouvelle arrivee\";\n  @override\n  get statusOffer => \"Pierre du jour / Promotion\";\n  @override\n  get statusMyHold => \"mon attente\";\n  @override\n  get signup => \"S'inscrire\";\n  @override\n  get addToOffice => \"Ajouter au bureau\";\n  @override\n  get addComment => \"Ajouter un commentaire\";\n  @override\n  get addEnquiry => \"Ajouter Enquête\";\n  @override\n  get finalOffer => \"Offre définitive\";\n  @override\n  get finalDisc => \"disque final\";\n  @override\n  get finalRate => \"Taux final\";\n  @override\n  get finalValue => \"Valeur finale\";\n  @override\n  get orderMsg =>\n      \"1) Les prix mentionnés ici sont fixes et donc pas négociable. \\\\ n 2) Le classement, les paramètres mentionnés sur notre site au-delà du classement GIA.\";\n  @override\n  get offerMsg =>\n      \"pierre offerte sera directement confirmée si le prix est approuvé nous vous demandons donc d'être sûr avant d'offrir. Toute pierre (s) mis en liste d'offre ne sont pas mis en attente pour vous car il est disponible pour les autres clients est aussi bien.\";\n  @override\n  get note => \"Remarque\";\n  @override\n  get hours => \"Heures\";\n  @override\n  get offeredDisc => \"Dis offerts\";\n  @override\n  get offeredPriceCt => \"Offert Pr / Ct\";\n  @override\n  get addOffer => \"Ajouter une offre\";\n  @override\n  get expDiscPer => \"Remise prévue\";\n  @override\n  get todayDiscPer => \"Disque d'aujourd'hui\";\n  @override\n  get searchResult => \"Résultat de la recherche\";\n  @override\n  get searchDiamond => \"Recherche diamant\";\n  @override\n  get basic => \"De base\";\n  @override\n  get advanced => \"Avancée\";\n  @override\n  get stoneIdCertNo => \"StoneID / Cert Non\";\n  @override\n  get takeSignature => \"Prenez Signature\";\n  @override\n  get optional => \"Optionnel\";\n  @override\n  get myAddress => \"Mon adresse\";\n  @override\n  get expiryDate => \"Date d'expiration\";\n  @override\n  get drivingLicenceDesc => \"image Votre permis de conduire\";\n  @override\n  get panDesc => \"Votre image de carte PAN\";\n  @override\n  get selfie => \"selfie\";\n  @override\n  get selfieDesc => \"Votre image selfie\";\n  @override\n  get pending => \"En attente\";\n  @override\n  get rejected => \"Rejeté\";\n  @override\n  get uploadAgain => \"Télécharger\";\n  @override\n  get remove => \"Retirer\";\n  @override\n  get title => \"Titre\";\n  @override\n  get description => \"La description\";\n  @override\n  get uploadYour => \"Téléchargez votre\";\n  @override\n  get raiseDispute => \"Dis nous à propos de cela\";\n  @override\n  get drivingLicense => \"Permis de conduire\";\n  @override\n  get pANCard => \"PAN carte\";\n  @override\n  get saveContinue => \"Sauvegarder et continuer\";\n  @override\n  get uploadFrontUmgText => \"Télécharger Image Front Side\";\n  @override\n  get uploadPANCardImgText => \"Télécharger PAN Carte image\";\n  @override\n  get uploadBackImageText => \"Réimportez Side image\";\n  @override\n  get helptopic => \"Sujets d'aide\";\n  @override\n  get newRideSharingRequest => \"Les nouvelles demandes de covoiturage\";\n  @override\n  get newRequest => \"Les nouvelles demandes\";\n  @override\n  get welcomeTo => \"Bienvenue à\";\n  @override\n  get welcomeDesc => \"Connectez-vous à votre compte existant de Mani Jewel\";\n  @override\n  get forgotPassword => \"Oublié votre\";\n  @override\n  get forgotPasswordDesc =>\n      \"Entrez votre numéro de mobile enregistré pour récupérer votre mot de passe.\";\n  @override\n  get termsAndCondition => \"termes et conditions\";\n  @override\n  get privacyPolicy => \"Politique de confidentialité\";\n  @override\n  get aboutUS => \"À propos de nous\";\n  @override\n  get otpVerification => \"Vérification du code de tour\";\n  @override\n  get otpVerificationDelivery => \"Vérification du code de ramassage\";\n  @override\n  get otpVerificationDeliveryDone => \"Vérification du code de livraison\";\n  @override\n  get enterOtp => \"Entrez 4 chiffres\";\n  @override\n  get recoveryCode => \"Code de récupération\";\n  @override\n  get editProfile => \"Editer le profil\";\n  @override\n  get myProfile => \"Mon profil\";\n  @override\n  get reset => \"Réinitialiser\";\n  @override\n  get yourPassword => \"Votre mot de passe\";\n  @override\n  get photo => \"Photo\";\n  @override\n  get otpDesc =>\n      \"Le code de récupération a été envoyé à votre numéro de téléphone mobile. S'il vous plaît entrer le code.\";\n  @override\n  get otpVerifyDesc =>\n      \"Le code de vérification a été envoyé à votre numéro de téléphone mobile. S'il vous plaît entrer le code.\";\n  @override\n  get diamondDetail => \"Détail diamant\";\n  @override\n  get home => \"Accueil\";\n  @override\n  get search => \"Chercher\";\n  @override\n  get quickSearch => \"Recherche rapide\";\n  @override\n  get newArrival => \"Nouvelle arrivee\";\n  @override\n  get exclusiveDiamonds => \"Diamants exclusifs\";\n  @override\n  get diamondOnAuction => \"Diamond sur Auction\";\n  @override\n  get stoneOfTheDays => \"Meilleur achat\";\n  @override\n  get myWatchlist => \"Watchlist Mes\";\n  @override\n  get myBid => \"mon offre\";\n  @override\n  get myHold => \"mon attente\";\n  @override\n  get myOrder => \"Ma liste ordonnée\";\n  @override\n  get confirmStone => \"Confirmer pierre\";\n  @override\n  get myOffice => \"Mon bureau Voir\";\n  @override\n  get myOffer => \"Ma liste d'offre\";\n  @override\n  get myPurchased => \"Mon histoire achetée\";\n  @override\n  get mySavedSearch => \"Mes recherches\";\n  @override\n  get savedSearch => \"Recherche sauvegardée\";\n  @override\n  get myDemand => \"ma demande\";\n  @override\n  get contactUs => \"Nous contacter\";\n  @override\n  get changePassword => \"Changer le mot de passe\";\n  @override\n  get logout => \"Se déconnecter\";\n  @override\n  get fareDetailsTitle => \"Entrez détails de vente\";\n  @override\n  get fairAmt => \"Montant des ventes\";\n  @override\n  get noOfPassengers => \"Nombre de passagers\";\n  @override\n  get remarks => \"Remarques\";\n  @override\n  get orderNo => \"N ° de commande.\";\n  @override\n  get typeOfService => \"Type de service\";\n  @override\n  get paymentType => \"Type de paiement*\";\n  @override\n  get recentlyView => \"récemment Voir\";\n  @override\n  get uploadImgValidationText =>\n      \"fichier Upload doit être .jpg, .jpeg, .png ou .pdf taille ayant 5 Mo ou moins.\";\n  @override\n  get drivingLicenseHintText => \"Numéro de permis de conduire\";\n  @override\n  get pANCARDHintText => \"PAN Numéro de la carte\";\n  @override\n  get viewRide => \"Manèges Voir\";\n  @override\n  get myVehicle => \"mon véhicule\";\n  @override\n  get personalDocument => \"Documents personnels\";\n  @override\n  get help => \"AIDEZ-MOI\";\n  @override\n  get about => \"À propos\";\n  @override\n  get bankDetails => \"Coordonnées bancaires\";\n  @override\n  get accountAndPayment => \"Compte et paiement\";\n  @override\n  get enquiry => \"Enquête\";\n  @override\n  get download => \"Télécharger\";\n  @override\n  get addToCart => \"Ajouter au chariot\";\n  @override\n  get addToWatchList => \"Ajouter à la liste\";\n  @override\n  get finalCalculation => \"Calcul final\";\n  @override\n  get bookOffice => \"Bureau du livre\";\n  @override\n  get clearSelection => \"Effacer la sélection\";\n  @override\n  get comment => \"commentaires\";\n  @override\n  get hold => \"Tenir\";\n  @override\n  get offer => \"Offre\";\n  @override\n  get officeView => \"bureau Vue\";\n  @override\n  get placeOrder => \"Passer la commande\";\n  @override\n  get buyNow => \"Acheter maintenant\";\n  @override\n  get cancelStone => \"annuler Pierre\";\n  @override\n  get share => \"Partager\";\n  @override\n  get watchlist => \"liste\";\n  @override\n  get exclusive => \"Exclusif\";\n  @override\n  get featuredStones => \"Pierres en vedette\";\n  @override\n  get stoneOfDay => \"Pierres de jour\";\n  @override\n  get recentSearch => \"Recherche récente\";\n  @override\n  get viewAll => \"Voir tout\";\n  @override\n  get salesPersonDetail => \"Détail des ventes Personne\";\n  @override\n  get searchTitle => \"Recherche Titre\";\n  @override\n  get enterSearchTitle => \"Entrez votre recherche Titre\";\n  @override\n  get timeSlots => \"Tranches de temps\";\n  @override\n  get selectCustomDate => \"Choisissez une date personnalisée\";\n  @override\n  get availableSlot => \"Machines à sous disponibles\";\n  @override\n  get reqOfficeView => \"Demander bureau Voir\";\n  @override\n  get myComments => \"Mon commentaire\";\n  @override\n  get myReminder => \"mon Rappel\";\n  @override\n  get reminder => \"Rappel\";\n  @override\n  get manageAddress => \"gérer les adresses\";\n  @override\n  get myAccount => \"Mon compte\";\n  @override\n  get declaimer => \"Avertissement\";\n  @override\n  get shareStone => \"Partager Pierre\";\n  @override\n  get addRemider => \"Ajouter un rappel\";\n  @override\n  get offlineSearch => \"Hors ligne Recherche\";\n  @override\n  get searchHistory => \"Historique des recherches\";\n  @override\n  get offlineStock => \"Stock Hors ligne\";\n  @override\n  get searchOffline => \"Rechercher (Hors ligne)\";\n  @override\n  get voiceSearch => \"Recherche vocale\";\n  @override\n  get tapMictoSpeak => \"Appuyez sur micro à parler\";\n  @override\n  get typeToSearch => \"Tapez pour rechercher\";\n  @override\n  get typeWordsToSearch => \"Tapez au moins 3 mots pour rechercher des pierres\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass FrenchDynamickeys extends Dynamickeys {\n  @override\n  get shape => \"Forme\";\n  @override\n  get caratRange => \"carat Gamme\";\n  @override\n  get basicDetail => \"Détails de base\";\n  @override\n  get measurementTitle => \"Des mesures\";\n  @override\n  get inclusionDetail => \"Détails d'inclusion\";\n  @override\n  get other => \"Autre\";\n  @override\n  get stoneID => \"Stone ID\";\n  @override\n  get labTitle => \"Laboratoire\";\n  @override\n  get certNo => \"Cert. Non.\";\n  @override\n  get locationTitle => \"EMPLACEMENT\";\n  @override\n  get shapeTitle => \"Forme\";\n  @override\n  get caratTitle => \"Carat\";\n  @override\n  get colorTitle => \"Couleur\";\n  @override\n  get clarityTitle => \"CLARTÉ\";\n  @override\n  get cutTitle => \"Couper\";\n  @override\n  get polishTitle => \"polonais\";\n  @override\n  get symmentryTitle => \"Symmentry\";\n  @override\n  get fluorescenceTitle => \"Fluorescence\";\n  @override\n  get rapTitle => \"Rap (%)\";\n  @override\n  get discountTitle => \"Remise (%)\";\n  @override\n  get priceAndCt => \"Prix \u200B\u200B/ Ct\";\n  @override\n  get amountTitle => \"Montant\";\n  @override\n  get eyeCleanTitle => \"Nettoyer les yeux\";\n  @override\n  get brownTitle => \"MARRON\";\n  @override\n  get milkyTitle => \"Laiteux\";\n  @override\n  get mixTingeTitle => \"MIX Tinge\";\n  @override\n  get dimensionTitle => \"Dimensions (mm)\";\n  @override\n  get girdleTitle => \"Girdle (%)\";\n  @override\n  get tableTitle => \"Table %\";\n  @override\n  get crownAngleTitle => \"Couronne Angle\";\n  @override\n  get depthTitle => \"profondeur%\";\n  @override\n  get pavAngleTitle => \"Pav Angle\";\n  @override\n  get crownHeightTitle => \"Couronne Hauteur (%)\";\n  @override\n  get pavDepthTitle => \"Profondeur du Pavillon (en%)\";\n  @override\n  get starLengthTitle => \"Longueur étoiles\";\n  @override\n  get lowerHalfTitle => \"Moitié inférieure\";\n  @override\n  get gridleTitle => \"Ceinture\";\n  @override\n  get gridleFacetedTitle => \"GIRDLE FACETTES\";\n  @override\n  get culetTitle => \"colette\";\n  @override\n  get rationTitle => \"Rapport\";\n  @override\n  get blackInclusionTitle => \"BLACK INCLUSION\";\n  @override\n  get otherInclusionTitle => \"autres inclusion\";\n  @override\n  get openInclusionTitle => \"INCLUSION OUVERT\";\n  @override\n  get extraFacetTitle => \"EXTRA FACETTES\";\n  @override\n  get naturalTitle => \"Naturel\";\n  @override\n  get hAndATitle => \"H & A\";\n  @override\n  get keyToSymbol => \"CLÉ DE SYMBOLE\";\n  @override\n  get labComments => \"LAB COMMENTAIRES\";\n  @override\n  get laserInsTitle => \"LASER INS\";\n  @override\n  get basicTitle => \"De base\";\n  @override\n  get advancedTitle => \"Avancée\";\n  @override\n  get stoneIdTitle => \"Pierre ID / Cert Non\";\n  @override\n  get defaultTitle => \"Défaut\";\n  @override\n  get newDiamondsTitle => \"nouveaux diamants\";\n  @override\n  get priceLowToHigh => \"Prix \u200B\u200Bcroissant\";\n  @override\n  get priceHighToLow => \"Prix \u200B\u200Bélevé au plus bas\";\n  @override\n  get disLowToHigh => \"Remise bas au plus élevé\";\n  @override\n  get disHighToLow => \"Remise élevé au plus bas\";\n  @override\n  get colorLowToHigh => \"Couleur bas au plus élevé\";\n  @override\n  get colorHighToLow => \"Couleur élevé au plus bas\";\n  @override\n  get caratLowToHigh => \"Carat bas au plus élevé\";\n  @override\n  get caratHighToLow => \"Carat élevé au plus bas\";\n  @override\n  get clarityLowToHigh => \"Clarté bas au plus élevé\";\n  @override\n  get clarityHighToLow => \"Clarté élevé au plus bas\";\n  @override\n  get colorShadeTitle => \"Nuance de couleur\";\n  @override\n  get certiTitle => \"Numéro de certificat\";\n  @override\n  get arrivalsTitle => \"Arrivées\";\n  @override\n  get lengthTitle => \"Longueur\";\n  @override\n  get widthTitle => \"Largeur\";\n  @override\n  get pavilionAngleTitle => \"pavillon Angle\";\n  @override\n  get girdleConditionTitle => \"Condition Ceinturon\";\n  @override\n  get cluetConditionTitle => \"colette Condition\";\n  @override\n  get disTitle => \"Dis%\";\n  @override\n  get depthTitleWithoutPerc => \"Profondeur\";\n  @override\n  get otherInformationTitle => \"les autres informations\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"shape\": \"Forme\",\n    \"caratRange\": \"carat Gamme\",\n    \"basicDetail\": \"Détails de base\",\n    \"measurementTitle\": \"Des mesures\",\n    \"inclusionDetail\": \"Détails d'inclusion\",\n    \"other\": \"Autre\",\n    \"stoneID\": \"Stone ID\",\n    \"labTitle\": \"Laboratoire\",\n    \"certNo\": \"Cert. Non.\",\n    \"locationTitle\": \"EMPLACEMENT\",\n    \"caratTitle\": \"Carat\",\n    \"colorTitle\": \"Couleur\",\n    \"clarityTitle\": \"CLARTÉ\",\n    \"cutTitle\": \"Couper\",\n    \"polishTitle\": \"polonais\",\n    \"symmentryTitle\": \"Symmentry\",\n    \"fluorescenceTitle\": \"Fluorescence\",\n    \"rapTitle\": \"Rap (%)\",\n    \"discountTitle\": \"Remise (%)\",\n    \"priceAndCt\": \"Prix \u200B\u200B/ Ct\",\n    \"amountTitle\": \"Montant\",\n    \"eyeCleanTitle\": \"Nettoyer les yeux\",\n    \"brownTitle\": \"MARRON\",\n    \"milkyTitle\": \"Laiteux\",\n    \"mixTingeTitle\": \"MIX Tinge\",\n    \"dimensionTitle\": \"Dimensions (mm)\",\n    \"girdleTitle\": \"Girdle (%)\",\n    \"tableTitle\": \"Table %\",\n    \"crownAngleTitle\": \"Couronne Angle\",\n    \"depthTitle\": \"profondeur%\",\n    \"pavAngleTitle\": \"Pav Angle\",\n    \"crownHeightTitle\": \"Couronne Hauteur (%)\",\n    \"pavDepthTitle\": \"Profondeur du Pavillon (en%)\",\n    \"starLengthTitle\": \"Longueur étoiles\",\n    \"lowerHalfTitle\": \"Moitié inférieure\",\n    \"gridleTitle\": \"Ceinture\",\n    \"gridleFacetedTitle\": \"GIRDLE FACETTES\",\n    \"culetTitle\": \"colette\",\n    \"rationTitle\": \"Rapport\",\n    \"blackInclusionTitle\": \"BLACK INCLUSION\",\n    \"otherInclusionTitle\": \"autres inclusion\",\n    \"openInclusionTitle\": \"INCLUSION OUVERT\",\n    \"extraFacetTitle\": \"EXTRA FACETTES\",\n    \"naturalTitle\": \"Naturel\",\n    \"hAndATitle\": \"H & A\",\n    \"keyToSymbol\": \"CLÉ DE SYMBOLE\",\n    \"labComments\": \"LAB COMMENTAIRES\",\n    \"laserInsTitle\": \"LASER INS\",\n    \"basicTitle\": \"De base\",\n    \"advancedTitle\": \"Avancée\",\n    \"stoneIdTitle\": \"Pierre ID / Cert Non\",\n    \"defaultTitle\": \"Défaut\",\n    \"newDiamondsTitle\": \"nouveaux diamants\",\n    \"priceLowToHigh\": \"Prix \u200B\u200Bcroissant\",\n    \"priceHighToLow\": \"Prix \u200B\u200Bélevé au plus bas\",\n    \"disLowToHigh\": \"Remise bas au plus élevé\",\n    \"disHighToLow\": \"Remise élevé au plus bas\",\n    \"colorLowToHigh\": \"Couleur bas au plus élevé\",\n    \"colorHighToLow\": \"Couleur élevé au plus bas\",\n    \"caratLowToHigh\": \"Carat bas au plus élevé\",\n    \"caratHighToLow\": \"Carat élevé au plus bas\",\n    \"clarityLowToHigh\": \"Clarté bas au plus élevé\",\n    \"clarityHighToLow\": \"Clarté élevé au plus bas\",\n    \"colorShadeTitle\": \"Nuance de couleur\",\n    \"certiTitle\": \"Numéro de certificat\",\n    \"arrivalsTitle\": \"Arrivées\",\n    \"lengthTitle\": \"Longueur\",\n    \"widthTitle\": \"Largeur\",\n    \"pavilionAngleTitle\": \"pavillon Angle\",\n    \"girdleConditionTitle\": \"Condition Ceinturon\",\n    \"cluetConditionTitle\": \"colette Condition\",\n    \"disTitle\": \"Dis%\",\n    \"depthTitleWithoutPerc\": \"Profondeur\",\n    \"otherInformationTitle\": \"les autres informations\",\n  };\n}\n\nclass Japan extends English {\n  @override\n  get authStrings => JapanAuthStrings();\n  @override\n  get commonString => JapanCommonString();\n  @override\n  get errorString => JapanErrorString();\n  @override\n  get noDataStrings => JapanNoDataStrings();\n  @override\n  get screenTitle => JapanScreenTitle();\n  @override\n  get dynamickeys => JapanDynamickeys();\n  static String get languageCode => \"JAPAN\";\n  static String get languageName => \"JAPAN\";\n}\n\nclass JapanAuthStrings extends AuthStrings {\n  @override\n  get editCompanyInformation => \"何かが間違っていました！ 1更新にプルダウン\";\n  @override\n  get selectNatureOfOrganization => \"組織の性質を選択\";\n  @override\n  get setNewPassword => \"もう一度新しいパスワードや記号を設定します。\";\n  @override\n  get enterCompanyName => \"会社名を入力してください。\";\n  @override\n  get pleaseEnterCustomerOTP => \"顧客の乗車コードを入力してください。\";\n  @override\n  get pleaseEnterPickupOTP => \"顧客のピックアップコードを入力してください。\";\n  @override\n  get pleaseEnterDeliveryOTP => \"顧客の配信コードを入力してください。\";\n  @override\n  get verified => \"確認済み\";\n  @override\n  get verify => \"確認\";\n  @override\n  get addressLineOne => \"住所（1\";\n  @override\n  get addressLineTwo => \"アドレス2\";\n  @override\n  get addressLineThree => \"住所3\";\n  @override\n  get oldPassword => \"以前のパスワード\";\n  @override\n  get skype => \"スカイプ\";\n  @override\n  get whatsApp => \"WhatsApp\";\n  @override\n  get pinCode => \"ピンコード*\";\n  @override\n  get verifyMobileDesc => \"プロファイルを更新するために携帯電話番号を確認してください。\";\n  @override\n  get verifyNow => \"今すぐ確認\";\n  @override\n  get password => \"パスワード\";\n  @override\n  get backToHome => \"ホームへ\";\n  @override\n  get forgotPassword => \"パスワードをお忘れですか？\";\n  @override\n  get signInCap => \"サインイン\";\n  @override\n  get moveToLogIn => \"ログインに移動\";\n  @override\n  get dontHaveAnAccount => \"#ERROR!\";\n  @override\n  get clickHere => \"ここをクリック\";\n  @override\n  get signUpHere => \"ここにサインアップします\";\n  @override\n  get reset => \"リセット\";\n  @override\n  get haveRegisterCode => \"登録コードをお持ちですか？\";\n  @override\n  get welcome => \"お帰りなさい！\";\n  @override\n  get signInAsGuest => \"ゲストとしてサインイン\";\n  @override\n  get editProfileTitle => \"プロファイル編集\";\n  @override\n  get emaillbl => \"Eメール\";\n  @override\n  get searchInventory => \"検索製品\";\n  @override\n  get emailAddress => \"電子メールアドレス*\";\n  @override\n  get offlineFilter =>\n      \"希望ソリティアを見つけることができませんでしたか？私たちは、あなたが私たちのオフラインインベントリから、最良の取引を得るのを助けることができます。\";\n  @override\n  get loginDesc =>\n      \"あなたは私のダイヤモンドのロックを解除するために、タッチID / MPinを有効にしますか？ロック解除アプリのオプションを選択してください\";\n  @override\n  get searchDiamonds => \"検索ダイヤモンド\";\n  @override\n  get continueWithSearch => \"あなたの検索を継続しますか？\";\n  @override\n  get mobileNumber => \"モバイル\";\n  @override\n  get searchHint => \"探す...\";\n  @override\n  get selectYourCountry => \"国を選択\";\n  @override\n  get resendCodeIn => \"再送コードで\";\n  @override\n  get resendCode => \"再送信\";\n  @override\n  get haveAnAccount => \"すでにアカウントをお持ちですか？\";\n  @override\n  get dontReceiveCode => \"あなたは、コードを受け取っていない場合は！\";\n  @override\n  get inLogin => \"ログインします。\";\n  @override\n  get resetPwdDesc => \"あなたのパスワードをリセットするためのパスワードと確認パスワードを追加します。\";\n  @override\n  get backToLogin => \"ログインに戻る\";\n  @override\n  get firstName => \"ファーストネーム*\";\n  @override\n  get name => \"ユーザー名*\";\n  @override\n  get lastName => \"苗字*\";\n  @override\n  get middleName => \"ミドルネーム*\";\n  @override\n  get confirmPassword => \"パスワードを認証する\";\n  @override\n  get currentPasswordErr => \"現在のパスワードエラー\";\n  @override\n  get passwordChanged => \"パスワード変更済み\";\n  @override\n  get lblLogInErr => \"ログインエラー\";\n  @override\n  get enterYour => \"あなたの〜を入力してください\";\n  @override\n  get details => \"細部\";\n  @override\n  get registerCode => \"登録コード\";\n  @override\n  get registerCodeDesc => \"3ecoであなたの登録を開始するには登録コードを追加します。\";\n  @override\n  get uploadPhotoDesc => \"あなたの自己の自分撮りを取ります\";\n  @override\n  get updateProfile => \"プロフィールを更新\";\n  @override\n  get postalCode => \"郵便番号*\";\n  @override\n  get removeButton => \"削除する\";\n  @override\n  get gender => \"性別\";\n  @override\n  get male => \"男性\";\n  @override\n  get female => \"女性\";\n  @override\n  get changePassword => \"パスワードを変更する\";\n  @override\n  get currentPassword => \"現在のパスワード*\";\n  @override\n  get newPassword => \"新しいパスワード*\";\n  @override\n  get confirmNewPassword => \"パスワードを認証する*\";\n  @override\n  get personalDocuments => \"パーソナルドキュメント\";\n  @override\n  get assignedAuto => \"割り当てられオート\";\n  @override\n  get logout => \"ログアウト\";\n  @override\n  get logoutConfirmationMsg => \"あなたがログアウトしてもよろしいですか？\";\n  @override\n  get address => \"住所*\";\n  @override\n  get accountNumber => \"口座番号\";\n  @override\n  get bankerName => \"全国銀行名\";\n  @override\n  get nameLable => \"名前\";\n  @override\n  get ifscCode => \"IFSCコード\";\n  @override\n  get businessRegistrationNumbr => \"ビジネス登録番号\";\n  @override\n  get businessRelationshipPeriod => \"ビジネス関係の期間（年数）\";\n  @override\n  get designation => \"指定\";\n  @override\n  get nameofDesignation => \"の名前\";\n  @override\n  get natureofOrganization => \"組織の性質\";\n  @override\n  get uploadFile => \"NO FILEなかっ選びだし\";\n  @override\n  get update => \"更新\";\n  @override\n  get resetPwd => \"パスワードを再設定する\";\n  @override\n  get pwdReset => \"パスワードのリセット\";\n  @override\n  get signInWithMPIN => \"MPINでサインイン\";\n  @override\n  get pwdChanged => \"パスワード変更済み\";\n  @override\n  get successfullyPwdDesc => \"あなたは成功したパスワードをリセットしています。ログイン時に新しいパスワードを使用してください。\";\n  @override\n  get lblProfileSetup => \"あなたのプロフィールが設定されています\";\n  @override\n  get lblProfileSetupDesc => \"私たちはあなたのプロフィールの詳細を受けています\";\n  @override\n  get hoursAvailable => \"総Shifttime\";\n  @override\n  get confirmStoneDetail => \"確認ストーンの詳細\";\n  @override\n  get companyName => \"会社名\";\n  @override\n  get invoiceDate => \"請求書の日付\";\n  @override\n  get companyCode => \"会社コード\";\n  @override\n  get saveCompanyDetails => \"保存会社情報\";\n  @override\n  get passwordNotChange => \"パスワードが一致しません\";\n  @override\n  get rememberPassword => \"パスワードを覚える？\";\n  @override\n  get sendOTP => \"OTPを送信\";\n  @override\n  get resendNow => \"再送今\";\n  @override\n  get didNotReceiveOTP => \"あなたはOTPを受け取っていない場合は！\";\n  @override\n  get sendOTPToEmail =>\n      \"私たちはあなたの入力した電子メールアドレスまたはユーザー名にOTPを送信します。電子メールアドレスまたはユーザー名を入力してください。\";\n  @override\n  get enterOTP => \"OTPは、ご登録のメールアドレスに送信されました。 OTPを入力してください。\";\n  @override\n  get backToSignIn => \"Inを署名する戻ります\";\n  @override\n  get passwordResetSuccessfully => \"パスワードが正常にリセット。\";\n  @override\n  get emailAndUname => \"メール/ユーザー名\";\n  @override\n  get signUp => \"サインアップ\";\n  @override\n  get promotionText => \"プロモーション\";\n  @override\n  get termsAndCondition => \"利用規約と条件\";\n  @override\n  get mustAgreeTermsAndCondition => \"あなたはゲストユーザーとしてサインインする用語と条件に同意する必要があります\";\n  @override\n  get forgotPasswordTitle => \"パスワードをお忘れですか\";\n  @override\n  get uploadKYC => \"アップロードKYC\";\n  @override\n  get uploadKycDesc => \"フル機能にアクセスするためにあなたのKYCのドキュメントをアップロードしてください。\";\n  @override\n  get hintPhotoIdentityProof => \"写真のアイデンティティの証明*\";\n  @override\n  get hintBussinerssProof => \"ビジネスアイデンティティ証明*\";\n  @override\n  get btnFileUpload => \"ファイルのアップロード\";\n  @override\n  get pleaseUploadPhotoProof => \"写真のアイデンティティの証明をアップロードしてください。\";\n  @override\n  get pleaseUploadBussinessProof => \"ビジネスアイデンティティの証明をアップロードしてください。\";\n  @override\n  get pleaseSelectFileFormat => \"次のいずれかの形式でファイルをアップロードしてください：.JPG\";\n  @override\n  get kycSubmitted => \"KYC提出\";\n  @override\n  get kycSubmmittedDesc => \"あなたのKYCは正常に送信されました。\";\n  @override\n  get btnMoveToHome => \"ホームへ移動\";\n  @override\n  get kYCRejected => \"KYC拒否\";\n  @override\n  get kycRejectedDesc =>\n      \"あなたのKYCは拒否されました。すべての機能にアクセスするには、再度ごKYCのドキュメントをアップロードしてください。\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass JapanCommonString extends CommonString {\n  @override\n  get seeMore => \"続きを見る\";\n  @override\n  get seeLess => \"参照少ないです\";\n  @override\n  get modify => \"変更\";\n  @override\n  get delete => \"[削除]\";\n  @override\n  get details => \"細部\";\n  @override\n  get edit => \"編集します\";\n  @override\n  get addDemand => \"需要を追加\";\n  @override\n  get demandTitle => \"需要タイトル\";\n  @override\n  get pleaseEnterDemandTitle => \"デマンドタイトルを入力してください。\";\n  @override\n  get demandAddedSuccessfully => \"需要が正常に追加します\";\n  @override\n  get selectAtleastOneFilter => \"お願いします\";\n  @override\n  get savedSearch => \"保存された検索\";\n  @override\n  get searchSavedSearch => \"保存された検索を検索\";\n  @override\n  get viewDetails => \"詳細を見る\";\n  @override\n  get viewLessDetails => \"画面を狭く詳細\";\n  @override\n  get myDemand => \"マイデマンド\";\n  @override\n  get date => \"日付\";\n  @override\n  get selectTime => \"選択時間\";\n  @override\n  get selectDate => \"日付を選択\";\n  @override\n  get offerVelidTill => \"オファー有効ティル\";\n  @override\n  get officeVisitDate => \"オフィス訪問日\";\n  @override\n  get all => \"すべて\";\n  @override\n  get status => \"状態\";\n  @override\n  get save => \"保存する\";\n  @override\n  get verify => \"確認\";\n  @override\n  get readMore => \"続きを読む\";\n  @override\n  get goodMorning => \"おはようございます\";\n  @override\n  get goodAfternoon => \"こんにちは\";\n  @override\n  get goodEvening => \"こんばんは\";\n  @override\n  get btnSkip => \"スキップ\";\n  @override\n  get btnUpdate => \"更新\";\n  @override\n  get btnContinue => \"継続する\";\n  @override\n  get btnContinueCap => \"継続する\";\n  @override\n  get btnEdit => \"編集します\";\n  @override\n  get btnSubmit => \"参加する\";\n  @override\n  get btnNextCap => \"次\";\n  @override\n  get btnSaveCap => \"更新パスワード\";\n  @override\n  get btnWithdrawCap => \"WITHDRAW\";\n  @override\n  get btnSaveAndContinueCap => \"SAVE＆CONTINUE\";\n  @override\n  get btnUnregister => \"未登録の移動\";\n  @override\n  get btnClose => \"閉じる\";\n  @override\n  get remove => \"削除する\";\n  @override\n  get refresh => \"リフレッシュ\";\n  @override\n  get fetchLocationMessage => \"私たちはあなたの場所を取得しているお待ちください\";\n  @override\n  get done => \"完了\";\n  @override\n  get doneCap => \"DONE\";\n  @override\n  get cancel => \"キャンセル\";\n  @override\n  get allow => \"許します\";\n  @override\n  get countryFirst => \"してください国を選択ファースト\";\n  @override\n  get apply => \"適用します\";\n  @override\n  get cancelCap => \"キャンセル\";\n  @override\n  get uploadCap => \"UPLOAD\";\n  @override\n  get yesCancelCap => \"はい\";\n  @override\n  get upload => \"アップロード\";\n  @override\n  get ok => \"OK\";\n  @override\n  get home => \"家\";\n  @override\n  get goToMyWatchList => \"マイウォッチリストに移動します\";\n  @override\n  get goToMyOrder => \"私の注文に行きます\";\n  @override\n  get gotToMyOffer => \"私の申し出に行きます\";\n  @override\n  get gotToMyHold => \"私のホールドに行きます\";\n  @override\n  get gotToMyEnquiry => \"お問合せに行きます\";\n  @override\n  get gotToMyBid => \"私の入札に行きます\";\n  @override\n  get gotToMyReminder => \"私のリマインダーに行きます\";\n  @override\n  get gotToMyComments => \"マイノートに移動します\";\n  @override\n  get yes => \"はい\";\n  @override\n  get no => \"番号\";\n  @override\n  get selectCountry => \"国を選択\";\n  @override\n  get clickHere => \"ここをクリック\";\n  @override\n  get btnAddNewAddress => \"新しい住所を追加する\";\n  @override\n  get btnCancel => \"キャンセル\";\n  @override\n  get btnTakeSelfie => \"自分撮りを取ります\";\n  @override\n  get successfully => \"うまく\";\n  @override\n  get lblAppExit => \"終了してよろしいですか？\";\n  @override\n  get lblExit => \"出口\";\n  @override\n  get openAppSetting => \"オープン設定\";\n  @override\n  get lblOr => \"若しくは\";\n  @override\n  get fromLbl => \"から\";\n  @override\n  get toLbl => \"に\";\n  @override\n  get showMore => \"もっと見せる\";\n  @override\n  get showLess => \"レスショー\";\n  @override\n  get selectCity => \"都市を選びなさい\";\n  @override\n  get notYetAvailable => \"まだ利用できません\";\n  @override\n  get updateAvailable => \"利用可能な更新！\";\n  @override\n  get downloadAppFrom => \"からダウンロードしたアプリケーションのアップデート\";\n  @override\n  get playStore => \"プレイストア\";\n  @override\n  get skipUpdate => \"スキップアップデート\";\n  @override\n  get stateFirst => \"してください選択国家ファースト\";\n  @override\n  get reallyExit => \"本当に終了？\";\n  @override\n  get alert => \"警告！\";\n  @override\n  get loading => \"積載\";\n  @override\n  get error => \"エラー\";\n  @override\n  get jumpToTop => \"トップへジャンプ\";\n  @override\n  get ihaveread => \"私は読み、同意します\";\n  @override\n  get selected => \"選択する\";\n  @override\n  get lbllogout => \"ログアウト\";\n  @override\n  get lblThanx => \"ありがとうございました\";\n  @override\n  get lblSelectCity => \"都市を選びなさい\";\n  @override\n  get lblSelectState => \"選択状態\";\n  @override\n  get lblSelectCountry => \"国を選択\";\n  @override\n  get lblCity => \"市\";\n  @override\n  get lblCountry => \"国\";\n  @override\n  get lblName => \"名前\";\n  @override\n  get lblPinCode => \"ピンコード\";\n  @override\n  get lblMobileNumber => \"携帯電話番号\";\n  @override\n  get lblState => \"状態\";\n  @override\n  get lblCode => \"コード：\";\n  @override\n  get lblOrderNo => \"注文番号：\";\n  @override\n  get lblOrderItem => \"注文アイテム：\";\n  @override\n  get lblDelivered => \"配信\";\n  @override\n  get lblTicketReady => \"あなたのチケットは準備ができています\";\n  @override\n  get lblPersonTicket => \"2人のチケット\";\n  @override\n  get lblShuttleBus => \"シャトルバス\";\n  @override\n  get lblPickup => \"選び出す\";\n  @override\n  get lblDropoff => \"落ちる\";\n  @override\n  get lblPassenger => \"旅客\";\n  @override\n  get lblDeliveryNo => \"配達号\";\n  @override\n  get lblPrice => \"価格\";\n  @override\n  get lblValid => \"に有効\";\n  @override\n  get lblRenew => \"書き換えます\";\n  @override\n  get lblDeparture => \"出発\";\n  @override\n  get lblArrived => \"到着した\";\n  @override\n  get lblSendtoFriend => \"友達に送る\";\n  @override\n  get popupRenewTitle => \"チケットを更新\";\n  @override\n  get popupRenewDesc => \"Loremのイプサム嘆き座るAMET\";\n  @override\n  get popuplblPassenger => \"旅客\";\n  @override\n  get popuplblCancel => \"キャンセル\";\n  @override\n  get popupbtnRenew => \"書き換えます\";\n  @override\n  get ridelblAwesome => \"驚くばかり\";\n  @override\n  get ridebtnDone => \"完了\";\n  @override\n  get offerPricePerCarat => \"提示された価格（CTS）\";\n  @override\n  get dropOffText => \"落ちる\";\n  @override\n  get pickUpText => \"選び出す\";\n  @override\n  get startAtText => \"スタート時\";\n  @override\n  get endAtText => \"終わりに\";\n  @override\n  get personText => \"人\";\n  @override\n  get paymentScreenTitle => \"支払い\";\n  @override\n  get pickuplbl => \"選び出す\";\n  @override\n  get droplbl => \"落ちる\";\n  @override\n  get makePaymentButtonlbl => \"支払う\";\n  @override\n  get pessangerslbl => \"乗客\";\n  @override\n  get priceBreakuplbl => \"価格分裂\";\n  @override\n  get tripPricelbl => \"トリップ価格\";\n  @override\n  get taxeslbl => \"税金\";\n  @override\n  get totallbl => \"トータル\";\n  @override\n  get cardNumberhint => \"カード番号\";\n  @override\n  get cvvhint => \"CVV\";\n  @override\n  get datehint => \"MM / YY\";\n  @override\n  get btnTryAgain => \"再試行\";\n  @override\n  get cityFirst => \"最初の都市を選択してください\";\n  @override\n  get enterFareDetails => \"セールス詳細を入力します。\";\n  @override\n  get fromDate => \"日から\";\n  @override\n  get toDate => \"選択された日付\";\n  @override\n  get btnUnderstand => \"わかります\";\n  @override\n  get applicationUpdate => \"アプリケーションのアップデート\";\n  @override\n  get newVersionMessage => \"アプリケーションの新しいバージョンが入手可能です\";\n  @override\n  get paymentCollected => \"お支払い収集\";\n  @override\n  get addComment => \"コメントを追加します\";\n  @override\n  get more => \"もっと\";\n  @override\n  get carat => \"カラット\";\n  @override\n  get pcs => \"個\";\n  @override\n  get cts => \"CTS\";\n  @override\n  get disc => \"ディスク％\";\n  @override\n  get avgPriceCrt => \"平均。価格/ CT\";\n  @override\n  get amount => \"量\";\n  @override\n  get confirmStone => \"確認ストーン\";\n  @override\n  get confirm => \"確認\";\n  @override\n  get offered => \"提供\";\n  @override\n  get validTill => \"まで有効\";\n  @override\n  get remark => \"リマーク\";\n  @override\n  get color => \"色\";\n  @override\n  get colorGroup => \"カラーグループ\";\n  @override\n  get colorFancy => \"ファンシー\";\n  @override\n  get colorWhite => \"白い\";\n  @override\n  get clarity => \"明快\";\n  @override\n  get clarityGroup => \"クラリティグループ\";\n  @override\n  get intensity => \"強\";\n  @override\n  get overtone => \"倍音\";\n  @override\n  get selectBusinessType => \"ビジネスの種類を選択します\";\n  @override\n  get selectState => \"選択状態\";\n  @override\n  get search => \"探す\";\n  @override\n  get profile => \"私のプロフィール\";\n  @override\n  get personal => \"個人的な\";\n  @override\n  get business => \"ビジネス\";\n  @override\n  get documents => \"ドキュメント\";\n  @override\n  get noSlotFound => \"スロット見つかりません\";\n  @override\n  get noDiamondFound => \"検索条件に一致するダイヤモンドありません。あなたが求めて追加してください。\";\n  @override\n  get selectType => \"仮想タイプを選択します\";\n  @override\n  get noSavedSearch => \"ノー保存された検索が存在します\";\n  @override\n  get searchCity => \"検索city\";\n  @override\n  get searchCountry => \"検索する国\";\n  @override\n  get searchState => \"検索状態\";\n  @override\n  get notifications => \"お知らせ\";\n  @override\n  get enter2Stone => \"比較するために、少なくとも2石を選択してください。\";\n  @override\n  get bidDesc => \"現在、インドに位置し、他の国での配信のために離れてインドから少なくとも7-10営業日かかります。\";\n  @override\n  get packetNo => \"パケット番号：\";\n  @override\n  get quit => \"終了する\";\n  @override\n  get agree => \"同意する\";\n  @override\n  get laterToday => \"今日あとで\";\n  @override\n  get toMorrow => \"明日\";\n  @override\n  get nextWeek => \"来週\";\n  @override\n  get chooseAnother => \"別のものを選びます\";\n  @override\n  get dateTime => \"日付時刻\";\n  @override\n  get language => \"言語\";\n  @override\n  get diamNow => \"DiamNow\";\n  @override\n  get noDocument => \"いいえドキュメントが見つかりませんでした\";\n  @override\n  get searchBusinessType => \"検索ビジネスの種類\";\n  @override\n  get hours => \"時間\";\n  @override\n  get minutes => \"議事録\";\n  @override\n  get seconds => \"秒\";\n  @override\n  get bidEndsIn => \"入札に終了します。\";\n  @override\n  get shape => \"形状\";\n  @override\n  get download => \"ダウンロード\";\n  @override\n  get share => \"シェア\";\n  @override\n  get placeOrder => \"場所の順序\";\n  @override\n  get enterComment => \"コメントを入力してください。\";\n  @override\n  get deleteItem => \"消去してもよろしいですか？\";\n  @override\n  get shippingPolicy => \"配送ポリシー\";\n  @override\n  get offerSundayRestriction => \"日曜日は許可されていません。オフィス営業日は月曜日から土曜日までです\";\n  @override\n  get weekAgo => \"1週間前\";\n  @override\n  get lastWeek => \"先週\";\n  @override\n  get dayAgo => \"数日前\";\n  @override\n  get onedayAgo => \"1日前\";\n  @override\n  get yesterday => \"昨日\";\n  @override\n  get hourAgo => \"時間前\";\n  @override\n  get onehourAgo => \"1時間前\";\n  @override\n  get anhourAgo => \"1時間前\";\n  @override\n  get mintuesAgo => \"数分前\";\n  @override\n  get onemintuesAgo => \"1分前\";\n  @override\n  get amintueAgo => \"分前\";\n  @override\n  get secondsAgo => \"秒前\";\n  @override\n  get justNow => \"ちょうど今\";\n  @override\n  get today => \"今日\";\n  @override\n  get past => \"過去\";\n  @override\n  get selectPhotoProof => \"ドキュメントを選択\";\n  @override\n  get pleaseSelectPhotoProof => \"文書を選択してください\";\n  @override\n  get selectBusinessProof => \"ドキュメントを選択\";\n  @override\n  get pleaseSelectBusinessProof => \"文書を選択してください\";\n  @override\n  get touchId => \"タッチ同上\";\n  @override\n  get faceId => \"フェイス同上\";\n  @override\n  get enableTouchId => \"私のダイヤモンドのロックを解除するにはタッチIDを有効にしますか？\";\n  @override\n  get enableFaceId => \"私のダイヤモンドのロックを解除する顔IDを有効にしますか？\";\n  @override\n  get unlockWithTouchId => \"タッチIDを使用して私のダイヤモンドのロックを解除\";\n  @override\n  get unlockWithFaceId => \"フェイスIDを使用して私のダイヤモンドのロックを解除します。\";\n  @override\n  get mPin => \"MPin\";\n  @override\n  get holdMemoStatusDiamondorder => \"あなたは保留に既にある石やメモの状態を確認することはできません\";\n  @override\n  get searchStoneIdCertificateNo => \"ストーンID /証明書番号を検索\";\n  @override\n  get createMPin => \"新しいMPinを作成します。\";\n  @override\n  get reentermpin => \"再入力MPin\";\n  @override\n  get forgotmpin => \"MPINを忘れましたか？\";\n  @override\n  get verifympin => \"Mpinを確認\";\n  @override\n  get enteryoursixdigitcode => \"あなたの6桁を入力しMPIN\";\n  @override\n  get changempin => \"変更MPin\";\n  @override\n  get faceidandtouchnotenable =>\n      \"FaceId / TouchIdお使いの携帯電話で有効になっていません、この機能を使用するために有効にしてください\";\n  @override\n  get enablempintounlockmydiamonds =>\n      \"ロック解除アプリにMPinを有効にしますか？これは、タッチイドを無効にします。あなたが継続してもよろしいですか？\";\n  @override\n  get enabletouchidtounlockmydiamonds =>\n      \"ロック解除アプリにタッチIDを有効にしますか？それはMPinを無効にします。あなたが継続してもよろしいですか？\";\n  @override\n  get rememberme => \"私を覚えてますか\";\n  @override\n  get usertouchid => \"使用タッチ同上\";\n  @override\n  get usempin => \"使用MPin\";\n  @override\n  get filesarenotavailableonserver => \"ファイルがサーバー上で利用できない、後でもう一度お試しください\";\n  @override\n  get allfileshavebeendownloaded => \"すべてのファイルがダウンロードされています。\";\n  @override\n  get filesisdownloaded => \"ファイルがダウンロードされます\";\n  @override\n  get filesisnotdownloadedbcz => \"それは、サーバーに存在していないため、ファイルがダウンロードされません。\";\n  @override\n  get downloadingCanceled => \"キャンセルダウンロード\";\n  @override\n  get downloading => \"ダウンロード中...\";\n  @override\n  get expirydate => \"有効期限 ：\";\n  @override\n  get youreallywanttodelete => \"あなたは本当に削除したいです\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"packetNo\": \"パケット番号：\",\n    \"shape\": \"形状\",\n  };\n}\n\nclass JapanErrorString extends ErrorString {\n  @override\n  get accessDenide => \"アクセスが拒否されました\";\n  @override\n  get pleaseSelectOfferTillDate => \"日付までのオファーを選択してください。\";\n  @override\n  get pleaseSelectOfficeVisitDate => \"オフィスの訪問日を選択してください\";\n  @override\n  get deleteStoneMsg => \"あなたは、削除石（複数可）にもよろしいですか？\";\n  @override\n  get acceptTermsAndCondition => \"用語と条件を受け入れてください。\";\n  @override\n  get diamondCompareRemove => \"少なくとも2枚のストーンズは、比較するのに必要とされます。\";\n  @override\n  get diamondSelectionError => \"少なくとも一つの石を選択してください。\";\n  @override\n  get pleaseEnterCompanyName => \"会社名を入力してください。\";\n  @override\n  get selectInvoiceDate => \"請求書の日付を選択\";\n  @override\n  get pleaseEnterComment => \"コメントを入力してください。\";\n  @override\n  get pleaseEnterRemarks => \"発言を入力してください。\";\n  @override\n  get selectExpiryDate => \"有効期限を選択してください。\";\n  @override\n  get enterOTP => \"コードを入力してください\";\n  @override\n  get pleaseEnterOTP => \"確認コードを入力してください。\";\n  @override\n  get enteredCodeNotMatching => \"入力されたコードが一致していません。再試行\";\n  @override\n  get selectCancellationReason => \"キャンセルの理由を選択してください\";\n  @override\n  get enterDesc => \"説明を入力してください。\";\n  @override\n  get enterTitle => \"タイトルを入力してください。\";\n  @override\n  get enterEmailOrPhone => \"電子メール/モバイルを入力してください。\";\n  @override\n  get enterPassword => \"パスワードが空にすることはできません。パスワードを入力してください。\";\n  @override\n  get enterConfirmPassword => \"確認パスワードを入力してください。\";\n  @override\n  get enterSkype => \"スカイプを入力してください。\";\n  @override\n  get enterRegisterCode => \"登録コードを入力してください\";\n  @override\n  get enterEmail => \"メールアドレスを入力してください。\";\n  @override\n  get enterPhone => \"携帯電話番号を入力してください。\";\n  @override\n  get enterUsername => \"ユーザー名は空にすることはできません。ユーザー名を入力してください。\";\n  @override\n  get enterValidEmail => \"有効なメールアドレスを入力してください。\";\n  @override\n  get enterValidPhone => \"有効な携帯電話番号を入力してください。\";\n  @override\n  get enterValidWhatsappPhone => \"有効なのWhatsApp携帯電話番号を入力してください。\";\n  @override\n  get enterValidPassword => \"6つの文字または長いパスワードを入力してください。\";\n  @override\n  get mismatchPassword => \"パスワードと確認パスワードが一致していません。\";\n  @override\n  get enterFirstName => \"まず名前を入力してください。\";\n  @override\n  get enterMiddleName => \"ミドルネームを入力してください。\";\n  @override\n  get enterPinCode => \"ピンコードを入力してください。\";\n  @override\n  get enterName => \"名前を入力してください。\";\n  @override\n  get enterLastName => \"姓を入力してください。\";\n  @override\n  get enterAddress => \"アドレスを入力してください。\";\n  @override\n  get enterValidPinCode => \"有効なPINコードを入力します。\";\n  @override\n  get enterValidAddress => \"10文字または長いアドレスを入力してください。\";\n  @override\n  get enterPostalCode => \"郵便番号を入力してください。\";\n  @override\n  get enterValidPostalCode => \"6桁の数字郵便番号を入力してください。\";\n  @override\n  get enterCurrentPassword => \"現在のパスワードを入力してください。\";\n  @override\n  get enterNewPassword => \"新しいパスワードを入力してください。\";\n  @override\n  get enterFareAmount => \"売上金額を入力してください。\";\n  @override\n  get enterOrderNO => \"無順序を入力してください。\";\n  @override\n  get enterServiceType => \"サービスの種類を選択してください。\";\n  @override\n  get enterPaymentType => \"支払いタイプを選択してください。\";\n  @override\n  get enterValidFareAmount => \"販売量はゼロにすることはできません。\";\n  @override\n  get enterPassangerNo => \"何を入力していないしてください。乗客の。\";\n  @override\n  get enterValidPassangerNo => \"乗客の番号はゼロにすることはできません。\";\n  @override\n  get notEnterMorePassangerNo => \"乗客の番号は、7つ以上にすることはできません。\";\n  @override\n  get drivingLicenseValidationText => \"ライセンス番号を駆動英数字15桁を入力してください。\";\n  @override\n  get pANCardValidationText => \"PANカード番号英数字10桁を入力してください。\";\n  @override\n  get selectFromDate => \"日付から選択してください\";\n  @override\n  get selectToDate => \"日付を選択してください\";\n  @override\n  get fromGreaterTo => \"選択した日付が現在の日付よりも大きくなければなりません\";\n  @override\n  get wrongPassword =>\n      \"パスワード必須では、最低8つの文字、1つの大文字のアルファベット、1つの小文字のアルファベット、1桁、1つの特別charaterが含まれています\";\n  @override\n  get fromValueGreateThanTo => \"値からより小かの値に等しくなければなりません\";\n  @override\n  get toValueGreaterThanFrom => \"値よりも大きくなければなりませんまたは値に等しいから、\";\n  @override\n  get pleaseEnterCompanyCode => \"会社コードを入力してください\";\n  @override\n  get enterSamePassword =>\n      \"パスワードの確認は、新しいパスワードと一致していません。新しいパスワードと同じパスワードの確認を入力してください。\";\n  @override\n  get selectAppointmentDate => \"予定の日付を選択してください\";\n  @override\n  get selectTimeSlot => \"タイムスロットを選択してください\";\n  @override\n  get enterComments => \"コメントを入力してください。\";\n  @override\n  get selectVirtualType => \"仮想種類を選択してください\";\n  @override\n  get versionError => \"バージョンエラー\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass JapanNoDataStrings extends NoDataStrings {\n  @override\n  get noDataFound => \"いいえレコード見つかりませんでした\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass JapanScreenTitle extends ScreenTitle {\n  @override\n  get placeAnOffer => \"オファーを配置\";\n  @override\n  get addedInWatchList => \"ウォッチリストに追加しました\";\n  @override\n  get addedInOffer => \"オファー提出\";\n  @override\n  get addedInCart => \"カートに追加しました\";\n  @override\n  get addedInBid => \"入札に追加しました\";\n  @override\n  get myEnquiry => \"お問合せ\";\n  @override\n  get delete => \"[削除]\";\n  @override\n  get addDemand => \"需要を追加\";\n  @override\n  get matchPair => \"マッチペア\";\n  @override\n  get savedAndSearch => \"保存して検索\";\n  @override\n  get updateAndSearch => \"アップデート＆検索\";\n  @override\n  get upcoming => \"来たる\";\n  @override\n  get bidPricePerCt => \"入札価格/ CT\";\n  @override\n  get bidDisc => \"入札ディスク\";\n  @override\n  get bidValue => \"入札値\";\n  @override\n  get bidStone => \"入札ストーン\";\n  @override\n  get myCart => \"私のカート\";\n  @override\n  get myComment => \"私のノート\";\n  @override\n  get compare => \"比較します\";\n  @override\n  get compareStones => \"ストーンズの比較\";\n  @override\n  get statusHold => \"保留\";\n  @override\n  get statusOnMemo => \"メモオン\";\n  @override\n  get statusAvailable => \"利用できます\";\n  @override\n  get statusNew => \"新参者\";\n  @override\n  get statusOffer => \"デイ/プロモーションストーン\";\n  @override\n  get statusMyHold => \"マイホールド\";\n  @override\n  get signup => \"サインアップ\";\n  @override\n  get addToOffice => \"オフィスに追加\";\n  @override\n  get addComment => \"コメントを追加\";\n  @override\n  get addEnquiry => \"お問い合わせを追加します。\";\n  @override\n  get finalOffer => \"最終提案\";\n  @override\n  get finalDisc => \"最終的なディスク\";\n  @override\n  get finalRate => \"最終レート\";\n  @override\n  get finalValue => \"最終的な値\";\n  @override\n  get orderMsg =>\n      \"1）価格はこっちに言及固定されているので、交渉の余地はありません。 \\\\ N2）グレーディングは、パラメータは、GIAのグレーディングを越えた当社のウェブサイト上で言及しました。\";\n  @override\n  get offerMsg =>\n      \"私たちが提供する前に確認するためにあなたを要求するので、価格が承認されます場合はご提供石が直接確認されます。オファーリスト内の任意の石（S）プットは、それが、他の顧客のために利用可能であるとして、あなたのために保留されていません。\";\n  @override\n  get note => \"注意\";\n  @override\n  get hours => \"時間\";\n  @override\n  get offeredDisc => \"提供されるディス\";\n  @override\n  get offeredPriceCt => \"提供されるのPr / CT\";\n  @override\n  get addOffer => \"オファーを追加\";\n  @override\n  get expDiscPer => \"期待ディスカウント\";\n  @override\n  get todayDiscPer => \"今日のディスク\";\n  @override\n  get searchResult => \"検索結果\";\n  @override\n  get searchDiamond => \"検索ダイヤモンド\";\n  @override\n  get basic => \"基本的な\";\n  @override\n  get advanced => \"高度\";\n  @override\n  get stoneIdCertNo => \"StoneID /証明書はありません\";\n  @override\n  get takeSignature => \"署名してください\";\n  @override\n  get optional => \"オプショナル\";\n  @override\n  get myAddress => \"私の住所\";\n  @override\n  get expiryDate => \"有効期限\";\n  @override\n  get drivingLicenceDesc => \"あなたの運転免許証の写真\";\n  @override\n  get panDesc => \"あなたのPANカード画像\";\n  @override\n  get selfie => \"自分撮り\";\n  @override\n  get selfieDesc => \"あなたの自分撮り写真\";\n  @override\n  get pending => \"保留中\";\n  @override\n  get rejected => \"拒否されました\";\n  @override\n  get uploadAgain => \"アップロード\";\n  @override\n  get remove => \"削除する\";\n  @override\n  get title => \"題名\";\n  @override\n  get description => \"説明\";\n  @override\n  get uploadYour => \"アップロード\";\n  @override\n  get raiseDispute => \"それについて教えてください\";\n  @override\n  get drivingLicense => \"運転免許証\";\n  @override\n  get pANCard => \"PANカード\";\n  @override\n  get saveContinue => \"保存して続行\";\n  @override\n  get uploadFrontUmgText => \"アップロード表面画像\";\n  @override\n  get uploadPANCardImgText => \"アップロードPANカードの画像\";\n  @override\n  get uploadBackImageText => \"アップロード裏面の画像\";\n  @override\n  get helptopic => \"ヘルプトピックス\";\n  @override\n  get newRideSharingRequest => \"新ライド共有要求\";\n  @override\n  get newRequest => \"新しい要求\";\n  @override\n  get welcomeTo => \"へようこそ！\";\n  @override\n  get welcomeDesc => \"マニジュエルの既存のアカウントにログイン\";\n  @override\n  get forgotPassword => \"忘れました\";\n  @override\n  get forgotPasswordDesc => \"あなたのパスワードを回復するために、ご登録の携帯電話番号を入力します。\";\n  @override\n  get termsAndCondition => \"ご利用規約\";\n  @override\n  get privacyPolicy => \"個人情報保護方針\";\n  @override\n  get aboutUS => \"私たちに関しては\";\n  @override\n  get otpVerification => \"ライドのコードを確認してください\";\n  @override\n  get otpVerificationDelivery => \"ピックアップコードを確認してください\";\n  @override\n  get otpVerificationDeliveryDone => \"配達コードを確認してください\";\n  @override\n  get enterOtp => \"4桁を入力します。\";\n  @override\n  get recoveryCode => \"回復コード\";\n  @override\n  get editProfile => \"プロファイル編集\";\n  @override\n  get myProfile => \"私のプロフィール\";\n  @override\n  get reset => \"リセット\";\n  @override\n  get yourPassword => \"あなたのパスワード\";\n  @override\n  get photo => \"写真\";\n  @override\n  get otpDesc => \"回復コードは、あなたの携帯電話番号に送信されました。コードを入力してください。\";\n  @override\n  get otpVerifyDesc => \"検証コードは、あなたの携帯電話番号に送信されました。コードを入力してください。\";\n  @override\n  get diamondDetail => \"ダイヤモンドの詳細\";\n  @override\n  get home => \"家\";\n  @override\n  get search => \"探す\";\n  @override\n  get quickSearch => \"クイック検索\";\n  @override\n  get newArrival => \"新参者\";\n  @override\n  get exclusiveDiamonds => \"独占ダイヤモンド\";\n  @override\n  get diamondOnAuction => \"ダイヤモンドでオークション\";\n  @override\n  get stoneOfTheDays => \"ベストバイ\";\n  @override\n  get myWatchlist => \"マイウォッチリスト\";\n  @override\n  get myBid => \"私の入札\";\n  @override\n  get myHold => \"マイホールド\";\n  @override\n  get myOrder => \"私の順序付きリスト\";\n  @override\n  get confirmStone => \"確認ストーン\";\n  @override\n  get myOffice => \"私のオフィスを見ます\";\n  @override\n  get myOffer => \"マイオファー一覧\";\n  @override\n  get myPurchased => \"私の購入の歴史\";\n  @override\n  get mySavedSearch => \"私の保存された検索\";\n  @override\n  get savedSearch => \"保存された検索\";\n  @override\n  get myDemand => \"マイデマンド\";\n  @override\n  get contactUs => \"お問い合わせ\";\n  @override\n  get changePassword => \"パスワードを変更する\";\n  @override\n  get logout => \"ログアウト\";\n  @override\n  get fareDetailsTitle => \"セールス詳細を入力します。\";\n  @override\n  get fairAmt => \"売上高\";\n  @override\n  get noOfPassengers => \"乗客の米国特許\";\n  @override\n  get remarks => \"備考\";\n  @override\n  get orderNo => \"注文番号。\";\n  @override\n  get typeOfService => \"サービスの種類\";\n  @override\n  get paymentType => \"支払いタイプ*\";\n  @override\n  get recentlyView => \"最近で見ます\";\n  @override\n  get uploadImgValidationText =>\n      \"アップロードファイルは.JPG、.JPEG、.pngのか.PDFたサイズ5メガバイト以下でなければなりません。\";\n  @override\n  get drivingLicenseHintText => \"運転免許証番号\";\n  @override\n  get pANCARDHintText => \"PANカード番号\";\n  @override\n  get viewRide => \"ビューライド\";\n  @override\n  get myVehicle => \"私の車\";\n  @override\n  get personalDocument => \"パーソナルドキュメント\";\n  @override\n  get help => \"助けて\";\n  @override\n  get about => \"約\";\n  @override\n  get bankDetails => \"銀行詳細\";\n  @override\n  get accountAndPayment => \"アカウントとお支払い\";\n  @override\n  get enquiry => \"問い合わせ\";\n  @override\n  get download => \"ダウンロード\";\n  @override\n  get addToCart => \"カートに追加\";\n  @override\n  get addToWatchList => \"気に入ったリストに追加する\";\n  @override\n  get finalCalculation => \"最終的な計算\";\n  @override\n  get bookOffice => \"ブックオフィス\";\n  @override\n  get clearSelection => \"明確な選択\";\n  @override\n  get comment => \"注釈\";\n  @override\n  get hold => \"ホールド\";\n  @override\n  get offer => \"提供\";\n  @override\n  get officeView => \"オフィスビュー\";\n  @override\n  get placeOrder => \"オーダーします\";\n  @override\n  get buyNow => \"今買う\";\n  @override\n  get cancelStone => \"ストーンをキャンセル\";\n  @override\n  get share => \"シェア\";\n  @override\n  get watchlist => \"ウォッチリスト\";\n  @override\n  get exclusive => \"排他的\";\n  @override\n  get featuredStones => \"注目のストーンズ\";\n  @override\n  get stoneOfDay => \"デイのストーンズ\";\n  @override\n  get recentSearch => \"最近の検索\";\n  @override\n  get viewAll => \"全てを見ます\";\n  @override\n  get salesPersonDetail => \"営業担当者の詳細\";\n  @override\n  get searchTitle => \"検索タイトル\";\n  @override\n  get enterSearchTitle => \"検索タイトルを入力します。\";\n  @override\n  get timeSlots => \"タイムスロット\";\n  @override\n  get selectCustomDate => \"カスタム日付を選択\";\n  @override\n  get availableSlot => \"使用可能なスロット\";\n  @override\n  get reqOfficeView => \"Officeのビューをリクエスト\";\n  @override\n  get myComments => \"私のコメント\";\n  @override\n  get myReminder => \"私のリマインダー\";\n  @override\n  get reminder => \"リマインダー\";\n  @override\n  get manageAddress => \"アドレスを管理\";\n  @override\n  get myAccount => \"マイアカウント\";\n  @override\n  get declaimer => \"免責条項\";\n  @override\n  get shareStone => \"シェアストーン\";\n  @override\n  get addRemider => \"リマインダーを追加\";\n  @override\n  get offlineSearch => \"オフライン検索\";\n  @override\n  get searchHistory => \"検索履歴\";\n  @override\n  get offlineStock => \"オフライン証券\";\n  @override\n  get searchOffline => \"検索（オフライン）\";\n  @override\n  get voiceSearch => \"音声検索\";\n  @override\n  get tapMictoSpeak => \"話すようにマイクをタップ\";\n  @override\n  get typeToSearch => \"検索の種類\";\n  @override\n  get typeWordsToSearch => \"石を検索するには、少なくとも3つのワードを入力\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass JapanDynamickeys extends Dynamickeys {\n  @override\n  get shape => \"形状\";\n  @override\n  get caratRange => \"カラットの範囲\";\n  @override\n  get basicDetail => \"基本的な詳細\";\n  @override\n  get measurementTitle => \"測定\";\n  @override\n  get inclusionDetail => \"インクルージョンの詳細\";\n  @override\n  get other => \"他の\";\n  @override\n  get stoneID => \"石のID\";\n  @override\n  get labTitle => \"ラボ\";\n  @override\n  get certNo => \"CERT。番号。\";\n  @override\n  get locationTitle => \"ロケーション\";\n  @override\n  get shapeTitle => \"形状\";\n  @override\n  get caratTitle => \"カラット\";\n  @override\n  get colorTitle => \"色\";\n  @override\n  get clarityTitle => \"CLARITY\";\n  @override\n  get cutTitle => \"切る\";\n  @override\n  get polishTitle => \"研磨\";\n  @override\n  get symmentryTitle => \"Symmentry\";\n  @override\n  get fluorescenceTitle => \"蛍光\";\n  @override\n  get rapTitle => \"RAP（％）\";\n  @override\n  get discountTitle => \"割引（％）\";\n  @override\n  get priceAndCt => \"価格/ CT\";\n  @override\n  get amountTitle => \"量\";\n  @override\n  get eyeCleanTitle => \"アイクリーン\";\n  @override\n  get brownTitle => \"褐色\";\n  @override\n  get milkyTitle => \"ミルキー\";\n  @override\n  get mixTingeTitle => \"MIX色合い\";\n  @override\n  get dimensionTitle => \"寸法（mm）\";\n  @override\n  get girdleTitle => \"ガードル（％）\";\n  @override\n  get tableTitle => \"テーブル ％\";\n  @override\n  get crownAngleTitle => \"クラウン角度\";\n  @override\n  get depthTitle => \"深％\";\n  @override\n  get pavAngleTitle => \"Pav Angle\";\n  @override\n  get crownHeightTitle => \"クラウン高さ（％）\";\n  @override\n  get pavDepthTitle => \"パビリオンの深さ（％）\";\n  @override\n  get starLengthTitle => \"スターの長さ\";\n  @override\n  get lowerHalfTitle => \"下半分\";\n  @override\n  get gridleTitle => \"ガードル\";\n  @override\n  get gridleFacetedTitle => \"ガードルファセット\";\n  @override\n  get culetTitle => \"キューレット\";\n  @override\n  get rationTitle => \"比\";\n  @override\n  get blackInclusionTitle => \"BLACK INCLUSION\";\n  @override\n  get otherInclusionTitle => \"その他のインクルージョン\";\n  @override\n  get openInclusionTitle => \"OPEN INCLUSION\";\n  @override\n  get extraFacetTitle => \"EXTRA FACET\";\n  @override\n  get naturalTitle => \"ナチュラル\";\n  @override\n  get hAndATitle => \"H＆A\";\n  @override\n  get keyToSymbol => \"KEY TO SYMBOL\";\n  @override\n  get labComments => \"LABコメント\";\n  @override\n  get laserInsTitle => \"LASER INS\";\n  @override\n  get basicTitle => \"基本的な\";\n  @override\n  get advancedTitle => \"高度\";\n  @override\n  get stoneIdTitle => \"ストーンID /証明書はありません\";\n  @override\n  get defaultTitle => \"デフォルト\";\n  @override\n  get newDiamondsTitle => \"新しいダイヤモンド\";\n  @override\n  get priceLowToHigh => \"高いに価格低\";\n  @override\n  get priceHighToLow => \"低価格高へ\";\n  @override\n  get disLowToHigh => \"ハイへの割引、低コスト\";\n  @override\n  get disHighToLow => \"低への割引高いです\";\n  @override\n  get colorLowToHigh => \"ハイへの色の低\";\n  @override\n  get colorHighToLow => \"低への色のハイ\";\n  @override\n  get caratLowToHigh => \"ハイへカラット低\";\n  @override\n  get caratHighToLow => \"低へカラット高いです\";\n  @override\n  get clarityLowToHigh => \"ハイへクラリティ低\";\n  @override\n  get clarityHighToLow => \"低へクラリティ高いです\";\n  @override\n  get colorShadeTitle => \"色合い\";\n  @override\n  get certiTitle => \"証明書番号\";\n  @override\n  get arrivalsTitle => \"到着\";\n  @override\n  get lengthTitle => \"長さ\";\n  @override\n  get widthTitle => \"幅\";\n  @override\n  get pavilionAngleTitle => \"パビリオン角\";\n  @override\n  get girdleConditionTitle => \"ガードル条件\";\n  @override\n  get cluetConditionTitle => \"キューレット条件\";\n  @override\n  get disTitle => \"ディス％\";\n  @override\n  get depthTitleWithoutPerc => \"深さ\";\n  @override\n  get otherInformationTitle => \"その他の情報\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"shape\": \"形状\",\n    \"caratRange\": \"カラットの範囲\",\n    \"basicDetail\": \"基本的な詳細\",\n    \"measurementTitle\": \"測定\",\n    \"inclusionDetail\": \"インクルージョンの詳細\",\n    \"other\": \"他の\",\n    \"stoneID\": \"石のID\",\n    \"labTitle\": \"ラボ\",\n    \"certNo\": \"CERT。番号。\",\n    \"locationTitle\": \"ロケーション\",\n    \"caratTitle\": \"カラット\",\n    \"colorTitle\": \"色\",\n    \"clarityTitle\": \"CLARITY\",\n    \"cutTitle\": \"切る\",\n    \"polishTitle\": \"研磨\",\n    \"symmentryTitle\": \"Symmentry\",\n    \"fluorescenceTitle\": \"蛍光\",\n    \"rapTitle\": \"RAP（％）\",\n    \"discountTitle\": \"割引（％）\",\n    \"priceAndCt\": \"価格/ CT\",\n    \"amountTitle\": \"量\",\n    \"eyeCleanTitle\": \"アイクリーン\",\n    \"brownTitle\": \"褐色\",\n    \"milkyTitle\": \"ミルキー\",\n    \"mixTingeTitle\": \"MIX色合い\",\n    \"dimensionTitle\": \"寸法（mm）\",\n    \"girdleTitle\": \"ガードル（％）\",\n    \"tableTitle\": \"テーブル ％\",\n    \"crownAngleTitle\": \"クラウン角度\",\n    \"depthTitle\": \"深％\",\n    \"pavAngleTitle\": \"Pav Angle\",\n    \"crownHeightTitle\": \"クラウン高さ（％）\",\n    \"pavDepthTitle\": \"パビリオンの深さ（％）\",\n    \"starLengthTitle\": \"スターの長さ\",\n    \"lowerHalfTitle\": \"下半分\",\n    \"gridleTitle\": \"ガードル\",\n    \"gridleFacetedTitle\": \"ガードルファセット\",\n    \"culetTitle\": \"キューレット\",\n    \"rationTitle\": \"比\",\n    \"blackInclusionTitle\": \"BLACK INCLUSION\",\n    \"otherInclusionTitle\": \"その他のインクルージョン\",\n    \"openInclusionTitle\": \"OPEN INCLUSION\",\n    \"extraFacetTitle\": \"EXTRA FACET\",\n    \"naturalTitle\": \"ナチュラル\",\n    \"hAndATitle\": \"H＆A\",\n    \"keyToSymbol\": \"KEY TO SYMBOL\",\n    \"labComments\": \"LABコメント\",\n    \"laserInsTitle\": \"LASER INS\",\n    \"basicTitle\": \"基本的な\",\n    \"advancedTitle\": \"高度\",\n    \"stoneIdTitle\": \"ストーンID /証明書はありません\",\n    \"defaultTitle\": \"デフォルト\",\n    \"newDiamondsTitle\": \"新しいダイヤモンド\",\n    \"priceLowToHigh\": \"高いに価格低\",\n    \"priceHighToLow\": \"低価格高へ\",\n    \"disLowToHigh\": \"ハイへの割引、低コスト\",\n    \"disHighToLow\": \"低への割引高いです\",\n    \"colorLowToHigh\": \"ハイへの色の低\",\n    \"colorHighToLow\": \"低への色のハイ\",\n    \"caratLowToHigh\": \"ハイへカラット低\",\n    \"caratHighToLow\": \"低へカラット高いです\",\n    \"clarityLowToHigh\": \"ハイへクラリティ低\",\n    \"clarityHighToLow\": \"低へクラリティ高いです\",\n    \"colorShadeTitle\": \"色合い\",\n    \"certiTitle\": \"証明書番号\",\n    \"arrivalsTitle\": \"到着\",\n    \"lengthTitle\": \"長さ\",\n    \"widthTitle\": \"幅\",\n    \"pavilionAngleTitle\": \"パビリオン角\",\n    \"girdleConditionTitle\": \"ガードル条件\",\n    \"cluetConditionTitle\": \"キューレット条件\",\n    \"disTitle\": \"ディス％\",\n    \"depthTitleWithoutPerc\": \"深さ\",\n    \"otherInformationTitle\": \"その他の情報\",\n  };\n}\n\nclass Italian extends English {\n  @override\n  get authStrings => ItalianAuthStrings();\n  @override\n  get commonString => ItalianCommonString();\n  @override\n  get errorString => ItalianErrorString();\n  @override\n  get noDataStrings => ItalianNoDataStrings();\n  @override\n  get screenTitle => ItalianScreenTitle();\n  @override\n  get dynamickeys => ItalianDynamickeys();\n  static String get languageCode => \"Italian\";\n  static String get languageName => \"Italian\";\n}\n\nclass ItalianAuthStrings extends AuthStrings {\n  @override\n  get editCompanyInformation => \"Modifica informazioni sulla società\";\n  @override\n  get selectNatureOfOrganization => \"Selezionare la natura di organizzazione\";\n  @override\n  get setNewPassword => \"Impostare la nuova password e accedere nuovamente.\";\n  @override\n  get enterCompanyName => \"Si prega di inserire Nome azienda.\";\n  @override\n  get pleaseEnterCustomerOTP => \"Si prega di inserire il codice giro cliente.\";\n  @override\n  get pleaseEnterPickupOTP => \"Si prega di inserire il codice cliente pickup.\";\n  @override\n  get pleaseEnterDeliveryOTP =>\n      \"Si prega di inserire il codice consegna al cliente.\";\n  @override\n  get verified => \"Verificati\";\n  @override\n  get verify => \"Verificare\";\n  @override\n  get addressLineOne => \"Indirizzo 1\";\n  @override\n  get addressLineTwo => \"Indirizzo 2\";\n  @override\n  get addressLineThree => \"indirizzo 3\";\n  @override\n  get oldPassword => \"vecchia password\";\n  @override\n  get skype => \"Skype\";\n  @override\n  get whatsApp => \"WhatsApp\";\n  @override\n  get pinCode => \"Codice PIN*\";\n  @override\n  get verifyMobileDesc =>\n      \"Controllare numero di cellulare per aggiornare il profilo.\";\n  @override\n  get verifyNow => \"verifica ora\";\n  @override\n  get password => \"Parola d'ordine\";\n  @override\n  get backToHome => \"Vai alla Home\";\n  @override\n  get forgotPassword => \"Ha dimenticato la password?\";\n  @override\n  get signInCap => \"Registrati\";\n  @override\n  get moveToLogIn => \"Spostare a Login\";\n  @override\n  get dontHaveAnAccount => \"#ERROR!\";\n  @override\n  get clickHere => \"Clicca qui\";\n  @override\n  get signUpHere => \"Registrati qui\";\n  @override\n  get reset => \"Ripristina\";\n  @override\n  get haveRegisterCode => \"Avere un codice di registrazione?\";\n  @override\n  get welcome => \"Ben tornato!\";\n  @override\n  get signInAsGuest => \"Accedi come Guest\";\n  @override\n  get editProfileTitle => \"Modifica Profilo\";\n  @override\n  get emaillbl => \"E-mail\";\n  @override\n  get searchInventory => \"Ricerca prodotto\";\n  @override\n  get emailAddress => \"Indirizzo email*\";\n  @override\n  get offlineFilter =>\n      \"Impossibile trovare il solitario desiderato? Siamo in grado di aiutarvi a ottenere il miglior prezzo in nostro inventario offline.\";\n  @override\n  get loginDesc =>\n      \"Vuoi abilitare tocco Id / MPin per sbloccare i miei diamanti? Scegliere l'opzione di sblocco app\";\n  @override\n  get searchDiamonds => \"ricerca diamanti\";\n  @override\n  get continueWithSearch => \"Vuoi continuare la ricerca?\";\n  @override\n  get mobileNumber => \"Mobile\";\n  @override\n  get searchHint => \"Ricerca...\";\n  @override\n  get selectYourCountry => \"Seleziona il paese\";\n  @override\n  get resendCodeIn => \"Codice rinvialo\";\n  @override\n  get resendCode => \"Rispedisci\";\n  @override\n  get haveAnAccount => \"Hai già un account?\";\n  @override\n  get dontReceiveCode => \"Se non hai ricevuto un codice!\";\n  @override\n  get inLogin => \"effettuare il login.\";\n  @override\n  get resetPwdDesc =>\n      \"Aggiungere la password e la password Conferma per reimpostare la password.\";\n  @override\n  get backToLogin => \"Torna al login\";\n  @override\n  get firstName => \"Nome di battesimo*\";\n  @override\n  get name => \"Nome utente*\";\n  @override\n  get lastName => \"Cognome*\";\n  @override\n  get middleName => \"Secondo nome*\";\n  @override\n  get confirmPassword => \"conferma password\";\n  @override\n  get currentPasswordErr => \"Errore password corrente\";\n  @override\n  get passwordChanged => \"Password cambiata\";\n  @override\n  get lblLogInErr => \"Errore di accesso\";\n  @override\n  get enterYour => \"Inserisci la tua\";\n  @override\n  get details => \"Dettagli\";\n  @override\n  get registerCode => \"Codice di registrazione\";\n  @override\n  get registerCodeDesc =>\n      \"Aggiungere un codice di registrazione per iniziare la vostra iscrizione con 3eco.\";\n  @override\n  get uploadPhotoDesc => \"Prendete un selfie della vostra auto\";\n  @override\n  get updateProfile => \"Aggiorna il profilo\";\n  @override\n  get postalCode => \"Codice postale*\";\n  @override\n  get removeButton => \"Rimuovere\";\n  @override\n  get gender => \"Genere\";\n  @override\n  get male => \"Maschio\";\n  @override\n  get female => \"Femmina\";\n  @override\n  get changePassword => \"Cambia la password\";\n  @override\n  get currentPassword => \"Password attuale*\";\n  @override\n  get newPassword => \"Nuova password*\";\n  @override\n  get confirmNewPassword => \"Conferma password*\";\n  @override\n  get personalDocuments => \"Documenti personali\";\n  @override\n  get assignedAuto => \"assegnato Auto\";\n  @override\n  get logout => \"Disconnettersi\";\n  @override\n  get logoutConfirmationMsg => \"Sei sicuro di voler uscire?\";\n  @override\n  get address => \"Indirizzo*\";\n  @override\n  get accountNumber => \"Numero di conto\";\n  @override\n  get bankerName => \"Nome banchieri\";\n  @override\n  get nameLable => \"Nome\";\n  @override\n  get ifscCode => \"codice IFSC\";\n  @override\n  get businessRegistrationNumbr => \"Numero di registrazione\";\n  @override\n  get businessRelationshipPeriod => \"Relazione d'affari Periodo (in anni)\";\n  @override\n  get designation => \"Designazione\";\n  @override\n  get nameofDesignation => \"Nome di\";\n  @override\n  get natureofOrganization => \"Natura dell'Organizzazione\";\n  @override\n  get uploadFile => \"Nessun file Scelto\";\n  @override\n  get update => \"AGGIORNARE\";\n  @override\n  get resetPwd => \"Resetta la password\";\n  @override\n  get pwdReset => \"Reimpostazione della password\";\n  @override\n  get signInWithMPIN => \"Accedi con MPIN\";\n  @override\n  get pwdChanged => \"Password cambiata\";\n  @override\n  get successfullyPwdDesc =>\n      \"Hai successo reimpostare la password. Si prega di utilizzare la nuova password quando si accede.\";\n  @override\n  get lblProfileSetup => \"Il tuo profilo è impostato\";\n  @override\n  get lblProfileSetupDesc => \"Abbiamo ricevuto i dettagli del profilo\";\n  @override\n  get hoursAvailable => \"totale Shifttime\";\n  @override\n  get confirmStoneDetail => \"Conferma di pietra Dettaglio\";\n  @override\n  get companyName => \"Nome della ditta\";\n  @override\n  get invoiceDate => \"Data fattura\";\n  @override\n  get companyCode => \"Codice della ditta\";\n  @override\n  get saveCompanyDetails => \"Salva Dettagli Azienda\";\n  @override\n  get passwordNotChange => \"La password non corrisponde\";\n  @override\n  get rememberPassword => \"Ricordare la password?\";\n  @override\n  get sendOTP => \"Invia OTP\";\n  @override\n  get resendNow => \"Rispedisci Ora\";\n  @override\n  get didNotReceiveOTP => \"Se non hai ricevuto un'OTP!\";\n  @override\n  get sendOTPToEmail =>\n      \"Invieremo un'OTP al tuo indirizzo email immesso o nome utente. Si prega di inserire l'indirizzo email o nome utente.\";\n  @override\n  get enterOTP =>\n      \"L'OTP è stato inviato al tuo indirizzo email registrato. Si prega di inserire l'OTP.\";\n  @override\n  get backToSignIn => \"Torna l'Entra\";\n  @override\n  get passwordResetSuccessfully =>\n      \"Reimpostazione della password con successo.\";\n  @override\n  get emailAndUname => \"Email / Username\";\n  @override\n  get signUp => \"Iscriviti\";\n  @override\n  get promotionText => \"Le offerte promozionali\";\n  @override\n  get termsAndCondition => \"Termini e condizioni\";\n  @override\n  get mustAgreeTermsAndCondition =>\n      \"È necessario accettare i termini e condizioni per accedere come Utente ospite\";\n  @override\n  get forgotPasswordTitle => \"Ha dimenticato la password\";\n  @override\n  get uploadKYC => \"Carica KYC\";\n  @override\n  get uploadKycDesc =>\n      \"Si prega di caricare i documenti KYC per accedere alle funzioni complete.\";\n  @override\n  get hintPhotoIdentityProof => \"Foto Identità * Proof\";\n  @override\n  get hintBussinerssProof => \"Affari identità * Proof\";\n  @override\n  get btnFileUpload => \"Upload di file\";\n  @override\n  get pleaseUploadPhotoProof => \"Si prega di caricare foto prova di identità.\";\n  @override\n  get pleaseUploadBussinessProof =>\n      \"Si prega di caricare Affari prova di identità.\";\n  @override\n  get pleaseSelectFileFormat =>\n      \"Si prega di caricare file in uno dei seguenti formati: .jpg\";\n  @override\n  get kycSubmitted => \"KYC Inserito\";\n  @override\n  get kycSubmmittedDesc => \"Il tuo KYC è stato inviato con successo.\";\n  @override\n  get btnMoveToHome => \"Spostare alla Home\";\n  @override\n  get kYCRejected => \"KYC Rifiutato\";\n  @override\n  get kycRejectedDesc =>\n      \"Il tuo KYC è stata rifiutata. Si prega di caricare nuovamente i documenti KYC per accedere a tutte le caratteristiche.\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ItalianCommonString extends CommonString {\n  @override\n  get seeMore => \"Vedi altro\";\n  @override\n  get seeLess => \"See Meno\";\n  @override\n  get modify => \"Modificare\";\n  @override\n  get delete => \"Elimina\";\n  @override\n  get details => \"Dettagli\";\n  @override\n  get edit => \"modificare\";\n  @override\n  get addDemand => \"Add domanda\";\n  @override\n  get demandTitle => \"La domanda Titolo\";\n  @override\n  get pleaseEnterDemandTitle => \"Si prega di inserire la domanda Titolo\";\n  @override\n  get demandAddedSuccessfully => \"La domanda di inserimento con successo\";\n  @override\n  get selectAtleastOneFilter => \"per favore\";\n  @override\n  get savedSearch => \"Saved Search\";\n  @override\n  get searchSavedSearch => \"Cerca Saved Search\";\n  @override\n  get viewDetails => \"Visualizza dettagli\";\n  @override\n  get viewLessDetails => \"Vista Meno dettagli\";\n  @override\n  get myDemand => \"La mia domanda\";\n  @override\n  get date => \"Data\";\n  @override\n  get selectTime => \"Seleziona Tempo\";\n  @override\n  get selectDate => \"Selezionare Data\";\n  @override\n  get offerVelidTill => \"Offerta valida fino al\";\n  @override\n  get officeVisitDate => \"Ufficio Visita Data\";\n  @override\n  get all => \"Tutti\";\n  @override\n  get status => \"Stato\";\n  @override\n  get save => \"Salva\";\n  @override\n  get verify => \"Verificare\";\n  @override\n  get readMore => \"Leggi di più\";\n  @override\n  get goodMorning => \"Buongiorno\";\n  @override\n  get goodAfternoon => \"Buon pomeriggio\";\n  @override\n  get goodEvening => \"buona serata\";\n  @override\n  get btnSkip => \"Salta\";\n  @override\n  get btnUpdate => \"Aggiornare\";\n  @override\n  get btnContinue => \"Continua\";\n  @override\n  get btnContinueCap => \"CONTINUA\";\n  @override\n  get btnEdit => \"modificare\";\n  @override\n  get btnSubmit => \"Invia\";\n  @override\n  get btnNextCap => \"Il prossimo\";\n  @override\n  get btnSaveCap => \"Aggiornamento password\";\n  @override\n  get btnWithdrawCap => \"PRELIEVI\";\n  @override\n  get btnSaveAndContinueCap => \"Salva e continua\";\n  @override\n  get btnUnregister => \"Non registrato mobile\";\n  @override\n  get btnClose => \"Vicino\";\n  @override\n  get remove => \"Rimuovere\";\n  @override\n  get refresh => \"ricaricare\";\n  @override\n  get fetchLocationMessage =>\n      \"Si prega di aspettare stiamo recupero vostra posizione\";\n  @override\n  get done => \"Fatto\";\n  @override\n  get doneCap => \"FATTO\";\n  @override\n  get cancel => \"Annulla\";\n  @override\n  get allow => \"permettere\";\n  @override\n  get countryFirst => \"Si prega di selezionare prima la nazione\";\n  @override\n  get apply => \"Applicare\";\n  @override\n  get cancelCap => \"ANNULLA\";\n  @override\n  get uploadCap => \"CARICARE\";\n  @override\n  get yesCancelCap => \"SÌ\";\n  @override\n  get upload => \"Caricare\";\n  @override\n  get ok => \"Ok\";\n  @override\n  get home => \"Casa\";\n  @override\n  get goToMyWatchList => \"Vai all'elenco degli osservati\";\n  @override\n  get goToMyOrder => \"Vai a mio Ordine\";\n  @override\n  get gotToMyOffer => \"Vai a La mia offerta\";\n  @override\n  get gotToMyHold => \"Vai alla mia presa\";\n  @override\n  get gotToMyEnquiry => \"Vai alla mia domanda\";\n  @override\n  get gotToMyBid => \"Vai alla mia offerta\";\n  @override\n  get gotToMyReminder => \"Vai a Il mio promemoria\";\n  @override\n  get gotToMyComments => \"Vai a My Notes\";\n  @override\n  get yes => \"sì\";\n  @override\n  get no => \"No\";\n  @override\n  get selectCountry => \"Seleziona il paese\";\n  @override\n  get clickHere => \"Clicca qui\";\n  @override\n  get btnAddNewAddress => \"AGGIUNGI UN NUOVO INDIRIZZO\";\n  @override\n  get btnCancel => \"ANNULLA\";\n  @override\n  get btnTakeSelfie => \"prendere selfie\";\n  @override\n  get successfully => \"Con successo\";\n  @override\n  get lblAppExit => \"Sei sicuro di voler uscire?\";\n  @override\n  get lblExit => \"Uscita\";\n  @override\n  get openAppSetting => \"Aprire Impostazioni\";\n  @override\n  get lblOr => \"O\";\n  @override\n  get fromLbl => \"A partire dal\";\n  @override\n  get toLbl => \"Per\";\n  @override\n  get showMore => \"Mostra di più\";\n  @override\n  get showLess => \"Mostra meno\";\n  @override\n  get selectCity => \"Seleziona Città\";\n  @override\n  get notYetAvailable => \"Non ancora disponibile\";\n  @override\n  get updateAvailable => \"Aggiornamento disponibile!\";\n  @override\n  get downloadAppFrom => \"Scarica l'applicazione aggiornamento dal\";\n  @override\n  get playStore => \"Play Store\";\n  @override\n  get skipUpdate => \"Skip Aggiornamento\";\n  @override\n  get stateFirst => \"Si prega di selezionare Stato First\";\n  @override\n  get reallyExit => \"Davvero uscire?\";\n  @override\n  get alert => \"Mettere in guardia!\";\n  @override\n  get loading => \"Caricamento in corso\";\n  @override\n  get error => \"Errore\";\n  @override\n  get jumpToTop => \"Salto in alto\";\n  @override\n  get ihaveread => \"Ho letto e accetto\";\n  @override\n  get selected => \"Selezionare\";\n  @override\n  get lbllogout => \"Disconnettersi\";\n  @override\n  get lblThanx => \"Grazie\";\n  @override\n  get lblSelectCity => \"Seleziona Città\";\n  @override\n  get lblSelectState => \"Seleziona stato\";\n  @override\n  get lblSelectCountry => \"Seleziona il paese\";\n  @override\n  get lblCity => \"Città\";\n  @override\n  get lblCountry => \"Nazione\";\n  @override\n  get lblName => \"Nome\";\n  @override\n  get lblPinCode => \"Codice PIN\";\n  @override\n  get lblMobileNumber => \"Numero di cellulare\";\n  @override\n  get lblState => \"Stato\";\n  @override\n  get lblCode => \"Codice:\";\n  @override\n  get lblOrderNo => \"Numero d'ordine:\";\n  @override\n  get lblOrderItem => \"Codice ordine:\";\n  @override\n  get lblDelivered => \"consegnato\";\n  @override\n  get lblTicketReady => \"Il biglietto è pronto\";\n  @override\n  get lblPersonTicket => \"Biglietto di 2 persone\";\n  @override\n  get lblShuttleBus => \"Bus navetta\";\n  @override\n  get lblPickup => \"Raccogliere\";\n  @override\n  get lblDropoff => \"Dropoff\";\n  @override\n  get lblPassenger => \"Passeggeri\";\n  @override\n  get lblDeliveryNo => \"No. consegna\";\n  @override\n  get lblPrice => \"Prezzo\";\n  @override\n  get lblValid => \"Valido per\";\n  @override\n  get lblRenew => \"Rinnovare\";\n  @override\n  get lblDeparture => \"Partenza\";\n  @override\n  get lblArrived => \"Arrivato\";\n  @override\n  get lblSendtoFriend => \"Invia ad un amico\";\n  @override\n  get popupRenewTitle => \"Rinnova biglietto\";\n  @override\n  get popupRenewDesc => \"Lorem ipsum dolor sit amet\";\n  @override\n  get popuplblPassenger => \"Passeggeri\";\n  @override\n  get popuplblCancel => \"Annulla\";\n  @override\n  get popupbtnRenew => \"Rinnovare\";\n  @override\n  get ridelblAwesome => \"Eccezionale\";\n  @override\n  get ridebtnDone => \"Fatto\";\n  @override\n  get offerPricePerCarat => \"Offerto Prezzo (Cts)\";\n  @override\n  get dropOffText => \"Dropoff\";\n  @override\n  get pickUpText => \"Raccogliere\";\n  @override\n  get startAtText => \"Iniziare a\";\n  @override\n  get endAtText => \"terminerà alle\";\n  @override\n  get personText => \"persona\";\n  @override\n  get paymentScreenTitle => \"Pagamento\";\n  @override\n  get pickuplbl => \"Raccogliere\";\n  @override\n  get droplbl => \"Dropoff\";\n  @override\n  get makePaymentButtonlbl => \"Fare un pagamento\";\n  @override\n  get pessangerslbl => \"viaggiatori\";\n  @override\n  get priceBreakuplbl => \"Prezzo Breakup\";\n  @override\n  get tripPricelbl => \"Trip Prezzo\";\n  @override\n  get taxeslbl => \"Le tasse\";\n  @override\n  get totallbl => \"Totale\";\n  @override\n  get cardNumberhint => \"Numero di carta\";\n  @override\n  get cvvhint => \"CVV\";\n  @override\n  get datehint => \"MM / AA\";\n  @override\n  get btnTryAgain => \"Riprova\";\n  @override\n  get cityFirst => \"Si prega di selezionare la città prima\";\n  @override\n  get enterFareDetails => \"Inserire i dettagli di vendita\";\n  @override\n  get fromDate => \"dalla Data\";\n  @override\n  get toDate => \"Selected Data\";\n  @override\n  get btnUnderstand => \"Capisco\";\n  @override\n  get applicationUpdate => \"Aggiornamento dell'applicazione\";\n  @override\n  get newVersionMessage => \"Una nuova versione di applicazione è disponibile\";\n  @override\n  get paymentCollected => \"pagamento Collected\";\n  @override\n  get addComment => \"Aggiungi un commento\";\n  @override\n  get more => \"Di Più\";\n  @override\n  get carat => \"carato\";\n  @override\n  get pcs => \"Pz\";\n  @override\n  get cts => \"Cts\";\n  @override\n  get disc => \"Disco%\";\n  @override\n  get avgPriceCrt => \"Avg. Prezzo / Ct\";\n  @override\n  get amount => \"Quantità\";\n  @override\n  get confirmStone => \"pietra Conferma\";\n  @override\n  get confirm => \"Confermare\";\n  @override\n  get offered => \"offerto\";\n  @override\n  get validTill => \"Valido fino a\";\n  @override\n  get remark => \"osservazione\";\n  @override\n  get color => \"Colore\";\n  @override\n  get colorGroup => \"color Group\";\n  @override\n  get colorFancy => \"Fantasia\";\n  @override\n  get colorWhite => \"bianca\";\n  @override\n  get clarity => \"Chiarezza\";\n  @override\n  get clarityGroup => \"Gruppo chiarezza\";\n  @override\n  get intensity => \"Intensità\";\n  @override\n  get overtone => \"ipertono\";\n  @override\n  get selectBusinessType => \"Seleziona Tipo di azienda\";\n  @override\n  get selectState => \"Seleziona stato\";\n  @override\n  get search => \"Ricerca\";\n  @override\n  get profile => \"Il mio profilo\";\n  @override\n  get personal => \"Personale\";\n  @override\n  get business => \"Attività commerciale\";\n  @override\n  get documents => \"Documenti\";\n  @override\n  get noSlotFound => \"Nessuno slot trovato\";\n  @override\n  get noDiamondFound =>\n      \"Nessun Diamonds corrispondono alla ricerca. Si prega di aggiungere si domanda.\";\n  @override\n  get selectType => \"Seleziona tipo virtuale\";\n  @override\n  get noSavedSearch => \"No Saved Search esiste\";\n  @override\n  get searchCity => \"Cerca città\";\n  @override\n  get searchCountry => \"Cerca Paese\";\n  @override\n  get searchState => \"Ricerca stato\";\n  @override\n  get notifications => \"Notifica\";\n  @override\n  get enter2Stone => \"Seleziona almeno 2 pietra per confrontare.\";\n  @override\n  get bidDesc =>\n      \"si trova attualmente in India e per la consegna in qualsiasi altro paese a parte l'India ci vorranno almeno 7-10 giorni lavorativi.\";\n  @override\n  get packetNo => \"Packet No:\";\n  @override\n  get quit => \"Smettere\";\n  @override\n  get agree => \"Sono d'accordo\";\n  @override\n  get laterToday => \"Più tardi oggi\";\n  @override\n  get toMorrow => \"Domani\";\n  @override\n  get nextWeek => \"La prossima settimana\";\n  @override\n  get chooseAnother => \"Scegli un altro\";\n  @override\n  get dateTime => \"Appuntamento\";\n  @override\n  get language => \"linguaggio\";\n  @override\n  get diamNow => \"DiamNow\";\n  @override\n  get noDocument => \"Nessun documento trovato\";\n  @override\n  get searchBusinessType => \"Cerca Tipo di azienda\";\n  @override\n  get hours => \"Ore\";\n  @override\n  get minutes => \"Minuti\";\n  @override\n  get seconds => \"secondi\";\n  @override\n  get bidEndsIn => \"Bid finisce in:\";\n  @override\n  get shape => \"Forma\";\n  @override\n  get download => \"Scarica\";\n  @override\n  get share => \"Condividere\";\n  @override\n  get placeOrder => \"Invia ordine\";\n  @override\n  get enterComment => \"Inserisci il tuo commento\";\n  @override\n  get deleteItem => \"Sei sicuro di voler eliminare?\";\n  @override\n  get shippingPolicy => \"Condizioni della spedizione\";\n  @override\n  get offerSundayRestriction =>\n      \"Domenica non è permesso. giorni lavorativi ufficio sono Lunedi al Sabato\";\n  @override\n  get weekAgo => \"1 settimana fa\";\n  @override\n  get lastWeek => \"La settimana scorsa\";\n  @override\n  get dayAgo => \"giorni fa\";\n  @override\n  get onedayAgo => \"1 giorno fa\";\n  @override\n  get yesterday => \"Ieri\";\n  @override\n  get hourAgo => \"ore fa\";\n  @override\n  get onehourAgo => \"1 ora fa\";\n  @override\n  get anhourAgo => \"Un'ora fa\";\n  @override\n  get mintuesAgo => \"minuti fa\";\n  @override\n  get onemintuesAgo => \"1 minuto fa\";\n  @override\n  get amintueAgo => \"Un minuto fa\";\n  @override\n  get secondsAgo => \"secondi fa\";\n  @override\n  get justNow => \"Proprio adesso\";\n  @override\n  get today => \"Oggi\";\n  @override\n  get past => \"Passato\";\n  @override\n  get selectPhotoProof => \"Selezionare il documento\";\n  @override\n  get pleaseSelectPhotoProof => \"Si prega di selezionare il documento\";\n  @override\n  get selectBusinessProof => \"Selezionare il documento\";\n  @override\n  get pleaseSelectBusinessProof => \"Si prega di selezionare il documento\";\n  @override\n  get touchId => \"tocco Id\";\n  @override\n  get faceId => \"face ID\";\n  @override\n  get enableTouchId => \"Abilita tocco Id per sbloccare i miei diamanti?\";\n  @override\n  get enableFaceId => \"Abilita Face ID per sbloccare i miei diamanti?\";\n  @override\n  get unlockWithTouchId => \"Sbloccare i miei diamanti utilizzando tocco Id\";\n  @override\n  get unlockWithFaceId => \"Sbloccare i miei diamanti utilizzando Face ID.\";\n  @override\n  get mPin => \"MPin\";\n  @override\n  get holdMemoStatusDiamondorder =>\n      \"Non si può confermato le pietre che sono già in possesso o un memo di stato\";\n  @override\n  get searchStoneIdCertificateNo => \"Cerca di pietra Id / Certificato No\";\n  @override\n  get createMPin => \"Crea nuovo MPin\";\n  @override\n  get reentermpin => \"Reinserire MPin\";\n  @override\n  get forgotmpin => \"Hai dimenticato MPIN?\";\n  @override\n  get verifympin => \"Verifica Mpin\";\n  @override\n  get enteryoursixdigitcode => \"Inserisci il tuo MPIN 6 cifre\";\n  @override\n  get changempin => \"Cambio MPin\";\n  @override\n  get faceidandtouchnotenable =>\n      \"FaceID / TouchId non è abilitata nel telefono, Si prega di abilitare per utilizzare questa funzione\";\n  @override\n  get enablempintounlockmydiamonds =>\n      \"Abilita MPin per app sbloccare? Sarà disabilitare tocco Id. Sei sicuro di voler continuare?\";\n  @override\n  get enabletouchidtounlockmydiamonds =>\n      \"Abilita tocco Id al app sbloccare? Sarà disabilitare MPin. Sei sicuro di voler continuare?\";\n  @override\n  get rememberme => \"Ricordati di me\";\n  @override\n  get usertouchid => \"Uso Toccare Id\";\n  @override\n  get usempin => \"Usa MPin\";\n  @override\n  get filesarenotavailableonserver =>\n      \"I file non sono disponibili sul server di, riprova più tardi\";\n  @override\n  get allfileshavebeendownloaded => \"Tutti i file sono stati scaricati.\";\n  @override\n  get filesisdownloaded => \"file viene scaricato\";\n  @override\n  get filesisnotdownloadedbcz =>\n      \"file non viene scaricato perché non è presente nel server.\";\n  @override\n  get downloadingCanceled => \"Downloading annullata\";\n  @override\n  get downloading => \"Download in corso ...\";\n  @override\n  get expirydate => \"Data di scadenza :\";\n  @override\n  get youreallywanttodelete => \"Si vuole veramente cancellare\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"packetNo\": \"Packet No:\",\n    \"shape\": \"Forma\",\n  };\n}\n\nclass ItalianErrorString extends ErrorString {\n  @override\n  get accessDenide => \"Accesso negato\";\n  @override\n  get pleaseSelectOfferTillDate =>\n      \"Si prega di selezionare l'offerta fino a data.\";\n  @override\n  get pleaseSelectOfficeVisitDate =>\n      \"Si prega di selezionare data di ufficio visita\";\n  @override\n  get deleteStoneMsg => \"Sei sicuro di voler cancellare pietra (s)?\";\n  @override\n  get acceptTermsAndCondition =>\n      \"Si prega di accettare i termini e le condizioni\";\n  @override\n  get diamondCompareRemove => \"Almeno 2 Stones sono tenuti a confrontare.\";\n  @override\n  get diamondSelectionError => \"Seleziona almeno una fava.\";\n  @override\n  get pleaseEnterCompanyName => \"Si prega di inserire nome della società.\";\n  @override\n  get selectInvoiceDate => \"Seleziona Data fattura\";\n  @override\n  get pleaseEnterComment => \"Inserisci il tuo commento.\";\n  @override\n  get pleaseEnterRemarks => \"Si prega di inserire commenti.\";\n  @override\n  get selectExpiryDate => \"Seleziona la data di scadenza.\";\n  @override\n  get enterOTP => \"Si prega di inserire il codice\";\n  @override\n  get pleaseEnterOTP => \"Si prega di inserire il codice di verifica.\";\n  @override\n  get enteredCodeNotMatching =>\n      \"codice inserito non è la corrispondenza. Riprova\";\n  @override\n  get selectCancellationReason => \"Seleziona motivo della cancellazione\";\n  @override\n  get enterDesc => \"Si prega di inserire descrizione.\";\n  @override\n  get enterTitle => \"Si prega di inserire il titolo.\";\n  @override\n  get enterEmailOrPhone => \"Inserisci e-mail / mobile.\";\n  @override\n  get enterPassword =>\n      \"La password non può essere vuoto. Per favore, inserisci la password.\";\n  @override\n  get enterConfirmPassword => \"Si prega di inserire la password di conferma.\";\n  @override\n  get enterSkype => \"Si prega di inserire Skype.\";\n  @override\n  get enterRegisterCode => \"Si prega di inserire il codice di registrazione\";\n  @override\n  get enterEmail => \"Si prega di inserire l'indirizzo e-mail.\";\n  @override\n  get enterPhone => \"Si prega di inserire numero di cellulare.\";\n  @override\n  get enterUsername =>\n      \"Nome utente non può essere vuoto. Si prega di inserire nome utente.\";\n  @override\n  get enterValidEmail => \"Si prega di inserire l'indirizzo e-mail valido.\";\n  @override\n  get enterValidPhone => \"Si prega di inserire il numero di cellulare valido.\";\n  @override\n  get enterValidWhatsappPhone =>\n      \"Si prega di inserire la valida WhatsApp Mobile Number.\";\n  @override\n  get enterValidPassword =>\n      \"Si prega di inserire 6 caratteri o password lunga.\";\n  @override\n  get mismatchPassword => \"Password e password di conferma non corrisponde.\";\n  @override\n  get enterFirstName => \"Si prega di inserire il Nome.\";\n  @override\n  get enterMiddleName => \"Si prega di inserire il secondo nome.\";\n  @override\n  get enterPinCode => \"Si prega di inserire il codice PIN.\";\n  @override\n  get enterName => \"Si prega di inserire nome.\";\n  @override\n  get enterLastName => \"Si prega di inserire cognome.\";\n  @override\n  get enterAddress => \"Si prega di inserire l'indirizzo.\";\n  @override\n  get enterValidPinCode => \"Inserisci PinCode valido.\";\n  @override\n  get enterValidAddress =>\n      \"Si prega di inserire 10 caratteri o l'indirizzo a lungo.\";\n  @override\n  get enterPostalCode => \"Si prega di inserire il codice postale.\";\n  @override\n  get enterValidPostalCode =>\n      \"Si prega di inserire 6 cifre codice postale numerico.\";\n  @override\n  get enterCurrentPassword => \"Si prega di inserire la password corrente.\";\n  @override\n  get enterNewPassword => \"Si prega di inserire una nuova password.\";\n  @override\n  get enterFareAmount => \"Si prega di inserire l'importo delle vendite.\";\n  @override\n  get enterOrderNO => \"Si prega di inserire ordine no.\";\n  @override\n  get enterServiceType => \"Si prega di selezionare il tipo di servizio.\";\n  @override\n  get enterPaymentType => \"Si prega di selezionare il tipo di pagamento.\";\n  @override\n  get enterValidFareAmount => \"importo delle vendite non può essere zero.\";\n  @override\n  get enterPassangerNo => \"Si prega di inserire n. di passeggeri.\";\n  @override\n  get enterValidPassangerNo => \"Numero di passeggeri non può essere zero.\";\n  @override\n  get notEnterMorePassangerNo =>\n      \"Numero di passeggeri non può essere superiore a sette.\";\n  @override\n  get drivingLicenseValidationText =>\n      \"Si prega di inserire 15 cifre alfanumeriche numero di patente.\";\n  @override\n  get pANCardValidationText =>\n      \"Si prega di inserire 10 cifre alfanumeriche numero di carta di PAN.\";\n  @override\n  get selectFromDate => \"Si prega di selezionare dalla data\";\n  @override\n  get selectToDate => \"Si prega di selezionare fino ad oggi\";\n  @override\n  get fromGreaterTo => \"Data selezionata deve essere superiore a data corrente\";\n  @override\n  get wrongPassword =>\n      \"must password contiene, minimo 8 caratteri, 1 alfabeto maiuscolo, 1 minuscolo alfabeto, 1 cifra, 1 charater speciale\";\n  @override\n  get fromValueGreateThanTo =>\n      \"Dal valore deve essere inferiore o uguale al valore A\";\n  @override\n  get toValueGreaterThanFrom =>\n      \"Per valore deve essere maggiore o uguale al valore di Da\";\n  @override\n  get pleaseEnterCompanyCode => \"Si prega di inserire il codice aziendale\";\n  @override\n  get enterSamePassword =>\n      \"Conferma password non corrisponde con la nuova password. Si prega di inserire la password di conferma stessa di New Password.\";\n  @override\n  get selectAppointmentDate => \"Seleziona la data di appuntamento\";\n  @override\n  get selectTimeSlot => \"Seleziona fascia oraria\";\n  @override\n  get enterComments => \"Inserisci il tuo commento\";\n  @override\n  get selectVirtualType => \"Si prega di selezionare il tipo virtuale\";\n  @override\n  get versionError => \"Errore Version\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ItalianNoDataStrings extends NoDataStrings {\n  @override\n  get noDataFound => \"Dati non disponibili\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ItalianScreenTitle extends ScreenTitle {\n  @override\n  get placeAnOffer => \"Mettere un'offerta\";\n  @override\n  get addedInWatchList => \"Aggiunto in Watchlist\";\n  @override\n  get addedInOffer => \"offerta presentata\";\n  @override\n  get addedInCart => \"Aggiunto a carrello\";\n  @override\n  get addedInBid => \"Aggiunto in Bid\";\n  @override\n  get myEnquiry => \"la mia indagine\";\n  @override\n  get delete => \"Elimina\";\n  @override\n  get addDemand => \"Add domanda\";\n  @override\n  get matchPair => \"partita coppia\";\n  @override\n  get savedAndSearch => \"Salva ricerca\";\n  @override\n  get updateAndSearch => \"Aggiornamento e Ricerca\";\n  @override\n  get upcoming => \"Prossime\";\n  @override\n  get bidPricePerCt => \"Prezzo di offerta / Ct\";\n  @override\n  get bidDisc => \"Bid Disc\";\n  @override\n  get bidValue => \"Bid Valore\";\n  @override\n  get bidStone => \"offerta di pietra\";\n  @override\n  get myCart => \"La mia carta\";\n  @override\n  get myComment => \"I miei appunti\";\n  @override\n  get compare => \"Confrontare\";\n  @override\n  get compareStones => \"Pietre confronta\";\n  @override\n  get statusHold => \"In attesa\";\n  @override\n  get statusOnMemo => \"su Memo\";\n  @override\n  get statusAvailable => \"A disposizione\";\n  @override\n  get statusNew => \"Nuovo arrivo\";\n  @override\n  get statusOffer => \"Pietra Del Giorno / Promozione\";\n  @override\n  get statusMyHold => \"La mia attesa\";\n  @override\n  get signup => \"Iscriviti\";\n  @override\n  get addToOffice => \"Aggiungere a Office\";\n  @override\n  get addComment => \"Aggiungi un commento\";\n  @override\n  get addEnquiry => \"Aggiungere Inquiry\";\n  @override\n  get finalOffer => \"Offerta finale\";\n  @override\n  get finalDisc => \"Disco finale\";\n  @override\n  get finalRate => \"tasso finale\";\n  @override\n  get finalValue => \"Valore finale\";\n  @override\n  get orderMsg =>\n      \"1) i prezzi menzionati qui sono fissi e quindi non trattabile. \\\\ n2) La classificazione, parametri menzionato sul nostro sito web al di là di classificazione del GIA.\";\n  @override\n  get offerMsg =>\n      \"pietra Offerto sarà direttamente confermata se il prezzo viene approvato così vi chiediamo di essere sicuri prima di offrire. Ogni pietra (s) messo in lista Offerta non viene tenuto in attesa per voi in quanto è disponibile per altro cliente è pure.\";\n  @override\n  get note => \"Nota\";\n  @override\n  get hours => \"Ore\";\n  @override\n  get offeredDisc => \"Dis offerti\";\n  @override\n  get offeredPriceCt => \"Offerto Pr / Ct\";\n  @override\n  get addOffer => \"Aggiungere offerta\";\n  @override\n  get expDiscPer => \"Sconto previsto\";\n  @override\n  get todayDiscPer => \"Disco di oggi\";\n  @override\n  get searchResult => \"Risultato della ricerca\";\n  @override\n  get searchDiamond => \"Ricerca diamante\";\n  @override\n  get basic => \"Di base\";\n  @override\n  get advanced => \"Avanzate\";\n  @override\n  get stoneIdCertNo => \"StoneID / Cert No\";\n  @override\n  get takeSignature => \"prendere Firma\";\n  @override\n  get optional => \"Opzionale\";\n  @override\n  get myAddress => \"Il mio indirizzo\";\n  @override\n  get expiryDate => \"Data di scadenza\";\n  @override\n  get drivingLicenceDesc => \"La tua foto patente di guida\";\n  @override\n  get panDesc => \"La tua foto carta di PAN\";\n  @override\n  get selfie => \"Autoscatto\";\n  @override\n  get selfieDesc => \"La tua foto selfie\";\n  @override\n  get pending => \"in attesa di\";\n  @override\n  get rejected => \"Respinto\";\n  @override\n  get uploadAgain => \"Caricare\";\n  @override\n  get remove => \"Rimuovere\";\n  @override\n  get title => \"Titolo\";\n  @override\n  get description => \"Descrizione\";\n  @override\n  get uploadYour => \"Carica la tua\";\n  @override\n  get raiseDispute => \"Fatecelo sapere\";\n  @override\n  get drivingLicense => \"Patente di guida\";\n  @override\n  get pANCard => \"PAN carta\";\n  @override\n  get saveContinue => \"Salva e continua\";\n  @override\n  get uploadFrontUmgText => \"L'immagine Caricare Front Side\";\n  @override\n  get uploadPANCardImgText => \"Carica PAN Immagine biglietto\";\n  @override\n  get uploadBackImageText => \"L'immagine Caricare Back Side\";\n  @override\n  get helptopic => \"Argomenti di aiuto\";\n  @override\n  get newRideSharingRequest => \"Richieste Nuovo Autostop\";\n  @override\n  get newRequest => \"nuove richieste\";\n  @override\n  get welcomeTo => \"Benvenuto a\";\n  @override\n  get welcomeDesc => \"Accedi al tuo account esistente di Mani Jewel\";\n  @override\n  get forgotPassword => \"Ho dimenticato il tuo\";\n  @override\n  get forgotPasswordDesc =>\n      \"Inserisci il tuo numero di cellulare registrato per recuperare la password.\";\n  @override\n  get termsAndCondition => \"Termini & Condizioni\";\n  @override\n  get privacyPolicy => \"politica sulla riservatezza\";\n  @override\n  get aboutUS => \"Riguardo a noi\";\n  @override\n  get otpVerification => \"Verifica il codice giro\";\n  @override\n  get otpVerificationDelivery => \"Verifica il codice Pickup\";\n  @override\n  get otpVerificationDeliveryDone => \"Verifica il codice di consegna\";\n  @override\n  get enterOtp => \"Inserire 4 cifre\";\n  @override\n  get recoveryCode => \"codice di ripristino\";\n  @override\n  get editProfile => \"Modifica Profilo\";\n  @override\n  get myProfile => \"Il mio profilo\";\n  @override\n  get reset => \"Ripristina\";\n  @override\n  get yourPassword => \"La tua password\";\n  @override\n  get photo => \"Foto\";\n  @override\n  get otpDesc =>\n      \"Il codice di ripristino è stato inviato al tuo numero di cellulare. Si prega di inserire il codice.\";\n  @override\n  get otpVerifyDesc =>\n      \"Il codice di verifica è stato inviato al tuo numero di cellulare. Si prega di inserire il codice.\";\n  @override\n  get diamondDetail => \"diamante Dettaglio\";\n  @override\n  get home => \"Casa\";\n  @override\n  get search => \"Ricerca\";\n  @override\n  get quickSearch => \"Ricerca rapida\";\n  @override\n  get newArrival => \"Nuovo arrivo\";\n  @override\n  get exclusiveDiamonds => \"Diamanti Exclusive\";\n  @override\n  get diamondOnAuction => \"Diamante all'asta\";\n  @override\n  get stoneOfTheDays => \"Miglior acquisto\";\n  @override\n  get myWatchlist => \"mio Lista memo\";\n  @override\n  get myBid => \"la mia offerta\";\n  @override\n  get myHold => \"La mia attesa\";\n  @override\n  get myOrder => \"Il mio Elenco ordinato\";\n  @override\n  get confirmStone => \"pietra Conferma\";\n  @override\n  get myOffice => \"My Appointment\";\n  @override\n  get myOffer => \"Il mio Elenco prodotti\";\n  @override\n  get myPurchased => \"La mia storia acquistati\";\n  @override\n  get mySavedSearch => \"La mia ricerca salvata\";\n  @override\n  get savedSearch => \"Saved Search\";\n  @override\n  get myDemand => \"La mia domanda\";\n  @override\n  get contactUs => \"Contattaci\";\n  @override\n  get changePassword => \"Cambia la password\";\n  @override\n  get logout => \"Disconnettersi\";\n  @override\n  get fareDetailsTitle => \"Inserire i dettagli di vendita\";\n  @override\n  get fairAmt => \"Ammontare delle vendite\";\n  @override\n  get noOfPassengers => \"Numero dei passeggeri\";\n  @override\n  get remarks => \"Osservazioni\";\n  @override\n  get orderNo => \"Numero d'ordine.\";\n  @override\n  get typeOfService => \"Tipo di servizio\";\n  @override\n  get paymentType => \"Modalità di pagamento*\";\n  @override\n  get recentlyView => \"recentemente View\";\n  @override\n  get uploadImgValidationText =>\n      \"Carica file deve essere .jpg, .jpeg, .png o .pdf con dimensioni 5 MB o meno.\";\n  @override\n  get drivingLicenseHintText => \"Numero di patente\";\n  @override\n  get pANCARDHintText => \"PAN Numero di carta\";\n  @override\n  get viewRide => \"vista Rides\";\n  @override\n  get myVehicle => \"Il mio veicolo\";\n  @override\n  get personalDocument => \"Documenti personali\";\n  @override\n  get help => \"AIUTO\";\n  @override\n  get about => \"Di\";\n  @override\n  get bankDetails => \"Coordinate bancarie\";\n  @override\n  get accountAndPayment => \"Conto e pagamento\";\n  @override\n  get enquiry => \"Inchiesta\";\n  @override\n  get download => \"Scarica\";\n  @override\n  get addToCart => \"Aggiungi al carrello\";\n  @override\n  get addToWatchList => \"Aggiungere alla lista delle cose da vedere\";\n  @override\n  get finalCalculation => \"calcolo finale\";\n  @override\n  get bookOffice => \"book Office\";\n  @override\n  get clearSelection => \"Annulla selezione\";\n  @override\n  get comment => \"Commenti\";\n  @override\n  get hold => \"Tenere\";\n  @override\n  get offer => \"Offrire\";\n  @override\n  get officeView => \"ufficio View\";\n  @override\n  get placeOrder => \"Invia ordine\";\n  @override\n  get buyNow => \"Acquista ora\";\n  @override\n  get cancelStone => \"Annulla pietra\";\n  @override\n  get share => \"Condividere\";\n  @override\n  get watchlist => \"Watchlist\";\n  @override\n  get exclusive => \"Esclusivo\";\n  @override\n  get featuredStones => \"Pietre in vetrina\";\n  @override\n  get stoneOfDay => \"Pietre di Giorno\";\n  @override\n  get recentSearch => \"recenti Ricerca\";\n  @override\n  get viewAll => \"Mostra tutto\";\n  @override\n  get salesPersonDetail => \"Persona Vendite Dettaglio\";\n  @override\n  get searchTitle => \"Ricerca Titolo\";\n  @override\n  get enterSearchTitle => \"Inserisci Ricerca Titolo\";\n  @override\n  get timeSlots => \"Fasce orarie\";\n  @override\n  get selectCustomDate => \"Seleziona date personalizzato\";\n  @override\n  get availableSlot => \"Slot disponibili\";\n  @override\n  get reqOfficeView => \"Richiedi Ufficio View\";\n  @override\n  get myComments => \"Il mio commento\";\n  @override\n  get myReminder => \"Il mio promemoria\";\n  @override\n  get reminder => \"Promemoria\";\n  @override\n  get manageAddress => \"gestire gli indirizzi\";\n  @override\n  get myAccount => \"Il mio account\";\n  @override\n  get declaimer => \"disconoscimento\";\n  @override\n  get shareStone => \"Condividi pietra\";\n  @override\n  get addRemider => \"Aggiungi promemoria\";\n  @override\n  get offlineSearch => \"offline Cerca\";\n  @override\n  get searchHistory => \"Cronologia delle ricerche\";\n  @override\n  get offlineStock => \"offline della\";\n  @override\n  get searchOffline => \"Cerca (Offline)\";\n  @override\n  get voiceSearch => \"Ricerca vocale\";\n  @override\n  get tapMictoSpeak => \"Toccare microfono a parlare\";\n  @override\n  get typeToSearch => \"Digita per ricerca\";\n  @override\n  get typeWordsToSearch => \"Digitare almeno 3 parole per cercare pietre\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ItalianDynamickeys extends Dynamickeys {\n  @override\n  get shape => \"Forma\";\n  @override\n  get caratRange => \"Carat Gamma\";\n  @override\n  get basicDetail => \"Dettagli di base\";\n  @override\n  get measurementTitle => \"misure\";\n  @override\n  get inclusionDetail => \"Dettagli di inclusione\";\n  @override\n  get other => \"Altro\";\n  @override\n  get stoneID => \"pietra ID\";\n  @override\n  get labTitle => \"Laboratorio\";\n  @override\n  get certNo => \"Cert. No.\";\n  @override\n  get locationTitle => \"POSIZIONE\";\n  @override\n  get shapeTitle => \"Forma\";\n  @override\n  get caratTitle => \"carato\";\n  @override\n  get colorTitle => \"Colore\";\n  @override\n  get clarityTitle => \"CHIAREZZA\";\n  @override\n  get cutTitle => \"Taglio\";\n  @override\n  get polishTitle => \"polacco\";\n  @override\n  get symmentryTitle => \"Symmentry\";\n  @override\n  get fluorescenceTitle => \"Fluorescenza\";\n  @override\n  get rapTitle => \"Rap (%)\";\n  @override\n  get discountTitle => \"Sconto (%)\";\n  @override\n  get priceAndCt => \"Prezzo / Ct\";\n  @override\n  get amountTitle => \"Quantità\";\n  @override\n  get eyeCleanTitle => \"Clean Eye\";\n  @override\n  get brownTitle => \"MARRONE\";\n  @override\n  get milkyTitle => \"latteo\";\n  @override\n  get mixTingeTitle => \"MIX tinge\";\n  @override\n  get dimensionTitle => \"Dimensioni (mm)\";\n  @override\n  get girdleTitle => \"Cintura (%)\";\n  @override\n  get tableTitle => \"Tavolo %\";\n  @override\n  get crownAngleTitle => \"Angolo di corona\";\n  @override\n  get depthTitle => \"profondità%\";\n  @override\n  get pavAngleTitle => \"Pav Angolo\";\n  @override\n  get crownHeightTitle => \"Corona Altezza (%)\";\n  @override\n  get pavDepthTitle => \"Padiglione Profondità (%)\";\n  @override\n  get starLengthTitle => \"stella Lunghezza\";\n  @override\n  get lowerHalfTitle => \"La metà inferiore\";\n  @override\n  get gridleTitle => \"Cintura\";\n  @override\n  get gridleFacetedTitle => \"CINTURA SFACCETTATA\";\n  @override\n  get culetTitle => \"culet\";\n  @override\n  get rationTitle => \"Rapporto\";\n  @override\n  get blackInclusionTitle => \"INCLUSIONE NERO\";\n  @override\n  get otherInclusionTitle => \"Altro inclusione\";\n  @override\n  get openInclusionTitle => \"INCLUSIONE APERTO\";\n  @override\n  get extraFacetTitle => \"FACET EXTRA\";\n  @override\n  get naturalTitle => \"Naturale\";\n  @override\n  get hAndATitle => \"H & A\";\n  @override\n  get keyToSymbol => \"LEGENDA SIMBOLO\";\n  @override\n  get labComments => \"COMMENTI LAB\";\n  @override\n  get laserInsTitle => \"LASER INS\";\n  @override\n  get basicTitle => \"Di base\";\n  @override\n  get advancedTitle => \"Avanzate\";\n  @override\n  get stoneIdTitle => \"Pietra ID / Cert No\";\n  @override\n  get defaultTitle => \"Predefinito\";\n  @override\n  get newDiamondsTitle => \"nuovi Diamonds\";\n  @override\n  get priceLowToHigh => \"Prezzo basso al più alto\";\n  @override\n  get priceHighToLow => \"Prezzo decrescente\";\n  @override\n  get disLowToHigh => \"Sconto basso al più alto\";\n  @override\n  get disHighToLow => \"Alto sconto per Basso\";\n  @override\n  get colorLowToHigh => \"Colore basso al più alto\";\n  @override\n  get colorHighToLow => \"Colore decrescente\";\n  @override\n  get caratLowToHigh => \"Carat basso al più alto\";\n  @override\n  get caratHighToLow => \"Carat decrescente\";\n  @override\n  get clarityLowToHigh => \"Chiarezza basso al più alto\";\n  @override\n  get clarityHighToLow => \"La chiarezza decrescente\";\n  @override\n  get colorShadeTitle => \"color Shade\";\n  @override\n  get certiTitle => \"Numero di certificato\";\n  @override\n  get arrivalsTitle => \"Arrivi\";\n  @override\n  get lengthTitle => \"Lunghezza\";\n  @override\n  get widthTitle => \"Larghezza\";\n  @override\n  get pavilionAngleTitle => \"Angolo Pavilion\";\n  @override\n  get girdleConditionTitle => \"Cintola Condizione\";\n  @override\n  get cluetConditionTitle => \"culet Condizione\";\n  @override\n  get disTitle => \"Dis%\";\n  @override\n  get depthTitleWithoutPerc => \"Profondità\";\n  @override\n  get otherInformationTitle => \"Altre informazioni\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"shape\": \"Forma\",\n    \"caratRange\": \"Carat Gamma\",\n    \"basicDetail\": \"Dettagli di base\",\n    \"measurementTitle\": \"misure\",\n    \"inclusionDetail\": \"Dettagli di inclusione\",\n    \"other\": \"Altro\",\n    \"stoneID\": \"pietra ID\",\n    \"labTitle\": \"Laboratorio\",\n    \"certNo\": \"Cert. No.\",\n    \"locationTitle\": \"POSIZIONE\",\n    \"caratTitle\": \"carato\",\n    \"colorTitle\": \"Colore\",\n    \"clarityTitle\": \"CHIAREZZA\",\n    \"cutTitle\": \"Taglio\",\n    \"polishTitle\": \"polacco\",\n    \"symmentryTitle\": \"Symmentry\",\n    \"fluorescenceTitle\": \"Fluorescenza\",\n    \"rapTitle\": \"Rap (%)\",\n    \"discountTitle\": \"Sconto (%)\",\n    \"priceAndCt\": \"Prezzo / Ct\",\n    \"amountTitle\": \"Quantità\",\n    \"eyeCleanTitle\": \"Clean Eye\",\n    \"brownTitle\": \"MARRONE\",\n    \"milkyTitle\": \"latteo\",\n    \"mixTingeTitle\": \"MIX tinge\",\n    \"dimensionTitle\": \"Dimensioni (mm)\",\n    \"girdleTitle\": \"Cintura (%)\",\n    \"tableTitle\": \"Tavolo %\",\n    \"crownAngleTitle\": \"Angolo di corona\",\n    \"depthTitle\": \"profondità%\",\n    \"pavAngleTitle\": \"Pav Angolo\",\n    \"crownHeightTitle\": \"Corona Altezza (%)\",\n    \"pavDepthTitle\": \"Padiglione Profondità (%)\",\n    \"starLengthTitle\": \"stella Lunghezza\",\n    \"lowerHalfTitle\": \"La metà inferiore\",\n    \"gridleTitle\": \"Cintura\",\n    \"gridleFacetedTitle\": \"CINTURA SFACCETTATA\",\n    \"culetTitle\": \"culet\",\n    \"rationTitle\": \"Rapporto\",\n    \"blackInclusionTitle\": \"INCLUSIONE NERO\",\n    \"otherInclusionTitle\": \"Altro inclusione\",\n    \"openInclusionTitle\": \"INCLUSIONE APERTO\",\n    \"extraFacetTitle\": \"FACET EXTRA\",\n    \"naturalTitle\": \"Naturale\",\n    \"hAndATitle\": \"H & A\",\n    \"keyToSymbol\": \"LEGENDA SIMBOLO\",\n    \"labComments\": \"COMMENTI LAB\",\n    \"laserInsTitle\": \"LASER INS\",\n    \"basicTitle\": \"Di base\",\n    \"advancedTitle\": \"Avanzate\",\n    \"stoneIdTitle\": \"Pietra ID / Cert No\",\n    \"defaultTitle\": \"Predefinito\",\n    \"newDiamondsTitle\": \"nuovi Diamonds\",\n    \"priceLowToHigh\": \"Prezzo basso al più alto\",\n    \"priceHighToLow\": \"Prezzo decrescente\",\n    \"disLowToHigh\": \"Sconto basso al più alto\",\n    \"disHighToLow\": \"Alto sconto per Basso\",\n    \"colorLowToHigh\": \"Colore basso al più alto\",\n    \"colorHighToLow\": \"Colore decrescente\",\n    \"caratLowToHigh\": \"Carat basso al più alto\",\n    \"caratHighToLow\": \"Carat decrescente\",\n    \"clarityLowToHigh\": \"Chiarezza basso al più alto\",\n    \"clarityHighToLow\": \"La chiarezza decrescente\",\n    \"colorShadeTitle\": \"color Shade\",\n    \"certiTitle\": \"Numero di certificato\",\n    \"arrivalsTitle\": \"Arrivi\",\n    \"lengthTitle\": \"Lunghezza\",\n    \"widthTitle\": \"Larghezza\",\n    \"pavilionAngleTitle\": \"Angolo Pavilion\",\n    \"girdleConditionTitle\": \"Cintola Condizione\",\n    \"cluetConditionTitle\": \"culet Condizione\",\n    \"disTitle\": \"Dis%\",\n    \"depthTitleWithoutPerc\": \"Profondità\",\n    \"otherInformationTitle\": \"Altre informazioni\",\n  };\n}\n\nclass Spanish extends English {\n  @override\n  get authStrings => SpanishAuthStrings();\n  @override\n  get commonString => SpanishCommonString();\n  @override\n  get errorString => SpanishErrorString();\n  @override\n  get noDataStrings => SpanishNoDataStrings();\n  @override\n  get screenTitle => SpanishScreenTitle();\n  @override\n  get dynamickeys => SpanishDynamickeys();\n  static String get languageCode => \"Spanish\";\n  static String get languageName => \"Spanish\";\n}\n\nclass SpanishAuthStrings extends AuthStrings {\n  @override\n  get editCompanyInformation => \"Editar Información de la empresa\";\n  @override\n  get selectNatureOfOrganization => \"Seleccionar naturaleza de la organización\";\n  @override\n  get setNewPassword => \"Establecer la nueva contraseña y acceder de nuevo.\";\n  @override\n  get enterCompanyName => \"Por favor, introduzca el nombre de la empresa.\";\n  @override\n  get pleaseEnterCustomerOTP =>\n      \"Por favor, introduzca el código de trayecto al cliente.\";\n  @override\n  get pleaseEnterPickupOTP =>\n      \"Por favor, introduzca el código de captación de clientes.\";\n  @override\n  get pleaseEnterDeliveryOTP =>\n      \"Por favor, introduzca el código de entrega al cliente.\";\n  @override\n  get verified => \"Verified\";\n  @override\n  get verify => \"Verificar\";\n  @override\n  get addressLineOne => \"Dirección 1\";\n  @override\n  get addressLineTwo => \"Dirección 2\";\n  @override\n  get addressLineThree => \"dirección 3\";\n  @override\n  get oldPassword => \"Contraseña anterior\";\n  @override\n  get skype => \"Skype\";\n  @override\n  get whatsApp => \"Whatsapp\";\n  @override\n  get pinCode => \"Código PIN*\";\n  @override\n  get verifyMobileDesc =>\n      \"Por favor, compruebe el número móvil para actualizar el perfil.\";\n  @override\n  get verifyNow => \"verifica ahora\";\n  @override\n  get password => \"Contraseña\";\n  @override\n  get backToHome => \"Ir a casa\";\n  @override\n  get forgotPassword => \"¿Se te olvidó tu contraseña?\";\n  @override\n  get signInCap => \"Registrarse\";\n  @override\n  get moveToLogIn => \"Mover a Entrar\";\n  @override\n  get dontHaveAnAccount => \"#ERROR!\";\n  @override\n  get clickHere => \"haga clic aquí\";\n  @override\n  get signUpHere => \"Registrate aquí\";\n  @override\n  get reset => \"Reiniciar\";\n  @override\n  get haveRegisterCode => \"Tener un código de registro?\";\n  @override\n  get welcome => \"¡Dar una buena acogida!\";\n  @override\n  get signInAsGuest => \"Iniciar sesión como invitado\";\n  @override\n  get editProfileTitle => \"Editar perfil\";\n  @override\n  get emaillbl => \"Email\";\n  @override\n  get searchInventory => \"búsqueda de productos\";\n  @override\n  get emailAddress => \"Dirección de correo electrónico*\";\n  @override\n  get offlineFilter =>\n      \"No es posible encontrar el solitario deseada? Podemos ayudarle a obtener la mejor oferta de nuestro inventario en línea.\";\n  @override\n  get loginDesc =>\n      \"¿Quieres activar Touch ID / MPIN para desbloquear mis diamantes? Por favor seleccione una opción para la aplicación de desbloqueo\";\n  @override\n  get searchDiamonds => \"diamantes de búsqueda\";\n  @override\n  get continueWithSearch => \"¿Quieres continuar su búsqueda?\";\n  @override\n  get mobileNumber => \"Móvil\";\n  @override\n  get searchHint => \"Buscar...\";\n  @override\n  get selectYourCountry => \"Seleccionar país\";\n  @override\n  get resendCodeIn => \"Reenviar mensaje en código\";\n  @override\n  get resendCode => \"Enviar de nuevo\";\n  @override\n  get haveAnAccount => \"¿Ya tienes una cuenta?\";\n  @override\n  get dontReceiveCode => \"Si no recibe un código!\";\n  @override\n  get inLogin => \"iniciar sesión.\";\n  @override\n  get resetPwdDesc =>\n      \"Añadir contraseña y confirmación de contraseña para restablecer la contraseña.\";\n  @override\n  get backToLogin => \"Atrás para iniciar sesión\";\n  @override\n  get firstName => \"Primer nombre*\";\n  @override\n  get name => \"Nombre de usuario *\";\n  @override\n  get lastName => \"Apellido*\";\n  @override\n  get middleName => \"Segundo nombre*\";\n  @override\n  get confirmPassword => \"Confirmar contraseña\";\n  @override\n  get currentPasswordErr => \"Error de contraseña actual\";\n  @override\n  get passwordChanged => \"Contraseña cambiada\";\n  @override\n  get lblLogInErr => \"Error de inicio de sesión\";\n  @override\n  get enterYour => \"Entra tu\";\n  @override\n  get details => \"detalles\";\n  @override\n  get registerCode => \"Código de registro\";\n  @override\n  get registerCodeDesc =>\n      \"Añadir un código de registro para iniciar su inscripción en 3eco.\";\n  @override\n  get uploadPhotoDesc => \"Tome una autofoto de su auto\";\n  @override\n  get updateProfile => \"Actualización del perfil\";\n  @override\n  get postalCode => \"Código postal*\";\n  @override\n  get removeButton => \"Eliminar\";\n  @override\n  get gender => \"Género\";\n  @override\n  get male => \"Masculino\";\n  @override\n  get female => \"Hembra\";\n  @override\n  get changePassword => \"Cambia la contraseña\";\n  @override\n  get currentPassword => \"Contraseña actual*\";\n  @override\n  get newPassword => \"Nueva contraseña*\";\n  @override\n  get confirmNewPassword => \"Confirmar contraseña*\";\n  @override\n  get personalDocuments => \"Documentos personales\";\n  @override\n  get assignedAuto => \"Auto asignado\";\n  @override\n  get logout => \"Cerrar sesión\";\n  @override\n  get logoutConfirmationMsg => \"¿Seguro que desea finalizar la sesión?\";\n  @override\n  get address => \"Habla a*\";\n  @override\n  get accountNumber => \"Número de cuenta\";\n  @override\n  get bankerName => \"Nombre banqueros\";\n  @override\n  get nameLable => \"Nombre\";\n  @override\n  get ifscCode => \"código IFSC\";\n  @override\n  get businessRegistrationNumbr => \"Número de registro de negocios\";\n  @override\n  get businessRelationshipPeriod => \"Negocios período de vinculación (en años)\";\n  @override\n  get designation => \"Designacion\";\n  @override\n  get nameofDesignation => \"Nombre de\";\n  @override\n  get natureofOrganization => \"Naturaleza de la Organización\";\n  @override\n  get uploadFile => \"Sin archivo Choosen\";\n  @override\n  get update => \"ACTUALIZAR\";\n  @override\n  get resetPwd => \"Restablecer la contraseña\";\n  @override\n  get pwdReset => \"Restablecimiento de contraseña\";\n  @override\n  get signInWithMPIN => \"Iniciar sesión con MPIN\";\n  @override\n  get pwdChanged => \"Contraseña cambiada\";\n  @override\n  get successfullyPwdDesc =>\n      \"Ha restablecido la contraseña correctamente. Por favor utilice su nueva contraseña al iniciar la sesión.\";\n  @override\n  get lblProfileSetup => \"Su perfil está configurado\";\n  @override\n  get lblProfileSetupDesc => \"Hemos recibido los datos de su perfil\";\n  @override\n  get hoursAvailable => \"total Shifttime\";\n  @override\n  get confirmStoneDetail => \"Confirmar Detalle de piedra\";\n  @override\n  get companyName => \"nombre de empresa\";\n  @override\n  get invoiceDate => \"Fecha de la factura\";\n  @override\n  get companyCode => \"Codigo de compañia\";\n  @override\n  get saveCompanyDetails => \"Guardar Datos Empresa\";\n  @override\n  get passwordNotChange => \"Las contraseñas no coinciden\";\n  @override\n  get rememberPassword => \"¿Recordar contraseña?\";\n  @override\n  get sendOTP => \"Enviar OTP\";\n  @override\n  get resendNow => \"Ahora volvemos a enviar\";\n  @override\n  get didNotReceiveOTP => \"Si usted no recibió una OTP!\";\n  @override\n  get sendOTPToEmail =>\n      \"Vamos a enviar una OTP a su dirección de correo electrónico introducida o nombre de usuario. Por favor, introduzca la dirección de correo electrónico o nombre de usuario.\";\n  @override\n  get enterOTP =>\n      \"La Fiscalía ha sido enviada a su dirección de correo electrónico registrada. Por favor, introduzca la OTP.\";\n  @override\n  get backToSignIn => \"Volver a entrar\";\n  @override\n  get passwordResetSuccessfully => \"Restablecimiento de contraseñas con éxito.\";\n  @override\n  get emailAndUname => \"Email / Usuario\";\n  @override\n  get signUp => \"Regístrate\";\n  @override\n  get promotionText => \"Ofertas promocionales\";\n  @override\n  get termsAndCondition => \"Términos y Condiciones\";\n  @override\n  get mustAgreeTermsAndCondition =>\n      \"Debe aceptar los términos y condiciones de entrar como usuario invitado\";\n  @override\n  get forgotPasswordTitle => \"Se te olvidó tu contraseña\";\n  @override\n  get uploadKYC => \"Subir KYC\";\n  @override\n  get uploadKycDesc =>\n      \"Por favor, subir sus documentos KYC para acceder a funciones completas.\";\n  @override\n  get hintPhotoIdentityProof => \"Foto Identidad * Prueba\";\n  @override\n  get hintBussinerssProof => \"Identidad de negocios * Prueba\";\n  @override\n  get btnFileUpload => \"Subir archivo\";\n  @override\n  get pleaseUploadPhotoProof => \"Por favor, sube fotos prueba de identidad.\";\n  @override\n  get pleaseUploadBussinessProof =>\n      \"Por favor, sube Identidad negocio a prueba.\";\n  @override\n  get pleaseSelectFileFormat =>\n      \"Por favor, cargar el archivo en cualquiera de los formatos siguientes: .jpg\";\n  @override\n  get kycSubmitted => \"KYC Enviado\";\n  @override\n  get kycSubmmittedDesc =>\n      \"Su conocimiento del cliente se ha enviado correctamente.\";\n  @override\n  get btnMoveToHome => \"Mover a Inicio\";\n  @override\n  get kYCRejected => \"KYC Rechazado\";\n  @override\n  get kycRejectedDesc =>\n      \"Su conocimiento del cliente ha sido rechazada. Por favor, subir sus documentos KYC de nuevo para acceder a todas las funciones.\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass SpanishCommonString extends CommonString {\n  @override\n  get seeMore => \"Ver más\";\n  @override\n  get seeLess => \"Ver menos\";\n  @override\n  get modify => \"Modificar\";\n  @override\n  get delete => \"Eliminar\";\n  @override\n  get details => \"detalles\";\n  @override\n  get edit => \"Editar\";\n  @override\n  get addDemand => \"Agregar la demanda\";\n  @override\n  get demandTitle => \"La demanda Título\";\n  @override\n  get pleaseEnterDemandTitle => \"Por favor, introduzca demanda Título\";\n  @override\n  get demandAddedSuccessfully => \"La demanda agregado con éxito\";\n  @override\n  get selectAtleastOneFilter => \"Por favor\";\n  @override\n  get savedSearch => \"búsqueda guardada\";\n  @override\n  get searchSavedSearch => \"Buscar búsqueda guardada\";\n  @override\n  get viewDetails => \"Ver detalles\";\n  @override\n  get viewLessDetails => \"Ver menos detalles\";\n  @override\n  get myDemand => \"mi demanda\";\n  @override\n  get date => \"Fecha\";\n  @override\n  get selectTime => \"Seleccione Hora\";\n  @override\n  get selectDate => \"Seleccione fecha\";\n  @override\n  get offerVelidTill => \"Oferta válida Hasta\";\n  @override\n  get officeVisitDate => \"Consultorio Fecha\";\n  @override\n  get all => \"Todas\";\n  @override\n  get status => \"Estado\";\n  @override\n  get save => \"Salvar\";\n  @override\n  get verify => \"Verificar\";\n  @override\n  get readMore => \"Lee mas\";\n  @override\n  get goodMorning => \"Buenos días\";\n  @override\n  get goodAfternoon => \"Buenas tardes\";\n  @override\n  get goodEvening => \"Buena noches\";\n  @override\n  get btnSkip => \"Omitir\";\n  @override\n  get btnUpdate => \"Actualizar\";\n  @override\n  get btnContinue => \"Seguir\";\n  @override\n  get btnContinueCap => \"SEGUIR\";\n  @override\n  get btnEdit => \"Editar\";\n  @override\n  get btnSubmit => \"Enviar\";\n  @override\n  get btnNextCap => \"próximo\";\n  @override\n  get btnSaveCap => \"Actualiza contraseña\";\n  @override\n  get btnWithdrawCap => \"RETIRAR\";\n  @override\n  get btnSaveAndContinueCap => \"GUARDAR CONTINUAR\";\n  @override\n  get btnUnregister => \"no registrado móvil\";\n  @override\n  get btnClose => \"Cerca\";\n  @override\n  get remove => \"Eliminar\";\n  @override\n  get refresh => \"Actualizar\";\n  @override\n  get fetchLocationMessage =>\n      \"Por favor espere que están alcanzando su ubicación\";\n  @override\n  get done => \"Hecho\";\n  @override\n  get doneCap => \"HECHO\";\n  @override\n  get cancel => \"Cancelar\";\n  @override\n  get allow => \"Permitir\";\n  @override\n  get countryFirst => \"Por favor, seleccione País Primera\";\n  @override\n  get apply => \"Aplicar\";\n  @override\n  get cancelCap => \"CANCELAR\";\n  @override\n  get uploadCap => \"SUBIR\";\n  @override\n  get yesCancelCap => \"SI\";\n  @override\n  get upload => \"Subir\";\n  @override\n  get ok => \"Okay\";\n  @override\n  get home => \"Casa\";\n  @override\n  get goToMyWatchList => \"Ir a lista\";\n  @override\n  get goToMyOrder => \"Ir a Mi Pedido\";\n  @override\n  get gotToMyOffer => \"Ir a mi oferta\";\n  @override\n  get gotToMyHold => \"Ir a Mi Hold\";\n  @override\n  get gotToMyEnquiry => \"Ir a mi solicitud\";\n  @override\n  get gotToMyBid => \"Ir a mi oferta\";\n  @override\n  get gotToMyReminder => \"Ir a Mi Recordatorio\";\n  @override\n  get gotToMyComments => \"Ir a Mis Notas\";\n  @override\n  get yes => \"si\";\n  @override\n  get no => \"No\";\n  @override\n  get selectCountry => \"Seleccionar país\";\n  @override\n  get clickHere => \"Haga clic aquí\";\n  @override\n  get btnAddNewAddress => \"AGREGAR NUEVA DIRECCIÓN\";\n  @override\n  get btnCancel => \"CANCELAR\";\n  @override\n  get btnTakeSelfie => \"tome selfie\";\n  @override\n  get successfully => \"Exitosamente\";\n  @override\n  get lblAppExit => \"¿Seguro que quieres salir?\";\n  @override\n  get lblExit => \"Salida\";\n  @override\n  get openAppSetting => \"Configuración abierta\";\n  @override\n  get lblOr => \"O\";\n  @override\n  get fromLbl => \"Desde\";\n  @override\n  get toLbl => \"A\";\n  @override\n  get showMore => \"Mostrar más\";\n  @override\n  get showLess => \"Muestra menos\";\n  @override\n  get selectCity => \"Ciudad selecta\";\n  @override\n  get notYetAvailable => \"No disponible aún\";\n  @override\n  get updateAvailable => \"¡Actualización disponible!\";\n  @override\n  get downloadAppFrom => \"Descargar la aplicación de actualización de\";\n  @override\n  get playStore => \"Tienda de juegos\";\n  @override\n  get skipUpdate => \"Saltar actualización\";\n  @override\n  get stateFirst => \"Por favor, seleccione Estado Primera\";\n  @override\n  get reallyExit => \"Realmente salir?\";\n  @override\n  get alert => \"¡Alerta!\";\n  @override\n  get loading => \"Cargando\";\n  @override\n  get error => \"Error\";\n  @override\n  get jumpToTop => \"Saltar a la cima\";\n  @override\n  get ihaveread => \"he leido y acepto\";\n  @override\n  get selected => \"Seleccione\";\n  @override\n  get lbllogout => \"Cerrar sesión\";\n  @override\n  get lblThanx => \"Gracias\";\n  @override\n  get lblSelectCity => \"Ciudad selecta\";\n  @override\n  get lblSelectState => \"Seleccione estado\";\n  @override\n  get lblSelectCountry => \"Seleccionar país\";\n  @override\n  get lblCity => \"Ciudad\";\n  @override\n  get lblCountry => \"País\";\n  @override\n  get lblName => \"Nombre\";\n  @override\n  get lblPinCode => \"Código PIN\";\n  @override\n  get lblMobileNumber => \"Número de teléfono móvil\";\n  @override\n  get lblState => \"Estado\";\n  @override\n  get lblCode => \"Código:\";\n  @override\n  get lblOrderNo => \"N º de pedido:\";\n  @override\n  get lblOrderItem => \"Articulo ordenado:\";\n  @override\n  get lblDelivered => \"Entregado\";\n  @override\n  get lblTicketReady => \"Su billete está listo\";\n  @override\n  get lblPersonTicket => \"Billete de 2 persona\";\n  @override\n  get lblShuttleBus => \"Autobús de enlace\";\n  @override\n  get lblPickup => \"Recoger\";\n  @override\n  get lblDropoff => \"Bajar ó dejar algo\";\n  @override\n  get lblPassenger => \"Pasajero\";\n  @override\n  get lblDeliveryNo => \"Sin entrega.\";\n  @override\n  get lblPrice => \"Precio\";\n  @override\n  get lblValid => \"Valido para\";\n  @override\n  get lblRenew => \"Renovar\";\n  @override\n  get lblDeparture => \"Salida\";\n  @override\n  get lblArrived => \"Llegado\";\n  @override\n  get lblSendtoFriend => \"Enviala a un amigo\";\n  @override\n  get popupRenewTitle => \"renovar billete\";\n  @override\n  get popupRenewDesc => \"Lorem ipsum dolor sit amet\";\n  @override\n  get popuplblPassenger => \"Pasajero\";\n  @override\n  get popuplblCancel => \"Cancelar\";\n  @override\n  get popupbtnRenew => \"Renovar\";\n  @override\n  get ridelblAwesome => \"Increíble\";\n  @override\n  get ridebtnDone => \"Hecho\";\n  @override\n  get offerPricePerCarat => \"Precio ofrecido (CTS)\";\n  @override\n  get dropOffText => \"Bajar ó dejar algo\";\n  @override\n  get pickUpText => \"Recoger\";\n  @override\n  get startAtText => \"Empieza en\";\n  @override\n  get endAtText => \"Termina en\";\n  @override\n  get personText => \"persona\";\n  @override\n  get paymentScreenTitle => \"Pago\";\n  @override\n  get pickuplbl => \"Recoger\";\n  @override\n  get droplbl => \"Bajar ó dejar algo\";\n  @override\n  get makePaymentButtonlbl => \"Hacer el pago\";\n  @override\n  get pessangerslbl => \"Los pasajeros\";\n  @override\n  get priceBreakuplbl => \"Precio desintegración\";\n  @override\n  get tripPricelbl => \"Precio de viaje\";\n  @override\n  get taxeslbl => \"Impuestos\";\n  @override\n  get totallbl => \"Total\";\n  @override\n  get cardNumberhint => \"Número de tarjeta\";\n  @override\n  get cvvhint => \"CVV\";\n  @override\n  get datehint => \"MM / YY\";\n  @override\n  get btnTryAgain => \"Inténtalo de nuevo\";\n  @override\n  get cityFirst => \"Por favor, seleccione la primera ciudad\";\n  @override\n  get enterFareDetails => \"Entrar en detalles de ventas\";\n  @override\n  get fromDate => \"Partir de la fecha\";\n  @override\n  get toDate => \"Fecha seleccionada\";\n  @override\n  get btnUnderstand => \"Entiendo\";\n  @override\n  get applicationUpdate => \"actualización de aplicaciones\";\n  @override\n  get newVersionMessage => \"Una nueva versión de la aplicación está disponible\";\n  @override\n  get paymentCollected => \"pago Collected\";\n  @override\n  get addComment => \"Añadir un comentario\";\n  @override\n  get more => \"Más\";\n  @override\n  get carat => \"Quilate\";\n  @override\n  get pcs => \"pcs\";\n  @override\n  get cts => \"cts\";\n  @override\n  get disc => \"Dto %\";\n  @override\n  get avgPriceCrt => \"Avg. Precio / Ct\";\n  @override\n  get amount => \"Cantidad\";\n  @override\n  get confirmStone => \"Piedra Confirmar\";\n  @override\n  get confirm => \"Confirmar\";\n  @override\n  get offered => \"Ofrecido\";\n  @override\n  get validTill => \"Válida hasta\";\n  @override\n  get remark => \"Observación\";\n  @override\n  get color => \"Color\";\n  @override\n  get colorGroup => \"Grupo de color\";\n  @override\n  get colorFancy => \"Lujoso\";\n  @override\n  get colorWhite => \"Blanco\";\n  @override\n  get clarity => \"Claridad\";\n  @override\n  get clarityGroup => \"Grupo claridad\";\n  @override\n  get intensity => \"Intensidad\";\n  @override\n  get overtone => \"Armónico\";\n  @override\n  get selectBusinessType => \"Seleccionar el tipo de negocio\";\n  @override\n  get selectState => \"Seleccione estado\";\n  @override\n  get search => \"Buscar\";\n  @override\n  get profile => \"Mi perfil\";\n  @override\n  get personal => \"Personal\";\n  @override\n  get business => \"Negocio\";\n  @override\n  get documents => \"Documentos\";\n  @override\n  get noSlotFound => \"No se encontraron ranuras\";\n  @override\n  get noDiamondFound =>\n      \"No hay diamantes coinciden con la búsqueda. Por favor, agrega que la demanda.\";\n  @override\n  get selectType => \"Seleccionar tipo virtual\";\n  @override\n  get noSavedSearch => \"No existe búsqueda guardada\";\n  @override\n  get searchCity => \"Buscar por ciudad\";\n  @override\n  get searchCountry => \"Buscar País\";\n  @override\n  get searchState => \"estado de búsqueda\";\n  @override\n  get notifications => \"Notificación\";\n  @override\n  get enter2Stone => \"Por favor, seleccione al menos 2 piedra para comparar.\";\n  @override\n  get bidDesc =>\n      \"Actualmente se encuentra en la India y para la entrega en cualquier otro país, aparte de la India tendrá al menos 7-10 días laborables.\";\n  @override\n  get packetNo => \"Sin paquete:\";\n  @override\n  get quit => \"Dejar\";\n  @override\n  get agree => \"Estoy de acuerdo\";\n  @override\n  get laterToday => \"Mas tarde, hoy\";\n  @override\n  get toMorrow => \"mañana\";\n  @override\n  get nextWeek => \"La próxima semana\";\n  @override\n  get chooseAnother => \"Seleccione otro\";\n  @override\n  get dateTime => \"Fecha y hora\";\n  @override\n  get language => \"Idioma\";\n  @override\n  get diamNow => \"DiamNow\";\n  @override\n  get noDocument => \"No se encontraron documentos\";\n  @override\n  get searchBusinessType => \"Buscar Tipo de empresa\";\n  @override\n  get hours => \"horas\";\n  @override\n  get minutes => \"Minutos\";\n  @override\n  get seconds => \"Segundos\";\n  @override\n  get bidEndsIn => \"La subasta termina en:\";\n  @override\n  get shape => \"Forma\";\n  @override\n  get download => \"Descargar\";\n  @override\n  get share => \"Compartir\";\n  @override\n  get placeOrder => \"Realizar pedido\";\n  @override\n  get enterComment => \"Por favor, introduzca comentario\";\n  @override\n  get deleteItem => \"¿Estas seguro que quieres borrarlo?\";\n  @override\n  get shippingPolicy => \"Politica de envios\";\n  @override\n  get offerSundayRestriction =>\n      \"No está permitido domingo. Oficina días hábiles son de lunes a sábado\";\n  @override\n  get weekAgo => \"Hace 1 semana\";\n  @override\n  get lastWeek => \"La semana pasada\";\n  @override\n  get dayAgo => \"hace días\";\n  @override\n  get onedayAgo => \"Hace 1 día\";\n  @override\n  get yesterday => \"Ayer\";\n  @override\n  get hourAgo => \"horas atras\";\n  @override\n  get onehourAgo => \"1 hora antes\";\n  @override\n  get anhourAgo => \"Hace una hora\";\n  @override\n  get mintuesAgo => \"hace minutos\";\n  @override\n  get onemintuesAgo => \"Hace 1 minuto\";\n  @override\n  get amintueAgo => \"Hace un minuto\";\n  @override\n  get secondsAgo => \"hace segundos\";\n  @override\n  get justNow => \"Justo ahora\";\n  @override\n  get today => \"Hoy\";\n  @override\n  get past => \"Pasado\";\n  @override\n  get selectPhotoProof => \"Seleccione el documento\";\n  @override\n  get pleaseSelectPhotoProof => \"Por favor, seleccione el documento\";\n  @override\n  get selectBusinessProof => \"Seleccione el documento\";\n  @override\n  get pleaseSelectBusinessProof => \"Por favor, seleccione el documento\";\n  @override\n  get touchId => \"Identifición de toque\";\n  @override\n  get faceId => \"Id cara\";\n  @override\n  get enableTouchId => \"Activar contacto Id para desbloquear mis diamantes?\";\n  @override\n  get enableFaceId => \"Habilitar Face ID para desbloquear mis diamantes?\";\n  @override\n  get unlockWithTouchId => \"Desbloquear mis diamantes utilizando Touch ID\";\n  @override\n  get unlockWithFaceId => \"Desbloquear mis diamantes utilizando Face ID.\";\n  @override\n  get mPin => \"MPIN\";\n  @override\n  get holdMemoStatusDiamondorder => \"你 不能 确诊 的 石块, 已经 在 保持 或 备忘录 状态\";\n  @override\n  get searchStoneIdCertificateNo => \"搜索 石 ID / 证书 号\";\n  @override\n  get createMPin => \"创建 新 的 M-PIN\";\n  @override\n  get reentermpin => \"重新 输入 M-PIN\";\n  @override\n  get forgotmpin => \"忘记 了 M-PIN?\";\n  @override\n  get verifympin => \"验证 M-PIN\";\n  @override\n  get enteryoursixdigitcode => \"输入 您 的 6 位 M-PIN\";\n  @override\n  get changempin => \"更改 M-PIN\";\n  @override\n  get faceidandtouchnotenable => \"FaceID / TouchId 在 您 的 手机 未 启用, 请 启用 使用 此 功能\";\n  @override\n  get enablempintounlockmydiamonds =>\n      \"启用 M-PIN 解锁 应用 程序? 这 将 禁用 触摸 标识. 你 确定 你 要 继续 \u200B\u200B吗?\";\n  @override\n  get enabletouchidtounlockmydiamonds =>\n      \"允许 使用 tocco ID 解锁 应用? 这 将 禁用 M-PIN. 你 确定 你 要 继续 \u200B\u200B吗?\";\n  @override\n  get rememberme => \"记得 我\";\n  @override\n  get usertouchid => \"使用 触摸 标识\";\n  @override\n  get usempin => \"使用 M-PIN\";\n  @override\n  get filesarenotavailableonserver => \"文件 不可 用 的 服务器, 请 稍后 重 试\";\n  @override\n  get allfileshavebeendownloaded => \"所有 文件 都 被 下载.\";\n  @override\n  get filesisdownloaded => \"文件 下载\";\n  @override\n  get filesisnotdownloadedbcz => \"文件 没有 下载, 因为 它 不是 在 服务器 存在.\";\n  @override\n  get downloadingCanceled => \"取消 下载\";\n  @override\n  get downloading => \"下载 ...\";\n  @override\n  get expirydate => \"到期 日:\";\n  @override\n  get youreallywanttodelete => \"你 真的 要 删除\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"packetNo\": \"Sin paquete:\",\n    \"shape\": \"Forma\",\n  };\n}\n\nclass SpanishErrorString extends ErrorString {\n  @override\n  get accessDenide => \"Acceso denegado\";\n  @override\n  get pleaseSelectOfferTillDate =>\n      \"Por favor seleccione la oferta hasta la fecha.\";\n  @override\n  get pleaseSelectOfficeVisitDate =>\n      \"Por favor, seleccione la oficina fecha de visita\";\n  @override\n  get deleteStoneMsg => \"¿Seguro que quiere borrar la piedra (s)?\";\n  @override\n  get acceptTermsAndCondition => \"Por favor, acepta los términos y condiciones\";\n  @override\n  get diamondCompareRemove => \"Al menos 2 piedras están obligados a comparar.\";\n  @override\n  get diamondSelectionError => \"Por favor, seleccione al menos una piedra.\";\n  @override\n  get pleaseEnterCompanyName => \"Por favor, introduzca nombre de la empresa.\";\n  @override\n  get selectInvoiceDate => \"Seleccionar Fecha de la factura\";\n  @override\n  get pleaseEnterComment => \"Por favor, introduzca comentario.\";\n  @override\n  get pleaseEnterRemarks => \"Por favor, introduzca las observaciones.\";\n  @override\n  get selectExpiryDate => \"Por favor seleccione la fecha de caducidad.\";\n  @override\n  get enterOTP => \"Por favor, introduzca el código\";\n  @override\n  get pleaseEnterOTP => \"Por favor, introduzca el código de verificación.\";\n  @override\n  get enteredCodeNotMatching =>\n      \"código introducido no coincide. Inténtalo de nuevo\";\n  @override\n  get selectCancellationReason =>\n      \"Por favor, seleccione motivo de la cancelación\";\n  @override\n  get enterDesc => \"Por favor, introduzca la descripción.\";\n  @override\n  get enterTitle => \"Por favor, introduzca el título.\";\n  @override\n  get enterEmailOrPhone => \"Por favor, introduzca correo electrónico / móvil.\";\n  @override\n  get enterPassword =>\n      \"La contraseña no puede estar vacío. Por favor, ingrese contraseña.\";\n  @override\n  get enterConfirmPassword =>\n      \"Por favor, introduzca la contraseña de confirmación.\";\n  @override\n  get enterSkype => \"Por favor, introduzca Skype.\";\n  @override\n  get enterRegisterCode => \"Por favor, introduzca el código de registro\";\n  @override\n  get enterEmail => \"Por favor, introduzca la dirección de correo electrónico.\";\n  @override\n  get enterPhone => \"Por favor, introduzca número de teléfono móvil.\";\n  @override\n  get enterUsername =>\n      \"Nombre de usuario no puede estar vacío. Por favor, introduzca nombre de usuario.\";\n  @override\n  get enterValidEmail =>\n      \"Por favor, introduzca la dirección de correo electrónico válida.\";\n  @override\n  get enterValidPhone => \"Por favor, introduzca el número de móvil válido.\";\n  @override\n  get enterValidWhatsappPhone =>\n      \"Por favor, introduzca el número de teléfono móvil WhatsApp válida.\";\n  @override\n  get enterValidPassword =>\n      \"Por favor, introduzca 6 caracteres o contraseña larga.\";\n  @override\n  get mismatchPassword =>\n      \"Contraseña y confirmación de contraseña no coincide.\";\n  @override\n  get enterFirstName => \"Por favor, introduzca el nombre.\";\n  @override\n  get enterMiddleName => \"Por favor, introduzca el nombre.\";\n  @override\n  get enterPinCode => \"Por favor, introduzca el código PIN.\";\n  @override\n  get enterName => \"Por favor, introduzca su nombre.\";\n  @override\n  get enterLastName => \"Por favor, introduzca su apellido.\";\n  @override\n  get enterAddress => \"Por favor, introduzca la dirección.\";\n  @override\n  get enterValidPinCode => \"Introduzca código PIN válido.\";\n  @override\n  get enterValidAddress =>\n      \"Por favor, introduzca 10 caracteres o dirección larga.\";\n  @override\n  get enterPostalCode => \"Por favor, introduzca el código postal.\";\n  @override\n  get enterValidPostalCode =>\n      \"Por favor, introduzca 6 dígitos código postal numérico.\";\n  @override\n  get enterCurrentPassword => \"Por favor, introduzca la contraseña actual.\";\n  @override\n  get enterNewPassword => \"Por favor, introduzca la nueva contraseña.\";\n  @override\n  get enterFareAmount => \"Por favor, introduzca la cantidad de ventas.\";\n  @override\n  get enterOrderNO => \"Por favor, introduzca el fin no.\";\n  @override\n  get enterServiceType => \"Por favor, seleccione el tipo de servicio.\";\n  @override\n  get enterPaymentType => \"Por favor, seleccione el tipo de pago.\";\n  @override\n  get enterValidFareAmount => \"cantidad de ventas no puede ser cero.\";\n  @override\n  get enterPassangerNo => \"Por favor, introduzca ninguna. de pasajeros.\";\n  @override\n  get enterValidPassangerNo => \"No. de pasajeros no puede ser cero.\";\n  @override\n  get notEnterMorePassangerNo =>\n      \"Número de pasajeros no puede contener más de siete.\";\n  @override\n  get drivingLicenseValidationText =>\n      \"Por favor, introduzca 15 dígitos alfanuméricos del permiso de conducir.\";\n  @override\n  get pANCardValidationText =>\n      \"Por favor, introduzca 10 dígitos alfanuméricos número de tarjeta de PAN.\";\n  @override\n  get selectFromDate => \"Por favor seleccione de la fecha\";\n  @override\n  get selectToDate => \"Por favor, seleccione hasta la fecha\";\n  @override\n  get fromGreaterTo => \"Fecha seleccionada debe ser mayor que la fecha actual\";\n  @override\n  get wrongPassword =>\n      \"La contraseña debe contiene, mínimo 8 caracteres, 1 alfabeto en mayúsculas, minúsculas del alfabeto 1, 1 dígito, 1 charater especial\";\n  @override\n  get fromValueGreateThanTo => \"De valor debe ser menor o igual al valor de A\";\n  @override\n  get toValueGreaterThanFrom => \"A valor debe ser mayor o igual al valor Desde\";\n  @override\n  get pleaseEnterCompanyCode => \"Por favor, introduzca el código de empresa\";\n  @override\n  get enterSamePassword =>\n      \"Confirmar contraseña no coincide con la nueva contraseña. Por favor, introduzca la contraseña confirman mismo que la nueva contraseña.\";\n  @override\n  get selectAppointmentDate => \"Por favor, seleccione fecha de la cita\";\n  @override\n  get selectTimeSlot => \"Por favor, seleccione la ranura de tiempo\";\n  @override\n  get enterComments => \"Por favor, introduzca comentario\";\n  @override\n  get selectVirtualType => \"Por favor, seleccione el tipo virtuales\";\n  @override\n  get versionError => \"versión de error\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass SpanishNoDataStrings extends NoDataStrings {\n  @override\n  get noDataFound => \"Ningún record fue encontrado\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass SpanishScreenTitle extends ScreenTitle {\n  @override\n  get placeAnOffer => \"Coloque una Oferta\";\n  @override\n  get addedInWatchList => \"Añadido en la lista\";\n  @override\n  get addedInOffer => \"oferta presentada\";\n  @override\n  get addedInCart => \"Añadido Carrito\";\n  @override\n  get addedInBid => \"Añadido en la subasta\";\n  @override\n  get myEnquiry => \"mi mensaje\";\n  @override\n  get delete => \"Eliminar\";\n  @override\n  get addDemand => \"Agregar demanda\";\n  @override\n  get matchPair => \"partido Par\";\n  @override\n  get savedAndSearch => \"Guardar y Buscar\";\n  @override\n  get updateAndSearch => \"Actualización y búsqueda\";\n  @override\n  get upcoming => \"próxima\";\n  @override\n  get bidPricePerCt => \"Precio de la oferta / Ct\";\n  @override\n  get bidDisc => \"Valor mínimo de disco\";\n  @override\n  get bidValue => \"Valor mínimo de la subasta\";\n  @override\n  get bidStone => \"Valor mínimo de la piedra\";\n  @override\n  get myCart => \"Mi carrito\";\n  @override\n  get myComment => \"Mis notas\";\n  @override\n  get compare => \"Comparar\";\n  @override\n  get compareStones => \"Piedras comparar\";\n  @override\n  get statusHold => \"En espera\";\n  @override\n  get statusOnMemo => \"en Memo\";\n  @override\n  get statusAvailable => \"Disponible\";\n  @override\n  get statusNew => \"Nueva llegada\";\n  @override\n  get statusOffer => \"Piedra Del Día / Promoción\";\n  @override\n  get statusMyHold => \"mi Hold\";\n  @override\n  get signup => \"Regístrate\";\n  @override\n  get addToOffice => \"Añadir Para Oficina\";\n  @override\n  get addComment => \"Agregar comentario\";\n  @override\n  get addEnquiry => \"Añadir mensaje\";\n  @override\n  get finalOffer => \"Oferta final\";\n  @override\n  get finalDisc => \"disco final\";\n  @override\n  get finalRate => \"Tasa final\";\n  @override\n  get finalValue => \"Valor final\";\n  @override\n  get orderMsg =>\n      \"1) Los precios mencionados aquí son fijos y por lo tanto no negociable. \\\\ n2) La clasificación, parámetros mencionados en nuestro sitio web más allá que califican de GIA.\";\n  @override\n  get offerMsg =>\n      \"piedra ofrecido directamente se puede confirmar si el precio se apruebe por lo que le rogamos que estar seguro antes de oferta. Cualquier piedra (s) puesto en la lista de oferta no se mantiene en espera por ti, ya que está disponible para otro cliente es así.\";\n  @override\n  get note => \"Nota\";\n  @override\n  get hours => \"horas\";\n  @override\n  get offeredDisc => \"Dis ofrecidos\";\n  @override\n  get offeredPriceCt => \"Presentado Pr / Ct\";\n  @override\n  get addOffer => \"Agregar una Oferta\";\n  @override\n  get expDiscPer => \"Descuento espera\";\n  @override\n  get todayDiscPer => \"Disco de hoy\";\n  @override\n  get searchResult => \"Resultado de búsqueda\";\n  @override\n  get searchDiamond => \"Buscar diamante\";\n  @override\n  get basic => \"Básico\";\n  @override\n  get advanced => \"Avanzado\";\n  @override\n  get stoneIdCertNo => \"StoneID / Cert n\";\n  @override\n  get takeSignature => \"Firma para llevar\";\n  @override\n  get optional => \"Opcional\";\n  @override\n  get myAddress => \"Mi dirección\";\n  @override\n  get expiryDate => \"Fecha de caducidad\";\n  @override\n  get drivingLicenceDesc => \"Su conducción imagen de licencia\";\n  @override\n  get panDesc => \"Su tarjeta de foto PAN\";\n  @override\n  get selfie => \"selfie\";\n  @override\n  get selfieDesc => \"Su imagen autofoto\";\n  @override\n  get pending => \"Pendiente\";\n  @override\n  get rejected => \"Rechazado\";\n  @override\n  get uploadAgain => \"Subir\";\n  @override\n  get remove => \"Eliminar\";\n  @override\n  get title => \"Título\";\n  @override\n  get description => \"Descripción\";\n  @override\n  get uploadYour => \"subir su\";\n  @override\n  get raiseDispute => \"contárnoslo\";\n  @override\n  get drivingLicense => \"Licencia de conducir\";\n  @override\n  get pANCard => \"Tarjeta de la cacerola\";\n  @override\n  get saveContinue => \"Guardar y continuar\";\n  @override\n  get uploadFrontUmgText => \"Subir Frente lado de la imagen\";\n  @override\n  get uploadPANCardImgText => \"Tarjeta PAN Subiendo imagen\";\n  @override\n  get uploadBackImageText => \"Subir Volver lado de la imagen\";\n  @override\n  get helptopic => \"Temas de ayuda\";\n  @override\n  get newRideSharingRequest =>\n      \"Las solicitudes nueva Agencia de viajes compartidos\";\n  @override\n  get newRequest => \"nuevas solicitudes\";\n  @override\n  get welcomeTo => \"Bienvenido a\";\n  @override\n  get welcomeDesc => \"Ingrese a su cuenta existente de Mani Joya\";\n  @override\n  get forgotPassword => \"Ha olvidado su\";\n  @override\n  get forgotPasswordDesc =>\n      \"Introduzca su número de móvil registrado para recuperar su contraseña.\";\n  @override\n  get termsAndCondition => \"Términos y condiciones\";\n  @override\n  get privacyPolicy => \"Política de privacidad\";\n  @override\n  get aboutUS => \"Sobre nosotros\";\n  @override\n  get otpVerification => \"Verificar el código de paseo\";\n  @override\n  get otpVerificationDelivery => \"Verificar el código de recogida\";\n  @override\n  get otpVerificationDeliveryDone => \"Verificar el código de Entrega\";\n  @override\n  get enterOtp => \"Introduzca 4 dígitos\";\n  @override\n  get recoveryCode => \"Código de recuperación\";\n  @override\n  get editProfile => \"Editar perfil\";\n  @override\n  get myProfile => \"Mi perfil\";\n  @override\n  get reset => \"Reiniciar\";\n  @override\n  get yourPassword => \"Tu contraseña\";\n  @override\n  get photo => \"Foto\";\n  @override\n  get otpDesc =>\n      \"El código de recuperación fue enviado a su número de móvil. Por favor, introduzca el código.\";\n  @override\n  get otpVerifyDesc =>\n      \"El código de verificación se envió a su número de móvil. Por favor, introduzca el código.\";\n  @override\n  get diamondDetail => \"Detalle de diamantes\";\n  @override\n  get home => \"Casa\";\n  @override\n  get search => \"Buscar\";\n  @override\n  get quickSearch => \"Búsqueda rápida\";\n  @override\n  get newArrival => \"Nueva llegada\";\n  @override\n  get exclusiveDiamonds => \"Diamantes exclusivos\";\n  @override\n  get diamondOnAuction => \"Diamante en subasta\";\n  @override\n  get stoneOfTheDays => \"La mejor compra\";\n  @override\n  get myWatchlist => \"lista\";\n  @override\n  get myBid => \"mi subasta\";\n  @override\n  get myHold => \"mi Hold\";\n  @override\n  get myOrder => \"Mi lista ordenada\";\n  @override\n  get confirmStone => \"Piedra Confirmar\";\n  @override\n  get myOffice => \"Mi opinión de la oficina\";\n  @override\n  get myOffer => \"Mi Lista de producto\";\n  @override\n  get myPurchased => \"Mi Historia comprada\";\n  @override\n  get mySavedSearch => \"Mi búsqueda guardada\";\n  @override\n  get savedSearch => \"búsqueda guardada\";\n  @override\n  get myDemand => \"mi demanda\";\n  @override\n  get contactUs => \"Contáctenos\";\n  @override\n  get changePassword => \"Cambia la contraseña\";\n  @override\n  get logout => \"Cerrar sesión\";\n  @override\n  get fareDetailsTitle => \"Entrar en detalles de ventas\";\n  @override\n  get fairAmt => \"Cantidad de ventas\";\n  @override\n  get noOfPassengers => \"No. de Pasajeros\";\n  @override\n  get remarks => \"observaciones\";\n  @override\n  get orderNo => \"N º de pedido.\";\n  @override\n  get typeOfService => \"Tipo de servicio\";\n  @override\n  get paymentType => \"Tipo de pago*\";\n  @override\n  get recentlyView => \"recientemente Vista\";\n  @override\n  get uploadImgValidationText =>\n      \"Carga de archivos debe ser .jpg, .jpeg, .png o .pdf tiene un tamaño de 5 MB o menos.\";\n  @override\n  get drivingLicenseHintText => \"Número de licencia de conducir\";\n  @override\n  get pANCARDHintText => \"Número de tarjeta de PAN\";\n  @override\n  get viewRide => \"Ver paseos\";\n  @override\n  get myVehicle => \"mi Vehículo\";\n  @override\n  get personalDocument => \"Documentos personales\";\n  @override\n  get help => \"AYUDA\";\n  @override\n  get about => \"Acerca de\";\n  @override\n  get bankDetails => \"Detalles del banco\";\n  @override\n  get accountAndPayment => \"Cuenta y Pago\";\n  @override\n  get enquiry => \"Investigación\";\n  @override\n  get download => \"Descargar\";\n  @override\n  get addToCart => \"Añadir al carrito\";\n  @override\n  get addToWatchList => \"Añadir a lista de seguimiento\";\n  @override\n  get finalCalculation => \"El cálculo final\";\n  @override\n  get bookOffice => \"Oficina libro\";\n  @override\n  get clearSelection => \"Selección clara\";\n  @override\n  get comment => \"comentarios\";\n  @override\n  get hold => \"Sostener\";\n  @override\n  get offer => \"Oferta\";\n  @override\n  get officeView => \"Vista de Oficina\";\n  @override\n  get placeOrder => \"Realizar pedido\";\n  @override\n  get buyNow => \"Compra ahora\";\n  @override\n  get cancelStone => \"Cancelar Piedra\";\n  @override\n  get share => \"Compartir\";\n  @override\n  get watchlist => \"lista\";\n  @override\n  get exclusive => \"Exclusivo\";\n  @override\n  get featuredStones => \"Piedras destacados\";\n  @override\n  get stoneOfDay => \"Piedras del Día\";\n  @override\n  get recentSearch => \"Búsqueda reciente\";\n  @override\n  get viewAll => \"Ver todo\";\n  @override\n  get salesPersonDetail => \"Detalle persona de ventas\";\n  @override\n  get searchTitle => \"búsqueda de títulos\";\n  @override\n  get enterSearchTitle => \"Introduzca Búsqueda de títulos\";\n  @override\n  get timeSlots => \"Ranuras de tiempo\";\n  @override\n  get selectCustomDate => \"Seleccione la fecha de encargo\";\n  @override\n  get availableSlot => \"Ranuras disponibles\";\n  @override\n  get reqOfficeView => \"Solicitar opinión de la oficina\";\n  @override\n  get myComments => \"Mi comentario\";\n  @override\n  get myReminder => \"mi Recordatorio\";\n  @override\n  get reminder => \"Recordatorio\";\n  @override\n  get manageAddress => \"administrar direcciones\";\n  @override\n  get myAccount => \"Mi cuenta\";\n  @override\n  get declaimer => \"Descargo de responsabilidad\";\n  @override\n  get shareStone => \"Compartir Piedra\";\n  @override\n  get addRemider => \"Agregar recordatorio\";\n  @override\n  get offlineSearch => \"Desconectado Buscar\";\n  @override\n  get searchHistory => \"Buscar Historia\";\n  @override\n  get offlineStock => \"Desconectado de la\";\n  @override\n  get searchOffline => \"Buscar (fuera de línea)\";\n  @override\n  get voiceSearch => \"Búsqueda por voz\";\n  @override\n  get tapMictoSpeak => \"Toca el micrófono a hablar\";\n  @override\n  get typeToSearch => \"Escribe para buscar\";\n  @override\n  get typeWordsToSearch => \"Escriba al menos 3 palabras para buscar piedras\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass SpanishDynamickeys extends Dynamickeys {\n  @override\n  get shape => \"Forma\";\n  @override\n  get caratRange => \"Rango de quilates\";\n  @override\n  get basicDetail => \"Detalles básicos\";\n  @override\n  get measurementTitle => \"Mediciones\";\n  @override\n  get inclusionDetail => \"Detalles de inclusión\";\n  @override\n  get other => \"Otro\";\n  @override\n  get stoneID => \"piedra ID\";\n  @override\n  get labTitle => \"Laboratorio\";\n  @override\n  get certNo => \"Cert. No.\";\n  @override\n  get locationTitle => \"UBICACIÓN\";\n  @override\n  get shapeTitle => \"Forma\";\n  @override\n  get caratTitle => \"Quilate\";\n  @override\n  get colorTitle => \"Color\";\n  @override\n  get clarityTitle => \"CLARIDAD\";\n  @override\n  get cutTitle => \"Cortar\";\n  @override\n  get polishTitle => \"polaco\";\n  @override\n  get symmentryTitle => \"Symmentry\";\n  @override\n  get fluorescenceTitle => \"Fluorescencia\";\n  @override\n  get rapTitle => \"Rap (%)\";\n  @override\n  get discountTitle => \"Descuento (%)\";\n  @override\n  get priceAndCt => \"Precio / Ct\";\n  @override\n  get amountTitle => \"Cantidad\";\n  @override\n  get eyeCleanTitle => \"A simple vista\";\n  @override\n  get brownTitle => \"MARRÓN\";\n  @override\n  get milkyTitle => \"lechoso\";\n  @override\n  get mixTingeTitle => \"MIX tinte\";\n  @override\n  get dimensionTitle => \"Dimensiones (mm)\";\n  @override\n  get girdleTitle => \"Faja (%)\";\n  @override\n  get tableTitle => \"Mesa %\";\n  @override\n  get crownAngleTitle => \"ángulo de la corona\";\n  @override\n  get depthTitle => \"profundidad%\";\n  @override\n  get pavAngleTitle => \"PAV ÁNGULO\";\n  @override\n  get crownHeightTitle => \"Altura de la corona (%)\";\n  @override\n  get pavDepthTitle => \"Profundidad Pabellón (%)\";\n  @override\n  get starLengthTitle => \"Longitud de la estrella\";\n  @override\n  get lowerHalfTitle => \"Mitad inferior\";\n  @override\n  get gridleTitle => \"Faja\";\n  @override\n  get gridleFacetedTitle => \"FAJA FACETADO\";\n  @override\n  get culetTitle => \"culet\";\n  @override\n  get rationTitle => \"Proporción\";\n  @override\n  get blackInclusionTitle => \"INCLUSIÓN NEGRO\";\n  @override\n  get otherInclusionTitle => \"otro Inclusión\";\n  @override\n  get openInclusionTitle => \"INCLUSIÓN ABIERTO\";\n  @override\n  get extraFacetTitle => \"FACET EXTRA\";\n  @override\n  get naturalTitle => \"Natural\";\n  @override\n  get hAndATitle => \"H & A\";\n  @override\n  get keyToSymbol => \"CLAVE PARA EL SÍMBOLO\";\n  @override\n  get labComments => \"COMENTARIOS DE LABORATORIO\";\n  @override\n  get laserInsTitle => \"LASER INS\";\n  @override\n  get basicTitle => \"Básico\";\n  @override\n  get advancedTitle => \"Avanzado\";\n  @override\n  get stoneIdTitle => \"Piedra ID / Cert n\";\n  @override\n  get defaultTitle => \"Defecto\";\n  @override\n  get newDiamondsTitle => \"nuevos Diamantes\";\n  @override\n  get priceLowToHigh => \"Precios de barato a caro\";\n  @override\n  get priceHighToLow => \"Precio de mayor a menor\";\n  @override\n  get disLowToHigh => \"Descuento de menor a mayor\";\n  @override\n  get disHighToLow => \"Descuento de mayor a menor\";\n  @override\n  get colorLowToHigh => \"El color de menor a mayor\";\n  @override\n  get colorHighToLow => \"El color de mayor a menor\";\n  @override\n  get caratLowToHigh => \"Quilates de menor a mayor\";\n  @override\n  get caratHighToLow => \"Quilates de mayor a menor\";\n  @override\n  get clarityLowToHigh => \"La claridad de menor a mayor\";\n  @override\n  get clarityHighToLow => \"La claridad de mayor a menor\";\n  @override\n  get colorShadeTitle => \"Color sombra\";\n  @override\n  get certiTitle => \"Número certificado\";\n  @override\n  get arrivalsTitle => \"Llegadas\";\n  @override\n  get lengthTitle => \"Longitud\";\n  @override\n  get widthTitle => \"Anchura\";\n  @override\n  get pavilionAngleTitle => \"pabellón ángulo\";\n  @override\n  get girdleConditionTitle => \"faja Condición\";\n  @override\n  get cluetConditionTitle => \"Condición culata\";\n  @override\n  get disTitle => \"Dis%\";\n  @override\n  get depthTitleWithoutPerc => \"Profundidad\";\n  @override\n  get otherInformationTitle => \"Otra información\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"shape\": \"Forma\",\n    \"caratRange\": \"Rango de quilates\",\n    \"basicDetail\": \"Detalles básicos\",\n    \"measurementTitle\": \"Mediciones\",\n    \"inclusionDetail\": \"Detalles de inclusión\",\n    \"other\": \"Otro\",\n    \"stoneID\": \"piedra ID\",\n    \"labTitle\": \"Laboratorio\",\n    \"certNo\": \"Cert. No.\",\n    \"locationTitle\": \"UBICACIÓN\",\n    \"caratTitle\": \"Quilate\",\n    \"colorTitle\": \"Color\",\n    \"clarityTitle\": \"CLARIDAD\",\n    \"cutTitle\": \"Cortar\",\n    \"polishTitle\": \"polaco\",\n    \"symmentryTitle\": \"Symmentry\",\n    \"fluorescenceTitle\": \"Fluorescencia\",\n    \"rapTitle\": \"Rap (%)\",\n    \"discountTitle\": \"Descuento (%)\",\n    \"priceAndCt\": \"Precio / Ct\",\n    \"amountTitle\": \"Cantidad\",\n    \"eyeCleanTitle\": \"A simple vista\",\n    \"brownTitle\": \"MARRÓN\",\n    \"milkyTitle\": \"lechoso\",\n    \"mixTingeTitle\": \"MIX tinte\",\n    \"dimensionTitle\": \"Dimensiones (mm)\",\n    \"girdleTitle\": \"Faja (%)\",\n    \"tableTitle\": \"Mesa %\",\n    \"crownAngleTitle\": \"ángulo de la corona\",\n    \"depthTitle\": \"profundidad%\",\n    \"pavAngleTitle\": \"PAV ÁNGULO\",\n    \"crownHeightTitle\": \"Altura de la corona (%)\",\n    \"pavDepthTitle\": \"Profundidad Pabellón (%)\",\n    \"starLengthTitle\": \"Longitud de la estrella\",\n    \"lowerHalfTitle\": \"Mitad inferior\",\n    \"gridleTitle\": \"Faja\",\n    \"gridleFacetedTitle\": \"FAJA FACETADO\",\n    \"culetTitle\": \"culet\",\n    \"rationTitle\": \"Proporción\",\n    \"blackInclusionTitle\": \"INCLUSIÓN NEGRO\",\n    \"otherInclusionTitle\": \"otro Inclusión\",\n    \"openInclusionTitle\": \"INCLUSIÓN ABIERTO\",\n    \"extraFacetTitle\": \"FACET EXTRA\",\n    \"naturalTitle\": \"Natural\",\n    \"hAndATitle\": \"H & A\",\n    \"keyToSymbol\": \"CLAVE PARA EL SÍMBOLO\",\n    \"labComments\": \"COMENTARIOS DE LABORATORIO\",\n    \"laserInsTitle\": \"LASER INS\",\n    \"basicTitle\": \"Básico\",\n    \"advancedTitle\": \"Avanzado\",\n    \"stoneIdTitle\": \"Piedra ID / Cert n\",\n    \"defaultTitle\": \"Defecto\",\n    \"newDiamondsTitle\": \"nuevos Diamantes\",\n    \"priceLowToHigh\": \"Precios de barato a caro\",\n    \"priceHighToLow\": \"Precio de mayor a menor\",\n    \"disLowToHigh\": \"Descuento de menor a mayor\",\n    \"disHighToLow\": \"Descuento de mayor a menor\",\n    \"colorLowToHigh\": \"El color de menor a mayor\",\n    \"colorHighToLow\": \"El color de mayor a menor\",\n    \"caratLowToHigh\": \"Quilates de menor a mayor\",\n    \"caratHighToLow\": \"Quilates de mayor a menor\",\n    \"clarityLowToHigh\": \"La claridad de menor a mayor\",\n    \"clarityHighToLow\": \"La claridad de mayor a menor\",\n    \"colorShadeTitle\": \"Color sombra\",\n    \"certiTitle\": \"Número certificado\",\n    \"arrivalsTitle\": \"Llegadas\",\n    \"lengthTitle\": \"Longitud\",\n    \"widthTitle\": \"Anchura\",\n    \"pavilionAngleTitle\": \"pabellón ángulo\",\n    \"girdleConditionTitle\": \"faja Condición\",\n    \"cluetConditionTitle\": \"Condición culata\",\n    \"disTitle\": \"Dis%\",\n    \"depthTitleWithoutPerc\": \"Profundidad\",\n    \"otherInformationTitle\": \"Otra información\",\n  };\n}\n\nclass Germany extends English {\n  @override\n  get authStrings => GermanyAuthStrings();\n  @override\n  get commonString => GermanyCommonString();\n  @override\n  get errorString => GermanyErrorString();\n  @override\n  get noDataStrings => GermanyNoDataStrings();\n  @override\n  get screenTitle => GermanyScreenTitle();\n  @override\n  get dynamickeys => GermanyDynamickeys();\n  static String get languageCode => \"Germany\";\n  static String get languageName => \"Germany\";\n}\n\nclass GermanyAuthStrings extends AuthStrings {\n  @override\n  get editCompanyInformation => \"Firmeninformationen bearbeiten\";\n  @override\n  get selectNatureOfOrganization => \"Wählen Natur Organisations\";\n  @override\n  get setNewPassword =>\n      \"Legen Sie Ihr neues Passwort ein und Zeichen wieder in.\";\n  @override\n  get enterCompanyName => \"Bitte geben Sie Name des Unternehmens.\";\n  @override\n  get pleaseEnterCustomerOTP => \"Bitte geben Sie Kunden ride-Code.\";\n  @override\n  get pleaseEnterPickupOTP => \"Bitte geben Sie PickupByCustomer Code.\";\n  @override\n  get pleaseEnterDeliveryOTP => \"Bitte geben Sie Lieferung an den Kunden-Code.\";\n  @override\n  get verified => \"Verifiziert\";\n  @override\n  get verify => \"Überprüfen\";\n  @override\n  get addressLineOne => \"Adresse 1\";\n  @override\n  get addressLineTwo => \"Adresse 2\";\n  @override\n  get addressLineThree => \"Adresse 3\";\n  @override\n  get oldPassword => \"Altes Passwort\";\n  @override\n  get skype => \"Skype\";\n  @override\n  get whatsApp => \"WhatsApp\";\n  @override\n  get pinCode => \"Geheimzahl*\";\n  @override\n  get verifyMobileDesc =>\n      \"Bitte überprüfen Handynummer, um das Profil zu aktualisieren.\";\n  @override\n  get verifyNow => \"Jetzt überprüfen\";\n  @override\n  get password => \"Passwort\";\n  @override\n  get backToHome => \"Zur Startseite\";\n  @override\n  get forgotPassword => \"Passwort vergessen?\";\n  @override\n  get signInCap => \"Anmelden\";\n  @override\n  get moveToLogIn => \"Gehen Sie zu Login\";\n  @override\n  get dontHaveAnAccount => \"#ERROR!\";\n  @override\n  get clickHere => \"Klicke hier\";\n  @override\n  get signUpHere => \"Hier anmelden\";\n  @override\n  get reset => \"Reset\";\n  @override\n  get haveRegisterCode => \"Haben Sie einen Registrierungscode?\";\n  @override\n  get welcome => \"Willkommen zurück!\";\n  @override\n  get signInAsGuest => \"Einloggen als Gast\";\n  @override\n  get editProfileTitle => \"Profil bearbeiten\";\n  @override\n  get emaillbl => \"Email\";\n  @override\n  get searchInventory => \"Produkt suchen\";\n  @override\n  get emailAddress => \"E-Mail-Addresse*\";\n  @override\n  get offlineFilter =>\n      \"Kann nicht die gewünschte Solitär finden? Wir bieten Ihnen das beste Angebot aus unserem Offline Inventar helfen zu bekommen.\";\n  @override\n  get loginDesc =>\n      \"Haben Sie Touch-Id / MPIN aktivieren möchten My Diamanten zu entsperren? Bitte wählen Sie eine Option zum Entsperren App\";\n  @override\n  get searchDiamonds => \"Suche nach Diamanten\";\n  @override\n  get continueWithSearch => \"Möchten Sie Ihre Suche fortsetzen?\";\n  @override\n  get mobileNumber => \"Handy, Mobiltelefon\";\n  @override\n  get searchHint => \"Suche...\";\n  @override\n  get selectYourCountry => \"Land auswählen\";\n  @override\n  get resendCodeIn => \"Erneut senden Code in\";\n  @override\n  get resendCode => \"Erneut senden\";\n  @override\n  get haveAnAccount => \"Sie haben bereits ein Konto?\";\n  @override\n  get dontReceiveCode => \"Wenn Sie keinen Code erhalten!\";\n  @override\n  get inLogin => \"Einloggen.\";\n  @override\n  get resetPwdDesc =>\n      \"In Passwort und Passwort bestätigen Sie Ihr Passwort zurücksetzen.\";\n  @override\n  get backToLogin => \"Zurück zur Anmeldung\";\n  @override\n  get firstName => \"Vorname*\";\n  @override\n  get name => \"Nutzername*\";\n  @override\n  get lastName => \"Familienname, Nachname*\";\n  @override\n  get middleName => \"Zweiter Vorname*\";\n  @override\n  get confirmPassword => \"Kennwort bestätigen\";\n  @override\n  get currentPasswordErr => \"Aktuelles Passwort-Fehler\";\n  @override\n  get passwordChanged => \"Passwort geändert\";\n  @override\n  get lblLogInErr => \"Login Fehler\";\n  @override\n  get enterYour => \"Geben Sie Ihr\";\n  @override\n  get details => \"Einzelheiten\";\n  @override\n  get registerCode => \"Registrierungscode\";\n  @override\n  get registerCodeDesc =>\n      \"Fügen Sie einen Registrierungscode Ihre Anmeldung mit 3eco zu starten.\";\n  @override\n  get uploadPhotoDesc => \"Nehmen Sie einen selfie Ihrer Selbst\";\n  @override\n  get updateProfile => \"Profil aktualisieren\";\n  @override\n  get postalCode => \"Postleitzahl*\";\n  @override\n  get removeButton => \"Entfernen\";\n  @override\n  get gender => \"Geschlecht\";\n  @override\n  get male => \"Männlich\";\n  @override\n  get female => \"Weiblich\";\n  @override\n  get changePassword => \"Passwort ändern\";\n  @override\n  get currentPassword => \"Jetziges Passwort*\";\n  @override\n  get newPassword => \"Neues Passwort*\";\n  @override\n  get confirmNewPassword => \"Kennwort bestätigen*\";\n  @override\n  get personalDocuments => \"persönliche Dokumente\";\n  @override\n  get assignedAuto => \"Assigned Auto\";\n  @override\n  get logout => \"Ausloggen\";\n  @override\n  get logoutConfirmationMsg =>\n      \"Sind Sie sicher, dass Sie sich abmelden wollen?\";\n  @override\n  get address => \"Adresse*\";\n  @override\n  get accountNumber => \"Kontonummer\";\n  @override\n  get bankerName => \"Bankers Namens\";\n  @override\n  get nameLable => \"Name\";\n  @override\n  get ifscCode => \"IFSC Code\";\n  @override\n  get businessRegistrationNumbr => \"Firmenregistrierungsnummer:\";\n  @override\n  get businessRelationshipPeriod => \"Geschäftsbeziehung Zeitraum (in Jahren)\";\n  @override\n  get designation => \"Bezeichnung\";\n  @override\n  get nameofDesignation => \"Name von\";\n  @override\n  get natureofOrganization => \"Art der Organisation\";\n  @override\n  get uploadFile => \"No File Choosen\";\n  @override\n  get update => \"AKTUALISIEREN\";\n  @override\n  get resetPwd => \"Passwort zurücksetzen\";\n  @override\n  get pwdReset => \"Passwort zurücksetzen\";\n  @override\n  get signInWithMPIN => \"Anmeldung mit MPIN\";\n  @override\n  get pwdChanged => \"Passwort geändert\";\n  @override\n  get successfullyPwdDesc =>\n      \"Sie haben Ihr Passwort zurücksetzen erfolgreich. Bitte benutzen Sie Ihr neues Passwort bei der Anmeldung.\";\n  @override\n  get lblProfileSetup => \"Ihr Profil eingerichtet ist,\";\n  @override\n  get lblProfileSetupDesc => \"Wir haben Ihre Profildetails erhalten\";\n  @override\n  get hoursAvailable => \"insgesamt Shifttime\";\n  @override\n  get confirmStoneDetail => \"Bestätigen Stein-Detail\";\n  @override\n  get companyName => \"Name der Firma\";\n  @override\n  get invoiceDate => \"Rechnungsdatum\";\n  @override\n  get companyCode => \"Buchungskreis\";\n  @override\n  get saveCompanyDetails => \"Speichern Firmendetails\";\n  @override\n  get passwordNotChange => \"Passwort stimmt nicht überein\";\n  @override\n  get rememberPassword => \"Passwort merken?\";\n  @override\n  get sendOTP => \"senden OTP\";\n  @override\n  get resendNow => \"Erneut senden Jetzt\";\n  @override\n  get didNotReceiveOTP => \"Wenn Sie nicht erhalten eine OTP!\";\n  @override\n  get sendOTPToEmail =>\n      \"Wir werden ein OTP an Ihre angegebene E-Mail-Adresse oder Benutzernamen senden. Bitte geben Sie die E-Mail-Adresse oder Benutzernamen.\";\n  @override\n  get enterOTP =>\n      \"Die OTP wurde an Ihre registrierte E-Mail-Adresse gesendet. Bitte geben Sie die OTP.\";\n  @override\n  get backToSignIn => \"Zurück sich anmelden\";\n  @override\n  get passwordResetSuccessfully => \"Kennworts erfolgreich.\";\n  @override\n  get emailAndUname => \"E-Mail / Benutzername\";\n  @override\n  get signUp => \"Anmelden\";\n  @override\n  get promotionText => \"Werbeangebote\";\n  @override\n  get termsAndCondition => \"Geschäftsbedingung\";\n  @override\n  get mustAgreeTermsAndCondition =>\n      \"Sie müssen zu Bedingungen und den Zustand zustimmen als Gast Benutzer anmelden\";\n  @override\n  get forgotPasswordTitle => \"Passwort vergessen\";\n  @override\n  get uploadKYC => \"hochladen KYC\";\n  @override\n  get uploadKycDesc =>\n      \"Bitte laden Sie Ihre KYC-Dokumente voll Funktionen zuzugreifen.\";\n  @override\n  get hintPhotoIdentityProof => \"Foto Identitätsnachweis *\";\n  @override\n  get hintBussinerssProof => \"Geschäfts-Identität Proof *\";\n  @override\n  get btnFileUpload => \"Datei-Upload\";\n  @override\n  get pleaseUploadPhotoProof => \"Bitte laden Foto Identitätsnachweis.\";\n  @override\n  get pleaseUploadBussinessProof => \"Bitte laden Geschäfts-Identität Beweis.\";\n  @override\n  get pleaseSelectFileFormat =>\n      \"Bitte laden Sie Datei in einem der folgenden Formate: .jpg\";\n  @override\n  get kycSubmitted => \"KYC eingereicht\";\n  @override\n  get kycSubmmittedDesc => \"Ihre KYC wurde erfolgreich abgegeben.\";\n  @override\n  get btnMoveToHome => \"Gehen Sie zu Start\";\n  @override\n  get kYCRejected => \"KYC Zurückgewiesen\";\n  @override\n  get kycRejectedDesc =>\n      \"Ihre KYC wurde abgelehnt. Bitte laden Sie Ihre KYC-Dokumente wieder alle Funktionen zugreifen zu können.\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass GermanyCommonString extends CommonString {\n  @override\n  get seeMore => \"Mehr sehen\";\n  @override\n  get seeLess => \"Weniger anzeigen\";\n  @override\n  get modify => \"Ändern\";\n  @override\n  get delete => \"Löschen\";\n  @override\n  get details => \"Einzelheiten\";\n  @override\n  get edit => \"Bearbeiten\";\n  @override\n  get addDemand => \"Add Nachfrage\";\n  @override\n  get demandTitle => \"Die Nachfrage Titel\";\n  @override\n  get pleaseEnterDemandTitle => \"Bitte geben Sie die Nachfrage Titel\";\n  @override\n  get demandAddedSuccessfully => \"Die Nachfrage Erfolgreich\";\n  @override\n  get selectAtleastOneFilter => \"Bitte\";\n  @override\n  get savedSearch => \"Gespeicherte Suche\";\n  @override\n  get searchSavedSearch => \"Suche Gespeicherte Suche\";\n  @override\n  get viewDetails => \"Details anzeigen\";\n  @override\n  get viewLessDetails => \"Anzeigen Weniger Details\";\n  @override\n  get myDemand => \"Meine Nachfrage\";\n  @override\n  get date => \"Datum\";\n  @override\n  get selectTime => \"Wählen Sie Zeit\";\n  @override\n  get selectDate => \"Datum auswählen\";\n  @override\n  get offerVelidTill => \"Angebot gültig bis\";\n  @override\n  get officeVisitDate => \"Büro Besuchsdatum\";\n  @override\n  get all => \"Alle\";\n  @override\n  get status => \"Status\";\n  @override\n  get save => \"sparen\";\n  @override\n  get verify => \"Überprüfen\";\n  @override\n  get readMore => \"Weiterlesen\";\n  @override\n  get goodMorning => \"Guten Morgen\";\n  @override\n  get goodAfternoon => \"Guten Nachmittag\";\n  @override\n  get goodEvening => \"Guten Abend\";\n  @override\n  get btnSkip => \"Überspringen\";\n  @override\n  get btnUpdate => \"Aktualisieren\";\n  @override\n  get btnContinue => \"Fortsetzen\";\n  @override\n  get btnContinueCap => \"FORTSETZEN\";\n  @override\n  get btnEdit => \"Bearbeiten\";\n  @override\n  get btnSubmit => \"einreichen\";\n  @override\n  get btnNextCap => \"Nächster\";\n  @override\n  get btnSaveCap => \"Passwort erneuern\";\n  @override\n  get btnWithdrawCap => \"ABHEBEN\";\n  @override\n  get btnSaveAndContinueCap => \"SPEICHERN FORTSETZEN\";\n  @override\n  get btnUnregister => \"Nicht registrierte Mobil\";\n  @override\n  get btnClose => \"Schließen\";\n  @override\n  get remove => \"Entfernen\";\n  @override\n  get refresh => \"Aktualisierung\";\n  @override\n  get fetchLocationMessage => \"Bitte warten wir holen Sie Ihren Standort\";\n  @override\n  get done => \"Getan\";\n  @override\n  get doneCap => \"GETAN\";\n  @override\n  get cancel => \"Stornieren\";\n  @override\n  get allow => \"ermöglichen\";\n  @override\n  get countryFirst => \"Bitte wähle ein Land aus\";\n  @override\n  get apply => \"Anwenden\";\n  @override\n  get cancelCap => \"STORNIEREN\";\n  @override\n  get uploadCap => \"HOCHLADEN\";\n  @override\n  get yesCancelCap => \"JA\";\n  @override\n  get upload => \"Hochladen\";\n  @override\n  get ok => \"In Ordnung\";\n  @override\n  get home => \"Zuhause\";\n  @override\n  get goToMyWatchList => \"Zum Meine Beobachtungsliste\";\n  @override\n  get goToMyOrder => \"Zum Einloggen Bestellung\";\n  @override\n  get gotToMyOffer => \"Zum Mein Angebot\";\n  @override\n  get gotToMyHold => \"Gehen Sie zu Mein Halten\";\n  @override\n  get gotToMyEnquiry => \"Zum Meine Anfrage\";\n  @override\n  get gotToMyBid => \"Zum Mein Gebot\";\n  @override\n  get gotToMyReminder => \"Zur Meiner Erinnerung\";\n  @override\n  get gotToMyComments => \"Zum Meine Notizen\";\n  @override\n  get yes => \"Ja\";\n  @override\n  get no => \"Nein\";\n  @override\n  get selectCountry => \"Land auswählen\";\n  @override\n  get clickHere => \"Klicke hier\";\n  @override\n  get btnAddNewAddress => \"NEUE ADRESSE HINZUFÜGEN\";\n  @override\n  get btnCancel => \"STORNIEREN\";\n  @override\n  get btnTakeSelfie => \"nehmen Sie Selfie\";\n  @override\n  get successfully => \"Erfolgreich\";\n  @override\n  get lblAppExit => \"Sie sind sicher, dass Sie beenden wollen?\";\n  @override\n  get lblExit => \"Ausgang\";\n  @override\n  get openAppSetting => \"Einstellungen öffnen\";\n  @override\n  get lblOr => \"Oder\";\n  @override\n  get fromLbl => \"Von\";\n  @override\n  get toLbl => \"Zu\";\n  @override\n  get showMore => \"Zeig mehr\";\n  @override\n  get showLess => \"Zeige weniger\";\n  @override\n  get selectCity => \"Stadt wählen\";\n  @override\n  get notYetAvailable => \"Noch nicht verfügbar\";\n  @override\n  get updateAvailable => \"Update verfügbar!\";\n  @override\n  get downloadAppFrom => \"Download-Anwendung Update\";\n  @override\n  get playStore => \"Spielladen\";\n  @override\n  get skipUpdate => \"Update überspringen\";\n  @override\n  get stateFirst => \"Bitte wählen Staat Erste\";\n  @override\n  get reallyExit => \"Wirklich beenden?\";\n  @override\n  get alert => \"Aufmerksam!\";\n  @override\n  get loading => \"Wird geladen\";\n  @override\n  get error => \"Error\";\n  @override\n  get jumpToTop => \"Sprung nach oben\";\n  @override\n  get ihaveread => \"Ich habe gelesen und akzeptiere\";\n  @override\n  get selected => \"Wählen\";\n  @override\n  get lbllogout => \"Ausloggen\";\n  @override\n  get lblThanx => \"Vielen Dank\";\n  @override\n  get lblSelectCity => \"Stadt wählen\";\n  @override\n  get lblSelectState => \"Staat wählen\";\n  @override\n  get lblSelectCountry => \"Land auswählen\";\n  @override\n  get lblCity => \"Stadt\";\n  @override\n  get lblCountry => \"Land\";\n  @override\n  get lblName => \"Name\";\n  @override\n  get lblPinCode => \"Geheimzahl\";\n  @override\n  get lblMobileNumber => \"Handynummer\";\n  @override\n  get lblState => \"Zustand\";\n  @override\n  get lblCode => \"Code:\";\n  @override\n  get lblOrderNo => \"Best.-Nr:\";\n  @override\n  get lblOrderItem => \"Bestellungsartikel:\";\n  @override\n  get lblDelivered => \"geliefert\";\n  @override\n  get lblTicketReady => \"Ihr Ticket ist bereit\";\n  @override\n  get lblPersonTicket => \"Ticket von 2 Personen\";\n  @override\n  get lblShuttleBus => \"Shuttlebus\";\n  @override\n  get lblPickup => \"Abholen\";\n  @override\n  get lblDropoff => \"Dropoff\";\n  @override\n  get lblPassenger => \"Passagier\";\n  @override\n  get lblDeliveryNo => \"Liefer-Nr.\";\n  @override\n  get lblPrice => \"Preis\";\n  @override\n  get lblValid => \"Gültig für\";\n  @override\n  get lblRenew => \"Erneuern\";\n  @override\n  get lblDeparture => \"Abfahrt\";\n  @override\n  get lblArrived => \"Ist eingetroffen\";\n  @override\n  get lblSendtoFriend => \"An Freund senden\";\n  @override\n  get popupRenewTitle => \"erneuern Ticket\";\n  @override\n  get popupRenewDesc => \"Lorem ipsum dolor sit amet\";\n  @override\n  get popuplblPassenger => \"Passagier\";\n  @override\n  get popuplblCancel => \"Stornieren\";\n  @override\n  get popupbtnRenew => \"Erneuern\";\n  @override\n  get ridelblAwesome => \"Genial\";\n  @override\n  get ridebtnDone => \"Getan\";\n  @override\n  get offerPricePerCarat => \"Angeboten Preis (cts)\";\n  @override\n  get dropOffText => \"Dropoff\";\n  @override\n  get pickUpText => \"Abholen\";\n  @override\n  get startAtText => \"Anfangen bei\";\n  @override\n  get endAtText => \"beenden Sie bei\";\n  @override\n  get personText => \"Person\";\n  @override\n  get paymentScreenTitle => \"Zahlung\";\n  @override\n  get pickuplbl => \"Abholen\";\n  @override\n  get droplbl => \"Dropoff\";\n  @override\n  get makePaymentButtonlbl => \"Jetzt Zahlung\";\n  @override\n  get pessangerslbl => \"Passagiere\";\n  @override\n  get priceBreakuplbl => \"Preis Breakup\";\n  @override\n  get tripPricelbl => \"Reisepreis\";\n  @override\n  get taxeslbl => \"Steuern\";\n  @override\n  get totallbl => \"Gesamt\";\n  @override\n  get cardNumberhint => \"Kartennummer\";\n  @override\n  get cvvhint => \"CVV\";\n  @override\n  get datehint => \"MM / JJ\";\n  @override\n  get btnTryAgain => \"Versuchen Sie es nochmal\";\n  @override\n  get cityFirst => \"Bitte wählen Sie eine Stadt zuerst\";\n  @override\n  get enterFareDetails => \"Geben Sie Verkaufsdetails\";\n  @override\n  get fromDate => \"Ab Datum\";\n  @override\n  get toDate => \"ausgewählte Datum\";\n  @override\n  get btnUnderstand => \"Ich verstehe\";\n  @override\n  get applicationUpdate => \"Software-Update\";\n  @override\n  get newVersionMessage => \"Eine neue Version von Anwendung ist\";\n  @override\n  get paymentCollected => \"Zahlung Gesammelte\";\n  @override\n  get addComment => \"Einen Kommentar hinzufügen\";\n  @override\n  get more => \"Mehr\";\n  @override\n  get carat => \"Karat\";\n  @override\n  get pcs => \"Stck\";\n  @override\n  get cts => \"cts\";\n  @override\n  get disc => \"Rabatt %\";\n  @override\n  get avgPriceCrt => \"Durchschn. Preis / Ct\";\n  @override\n  get amount => \"Menge\";\n  @override\n  get confirmStone => \"Bestätigen Stein\";\n  @override\n  get confirm => \"Bestätigen\";\n  @override\n  get offered => \"Angeboten\";\n  @override\n  get validTill => \"Gültig bis\";\n  @override\n  get remark => \"Anmerkung\";\n  @override\n  get color => \"Farbe\";\n  @override\n  get colorGroup => \"Color Group\";\n  @override\n  get colorFancy => \"Schick\";\n  @override\n  get colorWhite => \"Weiß\";\n  @override\n  get clarity => \"Klarheit\";\n  @override\n  get clarityGroup => \"Clarity-Gruppe\";\n  @override\n  get intensity => \"Intensität\";\n  @override\n  get overtone => \"Oberton\";\n  @override\n  get selectBusinessType => \"Wählen Sie Unternehmensart\";\n  @override\n  get selectState => \"Staat wählen\";\n  @override\n  get search => \"Suche\";\n  @override\n  get profile => \"Mein Profil\";\n  @override\n  get personal => \"persönlich\";\n  @override\n  get business => \"Geschäft\";\n  @override\n  get documents => \"Unterlagen\";\n  @override\n  get noSlotFound => \"Keine Slots\";\n  @override\n  get noDiamondFound =>\n      \"Keine Diamanten für Ihre Suche. Bitte fügen Sie verlangen.\";\n  @override\n  get selectType => \"Wählen Sie Virtuelle Typ\";\n  @override\n  get noSavedSearch => \"Keine Gespeicherte Suche Exists\";\n  @override\n  get searchCity => \"Suche nach Stadt\";\n  @override\n  get searchCountry => \"Suchen Land\";\n  @override\n  get searchState => \"Suchzustand\";\n  @override\n  get notifications => \"Benachrichtigung\";\n  @override\n  get enter2Stone => \"Bitte wählen Sie mindestens 2 Stein zu vergleichen.\";\n  @override\n  get bidDesc =>\n      \"wird derzeit in Indien und für die Lieferung in jedem anderen Land außer Indien nehmen mindestens 7-10 Arbeitstag entfernt.\";\n  @override\n  get packetNo => \"Packet No:\";\n  @override\n  get quit => \"Verlassen\";\n  @override\n  get agree => \"Genau\";\n  @override\n  get laterToday => \"Später am heutigen Tag\";\n  @override\n  get toMorrow => \"Morgen\";\n  @override\n  get nextWeek => \"Nächste Woche\";\n  @override\n  get chooseAnother => \"Wähle ein anderes\";\n  @override\n  get dateTime => \"Terminzeit\";\n  @override\n  get language => \"Sprache\";\n  @override\n  get diamNow => \"DiamNow\";\n  @override\n  get noDocument => \"Keine Dokumente gefunden\";\n  @override\n  get searchBusinessType => \"Suche Unternehmensart\";\n  @override\n  get hours => \"Std\";\n  @override\n  get minutes => \"Protokoll\";\n  @override\n  get seconds => \"Sekunden\";\n  @override\n  get bidEndsIn => \"Bid endet in:\";\n  @override\n  get shape => \"Gestalten\";\n  @override\n  get download => \"Herunterladen\";\n  @override\n  get share => \"Aktie\";\n  @override\n  get placeOrder => \"Bestellung aufgeben\";\n  @override\n  get enterComment => \"Bitte Kommentar eingeben\";\n  @override\n  get deleteItem => \"Sind Sie sicher, dass Sie löschen möchten?\";\n  @override\n  get shippingPolicy => \"Versandbedingungen\";\n  @override\n  get offerSundayRestriction =>\n      \"Sonntag ist nicht erlaubt. Büroarbeitstage sind Montag bis Samstag\";\n  @override\n  get weekAgo => \"Vor 1 Woche\";\n  @override\n  get lastWeek => \"Letzte Woche\";\n  @override\n  get dayAgo => \"Vor Tagen\";\n  @override\n  get onedayAgo => \"Vor 1 Tag\";\n  @override\n  get yesterday => \"Gestern\";\n  @override\n  get hourAgo => \"Vor Stunden\";\n  @override\n  get onehourAgo => \"vor 1 Stunde\";\n  @override\n  get anhourAgo => \"Vor einer Stunde\";\n  @override\n  get mintuesAgo => \"Vor ein paar Minuten\";\n  @override\n  get onemintuesAgo => \"Vor 1 Minute\";\n  @override\n  get amintueAgo => \"Vor einer Minute\";\n  @override\n  get secondsAgo => \"Sekunden zuvor\";\n  @override\n  get justNow => \"Grade eben\";\n  @override\n  get today => \"Heute\";\n  @override\n  get past => \"Vergangenheit\";\n  @override\n  get selectPhotoProof => \"Wählen Sie Dokument\";\n  @override\n  get pleaseSelectPhotoProof => \"Bitte wählen Sie Dokument\";\n  @override\n  get selectBusinessProof => \"Wählen Sie Dokument\";\n  @override\n  get pleaseSelectBusinessProof => \"Bitte wählen Sie Dokument\";\n  @override\n  get touchId => \"Berührungsidentifikation\";\n  @override\n  get faceId => \"Gesicht Id\";\n  @override\n  get enableTouchId => \"Aktivieren Touch-Id My Diamanten zu entsperren?\";\n  @override\n  get enableFaceId => \"Aktivieren Gesicht Id My Diamanten zu entsperren?\";\n  @override\n  get unlockWithTouchId => \"Diamanten Unlock My mit Touch-Id\";\n  @override\n  get unlockWithFaceId => \"Schalt Meine Diamanten mit dem Gesicht Id.\";\n  @override\n  get mPin => \"MPIN\";\n  @override\n  get holdMemoStatusDiamondorder =>\n      \"Sie können nicht mit Steinen bestätigt, die bereits im Halte- oder Memo-Status sind\";\n  @override\n  get searchStoneIdCertificateNo => \"Suchen Stein Id / Zertifikat Nr\";\n  @override\n  get createMPin => \"Create New MPIN\";\n  @override\n  get reentermpin => \"reenter MPIN\";\n  @override\n  get forgotmpin => \"Vergessen MPIN?\";\n  @override\n  get verifympin => \"Stellen Sie sicher, MPIN\";\n  @override\n  get enteryoursixdigitcode => \"Geben Sie Ihre 6-stellige MPIN\";\n  @override\n  get changempin => \"ändern MPIN\";\n  @override\n  get faceidandtouchnotenable =>\n      \"FaceID / TouchId ist in Ihrem Telefon nicht aktiviert, aktivieren Sie bitte diese Funktion zu nutzen\";\n  @override\n  get enablempintounlockmydiamonds =>\n      \"Aktivieren MPIN zu entsperren app? Es wird Touch-Id deaktivieren. Bist du dir sicher, dass du weitermachen willst?\";\n  @override\n  get enabletouchidtounlockmydiamonds =>\n      \"Aktivieren Touch-Id zu entsperren app? Es wird MPIN deaktivieren. Bist du dir sicher, dass du weitermachen willst?\";\n  @override\n  get rememberme => \"Behalte mich in Erinnerung\";\n  @override\n  get usertouchid => \"Verwenden Sie Touch-Id\";\n  @override\n  get usempin => \"Verwenden MPIN\";\n  @override\n  get filesarenotavailableonserver =>\n      \"Die Dateien sind nicht verfügbar auf dem Server, Bitte versuchen Sie es später noch einmal\";\n  @override\n  get allfileshavebeendownloaded => \"Alle Dateien heruntergeladen wurden.\";\n  @override\n  get filesisdownloaded => \"Dateien heruntergeladen\";\n  @override\n  get filesisnotdownloadedbcz =>\n      \"Dateien nicht heruntergeladen, weil es nicht auf dem Server vorhanden ist.\";\n  @override\n  get downloadingCanceled => \"Vorgang abgebrochen\";\n  @override\n  get downloading => \"Wird heruntergeladen...\";\n  @override\n  get expirydate => \"Verfallsdatum :\";\n  @override\n  get youreallywanttodelete => \"Sie wollen wirklich löschen\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"packetNo\": \"Packet No:\",\n    \"shape\": \"Gestalten\",\n  };\n}\n\nclass GermanyErrorString extends ErrorString {\n  @override\n  get accessDenide => \"Zugriff verweigert\";\n  @override\n  get pleaseSelectOfferTillDate => \"Bitte wählen Angebot bis heute.\";\n  @override\n  get pleaseSelectOfficeVisitDate => \"Bitte wählen Sie Büro Besuchstermin\";\n  @override\n  get deleteStoneMsg => \"Sind Sie sicher, dass Sie löschen möchten Stein (e)?\";\n  @override\n  get acceptTermsAndCondition =>\n      \"Bitte akzeptieren Bedingungen und den Zustand\";\n  @override\n  get diamondCompareRemove =>\n      \"Mindestens 2 Steine \u200B\u200Bsind erforderlich, um zu vergleichen.\";\n  @override\n  get diamondSelectionError => \"Bitte wählen Sie mindestens einen Stein.\";\n  @override\n  get pleaseEnterCompanyName => \"Bitte geben Sie Firmennamen.\";\n  @override\n  get selectInvoiceDate => \"Wählen Sie Rechnungsdatum\";\n  @override\n  get pleaseEnterComment => \"Bitte Kommentar eingeben.\";\n  @override\n  get pleaseEnterRemarks => \"Bitte geben Sie Bemerkungen.\";\n  @override\n  get selectExpiryDate => \"Bitte wählen Sie Ablaufdatum.\";\n  @override\n  get enterOTP => \"Bitte Code eingeben\";\n  @override\n  get pleaseEnterOTP => \"Bitte Sicherheitscode eingeben.\";\n  @override\n  get enteredCodeNotMatching =>\n      \"Eingegebene Code ist passend nicht. Versuchen Sie es nochmal\";\n  @override\n  get selectCancellationReason => \"Bitte wählen Sie Grund für die Stornierung\";\n  @override\n  get enterDesc => \"Bitte geben Sie Beschreibung.\";\n  @override\n  get enterTitle => \"Bitte Titel eingeben.\";\n  @override\n  get enterEmailOrPhone => \"Bitte geben Sie E-Mail / mobile.\";\n  @override\n  get enterPassword =>\n      \"Das Passwort darf nicht leer sein. Bitte Passwort eingeben.\";\n  @override\n  get enterConfirmPassword => \"Bitte geben Sie bestätigen Passwort.\";\n  @override\n  get enterSkype => \"Bitte geben Sie Skype.\";\n  @override\n  get enterRegisterCode => \"Bitte geben Sie den Registrierungscode\";\n  @override\n  get enterEmail => \"Bitte geben Sie die E-Mail-Adresse ein.\";\n  @override\n  get enterPhone => \"Bitte geben Sie Mobile Number.\";\n  @override\n  get enterUsername =>\n      \"Benutzername darf nicht leer sein. Bitte geben sie einen Benutzernamen ein.\";\n  @override\n  get enterValidEmail => \"Bitte geben Sie die gültige E-Mail-Adresse ein.\";\n  @override\n  get enterValidPhone => \"Bitte geben Sie die Handynummer ein.\";\n  @override\n  get enterValidWhatsappPhone =>\n      \"Bitte geben Sie das gültige WhatsApp Mobile Number.\";\n  @override\n  get enterValidPassword => \"Bitte geben Sie 6 Zeichen oder langes Passwort.\";\n  @override\n  get mismatchPassword =>\n      \"Passwort und Passwort bestätigen wird passend nicht.\";\n  @override\n  get enterFirstName => \"Bitte geben Sie den Vornamen.\";\n  @override\n  get enterMiddleName => \"Bitte geben Sie den Mittelnamen.\";\n  @override\n  get enterPinCode => \"Bitte geben Sie den PIN-Code.\";\n  @override\n  get enterName => \"Bitte geben Sie den Namen.\";\n  @override\n  get enterLastName => \"Bitte geben Sie Nachname.\";\n  @override\n  get enterAddress => \"Bitte geben Sie Adresse.\";\n  @override\n  get enterValidPinCode => \"Geben Sie eine gültige PinCode.\";\n  @override\n  get enterValidAddress => \"Bitte geben Sie 10 Zeichen oder lange Adresse.\";\n  @override\n  get enterPostalCode => \"Bitte geben Sie Postleitzahl.\";\n  @override\n  get enterValidPostalCode => \"Bitte geben Sie 6-stellige Zahlen Postleitzahl.\";\n  @override\n  get enterCurrentPassword => \"Bitte geben Sie das aktuelle Kennwort.\";\n  @override\n  get enterNewPassword => \"Bitte neues Passwort eingeben.\";\n  @override\n  get enterFareAmount => \"Bitte geben Sie Verkaufsbetrag.\";\n  @override\n  get enterOrderNO => \"Bitte geben Sie Bestell-Nr.\";\n  @override\n  get enterServiceType => \"Bitte wählen Sie Art von Service.\";\n  @override\n  get enterPaymentType => \"Bitte wählen Sie die Zahlungsart.\";\n  @override\n  get enterValidFareAmount => \"Verkaufsbetrag kann nicht Null sein.\";\n  @override\n  get enterPassangerNo => \"Bitte geben Sie nicht. der Passagiere.\";\n  @override\n  get enterValidPassangerNo => \"Anzahl der Passagiere darf nicht Null sein.\";\n  @override\n  get notEnterMorePassangerNo =>\n      \"Anzahl der Passagiere darf nicht mehr als sieben sein.\";\n  @override\n  get drivingLicenseValidationText =>\n      \"Bitte geben Sie 15-stellige alphanumerische Führerscheinnummer.\";\n  @override\n  get pANCardValidationText =>\n      \"Bitte geben Sie 10-stellige alphanumerische PAN Kartennummer.\";\n  @override\n  get selectFromDate => \"Bitte wählen Sie aus Datum\";\n  @override\n  get selectToDate => \"Bitte wählen Sie auf dem Laufenden\";\n  @override\n  get fromGreaterTo =>\n      \"Das gewählte Datum muss größer sein als das aktuelle Datum\";\n  @override\n  get wrongPassword =>\n      \"Das Passwort muss enthält, Minimum 8 Zeichen, 1 Groß Alphabet, 1 Kleinbuchstaben, 1-stellig, 1 Spezial charater\";\n  @override\n  get fromValueGreateThanTo =>\n      \"Von Wert sollte um Wert kleiner oder gleich sein\";\n  @override\n  get toValueGreaterThanFrom =>\n      \"Um Wert sollte größer oder gleich sein, von Wert\";\n  @override\n  get pleaseEnterCompanyCode => \"Bitte geben Sie den Buchungskreis\";\n  @override\n  get enterSamePassword =>\n      \"Kennwort bestätigt nicht mit neuem Kennwort überein. Bitte geben Sie bestätigen Passwort gleiche wie Neues Passwort.\";\n  @override\n  get selectAppointmentDate => \"Bitte wählen Sie Termin Datum\";\n  @override\n  get selectTimeSlot => \"Bitte wählen Sie Zeitschlitz\";\n  @override\n  get enterComments => \"Bitte geben Sie Kommentar\";\n  @override\n  get selectVirtualType => \"Bitte wählen Sie virtuellen Typ\";\n  @override\n  get versionError => \"Version Fehler\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass GermanyNoDataStrings extends NoDataStrings {\n  @override\n  get noDataFound => \"Kein Eintrag gefunden\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass GermanyScreenTitle extends ScreenTitle {\n  @override\n  get placeAnOffer => \"Legen Sie ein Angebot\";\n  @override\n  get addedInWatchList => \"Hinzugefügt in Merkliste\";\n  @override\n  get addedInOffer => \"Angebot eingereicht\";\n  @override\n  get addedInCart => \"in Einkaufswagen gelegt\";\n  @override\n  get addedInBid => \"Hinzugefügt in Bid\";\n  @override\n  get myEnquiry => \"Meine Anfrage\";\n  @override\n  get delete => \"Löschen\";\n  @override\n  get addDemand => \"Add-Demand\";\n  @override\n  get matchPair => \"Spiel Pair\";\n  @override\n  get savedAndSearch => \"Sichere Suche\";\n  @override\n  get updateAndSearch => \"Update & Suche\";\n  @override\n  get upcoming => \"Bevorstehende\";\n  @override\n  get bidPricePerCt => \"Geldkurs / Ct\";\n  @override\n  get bidDisc => \"Bid Disc\";\n  @override\n  get bidValue => \"Gebot\";\n  @override\n  get bidStone => \"Bid Stein\";\n  @override\n  get myCart => \"Mein Warenkorb\";\n  @override\n  get myComment => \"Meine Notizen\";\n  @override\n  get compare => \"Vergleichen Sie\";\n  @override\n  get compareStones => \"Vergleichen Sie Steine\";\n  @override\n  get statusHold => \"In Wartestellung\";\n  @override\n  get statusOnMemo => \"auf Memo\";\n  @override\n  get statusAvailable => \"Verfügbar\";\n  @override\n  get statusNew => \"Neuankömmling\";\n  @override\n  get statusOffer => \"Stein des Tages / Promotion\";\n  @override\n  get statusMyHold => \"Mein Halten\";\n  @override\n  get signup => \"Anmelden\";\n  @override\n  get addToOffice => \"In Büro\";\n  @override\n  get addComment => \"Einen Kommentar hinzufügen\";\n  @override\n  get addEnquiry => \"In Anfrage\";\n  @override\n  get finalOffer => \"Finales Angebot\";\n  @override\n  get finalDisc => \"Schluss Disc\";\n  @override\n  get finalRate => \"Endrate\";\n  @override\n  get finalValue => \"Endwert\";\n  @override\n  get orderMsg =>\n      \"1) Die angegebenen Preise hier über fixiert sind und daher nicht verhandelbar. \\\\ n2) Die Einstufung, genannten Parameter auf unserer Website über GIA Grading.\";\n  @override\n  get offerMsg =>\n      \"Angeboten Stein wird direkt bestätigt werden, wenn der Preis genehmigt bekommt, damit wir Sie bitten, bevor Angebot sicher zu sein. Jeder Stein (e) in Angebotsliste setzen ist nicht für Sie in der Warteschleife gehalten, wie es auch für andere Kunden auch zur Verfügung steht.\";\n  @override\n  get note => \"Hinweis\";\n  @override\n  get hours => \"Std\";\n  @override\n  get offeredDisc => \"angeboten Dis\";\n  @override\n  get offeredPriceCt => \"Angeboten Pr / Ct\";\n  @override\n  get addOffer => \"Angebot melden\";\n  @override\n  get expDiscPer => \"Erwartete Discount\";\n  @override\n  get todayDiscPer => \"Die heutige Disc\";\n  @override\n  get searchResult => \"Suchergebnis\";\n  @override\n  get searchDiamond => \"Suchen Diamant\";\n  @override\n  get basic => \"Basic\";\n  @override\n  get advanced => \"fortgeschritten\";\n  @override\n  get stoneIdCertNo => \"StoneID / Cert No\";\n  @override\n  get takeSignature => \"nehmen Signature\";\n  @override\n  get optional => \"Optional\";\n  @override\n  get myAddress => \"Meine Adresse\";\n  @override\n  get expiryDate => \"Verfallsdatum\";\n  @override\n  get drivingLicenceDesc => \"Ihr Führerschein Bild\";\n  @override\n  get panDesc => \"Ihre PAN-Karte Bild\";\n  @override\n  get selfie => \"Selfie\";\n  @override\n  get selfieDesc => \"Ihr selfie Bild\";\n  @override\n  get pending => \"steht aus\";\n  @override\n  get rejected => \"Abgelehnt\";\n  @override\n  get uploadAgain => \"Hochladen\";\n  @override\n  get remove => \"Entfernen\";\n  @override\n  get title => \"Titel\";\n  @override\n  get description => \"Beschreibung\";\n  @override\n  get uploadYour => \"laden Sie Ihre\";\n  @override\n  get raiseDispute => \"Erzähl uns davon\";\n  @override\n  get drivingLicense => \"Führerschein\";\n  @override\n  get pANCard => \"PAN-Karte\";\n  @override\n  get saveContinue => \"Speichern und fortfahren\";\n  @override\n  get uploadFrontUmgText => \"Hochladen Front Side Bild\";\n  @override\n  get uploadPANCardImgText => \"Hochladen von PAN-Karte Bild\";\n  @override\n  get uploadBackImageText => \"Hochladen der Rückseite Bild\";\n  @override\n  get helptopic => \"Hilfethemen\";\n  @override\n  get newRideSharingRequest => \"Neue Fahrt Freigabeanfragen\";\n  @override\n  get newRequest => \"neue Anfragen\";\n  @override\n  get welcomeTo => \"Willkommen zu\";\n  @override\n  get welcomeDesc => \"Anmeldung zu Ihrem bestehenden Konto von Mani Jewel\";\n  @override\n  get forgotPassword => \"Haben Sie Ihr\";\n  @override\n  get forgotPasswordDesc =>\n      \"Geben Sie Ihre registrierte Mobiltelefonnummer, Ihr Passwort zu erholen.\";\n  @override\n  get termsAndCondition => \"Terms & amp; Bedingungen\";\n  @override\n  get privacyPolicy => \"Datenschutz-Bestimmungen\";\n  @override\n  get aboutUS => \"Über uns\";\n  @override\n  get otpVerification => \"Stellen Sie sicher, Fahrt-Code\";\n  @override\n  get otpVerificationDelivery => \"Stellen Sie sicher, Pickup-Code\";\n  @override\n  get otpVerificationDeliveryDone => \"Stellen Sie sicher, Liefer-Code\";\n  @override\n  get enterOtp => \"Geben Sie 4-stellige\";\n  @override\n  get recoveryCode => \"Wiederherstellungscode\";\n  @override\n  get editProfile => \"Profil bearbeiten\";\n  @override\n  get myProfile => \"Mein Profil\";\n  @override\n  get reset => \"Reset\";\n  @override\n  get yourPassword => \"Ihr Passwort\";\n  @override\n  get photo => \"Foto\";\n  @override\n  get otpDesc =>\n      \"Der Recovery-Code wurde an Ihre Handy-Nummer gesendet. Bitte geben Sie den Code ein.\";\n  @override\n  get otpVerifyDesc =>\n      \"Der Bestätigungscode wurde an Ihre Handy-Nummer gesendet. Bitte geben Sie den Code ein.\";\n  @override\n  get diamondDetail => \"Diamant-Detail\";\n  @override\n  get home => \"Zuhause\";\n  @override\n  get search => \"Suche\";\n  @override\n  get quickSearch => \"Schnelle Suche\";\n  @override\n  get newArrival => \"Neuankömmling\";\n  @override\n  get exclusiveDiamonds => \"exklusive Diamanten\";\n  @override\n  get diamondOnAuction => \"Diamant ersteigern\";\n  @override\n  get stoneOfTheDays => \"best Buy\";\n  @override\n  get myWatchlist => \"Meine Beobachtungsliste\";\n  @override\n  get myBid => \"Mein Gebot\";\n  @override\n  get myHold => \"Mein Halten\";\n  @override\n  get myOrder => \"Meine Sortierte Liste\";\n  @override\n  get confirmStone => \"Bestätigen Stein\";\n  @override\n  get myOffice => \"Mein Büro Blick\";\n  @override\n  get myOffer => \"Mein Angebot Liste\";\n  @override\n  get myPurchased => \"Meine Gekaufte Geschichte\";\n  @override\n  get mySavedSearch => \"Gespeicherte Suchen\";\n  @override\n  get savedSearch => \"Gespeicherte Suche\";\n  @override\n  get myDemand => \"Meine Nachfrage\";\n  @override\n  get contactUs => \"Kontaktiere uns\";\n  @override\n  get changePassword => \"Passwort ändern\";\n  @override\n  get logout => \"Ausloggen\";\n  @override\n  get fareDetailsTitle => \"Geben Sie Verkaufsdetails\";\n  @override\n  get fairAmt => \"Verkaufsmenge\";\n  @override\n  get noOfPassengers => \"Anzahl der Passagiere\";\n  @override\n  get remarks => \"Bemerkungen\";\n  @override\n  get orderNo => \"Best.-Nr.\";\n  @override\n  get typeOfService => \"Art der Leistung\";\n  @override\n  get paymentType => \"Zahlungsart*\";\n  @override\n  get recentlyView => \"Kürzlich anzeigen\";\n  @override\n  get uploadImgValidationText =>\n      \"Upload-Datei muss sein .jpg, JPEG-, PNG- oder PDF-Format mit 5 MB oder weniger.\";\n  @override\n  get drivingLicenseHintText => \"Führerscheinnummer\";\n  @override\n  get pANCARDHintText => \"PAN Kartennummer\";\n  @override\n  get viewRide => \"Ansicht Rides\";\n  @override\n  get myVehicle => \"Mein Fahrzeug\";\n  @override\n  get personalDocument => \"persönliche Dokumente\";\n  @override\n  get help => \"HILFE\";\n  @override\n  get about => \"Über\";\n  @override\n  get bankDetails => \"Bankdaten\";\n  @override\n  get accountAndPayment => \"Konto- und Zahlungs\";\n  @override\n  get enquiry => \"Anfrage\";\n  @override\n  get download => \"Herunterladen\";\n  @override\n  get addToCart => \"in den Warenkorb legen\";\n  @override\n  get addToWatchList => \"Auf die Beobachtungsliste\";\n  @override\n  get finalCalculation => \"endgültige Berechnung\";\n  @override\n  get bookOffice => \"Book Office\";\n  @override\n  get clearSelection => \"Auswahl löschen\";\n  @override\n  get comment => \"Bemerkungen\";\n  @override\n  get hold => \"Halt\";\n  @override\n  get offer => \"Angebot\";\n  @override\n  get officeView => \"Büro Blick\";\n  @override\n  get placeOrder => \"Bestellung aufgeben\";\n  @override\n  get buyNow => \"Kaufe jetzt\";\n  @override\n  get cancelStone => \"Abbrechen Stein\";\n  @override\n  get share => \"Aktie\";\n  @override\n  get watchlist => \"Beobachtungsliste\";\n  @override\n  get exclusive => \"Exklusiv\";\n  @override\n  get featuredStones => \"Besondere Steine\";\n  @override\n  get stoneOfDay => \"Stone of Day\";\n  @override\n  get recentSearch => \"Aktuelle Suche\";\n  @override\n  get viewAll => \"Alle ansehen\";\n  @override\n  get salesPersonDetail => \"Sales Person Details\";\n  @override\n  get searchTitle => \"Suche Titel\";\n  @override\n  get enterSearchTitle => \"Geben Sie Suche Titel\";\n  @override\n  get timeSlots => \"Zeitfenster\";\n  @override\n  get selectCustomDate => \"Wählen Sie Benutzerdefinierte Datum\";\n  @override\n  get availableSlot => \"Verfügbare Plätze\";\n  @override\n  get reqOfficeView => \"Anfordern Büro Blick\";\n  @override\n  get myComments => \"Mein Kommentar\";\n  @override\n  get myReminder => \"Meine Erinnerung\";\n  @override\n  get reminder => \"Erinnerung\";\n  @override\n  get manageAddress => \"Adressen verwalten\";\n  @override\n  get myAccount => \"Mein Konto\";\n  @override\n  get declaimer => \"Haftungsausschluss\";\n  @override\n  get shareStone => \"Teile Stein\";\n  @override\n  get addRemider => \"In Erinnerung\";\n  @override\n  get offlineSearch => \"offline-Suche\";\n  @override\n  get searchHistory => \"Suchverlauf\";\n  @override\n  get offlineStock => \"offline-Auf\";\n  @override\n  get searchOffline => \"Suchen (Offline)\";\n  @override\n  get voiceSearch => \"Sprachsuche\";\n  @override\n  get tapMictoSpeak => \"Tippen Sie Mikrofon zu sprechen\";\n  @override\n  get typeToSearch => \"Tippe um zu suchen\";\n  @override\n  get typeWordsToSearch => \"Geben Sie mindestens 3 Wörter Steine \u200B\u200Bsuchen\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass GermanyDynamickeys extends Dynamickeys {\n  @override\n  get shape => \"Gestalten\";\n  @override\n  get caratRange => \"Carat-Strecke\";\n  @override\n  get basicDetail => \"Grundlegende Details\";\n  @override\n  get measurementTitle => \"Messungen\";\n  @override\n  get inclusionDetail => \"Aufnahme-Details\";\n  @override\n  get other => \"Andere\";\n  @override\n  get stoneID => \"Stein ID\";\n  @override\n  get labTitle => \"Labor\";\n  @override\n  get certNo => \"Cert. Nein.\";\n  @override\n  get locationTitle => \"STANDORT\";\n  @override\n  get shapeTitle => \"Gestalten\";\n  @override\n  get caratTitle => \"Karat\";\n  @override\n  get colorTitle => \"Farbe\";\n  @override\n  get clarityTitle => \"KLARHEIT\";\n  @override\n  get cutTitle => \"Schnitt\";\n  @override\n  get polishTitle => \"Polieren\";\n  @override\n  get symmentryTitle => \"Symmentry\";\n  @override\n  get fluorescenceTitle => \"Fluoreszenz\";\n  @override\n  get rapTitle => \"Rap (%)\";\n  @override\n  get discountTitle => \"Rabatt (%)\";\n  @override\n  get priceAndCt => \"Preis / Ct\";\n  @override\n  get amountTitle => \"Menge\";\n  @override\n  get eyeCleanTitle => \"Augen-saubere\";\n  @override\n  get brownTitle => \"BRAUN\";\n  @override\n  get milkyTitle => \"Milchig\";\n  @override\n  get mixTingeTitle => \"MIX tinge\";\n  @override\n  get dimensionTitle => \"Masse (MM)\";\n  @override\n  get girdleTitle => \"Gurteln (%)\";\n  @override\n  get tableTitle => \"Tabelle %\";\n  @override\n  get crownAngleTitle => \"Crown Winkel\";\n  @override\n  get depthTitle => \"Tiefes%\";\n  @override\n  get pavAngleTitle => \"Pav Angle\";\n  @override\n  get crownHeightTitle => \"Kronenhöhe (%)\";\n  @override\n  get pavDepthTitle => \"Pavilion Tiefe (%)\";\n  @override\n  get starLengthTitle => \"Stern Länge\";\n  @override\n  get lowerHalfTitle => \"Untere Hälfte\";\n  @override\n  get gridleTitle => \"Gürtel\";\n  @override\n  get gridleFacetedTitle => \"GÜRTELN FACETED\";\n  @override\n  get culetTitle => \"culet\";\n  @override\n  get rationTitle => \"Verhältnis\";\n  @override\n  get blackInclusionTitle => \"BLACK INCLUSION\";\n  @override\n  get otherInclusionTitle => \"andere Inclusion\";\n  @override\n  get openInclusionTitle => \"OPEN INCLUSION\";\n  @override\n  get extraFacetTitle => \"EXTRA FACET\";\n  @override\n  get naturalTitle => \"Natürlich\";\n  @override\n  get hAndATitle => \"H & A\";\n  @override\n  get keyToSymbol => \"SCHLÜSSEL ZUM SYMBOL\";\n  @override\n  get labComments => \"LAB KOMMENTAR\";\n  @override\n  get laserInsTitle => \"LASER IN\";\n  @override\n  get basicTitle => \"Basic\";\n  @override\n  get advancedTitle => \"fortgeschritten\";\n  @override\n  get stoneIdTitle => \"Stein ID / Cert No\";\n  @override\n  get defaultTitle => \"Standard\";\n  @override\n  get newDiamondsTitle => \"New Diamanten\";\n  @override\n  get priceLowToHigh => \"Preis niedrig bis hoch\";\n  @override\n  get priceHighToLow => \"Preis absteigend\";\n  @override\n  get disLowToHigh => \"Rabatt aufsteigend\";\n  @override\n  get disHighToLow => \"Rabatt absteigend\";\n  @override\n  get colorLowToHigh => \"Farbe aufsteigend\";\n  @override\n  get colorHighToLow => \"Farbe absteigend\";\n  @override\n  get caratLowToHigh => \"Carat aufsteigend\";\n  @override\n  get caratHighToLow => \"Carat absteigend\";\n  @override\n  get clarityLowToHigh => \"Klarheit aufsteigend\";\n  @override\n  get clarityHighToLow => \"Klarheit absteigend\";\n  @override\n  get colorShadeTitle => \"Farbschattierung\";\n  @override\n  get certiTitle => \"Zertifikatsnummer\";\n  @override\n  get arrivalsTitle => \"Ankünfte\";\n  @override\n  get lengthTitle => \"Länge\";\n  @override\n  get widthTitle => \"Breite\";\n  @override\n  get pavilionAngleTitle => \"Pavilion Winkel\";\n  @override\n  get girdleConditionTitle => \"Hüfthalter Zustand\";\n  @override\n  get cluetConditionTitle => \"culet Zustand\";\n  @override\n  get disTitle => \"Dis%\";\n  @override\n  get depthTitleWithoutPerc => \"Tiefe\";\n  @override\n  get otherInformationTitle => \"Andere Informationen\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"shape\": \"Gestalten\",\n    \"caratRange\": \"Carat-Strecke\",\n    \"basicDetail\": \"Grundlegende Details\",\n    \"measurementTitle\": \"Messungen\",\n    \"inclusionDetail\": \"Aufnahme-Details\",\n    \"other\": \"Andere\",\n    \"stoneID\": \"Stein ID\",\n    \"labTitle\": \"Labor\",\n    \"certNo\": \"Cert. Nein.\",\n    \"locationTitle\": \"STANDORT\",\n    \"caratTitle\": \"Karat\",\n    \"colorTitle\": \"Farbe\",\n    \"clarityTitle\": \"KLARHEIT\",\n    \"cutTitle\": \"Schnitt\",\n    \"polishTitle\": \"Polieren\",\n    \"symmentryTitle\": \"Symmentry\",\n    \"fluorescenceTitle\": \"Fluoreszenz\",\n    \"rapTitle\": \"Rap (%)\",\n    \"discountTitle\": \"Rabatt (%)\",\n    \"priceAndCt\": \"Preis / Ct\",\n    \"amountTitle\": \"Menge\",\n    \"eyeCleanTitle\": \"Augen-saubere\",\n    \"brownTitle\": \"BRAUN\",\n    \"milkyTitle\": \"Milchig\",\n    \"mixTingeTitle\": \"MIX tinge\",\n    \"dimensionTitle\": \"Masse (MM)\",\n    \"girdleTitle\": \"Gurteln (%)\",\n    \"tableTitle\": \"Tabelle %\",\n    \"crownAngleTitle\": \"Crown Winkel\",\n    \"depthTitle\": \"Tiefes%\",\n    \"pavAngleTitle\": \"Pav Angle\",\n    \"crownHeightTitle\": \"Kronenhöhe (%)\",\n    \"pavDepthTitle\": \"Pavilion Tiefe (%)\",\n    \"starLengthTitle\": \"Stern Länge\",\n    \"lowerHalfTitle\": \"Untere Hälfte\",\n    \"gridleTitle\": \"Gürtel\",\n    \"gridleFacetedTitle\": \"GÜRTELN FACETED\",\n    \"culetTitle\": \"culet\",\n    \"rationTitle\": \"Verhältnis\",\n    \"blackInclusionTitle\": \"BLACK INCLUSION\",\n    \"otherInclusionTitle\": \"andere Inclusion\",\n    \"openInclusionTitle\": \"OPEN INCLUSION\",\n    \"extraFacetTitle\": \"EXTRA FACET\",\n    \"naturalTitle\": \"Natürlich\",\n    \"hAndATitle\": \"H & A\",\n    \"keyToSymbol\": \"SCHLÜSSEL ZUM SYMBOL\",\n    \"labComments\": \"LAB KOMMENTAR\",\n    \"laserInsTitle\": \"LASER IN\",\n    \"basicTitle\": \"Basic\",\n    \"advancedTitle\": \"fortgeschritten\",\n    \"stoneIdTitle\": \"Stein ID / Cert No\",\n    \"defaultTitle\": \"Standard\",\n    \"newDiamondsTitle\": \"New Diamanten\",\n    \"priceLowToHigh\": \"Preis niedrig bis hoch\",\n    \"priceHighToLow\": \"Preis absteigend\",\n    \"disLowToHigh\": \"Rabatt aufsteigend\",\n    \"disHighToLow\": \"Rabatt absteigend\",\n    \"colorLowToHigh\": \"Farbe aufsteigend\",\n    \"colorHighToLow\": \"Farbe absteigend\",\n    \"caratLowToHigh\": \"Carat aufsteigend\",\n    \"caratHighToLow\": \"Carat absteigend\",\n    \"clarityLowToHigh\": \"Klarheit aufsteigend\",\n    \"clarityHighToLow\": \"Klarheit absteigend\",\n    \"colorShadeTitle\": \"Farbschattierung\",\n    \"certiTitle\": \"Zertifikatsnummer\",\n    \"arrivalsTitle\": \"Ankünfte\",\n    \"lengthTitle\": \"Länge\",\n    \"widthTitle\": \"Breite\",\n    \"pavilionAngleTitle\": \"Pavilion Winkel\",\n    \"girdleConditionTitle\": \"Hüfthalter Zustand\",\n    \"cluetConditionTitle\": \"culet Zustand\",\n    \"disTitle\": \"Dis%\",\n    \"depthTitleWithoutPerc\": \"Tiefe\",\n    \"otherInformationTitle\": \"Andere Informationen\",\n  };\n}\n\nclass Arabic extends English {\n  @override\n  get authStrings => ArabicAuthStrings();\n  @override\n  get commonString => ArabicCommonString();\n  @override\n  get errorString => ArabicErrorString();\n  @override\n  get noDataStrings => ArabicNoDataStrings();\n  @override\n  get screenTitle => ArabicScreenTitle();\n  @override\n  get dynamickeys => ArabicDynamickeys();\n  static String get languageCode => \"Arabic\";\n  static String get languageName => \"Arabic\";\n}\n\nclass ArabicAuthStrings extends AuthStrings {\n  @override\n  get editCompanyInformation => \"تحرير معلومات عن الشركة\";\n  @override\n  get selectNatureOfOrganization => \"تحديد طبيعة منظمة\";\n  @override\n  get setNewPassword => \"تعيين كلمة المرور الجديدة وتسجيل الدخول مرة أخرى.\";\n  @override\n  get enterCompanyName => \"الرجاء إدخال اسم الشركة.\";\n  @override\n  get pleaseEnterCustomerOTP => \"الرجاء إدخال العملاء كود ركوب.\";\n  @override\n  get pleaseEnterPickupOTP => \"الرجاء إدخال العملاء كود صغيرة.\";\n  @override\n  get pleaseEnterDeliveryOTP => \"الرجاء إدخال العملاء كود التسليم.\";\n  @override\n  get verified => \"تم التحقق\";\n  @override\n  get verify => \"تحقق\";\n  @override\n  get addressLineOne => \"العنوان 1\";\n  @override\n  get addressLineTwo => \"العنوان 2\";\n  @override\n  get addressLineThree => \"العنوان 3\";\n  @override\n  get oldPassword => \"كلمة سر قديمة\";\n  @override\n  get skype => \"سكايب\";\n  @override\n  get whatsApp => \"ال WhatsApp\";\n  @override\n  get pinCode => \"الرقم السري *\";\n  @override\n  get verifyMobileDesc =>\n      \"يرجى التحقق من رقم الهاتف المحمول لتحديث ملف التعريف.\";\n  @override\n  get verifyNow => \"تحقق الآن\";\n  @override\n  get password => \"كلمه السر\";\n  @override\n  get backToHome => \"الذهاب إلى الصفحة الرئيسية\";\n  @override\n  get forgotPassword => \"هل نسيت كلمة المرور؟\";\n  @override\n  get signInCap => \"تسجيل الدخول\";\n  @override\n  get moveToLogIn => \"الانتقال إلى تسجيل الدخول\";\n  @override\n  get dontHaveAnAccount => \"#ERROR!\";\n  @override\n  get clickHere => \"انقر هنا\";\n  @override\n  get signUpHere => \"سجل هنا\";\n  @override\n  get reset => \"إعادة تعيين\";\n  @override\n  get haveRegisterCode => \"لديك رمز التسجيل؟\";\n  @override\n  get welcome => \"مرحبا بعودتك!\";\n  @override\n  get signInAsGuest => \"تسجيل الدخول كضيف\";\n  @override\n  get editProfileTitle => \"تعديل الملف الشخصي\";\n  @override\n  get emaillbl => \"البريد الإلكتروني\";\n  @override\n  get searchInventory => \"البحث عن المنتج\";\n  @override\n  get emailAddress => \"عنوان البريد الالكترونى*\";\n  @override\n  get offlineFilter =>\n      \"تعذر العثور على الماس المنشود؟ يمكننا مساعدتك في الحصول على صفقة أفضل من المخزون لدينا حاليا.\";\n  @override\n  get loginDesc =>\n      \"هل تريد تمكين اللمس رقم / MPin لفتح بلدي الماس؟ يرجى اختيار خيار التطبيق فتح\";\n  @override\n  get searchDiamonds => \"البحث الماس\";\n  @override\n  get continueWithSearch => \"هل ترغب في الاستمرار في البحث؟\";\n  @override\n  get mobileNumber => \"التليفون المحمول\";\n  @override\n  get searchHint => \"بحث...\";\n  @override\n  get selectYourCountry => \"حدد الدولة\";\n  @override\n  get resendCodeIn => \"إعادة إرسال الرمز في\";\n  @override\n  get resendCode => \"إعادة إرسال\";\n  @override\n  get haveAnAccount => \"هل لديك حساب؟\";\n  @override\n  get dontReceiveCode => \"إذا لم يحصل على رمز!\";\n  @override\n  get inLogin => \"لتسجيل الدخول.\";\n  @override\n  get resetPwdDesc =>\n      \"إضافة كلمة المرور و تأكيد كلمة المرور لإعادة تعيين كلمة المرور الخاصة بك.\";\n  @override\n  get backToLogin => \"العودة إلى تسجيل الدخول\";\n  @override\n  get firstName => \"الاسم الاول*\";\n  @override\n  get name => \"اسم المستخدم*\";\n  @override\n  get lastName => \"الكنية*\";\n  @override\n  get middleName => \"الاسم الوسطى*\";\n  @override\n  get confirmPassword => \"تأكيد كلمة المرور\";\n  @override\n  get currentPasswordErr => \"خطأ كلمة المرور الحالية\";\n  @override\n  get passwordChanged => \"تم تغيير كلمة السر\";\n  @override\n  get lblLogInErr => \"خطأ في تسجيل الدخول\";\n  @override\n  get enterYour => \"ادخل\";\n  @override\n  get details => \"تفاصيل\";\n  @override\n  get registerCode => \"رمز التسجيل\";\n  @override\n  get registerCodeDesc => \"إضافة رمز التسجيل لبدء التسجيل الخاص بك مع 3eco.\";\n  @override\n  get uploadPhotoDesc => \"تأخذ صورة شخصية لنفسك\";\n  @override\n  get updateProfile => \"تحديث الملف\";\n  @override\n  get postalCode => \"الرمز البريدي*\";\n  @override\n  get removeButton => \"إزالة\";\n  @override\n  get gender => \"جنس\";\n  @override\n  get male => \"الذكر\";\n  @override\n  get female => \"أنثى\";\n  @override\n  get changePassword => \"غير كلمة السر\";\n  @override\n  get currentPassword => \"كلمة المرور الحالي*\";\n  @override\n  get newPassword => \"كلمة مرور جديدة*\";\n  @override\n  get confirmNewPassword => \"تأكيد كلمة المرور*\";\n  @override\n  get personalDocuments => \"مستندات شخصية\";\n  @override\n  get assignedAuto => \"تعيين السيارات\";\n  @override\n  get logout => \"تسجيل خروج\";\n  @override\n  get logoutConfirmationMsg => \"هل أنت متأكد أنك تريد تسجيل الخروج؟\";\n  @override\n  get address => \"عنوان*\";\n  @override\n  get accountNumber => \"رقم حساب\";\n  @override\n  get bankerName => \"اسم المصرفيين\";\n  @override\n  get nameLable => \"اسم\";\n  @override\n  get ifscCode => \"كود IFSC\";\n  @override\n  get businessRegistrationNumbr => \"رقم التسجيل التجاري\";\n  @override\n  get businessRelationshipPeriod => \"العمل فترة العلاقة (في سنوات)\";\n  @override\n  get designation => \"تعيين\";\n  @override\n  get nameofDesignation => \"اسم\";\n  @override\n  get natureofOrganization => \"طبيعة منظمة\";\n  @override\n  get uploadFile => \"لا ملف إخبارية\";\n  @override\n  get update => \"تحديث\";\n  @override\n  get resetPwd => \"إعادة تعيين كلمة المرور\";\n  @override\n  get pwdReset => \"إعادة تعيين كلمة المرور\";\n  @override\n  get signInWithMPIN => \"تسجيل الدخول مع MPIN\";\n  @override\n  get pwdChanged => \"تم تغيير كلمة السر\";\n  @override\n  get successfullyPwdDesc =>\n      \"لقد بنجاح إعادة تعيين كلمة المرور الخاصة بك. الرجاء استخدام كلمة المرور الجديدة عند تسجيل الدخول.\";\n  @override\n  get lblProfileSetup => \"ومن المقرر الشخصي الخاص بك\";\n  @override\n  get lblProfileSetupDesc => \"لقد تلقينا تفاصيل ملفك الشخصي\";\n  @override\n  get hoursAvailable => \"إجمالي Shifttime\";\n  @override\n  get confirmStoneDetail => \"تأكيد تفاصيل الحجر\";\n  @override\n  get companyName => \"اسم الشركة\";\n  @override\n  get invoiceDate => \"تاريخ الفاتورة\";\n  @override\n  get companyCode => \"رمز الشركة\";\n  @override\n  get saveCompanyDetails => \"حفظ معلومات الشركة\";\n  @override\n  get passwordNotChange => \"كلمة السر غير متطابقة\";\n  @override\n  get rememberPassword => \"تذكر كلمة المرور؟\";\n  @override\n  get sendOTP => \"إرسال OTP\";\n  @override\n  get resendNow => \"إعادة إرسال الآن\";\n  @override\n  get didNotReceiveOTP => \"إذا كنت لا تتلقى مكتب المدعي العام!\";\n  @override\n  get sendOTPToEmail =>\n      \"سوف نقوم بإرسال OTP إلى عنوان البريد الإلكتروني الخاص بك دخل أو اسم المستخدم. يرجى إدخال عنوان البريد الإلكتروني أو اسم المستخدم.\";\n  @override\n  get enterOTP =>\n      \"تم إرسال OTP إلى عنوان بريدك الإلكتروني المسجل. الرجاء إدخال مكتب المدعي العام.\";\n  @override\n  get backToSignIn => \"ارجع إلى تسجيل الدخول\";\n  @override\n  get passwordResetSuccessfully => \"إستعادة كلمة بنجاح.\";\n  @override\n  get emailAndUname => \"البريد الالكتروني / اسم المستخدم\";\n  @override\n  get signUp => \"سجل\";\n  @override\n  get promotionText => \"عروض ترويجية\";\n  @override\n  get termsAndCondition => \"أحكام وشروط\";\n  @override\n  get mustAgreeTermsAndCondition =>\n      \"يجب أن توافق على أحكام وشروط لتسجيل الدخول كما مستخدم ضيف\";\n  @override\n  get forgotPasswordTitle => \"هل نسيت كلمة المرور\";\n  @override\n  get uploadKYC => \"تحميل KYC\";\n  @override\n  get uploadKycDesc => \"يرجى تحميل الوثائق KYC للوصول إلى ميزات الكامل.\";\n  @override\n  get hintPhotoIdentityProof => \"صور الهوية * والدليل على\";\n  @override\n  get hintBussinerssProof => \"الهوية التجارية * والدليل على\";\n  @override\n  get btnFileUpload => \"تحميل الملف\";\n  @override\n  get pleaseUploadPhotoProof => \"يرجى تحميل إثبات صور الهوية.\";\n  @override\n  get pleaseUploadBussinessProof => \"يرجى تحميل إثبات الهوية الأعمال.\";\n  @override\n  get pleaseSelectFileFormat =>\n      \"يرجى تحميل الملف في أي من التنسيقات التالية: .JPG\";\n  @override\n  get kycSubmitted => \"KYC مقدم\";\n  @override\n  get kycSubmmittedDesc => \"وقد قدمت KYC بنجاح.\";\n  @override\n  get btnMoveToHome => \"انتقال إلى الصفحة الرئيسية\";\n  @override\n  get kYCRejected => \"KYC رفض\";\n  @override\n  get kycRejectedDesc =>\n      \"تم رفض KYC الخاص بك. يرجى تحميل الوثائق KYC مرة أخرى للوصول إلى كافة الميزات.\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ArabicCommonString extends CommonString {\n  @override\n  get seeMore => \"شاهد المزيد\";\n  @override\n  get seeLess => \"انظر أقل\";\n  @override\n  get modify => \"تعديل\";\n  @override\n  get delete => \"حذف\";\n  @override\n  get details => \"تفاصيل\";\n  @override\n  get edit => \"تعديل\";\n  @override\n  get addDemand => \"الطلب إضافة\";\n  @override\n  get demandTitle => \"الطلب عنوان\";\n  @override\n  get pleaseEnterDemandTitle => \"يرجى إدخال عنوان الطلب\";\n  @override\n  get demandAddedSuccessfully => \"الطلب أضيف بنجاح\";\n  @override\n  get selectAtleastOneFilter => \"رجاء\";\n  @override\n  get savedSearch => \"بحث محفوظ\";\n  @override\n  get searchSavedSearch => \"بحث بحث محفوظ\";\n  @override\n  get viewDetails => \"عرض التفاصيل\";\n  @override\n  get viewLessDetails => \"عرض أقل تفاصيل\";\n  @override\n  get myDemand => \"بلدي الطلب\";\n  @override\n  get date => \"تاريخ\";\n  @override\n  get selectTime => \"اختر الوقت\";\n  @override\n  get selectDate => \"حدد تاريخ\";\n  @override\n  get offerVelidTill => \"يسري العرض حتى\";\n  @override\n  get officeVisitDate => \"مكتب موقع التسجيل\";\n  @override\n  get all => \"الكل\";\n  @override\n  get status => \"الحالة\";\n  @override\n  get save => \"حفظ\";\n  @override\n  get verify => \"تحقق\";\n  @override\n  get readMore => \"قراءة المزيد\";\n  @override\n  get goodMorning => \"صباح الخير\";\n  @override\n  get goodAfternoon => \"طاب مسائك\";\n  @override\n  get goodEvening => \"مساء الخير\";\n  @override\n  get btnSkip => \"تخطى\";\n  @override\n  get btnUpdate => \"تحديث\";\n  @override\n  get btnContinue => \"استمر\";\n  @override\n  get btnContinueCap => \"استمر\";\n  @override\n  get btnEdit => \"تعديل\";\n  @override\n  get btnSubmit => \"إرسال\";\n  @override\n  get btnNextCap => \"التالى\";\n  @override\n  get btnSaveCap => \"تطوير كلمة السر\";\n  @override\n  get btnWithdrawCap => \"انسحب\";\n  @override\n  get btnSaveAndContinueCap => \"حفظ ومتابعة\";\n  @override\n  get btnUnregister => \"غير مسجل موبايل\";\n  @override\n  get btnClose => \"قريب\";\n  @override\n  get remove => \"إزالة\";\n  @override\n  get refresh => \"تحديث\";\n  @override\n  get fetchLocationMessage => \"يرجى الانتظار نحن جلب موقعك\";\n  @override\n  get done => \"منجز\";\n  @override\n  get doneCap => \"منجز\";\n  @override\n  get cancel => \"إلغاء\";\n  @override\n  get allow => \"السماح\";\n  @override\n  get countryFirst => \"الرجاء اختيار الدولة أولا\";\n  @override\n  get apply => \"تطبيق\";\n  @override\n  get cancelCap => \"إلغاء\";\n  @override\n  get uploadCap => \"رفع\";\n  @override\n  get yesCancelCap => \"نعم\";\n  @override\n  get upload => \"رفع\";\n  @override\n  get ok => \"حسنا\";\n  @override\n  get home => \"الصفحة الرئيسية\";\n  @override\n  get goToMyWatchList => \"انتقل إلى جهاز قائمة الرغبات\";\n  @override\n  get goToMyOrder => \"الذهاب إلى طلبي\";\n  @override\n  get gotToMyOffer => \"انتقل إلى جهاز العرض\";\n  @override\n  get gotToMyHold => \"انتقل إلى جهاز عقد\";\n  @override\n  get gotToMyEnquiry => \"انتقل إلى جهاز رسالتك\";\n  @override\n  get gotToMyBid => \"انتقل إلى جهاز المزايدة\";\n  @override\n  get gotToMyReminder => \"انتقل إلى جهاز تذكير\";\n  @override\n  get gotToMyComments => \"الذهاب إلى ملاحظاتي\";\n  @override\n  get yes => \"نعم\";\n  @override\n  get no => \"لا\";\n  @override\n  get selectCountry => \"حدد الدولة\";\n  @override\n  get clickHere => \"انقر هنا\";\n  @override\n  get btnAddNewAddress => \"أضف عنوان جديد\";\n  @override\n  get btnCancel => \"إلغاء\";\n  @override\n  get btnTakeSelfie => \"أخذ الصور الشخصية لل\";\n  @override\n  get successfully => \"بنجاح\";\n  @override\n  get lblAppExit => \"هل أنت متأكد من انك تريد الخروج؟\";\n  @override\n  get lblExit => \"خروج\";\n  @override\n  get openAppSetting => \"أفتح الإعدادات\";\n  @override\n  get lblOr => \"أو\";\n  @override\n  get fromLbl => \"من عند\";\n  @override\n  get toLbl => \"إلى\";\n  @override\n  get showMore => \"أظهر المزيد\";\n  @override\n  get showLess => \"عرض أقل\";\n  @override\n  get selectCity => \"اختر مدينة\";\n  @override\n  get notYetAvailable => \"لم تتوفر بعد\";\n  @override\n  get updateAvailable => \"تحديث متوفر!\";\n  @override\n  get downloadAppFrom => \"تحميل تطبيق التحديث من\";\n  @override\n  get playStore => \"لعب مخزن\";\n  @override\n  get skipUpdate => \"تخطي تحديث\";\n  @override\n  get stateFirst => \"الرجاء اختيار الدولة أولا\";\n  @override\n  get reallyExit => \"الخروج حقا؟\";\n  @override\n  get alert => \"إنذار!\";\n  @override\n  get loading => \"جار التحميل\";\n  @override\n  get error => \"خطأ\";\n  @override\n  get jumpToTop => \"إذهب إلى أعلى\";\n  @override\n  get ihaveread => \"لقد قرأت واستعرض\";\n  @override\n  get selected => \"تحديد\";\n  @override\n  get lbllogout => \"تسجيل خروج\";\n  @override\n  get lblThanx => \"شكرا لك\";\n  @override\n  get lblSelectCity => \"اختر مدينة\";\n  @override\n  get lblSelectState => \"اختر ولايه\";\n  @override\n  get lblSelectCountry => \"حدد الدولة\";\n  @override\n  get lblCity => \"مدينة\";\n  @override\n  get lblCountry => \"بلد\";\n  @override\n  get lblName => \"اسم\";\n  @override\n  get lblPinCode => \"كود PIN\";\n  @override\n  get lblMobileNumber => \"رقم الهاتف المحمول\";\n  @override\n  get lblState => \"حالة\";\n  @override\n  get lblCode => \"الشفرة:\";\n  @override\n  get lblOrderNo => \"أجل لا:\";\n  @override\n  get lblOrderItem => \"قائمة الطلبات:\";\n  @override\n  get lblDelivered => \"تم التوصيل\";\n  @override\n  get lblTicketReady => \"تذكرتك جاهز\";\n  @override\n  get lblPersonTicket => \"تذكرة من 2 شخص\";\n  @override\n  get lblShuttleBus => \"اتوبيس داخلي\";\n  @override\n  get lblPickup => \"امسك\";\n  @override\n  get lblDropoff => \"إنزال\";\n  @override\n  get lblPassenger => \"راكب\";\n  @override\n  get lblDeliveryNo => \"أي التسليم.\";\n  @override\n  get lblPrice => \"السعر\";\n  @override\n  get lblValid => \"صالحة ل\";\n  @override\n  get lblRenew => \"جدد\";\n  @override\n  get lblDeparture => \"مغادرة\";\n  @override\n  get lblArrived => \"وصل\";\n  @override\n  get lblSendtoFriend => \"أرسل إلى صديق\";\n  @override\n  get popupRenewTitle => \"تجديد تذكرة\";\n  @override\n  get popupRenewDesc => \"أبجد هوز دولور الجلوس امات\";\n  @override\n  get popuplblPassenger => \"راكب\";\n  @override\n  get popuplblCancel => \"إلغاء\";\n  @override\n  get popupbtnRenew => \"جدد\";\n  @override\n  get ridelblAwesome => \"رائع\";\n  @override\n  get ridebtnDone => \"منجز\";\n  @override\n  get offerPricePerCarat => \"عرض السعر (CTS)\";\n  @override\n  get dropOffText => \"إنزال\";\n  @override\n  get pickUpText => \"امسك\";\n  @override\n  get startAtText => \"تبدأ في\";\n  @override\n  get endAtText => \"يغلق عند مستوى\";\n  @override\n  get personText => \"شخص\";\n  @override\n  get paymentScreenTitle => \"دفع\";\n  @override\n  get pickuplbl => \"امسك\";\n  @override\n  get droplbl => \"إنزال\";\n  @override\n  get makePaymentButtonlbl => \"قم بالدفع\";\n  @override\n  get pessangerslbl => \"ركاب\";\n  @override\n  get priceBreakuplbl => \"سعر تفكك\";\n  @override\n  get tripPricelbl => \"الأسعار رحلة\";\n  @override\n  get taxeslbl => \"الضرائب\";\n  @override\n  get totallbl => \"مجموع\";\n  @override\n  get cardNumberhint => \"رقم البطاقة\";\n  @override\n  get cvvhint => \"CVV\";\n  @override\n  get datehint => \"MM / YY\";\n  @override\n  get btnTryAgain => \"حاول مرة أخري\";\n  @override\n  get cityFirst => \"الرجاء تحديد المدينة أولا\";\n  @override\n  get enterFareDetails => \"أدخل تفاصيل المبيعات\";\n  @override\n  get fromDate => \"من التاريخ\";\n  @override\n  get toDate => \"التاريخ المحدد\";\n  @override\n  get btnUnderstand => \"أنا أفهم\";\n  @override\n  get applicationUpdate => \"تطبيق تحديث\";\n  @override\n  get newVersionMessage => \"نسخة جديدة من تطبيق مجانية متاحة\";\n  @override\n  get paymentCollected => \"الدفع يتم جمعها\";\n  @override\n  get addComment => \"اضف تعليق\";\n  @override\n  get more => \"أكثر\";\n  @override\n  get carat => \"قيراط\";\n  @override\n  get pcs => \"جهاز كمبيوتر شخصى\";\n  @override\n  get cts => \"سنت\";\n  @override\n  get disc => \"القرص٪\";\n  @override\n  get avgPriceCrt => \"متوسط السعر / ط م\";\n  @override\n  get amount => \"كمية\";\n  @override\n  get confirmStone => \"ستون تأكيد\";\n  @override\n  get confirm => \"تؤكد\";\n  @override\n  get offered => \"تقدم\";\n  @override\n  get validTill => \"صالح حتى\";\n  @override\n  get remark => \"تعليق\";\n  @override\n  get color => \"اللون\";\n  @override\n  get colorGroup => \"المجموعة اللون\";\n  @override\n  get colorFancy => \"مولع ب\";\n  @override\n  get colorWhite => \"أبيض\";\n  @override\n  get clarity => \"وضوح\";\n  @override\n  get clarityGroup => \"المجموعة الوضوح\";\n  @override\n  get intensity => \"الشدة\";\n  @override\n  get overtone => \"يغلب\";\n  @override\n  get selectBusinessType => \"اختر نوع الشركة\";\n  @override\n  get selectState => \"اختر ولايه\";\n  @override\n  get search => \"بحث\";\n  @override\n  get profile => \"ملفي\";\n  @override\n  get personal => \"شخصي\";\n  @override\n  get business => \"اعمال\";\n  @override\n  get documents => \"مستندات\";\n  @override\n  get noSlotFound => \"لا توجد فتحات\";\n  @override\n  get noDiamondFound => \"لا الماس مطابقة بحثك. الرجاء إضافة كنت الطلب.\";\n  @override\n  get selectType => \"حدد نوع الظاهري\";\n  @override\n  get noSavedSearch => \"لا بحث محفوظ موجود\";\n  @override\n  get searchCity => \"المدينة بحث\";\n  @override\n  get searchCountry => \"بحث البلد\";\n  @override\n  get searchState => \"الدولة البحث\";\n  @override\n  get notifications => \"تنبيه\";\n  @override\n  get enter2Stone => \"يرجى تحديد ما لا يقل عن 2 الحجر للمقارنة.\";\n  @override\n  get bidDesc =>\n      \"يقع حاليا في الهند وللتسليم في أي بلد آخر بصرف النظر عن الهند سوف يستغرق 7-10 أيام عمل على الأقل.\";\n  @override\n  get packetNo => \"حزمة رقم:\";\n  @override\n  get quit => \"استقال\";\n  @override\n  get agree => \"أنا موافق\";\n  @override\n  get laterToday => \"في وقت لاحق اليوم\";\n  @override\n  get toMorrow => \"غدا\";\n  @override\n  get nextWeek => \"الاسبوع المقبل\";\n  @override\n  get chooseAnother => \"اختيار آخر\";\n  @override\n  get dateTime => \"التاريخ والوقت\";\n  @override\n  get language => \"لغة\";\n  @override\n  get diamNow => \"DiamNow\";\n  @override\n  get noDocument => \"لا توجد وثائق تم العثور عليها\";\n  @override\n  get searchBusinessType => \"بحث نوع الشركة\";\n  @override\n  get hours => \"ساعات\";\n  @override\n  get minutes => \"الدقائق\";\n  @override\n  get seconds => \"ثواني\";\n  @override\n  get bidEndsIn => \"المزايدة ينتهي في:\";\n  @override\n  get shape => \"شكل\";\n  @override\n  get download => \"تحميل\";\n  @override\n  get share => \"شارك\";\n  @override\n  get placeOrder => \"مكان الامر\";\n  @override\n  get enterComment => \"الرجاء إدخال تعليق\";\n  @override\n  get deleteItem => \"هل أنت متأكد أنك تريد حذف؟\";\n  @override\n  get shippingPolicy => \"سياسة الشحن\";\n  @override\n  get offerSundayRestriction =>\n      \"لا يسمح الاحد. مكتب أيام عمل من الاثنين إلى السبت\";\n  @override\n  get weekAgo => \"1 قبل أسبوع\";\n  @override\n  get lastWeek => \"الاسبوع الماضى\";\n  @override\n  get dayAgo => \"أيام مضت\";\n  @override\n  get onedayAgo => \"1 منذ يوم\";\n  @override\n  get yesterday => \"في الامس\";\n  @override\n  get hourAgo => \"منذ ساعات\";\n  @override\n  get onehourAgo => \"منذ 1 ساعة\";\n  @override\n  get anhourAgo => \"قبل ساعة\";\n  @override\n  get mintuesAgo => \"دقائق مضت\";\n  @override\n  get onemintuesAgo => \"منذ 1 دقيقة\";\n  @override\n  get amintueAgo => \"وقبل دقيقة\";\n  @override\n  get secondsAgo => \"منذ ثوانى\";\n  @override\n  get justNow => \"في هذة اللحظة\";\n  @override\n  get today => \"اليوم\";\n  @override\n  get past => \"الماضي\";\n  @override\n  get selectPhotoProof => \"حدد مستند\";\n  @override\n  get pleaseSelectPhotoProof => \"الرجاء تحديد ثيقة\";\n  @override\n  get selectBusinessProof => \"حدد مستند\";\n  @override\n  get pleaseSelectBusinessProof => \"الرجاء تحديد ثيقة\";\n  @override\n  get touchId => \"معرف اتصال\";\n  @override\n  get faceId => \"وجه إيد\";\n  @override\n  get enableTouchId => \"تمكين اللمس رقم لفتح بلدي الماس؟\";\n  @override\n  get enableFaceId => \"تمكين الوجه رقم لفتح بلدي الماس؟\";\n  @override\n  get unlockWithTouchId => \"فتح بلدي الماس باستخدام اللمس رقم\";\n  @override\n  get unlockWithFaceId => \"فتح بلدي الماس باستخدام الوجه رقم.\";\n  @override\n  get mPin => \"MPin\";\n  @override\n  get holdMemoStatusDiamondorder =>\n      \"لا يمكنك أكدت الحجارة التي هي بالفعل في عقد أو مذكرة الوضع\";\n  @override\n  get searchStoneIdCertificateNo => \"بحث ستون رقم / شهادة لا\";\n  @override\n  get createMPin => \"إنشاء MPin جديد\";\n  @override\n  get reentermpin => \"إعادة إدخال MPin\";\n  @override\n  get forgotmpin => \"نسيت MPIN؟\";\n  @override\n  get verifympin => \"تحقق Mpin\";\n  @override\n  get enteryoursixdigitcode => \"أدخل MPIN 6 أرقام\";\n  @override\n  get changempin => \"تغيير MPin\";\n  @override\n  get faceidandtouchnotenable =>\n      \"لم يتم تمكين في هاتفك FaceId / TouchId، الرجاء تمكن من استخدام هذه الميزة\";\n  @override\n  get enablempintounlockmydiamonds =>\n      \"تمكين MPin إلى التطبيق فتح؟ وسوف تعطيل لمسة إيد. هل أنت متأكد أنك تريد المتابعة؟\";\n  @override\n  get enabletouchidtounlockmydiamonds =>\n      \"تمكين اللمس رقم إلى التطبيق فتح؟ وسوف تعطيل MPin. هل أنت متأكد أنك تريد المتابعة؟\";\n  @override\n  get rememberme => \"تذكرنى\";\n  @override\n  get usertouchid => \"استخدام اللمس رقم\";\n  @override\n  get usempin => \"استخدام MPin\";\n  @override\n  get filesarenotavailableonserver =>\n      \"الملفات غير متوفرة على الخادم، الرجاء إعادة المحاولة لاحقا\";\n  @override\n  get allfileshavebeendownloaded => \"تم تحميل جميع الملفات.\";\n  @override\n  get filesisdownloaded => \"يتم تحميل الملفات\";\n  @override\n  get filesisnotdownloadedbcz =>\n      \"لن يتم تحميل الملفات لأنه غير موجود في الملقم.\";\n  @override\n  get downloadingCanceled => \"تحميل إلغاء\";\n  @override\n  get downloading => \"جارى التحميل...\";\n  @override\n  get expirydate => \"تاريخ الانتهاء :\";\n  @override\n  get youreallywanttodelete => \"هل حقا تريد حذف\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"packetNo\": \"حزمة رقم:\",\n    \"shape\": \"شكل\",\n  };\n}\n\nclass ArabicErrorString extends ErrorString {\n  @override\n  get accessDenide => \"تم الرفض\";\n  @override\n  get pleaseSelectOfferTillDate => \"الرجاء تحديد العرض حتى الآن.\";\n  @override\n  get pleaseSelectOfficeVisitDate => \"يرجى اختيار مكتب موعد الزيارة\";\n  @override\n  get deleteStoneMsg => \"هل أنت متأكد أنك تريد حذف الحجر (ق)؟\";\n  @override\n  get acceptTermsAndCondition => \"وتفضلوا بقبول الشروط والأحكام\";\n  @override\n  get diamondCompareRemove => \"ويلزم على الأقل 2 الأحجار للمقارنة.\";\n  @override\n  get diamondSelectionError => \"الرجاء تحديد بحجر واحد على الأقل.\";\n  @override\n  get pleaseEnterCompanyName => \"يرجى إدخال اسم الشركة.\";\n  @override\n  get selectInvoiceDate => \"تحديد تاريخ الفاتورة\";\n  @override\n  get pleaseEnterComment => \"الرجاء إدخال تعليق.\";\n  @override\n  get pleaseEnterRemarks => \"الرجاء إدخال الملاحظات.\";\n  @override\n  get selectExpiryDate => \"يرجى تحديد تاريخ انتهاء الصلاحية.\";\n  @override\n  get enterOTP => \"الرجاء إدخال الرمز\";\n  @override\n  get pleaseEnterOTP => \"الرجاء إدخال رمز التحقق.\";\n  @override\n  get enteredCodeNotMatching => \"كود دخلت ليست مطابقة. حاول مرة أخري\";\n  @override\n  get selectCancellationReason => \"يرجى تحديد سبب الإلغاء\";\n  @override\n  get enterDesc => \"الرجاء إدخال الوصف.\";\n  @override\n  get enterTitle => \"يرجى إدخال عنوان.\";\n  @override\n  get enterEmailOrPhone => \"يرجى إدخال البريد الإلكتروني / المحمول.\";\n  @override\n  get enterPassword =>\n      \"كلمة سر لا يمكن أن يكون فارغا. الرجاء إدخال كلمة المرور.\";\n  @override\n  get enterConfirmPassword => \"الرجاء إدخال تأكيد كلمة المرور.\";\n  @override\n  get enterSkype => \"الرجاء إدخال سكايب.\";\n  @override\n  get enterRegisterCode => \"الرجاء إدخال رمز التسجيل\";\n  @override\n  get enterEmail => \"يرجى إدخال عنوان البريد الإلكتروني.\";\n  @override\n  get enterPhone => \"الرجاء إدخال رقم الجوال.\";\n  @override\n  get enterUsername =>\n      \"اسم المستخدم لا يمكن أن يكون فارغا. الرجاء إدخال اسم المستخدم.\";\n  @override\n  get enterValidEmail => \"الرجاء إدخال عنوان البريد الإلكتروني الصحيح.\";\n  @override\n  get enterValidPhone => \"الرجاء إدخال رقم الجوال صحيح.\";\n  @override\n  get enterValidWhatsappPhone => \"الرجاء إدخال صالح ال WhatsApp رقم الجوال.\";\n  @override\n  get enterValidPassword => \"الرجاء إدخال 6 أحرف أو كلمة المرور طويلة.\";\n  @override\n  get mismatchPassword => \"كلمة المرور وتأكيد كلمة المرور لم يتم مطابقة.\";\n  @override\n  get enterFirstName => \"الرجاء إدخال الاسم الأول.\";\n  @override\n  get enterMiddleName => \"الرجاء إدخال الاسم الأوسط.\";\n  @override\n  get enterPinCode => \"الرجاء إدخال الرقم السري.\";\n  @override\n  get enterName => \"الرجاء إدخال اسم.\";\n  @override\n  get enterLastName => \"الرجاء إدخال اسم العائلة.\";\n  @override\n  get enterAddress => \"يرجى إدخال عنوان.\";\n  @override\n  get enterValidPinCode => \"أدخل الرقم السري صالح.\";\n  @override\n  get enterValidAddress => \"الرجاء إدخال 10 حرفا أو عنوان طويل.\";\n  @override\n  get enterPostalCode => \"الرجاء إدخال الرمز البريدي.\";\n  @override\n  get enterValidPostalCode => \"الرجاء إدخال 6 أرقام الرمز البريدي الرقمية.\";\n  @override\n  get enterCurrentPassword => \"الرجاء إدخال كلمة المرور الحالية.\";\n  @override\n  get enterNewPassword => \"يرجى إدخال كلمة المرور الجديدة.\";\n  @override\n  get enterFareAmount => \"الرجاء إدخال كمية المبيعات.\";\n  @override\n  get enterOrderNO => \"الرجاء إدخال أي نظام.\";\n  @override\n  get enterServiceType => \"يرجى تحديد نوع الخدمة.\";\n  @override\n  get enterPaymentType => \"يرجى تحديد نوع الدفع.\";\n  @override\n  get enterValidFareAmount => \"كمية المبيعات لا يمكن أن يكون صفرا.\";\n  @override\n  get enterPassangerNo => \"الرجاء إدخال رقم الركاب.\";\n  @override\n  get enterValidPassangerNo => \"عدد الركاب لا يمكن أن يكون صفرا.\";\n  @override\n  get notEnterMorePassangerNo =>\n      \"عدد الركاب لا يمكن أن يكون أكثر من سبع سنوات.\";\n  @override\n  get drivingLicenseValidationText =>\n      \"الرجاء إدخال 15 أرقام أبجدية القيادة رقم الترخيص.\";\n  @override\n  get pANCardValidationText => \"الرجاء إدخال 10 أرقام أبجدية رقم بطاقة PAN.\";\n  @override\n  get selectFromDate => \"الرجاء تحديد من تاريخ\";\n  @override\n  get selectToDate => \"الرجاء تحديد حتى الآن\";\n  @override\n  get fromGreaterTo => \"يجب أن يكون التاريخ المحدد أكبر من التاريخ الحالي\";\n  @override\n  get wrongPassword =>\n      \"يحتوي كلمة لا بد منه، والحد الأدنى 8 أحرف، 1 الأبجدية الكبيرة (1)، أقل حالة الأبجدية، الرقم 1، 1 charater خاص\";\n  @override\n  get fromValueGreateThanTo => \"من القيمة يجب أن تكون أقل من أو يساوي قيمة ل\";\n  @override\n  get toValueGreaterThanFrom =>\n      \"إلى القيمة يجب أن يكون أكبر من أو يساوي من قيمة\";\n  @override\n  get pleaseEnterCompanyCode => \"الرجاء إدخال رمز الشركة\";\n  @override\n  get enterSamePassword =>\n      \"لا يتطابق مع تأكيد كلمة المرور مع كلمة المرور الجديدة. الرجاء إدخال تأكيد كلمة المرور نفس كلمة المرور الجديدة.\";\n  @override\n  get selectAppointmentDate => \"يرجى تحديد تاريخ التعيين\";\n  @override\n  get selectTimeSlot => \"الرجاء تحديد فتحة وقت\";\n  @override\n  get enterComments => \"الرجاء إدخال تعليق\";\n  @override\n  get selectVirtualType => \"يرجى تحديد نوع الظاهري\";\n  @override\n  get versionError => \"خطأ نسخة\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ArabicNoDataStrings extends NoDataStrings {\n  @override\n  get noDataFound => \"لا يوجد سجلات\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ArabicScreenTitle extends ScreenTitle {\n  @override\n  get placeAnOffer => \"وضع العرض\";\n  @override\n  get addedInWatchList => \"وأضاف في قائمة الرغبات\";\n  @override\n  get addedInOffer => \"العرض المقدم\";\n  @override\n  get addedInCart => \"وأضاف في العربة\";\n  @override\n  get addedInBid => \"وأضاف في المزايدة\";\n  @override\n  get myEnquiry => \"بلدي رسالتك\";\n  @override\n  get delete => \"حذف\";\n  @override\n  get addDemand => \"إضافة الطلب\";\n  @override\n  get matchPair => \"مباراة زوج\";\n  @override\n  get savedAndSearch => \"حفظ البحث\";\n  @override\n  get updateAndSearch => \"تحديث والبحث\";\n  @override\n  get upcoming => \"القادمة\";\n  @override\n  get bidPricePerCt => \"سعر العرض / ط م\";\n  @override\n  get bidDisc => \"محاولة القرص\";\n  @override\n  get bidValue => \"المزايدة القيمة\";\n  @override\n  get bidStone => \"محاولة ستون\";\n  @override\n  get myCart => \"سلتي\";\n  @override\n  get myComment => \"ملاحظاتي\";\n  @override\n  get compare => \"قارن\";\n  @override\n  get compareStones => \"الأحجار قارن\";\n  @override\n  get statusHold => \"في الانتظار\";\n  @override\n  get statusOnMemo => \"على مذكرة\";\n  @override\n  get statusAvailable => \"متاح\";\n  @override\n  get statusNew => \"قادم جديد\";\n  @override\n  get statusOffer => \"حجر من اليوم / الترويج\";\n  @override\n  get statusMyHold => \"بلدي الانتظار\";\n  @override\n  get signup => \"سجل\";\n  @override\n  get addToOffice => \"إضافة مكتب ل\";\n  @override\n  get addComment => \"أضف تعليق\";\n  @override\n  get addEnquiry => \"إضافة رسالتك\";\n  @override\n  get finalOffer => \"العرض الأخير\";\n  @override\n  get finalDisc => \"القرص النهائي\";\n  @override\n  get finalRate => \"تقييم النهائي\";\n  @override\n  get finalValue => \"القيمة النهائية\";\n  @override\n  get orderMsg =>\n      \"1 المذكورة أسعار أكثر من هنا وثابتة، وبالتالي غير قابلة للتفاوض. \\\\ N2 والدرجات، وذكرت المعلمات على موقعنا على الانترنت وراء تصنيف GIA ل.\";\n  @override\n  get offerMsg =>\n      \"ومباشرة تأكيد الحجر إذا عرضت يحصل على الموافقة على السعر لذلك نحن نطلب من سيادتكم التأكد قبل الطرح. لا يتم الاحتفاظ أي الحجر (ق) وضعت في قائمة عرض في الانتظار بالنسبة لك كما هو متاح للعملاء الآخرين أيضا.\";\n  @override\n  get note => \"ملحوظة\";\n  @override\n  get hours => \"ساعات\";\n  @override\n  get offeredDisc => \"ديس المقدمة\";\n  @override\n  get offeredPriceCt => \"عرضت العلاقات العامة / ط م\";\n  @override\n  get addOffer => \"إضافة عرض\";\n  @override\n  get expDiscPer => \"الخصم المتوقع\";\n  @override\n  get todayDiscPer => \"قرص اليوم\";\n  @override\n  get searchResult => \"نتيجة البحث\";\n  @override\n  get searchDiamond => \"البحث الماس\";\n  @override\n  get basic => \"الأساسي\";\n  @override\n  get advanced => \"المتقدمة\";\n  @override\n  get stoneIdCertNo => \"StoneID / سيرت لا\";\n  @override\n  get takeSignature => \"خذ التوقيع\";\n  @override\n  get optional => \"اختياري\";\n  @override\n  get myAddress => \"عنواني\";\n  @override\n  get expiryDate => \"تاريخ الانتهاء\";\n  @override\n  get drivingLicenceDesc => \"القيادة الصورة الترخيص الخاص بك\";\n  @override\n  get panDesc => \"PAN الصورة بطاقتك\";\n  @override\n  get selfie => \"صورة شخصية\";\n  @override\n  get selfieDesc => \"الصورة صورك الشخصية\";\n  @override\n  get pending => \"قيد الانتظار\";\n  @override\n  get rejected => \"مرفوض\";\n  @override\n  get uploadAgain => \"رفع\";\n  @override\n  get remove => \"إزالة\";\n  @override\n  get title => \"عنوان\";\n  @override\n  get description => \"وصف\";\n  @override\n  get uploadYour => \"حمل سيرتك\";\n  @override\n  get raiseDispute => \"اخبرنا عنها\";\n  @override\n  get drivingLicense => \"رخصة قيادة\";\n  @override\n  get pANCard => \"بطاقة الطعام\";\n  @override\n  get saveContinue => \"حفظ ومتابعة\";\n  @override\n  get uploadFrontUmgText => \"تحميل الأمامي صورة\";\n  @override\n  get uploadPANCardImgText => \"تحميل بطاقة PAN صورة\";\n  @override\n  get uploadBackImageText => \"تحميل الجانب الخلفي صورة\";\n  @override\n  get helptopic => \"مواضيع التعليمات\";\n  @override\n  get newRideSharingRequest => \"طلبات جديدة ركوب مشاركة\";\n  @override\n  get newRequest => \"طلبات جديدة\";\n  @override\n  get welcomeTo => \"مرحبا بك في\";\n  @override\n  get welcomeDesc => \"تسجيل الدخول إلى حسابك الحالي ماني جوهرة\";\n  @override\n  get forgotPassword => \"نسيت\";\n  @override\n  get forgotPasswordDesc =>\n      \"أدخل رقم الجوال المسجل لاستعادة كلمة السر الخاصة بك.\";\n  @override\n  get termsAndCondition => \"البنود و الظروف\";\n  @override\n  get privacyPolicy => \"سياسة الخصوصية\";\n  @override\n  get aboutUS => \"معلومات عنا\";\n  @override\n  get otpVerification => \"التحقق من كود ركوب\";\n  @override\n  get otpVerificationDelivery => \"التحقق من شفرة بيك اب\";\n  @override\n  get otpVerificationDeliveryDone => \"التحقق من كود تسليم\";\n  @override\n  get enterOtp => \"أدخل 4 أرقام\";\n  @override\n  get recoveryCode => \"رمز الاسترداد\";\n  @override\n  get editProfile => \"تعديل الملف الشخصي\";\n  @override\n  get myProfile => \"ملفي\";\n  @override\n  get reset => \"إعادة تعيين\";\n  @override\n  get yourPassword => \"كلمة السر خاصتك\";\n  @override\n  get photo => \"صورة فوتوغرافية\";\n  @override\n  get otpDesc =>\n      \"تم إرسال رمز الاسترداد إلى رقم هاتفك المحمول. الرجاء إدخال الرمز.\";\n  @override\n  get otpVerifyDesc =>\n      \"تم إرسال رمز التحقق إلى رقم هاتفك المحمول. الرجاء إدخال الرمز.\";\n  @override\n  get diamondDetail => \"الماس التفاصيل\";\n  @override\n  get home => \"الصفحة الرئيسية\";\n  @override\n  get search => \"بحث\";\n  @override\n  get quickSearch => \"بحث سريع\";\n  @override\n  get newArrival => \"قادم جديد\";\n  @override\n  get exclusiveDiamonds => \"الماس الحصرية\";\n  @override\n  get diamondOnAuction => \"الماس في مزاد\";\n  @override\n  get stoneOfTheDays => \"افضل شراء\";\n  @override\n  get myWatchlist => \"بلدي قائمة الرغبات\";\n  @override\n  get myBid => \"بلدي المزايدة\";\n  @override\n  get myHold => \"بلدي الانتظار\";\n  @override\n  get myOrder => \"بلدي قائمة أمرت\";\n  @override\n  get confirmStone => \"ستون تأكيد\";\n  @override\n  get myOffice => \"مكتبي مشاهدة\";\n  @override\n  get myOffer => \"بلدي قائمة المنتجات\";\n  @override\n  get myPurchased => \"بلدي التاريخ شراؤها\";\n  @override\n  get mySavedSearch => \"بلدي بحث محفوظ\";\n  @override\n  get savedSearch => \"بحث محفوظ\";\n  @override\n  get myDemand => \"بلدي الطلب\";\n  @override\n  get contactUs => \"اتصل بنا\";\n  @override\n  get changePassword => \"غير كلمة السر\";\n  @override\n  get logout => \"تسجيل خروج\";\n  @override\n  get fareDetailsTitle => \"أدخل تفاصيل المبيعات\";\n  @override\n  get fairAmt => \"مبيعات المبلغ\";\n  @override\n  get noOfPassengers => \"عدد الركاب\";\n  @override\n  get remarks => \"ملاحظات\";\n  @override\n  get orderNo => \"الأمر رقم\";\n  @override\n  get typeOfService => \"نوع الخدمة\";\n  @override\n  get paymentType => \"نوع الدفع*\";\n  @override\n  get recentlyView => \"مؤخرا عرض\";\n  @override\n  get uploadImgValidationText =>\n      \"يجب أن يكون إيداع الملف. jpg أو JPEG أو بابوا نيو غينيا أو قوات الدفاع الشعبي وجود حجم 5 ميغا بايت أو أقل.\";\n  @override\n  get drivingLicenseHintText => \"القيادة رقم الرخصة\";\n  @override\n  get pANCARDHintText => \"PAN رقم البطاقة\";\n  @override\n  get viewRide => \"عرض ركوب الخيل\";\n  @override\n  get myVehicle => \"سيارتي\";\n  @override\n  get personalDocument => \"مستندات شخصية\";\n  @override\n  get help => \"مساعدة\";\n  @override\n  get about => \"حول\";\n  @override\n  get bankDetails => \"التفاصيل المصرفية\";\n  @override\n  get accountAndPayment => \"الحساب والدفع\";\n  @override\n  get enquiry => \"تحقيق\";\n  @override\n  get download => \"تحميل\";\n  @override\n  get addToCart => \"أضف إلى السلة\";\n  @override\n  get addToWatchList => \"أضافة إلى قائمة المشاهدة\";\n  @override\n  get finalCalculation => \"حساب النهائي\";\n  @override\n  get bookOffice => \"مكتب كتاب\";\n  @override\n  get clearSelection => \"مسح التحديد\";\n  @override\n  get comment => \"تعليقات\";\n  @override\n  get hold => \"معلق\";\n  @override\n  get offer => \"عرض\";\n  @override\n  get officeView => \"مكتب مشاهدة\";\n  @override\n  get placeOrder => \"مكان الامر\";\n  @override\n  get buyNow => \"اشتري الآن\";\n  @override\n  get cancelStone => \"إلغاء الحجر\";\n  @override\n  get share => \"شارك\";\n  @override\n  get watchlist => \"قائمة الرغبات\";\n  @override\n  get exclusive => \"حصرية\";\n  @override\n  get featuredStones => \"احجار مميزة\";\n  @override\n  get stoneOfDay => \"حجارة يوم\";\n  @override\n  get recentSearch => \"البحث الأخيرة\";\n  @override\n  get viewAll => \"عرض جميع\";\n  @override\n  get salesPersonDetail => \"شخص المبيعات التفاصيل\";\n  @override\n  get searchTitle => \"عنوان البحث\";\n  @override\n  get enterSearchTitle => \"أدخل عنوان البحث\";\n  @override\n  get timeSlots => \"فتحات الوقت\";\n  @override\n  get selectCustomDate => \"تحديد موعد مخصص\";\n  @override\n  get availableSlot => \"فتحات متاحة\";\n  @override\n  get reqOfficeView => \"طلب مكتب مشاهدة\";\n  @override\n  get myComments => \"تعليقي\";\n  @override\n  get myReminder => \"بلدي تذكير\";\n  @override\n  get reminder => \"تذكير\";\n  @override\n  get manageAddress => \"إدارة العناوين\";\n  @override\n  get myAccount => \"حسابي\";\n  @override\n  get declaimer => \"تنصل\";\n  @override\n  get shareStone => \"حصة ستون\";\n  @override\n  get addRemider => \"إضافة تذكير\";\n  @override\n  get offlineSearch => \"غير متصل البحث\";\n  @override\n  get searchHistory => \"عمليات البحث السابقة\";\n  @override\n  get offlineStock => \"الأسهم حاليا\";\n  @override\n  get searchOffline => \"بحث (غير متصل)\";\n  @override\n  get voiceSearch => \"البحث الصوتي\";\n  @override\n  get tapMictoSpeak => \"اضغط هيئة التصنيع العسكري في الكلام\";\n  @override\n  get typeToSearch => \"اكتب للبحث\";\n  @override\n  get typeWordsToSearch => \"اكتب على الأقل 3 كلمات للبحث الحجارة\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {};\n}\n\nclass ArabicDynamickeys extends Dynamickeys {\n  @override\n  get shape => \"شكل\";\n  @override\n  get caratRange => \"المدى قيراط\";\n  @override\n  get basicDetail => \"تفاصيل أساسية\";\n  @override\n  get measurementTitle => \"قياسات\";\n  @override\n  get inclusionDetail => \"تفاصيل إدراج\";\n  @override\n  get other => \"آخر\";\n  @override\n  get stoneID => \"ID الحجر\";\n  @override\n  get labTitle => \"مختبر\";\n  @override\n  get certNo => \"Cert. لا.\";\n  @override\n  get locationTitle => \"موقعك\";\n  @override\n  get shapeTitle => \"شكل\";\n  @override\n  get caratTitle => \"قيراط\";\n  @override\n  get colorTitle => \"اللون\";\n  @override\n  get clarityTitle => \"وضوح\";\n  @override\n  get cutTitle => \"يقطع\";\n  @override\n  get polishTitle => \"تلميع\";\n  @override\n  get symmentryTitle => \"Symmentry\";\n  @override\n  get fluorescenceTitle => \"ضوئي\";\n  @override\n  get rapTitle => \"موسيقى الراب (٪)\";\n  @override\n  get discountTitle => \"خصم (٪)\";\n  @override\n  get priceAndCt => \"السعر / ط م\";\n  @override\n  get amountTitle => \"كمية\";\n  @override\n  get eyeCleanTitle => \"العين النظيفة\";\n  @override\n  get brownTitle => \"بنى\";\n  @override\n  get milkyTitle => \"حليبي\";\n  @override\n  get mixTingeTitle => \"MIX مسحة\";\n  @override\n  get dimensionTitle => \"الأبعاد (MM)\";\n  @override\n  get girdleTitle => \"حزام (٪)\";\n  @override\n  get tableTitle => \"الطاولة ٪\";\n  @override\n  get crownAngleTitle => \"تاج زاوية\";\n  @override\n  get depthTitle => \"٪ العمق\";\n  @override\n  get pavAngleTitle => \"Pav Angle\";\n  @override\n  get crownHeightTitle => \"ولي العهد الارتفاع (٪)\";\n  @override\n  get pavDepthTitle => \"عمق جناح (٪)\";\n  @override\n  get starLengthTitle => \"نجمة طول\";\n  @override\n  get lowerHalfTitle => \"النصف السفلي\";\n  @override\n  get gridleTitle => \"حزام\";\n  @override\n  get gridleFacetedTitle => \"حزام الأوجه\";\n  @override\n  get culetTitle => \"Culet\";\n  @override\n  get rationTitle => \"نسبة\";\n  @override\n  get blackInclusionTitle => \"إدراج أسود\";\n  @override\n  get otherInclusionTitle => \"إدراج الآخرين\";\n  @override\n  get openInclusionTitle => \"إدراج المفتوح\";\n  @override\n  get extraFacetTitle => \"FACET اكسترا\";\n  @override\n  get naturalTitle => \"طبيعي >> صفة\";\n  @override\n  get hAndATitle => \"H & A\";\n  @override\n  get keyToSymbol => \"KEY TO SYMBOL\";\n  @override\n  get labComments => \"تعليقات LAB\";\n  @override\n  get laserInsTitle => \"LASER INS\";\n  @override\n  get basicTitle => \"الأساسي\";\n  @override\n  get advancedTitle => \"المتقدمة\";\n  @override\n  get stoneIdTitle => \"حجر ID / سيرت لا\";\n  @override\n  get defaultTitle => \"إفتراضي\";\n  @override\n  get newDiamondsTitle => \"الماس جديدة\";\n  @override\n  get priceLowToHigh => \"السعر من الارخص للاعلى\";\n  @override\n  get priceHighToLow => \"السعر الاعلى الى الادنى\";\n  @override\n  get disLowToHigh => \"خصم الأدنى إلى الأعلى\";\n  @override\n  get disHighToLow => \"خصم الاعلى الى الادنى\";\n  @override\n  get colorLowToHigh => \"اللون الأدنى إلى الأعلى\";\n  @override\n  get colorHighToLow => \"اللون من الأعلى إلى الأقل\";\n  @override\n  get caratLowToHigh => \"قيراط الأدنى إلى الأعلى\";\n  @override\n  get caratHighToLow => \"قيراط الاعلى الى الادنى\";\n  @override\n  get clarityLowToHigh => \"وضوح الأدنى إلى الأعلى\";\n  @override\n  get clarityHighToLow => \"وضوح الاعلى الى الادنى\";\n  @override\n  get colorShadeTitle => \"لون الظل\";\n  @override\n  get certiTitle => \"رقم شهادة\";\n  @override\n  get arrivalsTitle => \"الوصول\";\n  @override\n  get lengthTitle => \"الطول\";\n  @override\n  get widthTitle => \"عرض\";\n  @override\n  get pavilionAngleTitle => \"جناح زاوية\";\n  @override\n  get girdleConditionTitle => \"حزام الحالة\";\n  @override\n  get cluetConditionTitle => \"Culet الحالة\";\n  @override\n  get disTitle => \"ديس٪\";\n  @override\n  get depthTitleWithoutPerc => \"عمق\";\n  @override\n  get otherInformationTitle => \"#ERROR!\";\n  String byKey(String key) => _dynamicValues[key];\n  Map<String, String> _dynamicValues = {\n    \"shape\": \"شكل\",\n    \"caratRange\": \"المدى قيراط\",\n    \"basicDetail\": \"تفاصيل أساسية\",\n    \"measurementTitle\": \"قياسات\",\n    \"inclusionDetail\": \"تفاصيل إدراج\",\n    \"other\": \"آخر\",\n    \"stoneID\": \"ID الحجر\",\n    \"labTitle\": \"مختبر\",\n    \"certNo\": \"Cert. لا.\",\n    \"locationTitle\": \"موقعك\",\n    \"caratTitle\": \"قيراط\",\n    \"colorTitle\": \"اللون\",\n    \"clarityTitle\": \"وضوح\",\n    \"cutTitle\": \"يقطع\",\n    \"polishTitle\": \"تلميع\",\n    \"symmentryTitle\": \"Symmentry\",\n    \"fluorescenceTitle\": \"ضوئي\",\n    \"rapTitle\": \"موسيقى الراب (٪)\",\n    \"discountTitle\": \"خصم (٪)\",\n    \"priceAndCt\": \"السعر / ط م\",\n    \"amountTitle\": \"كمية\",\n    \"eyeCleanTitle\": \"العين النظيفة\",\n    \"brownTitle\": \"بنى\",\n    \"milkyTitle\": \"حليبي\",\n    \"mixTingeTitle\": \"MIX مسحة\",\n    \"dimensionTitle\": \"الأبعاد (MM)\",\n    \"girdleTitle\": \"حزام (٪)\",\n    \"tableTitle\": \"الطاولة ٪\",\n    \"crownAngleTitle\": \"تاج زاوية\",\n    \"depthTitle\": \"٪ العمق\",\n    \"pavAngleTitle\": \"Pav Angle\",\n    \"crownHeightTitle\": \"ولي العهد الارتفاع (٪)\",\n    \"pavDepthTitle\": \"عمق جناح (٪)\",\n    \"starLengthTitle\": \"نجمة طول\",\n    \"lowerHalfTitle\": \"النصف السفلي\",\n    \"gridleTitle\": \"حزام\",\n    \"gridleFacetedTitle\": \"حزام الأوجه\",\n    \"culetTitle\": \"Culet\",\n    \"rationTitle\": \"نسبة\",\n    \"blackInclusionTitle\": \"إدراج أسود\",\n    \"otherInclusionTitle\": \"إدراج الآخرين\",\n    \"openInclusionTitle\": \"إدراج المفتوح\",\n    \"extraFacetTitle\": \"FACET اكسترا\",\n    \"naturalTitle\": \"طبيعي >> صفة\",\n    \"hAndATitle\": \"H & A\",\n    \"keyToSymbol\": \"KEY TO SYMBOL\",\n    \"labComments\": \"تعليقات LAB\",\n    \"laserInsTitle\": \"LASER INS\",\n    \"basicTitle\": \"الأساسي\",\n    \"advancedTitle\": \"المتقدمة\",\n    \"stoneIdTitle\": \"حجر ID / سيرت لا\",\n    \"defaultTitle\": \"إفتراضي\",\n    \"newDiamondsTitle\": \"الماس جديدة\",\n    \"priceLowToHigh\": \"السعر من الارخص للاعلى\",\n    \"priceHighToLow\": \"السعر الاعلى الى الادنى\",\n    \"disLowToHigh\": \"خصم الأدنى إلى الأعلى\",\n    \"disHighToLow\": \"خصم الاعلى الى الادنى\",\n    \"colorLowToHigh\": \"اللون الأدنى إلى الأعلى\",\n    \"colorHighToLow\": \"اللون من الأعلى إلى الأقل\",\n    \"caratLowToHigh\": \"قيراط الأدنى إلى الأعلى\",\n    \"caratHighToLow\": \"قيراط الاعلى الى الادنى\",\n    \"clarityLowToHigh\": \"وضوح الأدنى إلى الأعلى\",\n    \"clarityHighToLow\": \"وضوح الاعلى الى الادنى\",\n    \"colorShadeTitle\": \"لون الظل\",\n    \"certiTitle\": \"رقم شهادة\",\n    \"arrivalsTitle\": \"الوصول\",\n    \"lengthTitle\": \"الطول\",\n    \"widthTitle\": \"عرض\",\n    \"pavilionAngleTitle\": \"جناح زاوية\",\n    \"girdleConditionTitle\": \"حزام الحالة\",\n    \"cluetConditionTitle\": \"Culet الحالة\",\n    \"disTitle\": \"ديس٪\",\n    \"depthTitleWithoutPerc\": \"عمق\",\n    \"otherInformationTitle\": \"#ERROR!\",\n  };\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/app/localization/app_locales.g.dart b/lib/app/localization/app_locales.g.dart
--- a/lib/app/localization/app_locales.g.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/app/localization/app_locales.g.dart	(date 1635233579394)
@@ -769,7 +769,7 @@
   String stoneOfDay = "Best Buy";
   String recentSearch = "Recent Search";
   String viewAll = "View All";
-  String salesPersonDetail = "Sales Person Detail";
+  String salesPersonDetail = "Sales Detail";
   String searchTitle = "Search Title";
   String enterSearchTitle = "Enter Search Title";
   String timeSlots = "Time Slots";
Index: lib/components/Screens/DashBoard/Dashboard.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:collection';\nimport 'dart:io';\n\nimport 'package:carousel_slider/carousel_slider.dart';\nimport 'package:diamnow/app/Helper/SyncManager.dart';\nimport 'package:diamnow/app/app.export.dart';\nimport 'package:diamnow/app/localization/app_locales.dart';\nimport 'package:diamnow/app/network/NetworkCall.dart';\nimport 'package:diamnow/app/network/ServiceModule.dart';\nimport 'package:diamnow/app/utils/AnalyticsReport.dart';\nimport 'package:diamnow/app/utils/BaseDialog.dart';\nimport 'package:diamnow/app/utils/CustomDialog.dart';\nimport 'package:diamnow/app/utils/ImageUtils.dart';\nimport 'package:diamnow/app/utils/date_utils.dart';\nimport 'package:diamnow/app/utils/price_utility.dart';\nimport 'package:diamnow/components/CommonWidget/OverlayScreen.dart';\nimport 'package:diamnow/components/Screens/Auth/Widget/MyAccountScreen.dart';\nimport 'package:diamnow/components/Screens/DashBoard/Widget/FeaturedStone.dart';\nimport 'package:diamnow/components/Screens/DashBoard/Widget/RecentSearch.dart';\nimport 'package:diamnow/components/Screens/DashBoard/Widget/StonesOfDay.dart';\nimport 'package:diamnow/components/Screens/DiamondDetail/DiamondDetailScreen.dart';\nimport 'package:diamnow/components/Screens/DiamondList/DiamondListScreen.dart';\nimport 'package:diamnow/components/Screens/Notification/Notifications.dart';\nimport 'package:diamnow/components/Screens/SavedSearch/SavedSearchScreen.dart';\nimport 'package:diamnow/components/Screens/Search/Search.dart';\nimport 'package:diamnow/components/widgets/BaseStateFulWidget.dart';\nimport 'package:diamnow/models/AnalyticsModel/AnalyticsModel.dart';\nimport 'package:diamnow/models/Dashboard/DashboardModel.dart';\nimport 'package:diamnow/models/Dashbord/DashBoardConfigModel.dart';\nimport 'package:diamnow/models/DiamondList/DiamondConfig.dart';\nimport 'package:diamnow/models/DiamondList/DiamondConstants.dart';\nimport 'package:diamnow/models/FilterModel/BottomTabModel.dart';\nimport 'package:diamnow/models/SavedSearch/SavedSearchModel.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:flutter/widgets.dart';\nimport 'package:flutter_slidable/flutter_slidable.dart';\nimport 'package:flutter_spinkit/flutter_spinkit.dart';\nimport 'package:pull_to_refresh/pull_to_refresh.dart';\nimport 'package:url_launcher/url_launcher.dart';\nimport 'package:webview_flutter/webview_flutter.dart';\n\nclass Dashboard extends StatefulScreenWidget {\n  static const route = \"Dashboard\";\n\n  String filterId = \"\";\n  int moduleType = DiamondModuleConstant.MODULE_TYPE_HOME;\n  bool isFromDrawer = false;\n\n  Dashboard(\n    Map<String, dynamic> arguments, {\n    Key key,\n  }) : super(key: key) {\n    if (arguments != null) {\n      if (arguments[ArgumentConstant.ModuleType] != null) {\n        moduleType = arguments[ArgumentConstant.ModuleType];\n      }\n      if (arguments[ArgumentConstant.IsFromDrawer] != null) {\n        isFromDrawer = arguments[ArgumentConstant.IsFromDrawer];\n      }\n    }\n  }\n\n  @override\n  _DashboardState createState() => _DashboardState(\n        moduleType: moduleType,\n        isFromDrawer: isFromDrawer,\n      );\n}\n\nclass _DashboardState extends StatefulScreenWidgetState {\n  int moduleType;\n  bool isFromDrawer;\n  bool isLoading = true;\n  DiamondConfig diamondConfig;\n  DashboardConfig dashboardConfig;\n  String emailURL;\n  AnalyticsReq req = new AnalyticsReq();\n\n  final TextEditingController _searchController = TextEditingController();\n  var _focusSearch = FocusNode();\n\n  DashboardModel dashboardModel;\n  AdminDashboardModel admindashboardModel;\n\n  _DashboardState({this.moduleType, this.isFromDrawer});\n\n  RefreshController refreshController = RefreshController(initialRefresh: false);\n\n  final searchKey = new GlobalKey();\n  final savedSearchKey = new GlobalKey();\n  final sellerKey = new GlobalKey();\n\n  @override\n  void initState() {\n    super.initState();\n    diamondConfig = DiamondConfig(moduleType);\n    diamondConfig.initItems();\n\n    dashboardConfig = DashboardConfig();\n    dashboardConfig.initItems();\n    if (app.resolve<PrefUtils>().getDashboardDetails() != null) {\n      dashboardModel = app.resolve<PrefUtils>().getDashboardDetails();\n    }\n    callApiForDashboard(false);\n    if (dashboardModel != null) {\n      print(this.dashboardModel.toJson().toString());\n    }\n  }\n\n  callApiForDashboard(bool isRefress, {bool isLoading = false}) {\n    Map<String, dynamic> dict = {};\n\n    dict[\"savedSearch\"] = true;\n    dict[\"recentSearch\"] = true;\n    dict[\"recentActivity\"] = true;\n    dict[\"track\"] = true;\n    dict[\"dashboardCount\"] = true;\n    dict[\"seller\"] = true;\n    dict[\"account\"] = true;\n    dict[\"featuredStone\"] = true;\n    dict[\"newArrival\"] = true;\n    dict[\"banners\"] = true;\n    print(dict);\n    NetworkCall<DashboardResp>()\n        .makeCall(() => app.resolve<ServiceModule>().networkService().dashboard(dict), context,\n            isProgress: false)\n        // !isRefress && !isLoading\n        .then((resp) {\n      this.dashboardModel = resp.data;\n      app\n          .resolve<PrefUtils>()\n          .saveDashboardDetails(dashboardModel)\n          .then((value) => setState(() {}));\n//      setState(() {\n////\n////        if (!isNullEmptyOrFalse(this.dashboardModel.seller)) {\n////          emailURL = this.dashboardModel.seller.email;\n////        }\n////        setTopCountData();\n//     //\n//        print(\n//            \"-----------------------------------${app.resolve<PrefUtils>().getDashboardDetails().seller.lastName}\");\n//      });\n    }).catchError((onError) {\n      if (onError is ErrorResp) {\n        app.resolve<CustomDialogs>().confirmDialog(\n              context,\n              desc: onError.message,\n              positiveBtnTitle: R.string.commonString.btnTryAgain,\n            );\n      }\n    });\n  }\n\n  setTopCountData() {\n    for (var item in dashboardConfig.arrTopSection) {\n      if (item.type == DiamondModuleConstant.MODULE_TYPE_MY_CART) {\n        item.value =\n            \"${this.dashboardModel.tracks[DiamondTrackConstant.TRACK_TYPE_CART.toString()].pieces}\";\n      } else if (item.type == DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST) {\n        item.value =\n            \"${this.dashboardModel.tracks[DiamondTrackConstant.TRACK_TYPE_WATCH_LIST.toString()].pieces}\";\n      } else if (item.type == DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL) {\n        if (!isNullEmptyOrFalse(this.dashboardModel)) {\n          if (!isNullEmptyOrFalse(this.dashboardModel.newArrival)) {\n            item.value = this.dashboardModel.newArrival.length.toString();\n          }\n        }\n      } else if (item.type == DiamondModuleConstant.MODULE_TYPE_STONE_OF_THE_DAY) {\n        //TRACK_TYPE_BEST_BUY\n        item.value =\n            \"${this.dashboardModel.tracks[DiamondTrackConstant.TRACK_TYPE_BEST_BUY.toString()].pieces}\";\n        // if (!isNullEmptyOrFalse(this.dashboardModel)) {\n        //   if (!isNullEmptyOrFalse(this.dashboardModel.featuredStone)) {\n        //     item.value = this.dashboardModel.featuredStone.length.toString();\n        //   }\n        // }\n      }\n    }\n  }\n\n  List<Widget> getToolbarItem() {\n    List<Widget> list = [];\n    diamondConfig.toolbarList.forEach((element) {\n      list.add(GestureDetector(\n        onTap: () {\n          manageToolbarClick(element);\n        },\n        child: (element.code == BottomCodeConstant.TBProfile)\n            ? Padding(\n                padding: EdgeInsets.only(left: getSize(8.0), right: getSize(Spacing.rightPadding)),\n                child: Container(\n                  width: getSize(30),\n                  height: getSize(30),\n                  margin: EdgeInsets.only(top: getSize(16), bottom: getSize(16)),\n                  child: Center(\n                    child: ClipRRect(\n                      borderRadius: BorderRadius.all(Radius.circular(getSize(15))),\n                      child: getImageView(\n                        app.resolve<PrefUtils>().getUserDetails().profileImage,\n                        placeHolderImage: placeHolder,\n                        height: getSize(30),\n                        width: getSize(30),\n                        fit: BoxFit.fitHeight,\n                      ),\n                    ),\n                  ),\n                ),\n              )\n            : (element.code == BottomCodeConstant.TBNotification)\n                ? InkWell(\n                    onTap: () {\n                      NavigationUtilities.pushRoute(\n                        Notifications.route,\n                      );\n                      AnalyticsReport.shared.sendAnalyticsData(\n                        buildContext: context,\n                        action: ActionAnalytics.CLICK,\n                        page: PageAnalytics.NOTIFICATION,\n                        section: SectionAnalytics.VIEW,\n                      );\n                    },\n                    child: Padding(\n                        padding: EdgeInsets.all(getSize(8.0)),\n                        child: Center(\n                          child: Stack(\n                            children: [\n                              Image.asset(\n                                element.image,\n                                height: getSize(24),\n                                width: getSize(24),\n                                color: appTheme.whiteColor,\n                              ),\n                              Padding(\n                                padding: EdgeInsets.only(left: getSize(14.0), top: getSize(0.0)),\n                                child: Container(\n                                  decoration: BoxDecoration(\n                                    color: Colors.red,\n                                    shape: BoxShape.circle,\n                                    // borderRadius: BorderRadius.circular(getSize(5)),\n                                    border:\n                                        Border.all(color: appTheme.whiteColor, width: getSize(2)),\n                                  ),\n                                  height: getSize(10),\n                                  width: getSize(10),\n                                ),\n                              ),\n                            ],\n                          ),\n                        )),\n                  )\n                : Padding(\n                    padding: EdgeInsets.all(getSize(8.0)),\n                    child: Image.asset(\n                      element.image,\n                      height: getSize(20),\n                      width: getSize(20),\n                    ),\n                  ),\n      ));\n    });\n    return list;\n  }\n\n  manageToolbarClick(BottomTabModel model) {\n    switch (model.code) {\n      case BottomCodeConstant.TBNotification:\n// go to notification\n        break;\n      case BottomCodeConstant.TBProfile:\n        // Go to Profile\n        openProfile();\n        break;\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    if (dashboardModel != null) {\n      print(this.dashboardModel.toJson().toString());\n    }\n    //getHomeSliderImage(HOME_CENTRE);\n    return GestureDetector(\n      onTap: () {\n        FocusScope.of(context).unfocus();\n      },\n      child: Stack(\n        children: [\n          Scaffold(\n            backgroundColor: appTheme.whiteColor,\n            appBar: getAppBar(\n              context,\n              diamondConfig.getScreenTitle(),\n              bgColor: appTheme.colorPrimary,\n              leadingButton:\n                  isFromDrawer ? getDrawerButton(context, false) : getBackButton(context),\n              centerTitle: false,\n              actionItems: getToolbarItem(),\n              isWhite: true,\n            ),\n            // bottomNavigationBar: getBottomTab(),\n            body: SafeArea(\n              child: Padding(\n                padding: EdgeInsets.only(\n                  // left: getSize(20),\n                  // right: getSize(20),\n                  top: getSize(0),\n                ),\n                child: SmartRefresher(\n                  header: MaterialClassicHeader(\n                      backgroundColor: AppTheme.of(context).accentColor,\n                      color: AppTheme.of(context).theme.primaryColorLight),\n                  enablePullDown: true,\n                  onRefresh: () {\n                    callApiForDashboard(true);\n                    refreshController.refreshCompleted();\n                    refreshController.loadComplete();\n                  },\n                  controller: refreshController,\n                  child: (this.dashboardModel != null)\n                      ? ListView(\n                          physics: ClampingScrollPhysics(),\n                          children: <Widget>[\n                            //if (dashboardConfig.arrTopSection.length > 0)\n                            // getTopSection(),\n                            getSarchTextField(),\n                            //getFeaturedSection(),\n                            //getStoneOfDaySection(),\n                            buildTopSection(HOME_TOP_CENTRE),\n                            getHomeSliderImage(HOME_CENTRE),\n                            buildTopSection(HOME_BOTTOM_CENTRE),\n                            getSavedSearchSection(),\n                            //getRecentSection(),\n                            getSalesSection(),\n                            SizedBox(\n                              height: getSize(20),\n                            ),\n                          ],\n                        )\n                      : Center(\n                          child: SpinKitFadingCircle(\n                            color: appTheme.colorPrimary,\n                            size: getSize(30),\n                          ),\n                        ),\n                ),\n              ),\n            ),\n          ),\n          showTour(),\n        ],\n      ),\n    );\n  }\n\n  checkTourIsShown() {\n    return (app.resolve<PrefUtils>().isDisplayedTour(PrefUtils().keyHomeTour) == false &&\n        isNullEmptyOrFalse(this.dashboardModel) == false);\n  }\n\n  showTour() {\n    return (app.resolve<PrefUtils>().isDisplayedTour(PrefUtils().keyHomeTour) == false &&\n            isNullEmptyOrFalse(this.dashboardModel) == false)\n        ? OverlayScreen(\n            moduleType,\n            finishTakeTour: () {\n              setState(() {});\n            },\n            scrollIndex: (index) {\n              if (index == 0 || index == 1) {\n                Scrollable.ensureVisible(searchKey.currentContext);\n              } else if (index == 2) {\n                Scrollable.ensureVisible(savedSearchKey.currentContext);\n              } else if (index == 3) {\n                Scrollable.ensureVisible(sellerKey.currentContext);\n              }\n            },\n          )\n        : SizedBox();\n  }\n\n  getSarchTextField() {\n    if (!(app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_searchDiamond)\n        .view)) {\n      return SizedBox();\n    }\n    return Container(\n      color: appTheme.colorPrimary,\n      child: Padding(\n        padding: EdgeInsets.all(\n          getSize(16),\n        ),\n        child: Row(\n          key: checkTourIsShown() ? searchKey : null,\n          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n          children: [\n            Expanded(\n              child: Hero(\n                tag: 'searchTextField',\n                child: Material(\n                  color: appTheme.colorPrimary,\n                  child: Container(\n                    height: getSize(40),\n                    decoration: BoxDecoration(\n                      color: appTheme.colorPrimary,\n                      borderRadius: BorderRadius.circular(getSize(5)),\n                      border: Border.all(color: appTheme.colorPrimary, width: getSize(1)),\n                    ),\n                    child: TextField(\n                      textAlignVertical: TextAlignVertical(y: 1.0),\n                      textInputAction: TextInputAction.done,\n                      focusNode: _focusSearch,\n                      readOnly: true,\n                      autofocus: false,\n                      controller: _searchController,\n                      obscureText: false,\n                      style: appTheme.black16TextStyle,\n                      keyboardType: TextInputType.text,\n                      textCapitalization: TextCapitalization.none,\n                      cursorColor: appTheme.colorPrimary,\n                      inputFormatters: [\n                        WhitelistingTextInputFormatter(new RegExp(alphaRegEx)),\n                        BlacklistingTextInputFormatter(RegExp(RegexForEmoji))\n                      ],\n                      decoration: InputDecoration(\n                        fillColor: fromHex(\"#FFEFEF\"),\n                        enabledBorder: OutlineInputBorder(\n                          borderRadius: BorderRadius.all(Radius.circular(getSize(5))),\n                          borderSide: BorderSide(color: appTheme.dividerColor, width: getSize(1)),\n                        ),\n                        focusedBorder: OutlineInputBorder(\n                          borderRadius: BorderRadius.all(Radius.circular(getSize(5))),\n                          borderSide: BorderSide(color: appTheme.dividerColor, width: getSize(1)),\n                        ),\n                        border: OutlineInputBorder(\n                          borderRadius: BorderRadius.all(Radius.circular(getSize(5))),\n                          borderSide: BorderSide(color: appTheme.dividerColor, width: getSize(1)),\n                        ),\n\n                        hintStyle: appTheme.grey16HintTextStyle.copyWith(\n                          color: appTheme.placeholderColor,\n                        ),\n                        hintText: \"Round 1.0-1.19 D-H-VS\",\n                        labelStyle: TextStyle(\n                          color: appTheme.textColor,\n                          fontSize: getFontSize(16),\n                        ),\n                        // suffix: widget.textOption.postfixWidOnFocus,\n                        suffixIcon: Padding(\n                            padding: EdgeInsets.all(getSize(10)),\n                            child: Image.asset(search, color: appTheme.whiteColor)),\n                      ),\n                      onChanged: (String text) {\n                        //\n                      },\n                      onEditingComplete: () {\n                        //\n                        _focusSearch.unfocus();\n                      },\n                      onTap: () {\n                        Map<String, dynamic> dict = new HashMap();\n                        dict[\"isFromSearch\"] = false;\n                        dict[\"isFromManual\"] = false;\n                        NavigationUtilities.pushRoute(SearchScreen.route, args: dict);\n                      },\n                    ),\n                  ),\n                ),\n              ),\n            ),\n            // InkWell(\n            //   onTap: () {\n            //     NavigationUtilities.pushRoute(VoiceSearch.route);\n            //   },\n            //   child: Padding(\n            //     padding: EdgeInsets.only(\n            //       left: getSize(Spacing.leftPadding),\n            //     ),\n            //     child: Image.asset(\n            //       microphone,\n            //       alignment: Alignment.centerRight,\n            //       width: getSize(26),\n            //       height: getSize(26),\n            //     ),\n            //   ),\n            // )\n          ],\n        ),\n      ),\n    );\n  }\n\n  getTopSection() {\n    return Padding(\n      padding: EdgeInsets.only(\n        left: getSize(Spacing.leftPadding),\n        right: getSize(Spacing.rightPadding),\n      ),\n      child: Column(\n        children: [\n          getSarchTextField(),\n          // Material(\n          //   elevation: 10,\n          //   shadowColor: appTheme.shadowColorWithoutOpacity.withOpacity(0.3),\n          //   borderRadius: BorderRadius.circular(getSize(5)),\n          //   child: Container(\n          //     // height: getSize(200),\n          //     decoration: BoxDecoration(\n          //       color: appTheme.whiteColor,\n          //       borderRadius: BorderRadius.circular(getSize(5)),\n          //     ),\n          //     child: Padding(\n          //       padding: EdgeInsets.all(\n          //         getSize(10),\n          //       ),\n          //       child: GridView.count(\n          //         physics: NeverScrollableScrollPhysics(),\n          //         shrinkWrap: true,\n          //         crossAxisCount: 2,\n          //         childAspectRatio: 2.0,\n          //         mainAxisSpacing: 10,\n          //         crossAxisSpacing: 10,\n          //         children: List.generate(dashboardConfig.arrTopSection.length,\n          //             (index) {\n          //           return getTopSectionGridItem(\n          //               dashboardConfig.arrTopSection[index]);\n          //         }),\n          //       ),\n          //     ),\n          //   ),\n          // ),\n          SizedBox(\n            height: getSize(20),\n          ),\n        ],\n      ),\n    );\n  }\n\n  getTopSectionGridItem(DashbordTopSection model) {\n    return InkWell(\n      onTap: () {\n        if (int.parse(model.value) > 0) {\n          Map<String, dynamic> dict = new HashMap();\n          dict[ArgumentConstant.ModuleType] = model.type;\n          dict[ArgumentConstant.IsFromDrawer] = false;\n          NavigationUtilities.pushRoute(\n            DiamondListScreen.route,\n            type: RouteType.fade,\n            args: dict,\n          );\n        }\n      },\n      child: Container(\n        decoration: BoxDecoration(\n          color: model.bgColor,\n          borderRadius: BorderRadius.circular(getSize(8)),\n        ),\n        child: Row(\n          mainAxisSize: MainAxisSize.max,\n          mainAxisAlignment: MainAxisAlignment.center,\n          crossAxisAlignment: CrossAxisAlignment.center,\n          children: [\n            Container(\n              child: Stack(\n                children: [\n                  Image.asset(model.bgImage, width: getSize(76)),\n                  Align(\n                    alignment: Alignment.center,\n                    child: Padding(\n                      padding: EdgeInsets.only(\n                        left: getSize(14),\n                        bottom: getSize(10),\n                      ),\n                      child: Image.asset(\n                        model.image,\n                        width: getSize(30),\n                        height: getSize(30),\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n            ),\n            Expanded(\n              child: Center(\n                child: Column(\n                  mainAxisAlignment: MainAxisAlignment.center,\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  children: [\n                    Text(\n                      model.value,\n                      style: appTheme.blackNormal18TitleColorblack.copyWith(\n                        color: model.textColor,\n                        fontWeight: FontWeight.w500,\n                      ),\n                    ),\n                    Text(\n                      model.title,\n                      style: appTheme.blackNormal12TitleColorblack.copyWith(\n                        color: model.textColor,\n                        fontWeight: FontWeight.w400,\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n\n  getFeaturedSection() {\n    if (app\n            .resolve<PrefUtils>()\n            .getModulePermission(ModulePermissionConstant.permission_newGoods)\n            .view &&\n        !isNullEmptyOrFalse(this.dashboardModel)) {\n      if (!isNullEmptyOrFalse(this.dashboardModel.newArrival)) {\n        return FeaturedStoneWidget(\n          diamondList: this.dashboardModel.newArrival,\n        );\n      } else {\n        return SizedBox();\n      }\n    } else {\n      return SizedBox();\n    }\n  }\n\n  getStoneOfDaySection() {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_stone_of_the_day)\n        .view) {\n      if (!isNullEmptyOrFalse(this.dashboardModel)) {\n        if (!isNullEmptyOrFalse(this.dashboardModel.featuredStone)) {\n          return StoneOfDayWidget(\n            stoneList: this.dashboardModel.featuredStone,\n          );\n        } else {\n          return SizedBox();\n        }\n      }\n\n      return SizedBox();\n    }\n\n    return SizedBox();\n  }\n\n  getStoneOfDayItem(DiamondModel model) {\n    return Container(\n      height: getSize(225),\n      padding: EdgeInsets.only(\n        right: getSize(20),\n      ),\n      width: MathUtilities.screenWidth(context) / 2,\n      child: Column(\n        children: [\n          Container(\n            height: getSize(152),\n            child: Stack(\n              children: [\n                //\n                Column(\n                  children: [\n                    Container(\n                      color: Colors.transparent,\n                      height: getSize(51),\n                    ),\n                    Material(\n                      elevation: 10,\n                      shadowColor: appTheme.shadowColor,\n                      color: Colors.transparent,\n                      child: Container(\n                        decoration: BoxDecoration(\n                          color: appTheme.whiteColor,\n                          borderRadius: BorderRadius.circular(getSize(5)),\n                          border: Border.all(color: appTheme.lightBGColor),\n                        ),\n                        // color: Colors.red,\n                        height: getSize(101),\n                      ),\n                    ),\n                  ],\n                ),\n                Align(\n                  alignment: Alignment.topCenter,\n                  child: Material(\n                    elevation: 10,\n                    shadowColor: appTheme.shadowColor,\n                    color: Colors.transparent,\n                    borderRadius: BorderRadius.circular(getSize(66)),\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: appTheme.whiteColor,\n                        shape: BoxShape.circle,\n                      ),\n                      // color: appTheme.colorPrimary,\n                      height: getSize(132),\n                      width: getSize(132),\n                      child: Padding(\n                        padding: EdgeInsets.all(getSize(10)),\n                        child: ClipRRect(\n                          borderRadius: BorderRadius.all(Radius.circular(getSize(61))),\n                          child: getImageView(\n                            \"\",\n                            finalUrl: true //model.img\n                                ? DiamondUrls.image + model.mfgStnId + \"/\" + \"still.jpg\"\n                                : \"\",\n                            width: getSize(122),\n                            height: getSize(122),\n                            fit: BoxFit.cover,\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                ),\n              ],\n            ),\n          ),\n          Material(\n            elevation: 10,\n            shadowColor: appTheme.shadowColor,\n            color: Colors.transparent,\n            borderRadius: BorderRadius.circular(getSize(5)),\n            child: Container(\n              decoration: BoxDecoration(\n                color: appTheme.whiteColor,\n                borderRadius: BorderRadius.circular(getSize(5)),\n                border: Border.all(color: appTheme.lightBGColor),\n                // boxShadow: getBoxShadow(context),\n              ),\n              child: IntrinsicHeight(\n                child: Row(\n                  children: [\n                    Container(\n                      decoration: BoxDecoration(\n                        color: appTheme.lightBGColor,\n                        borderRadius: BorderRadius.only(\n                            topLeft: Radius.circular(5), bottomLeft: Radius.circular(5)),\n                      ),\n                      width: getSize(62),\n                      child: Padding(\n                        padding: EdgeInsets.only(\n                          top: getSize(8),\n                          left: getSize(5),\n                          right: getSize(5),\n                          bottom: getSize(8),\n                        ),\n                        child: Center(\n                          child: GestureDetector(\n                            onTap: () {\n                              //\n                            },\n                            child: Column(\n                              children: [\n                                Text(\n                                  \"${model.crt ?? \"\"}\",\n                                  style: appTheme.blue14TextStyle.copyWith(\n                                    color: appTheme.colorPrimary,\n                                    fontSize: getFontSize(12),\n                                  ),\n                                ),\n                                Text(\n                                  \"Carat\",\n                                  style: appTheme.blue14TextStyle.copyWith(\n                                    color: appTheme.colorPrimary,\n                                    fontSize: getFontSize(10),\n                                  ),\n                                ),\n                                Container(\n                                  alignment: Alignment.center,\n                                  margin: EdgeInsets.only(top: getSize(5)),\n                                  // width: getSize(55),\n                                  // height: getSize(19),\n                                  decoration: BoxDecoration(\n                                      color: appTheme.whiteColor,\n                                      borderRadius: BorderRadius.circular(getSize(5))),\n                                  child: Padding(\n                                    padding: EdgeInsets.all(getSize(2)),\n                                    child: Text(\n                                      PriceUtilities.getPercent(model.getFinalDiscount()),\n                                      style: appTheme.green10TextStyle\n                                          .copyWith(fontSize: getFontSize(9)),\n                                    ),\n                                  ),\n                                )\n                              ],\n                            ),\n                          ),\n                        ),\n                      ),\n                    ),\n                    SizedBox(\n                      width: getSize(10),\n                    ),\n                    Expanded(\n                      child: Column(\n                        mainAxisAlignment: MainAxisAlignment.end,\n                        crossAxisAlignment: CrossAxisAlignment.end,\n                        // mainAxisSize: MainAxisSize.max,\n                        children: [\n                          SizedBox(\n                            height: getSize(4),\n                          ),\n                          getStoneIdShape(model),\n                          SizedBox(\n                            height: getSize(6),\n                          ),\n                          getColorClarityLab(model),\n                          SizedBox(\n                            height: getSize(6),\n                          ),\n                          getCutPolSynData(model),\n                          SizedBox(\n                            height: getSize(8),\n                          ),\n                        ],\n                      ),\n                    ),\n                    SizedBox(\n                      width: getSize(10),\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          )\n        ],\n      ),\n    );\n  }\n\n  getStoneOfDayItemWithPrice(DiamondModel model) {\n    return Container(\n      height: getSize(225),\n      padding: EdgeInsets.only(\n        right: getSize(20),\n      ),\n      width: MathUtilities.screenWidth(context) / 1.8,\n      child: Column(\n        children: [\n          Container(\n            height: getSize(152),\n            child: Stack(\n              children: [\n                //\n                Column(\n                  children: [\n                    Container(\n                      color: Colors.transparent,\n                      height: getSize(51),\n                    ),\n                    Material(\n                      elevation: 10,\n                      shadowColor: appTheme.shadowColor,\n                      color: Colors.transparent,\n                      child: Container(\n                        decoration: BoxDecoration(\n                          color: appTheme.whiteColor,\n                          borderRadius: BorderRadius.circular(getSize(5)),\n                          border: Border.all(color: appTheme.lightBGColor),\n                        ),\n                        // color: Colors.red,\n                        height: getSize(101),\n                      ),\n                    ),\n                  ],\n                ),\n                Align(\n                  alignment: Alignment.topCenter,\n                  child: Material(\n                    elevation: 10,\n                    shadowColor: appTheme.shadowColor,\n                    color: Colors.transparent,\n                    borderRadius: BorderRadius.circular(getSize(66)),\n                    child: Container(\n                      decoration: BoxDecoration(\n                        color: appTheme.whiteColor,\n                        shape: BoxShape.circle,\n                      ),\n                      // color: appTheme.colorPrimary,\n                      height: getSize(132),\n                      width: getSize(132),\n                      child: Padding(\n                        padding: EdgeInsets.all(getSize(10)),\n                        child: ClipRRect(\n                          borderRadius: BorderRadius.all(Radius.circular(getSize(61))),\n                          child: getImageView(\n                            \"\",\n                            finalUrl: DiamondUrls.image + model.mfgStnId + \"/\" + \"still.jpg\",\n                            width: getSize(122),\n                            height: getSize(122),\n                            fit: BoxFit.cover,\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                ),\n              ],\n            ),\n          ),\n          Material(\n            elevation: 10,\n            shadowColor: appTheme.shadowColor,\n            color: Colors.transparent,\n            borderRadius: BorderRadius.circular(getSize(5)),\n            child: Container(\n              decoration: BoxDecoration(\n                color: appTheme.whiteColor,\n                borderRadius: BorderRadius.circular(getSize(5)),\n                border: Border.all(color: appTheme.lightBGColor),\n                // boxShadow: getBoxShadow(context),\n              ),\n              child: Row(\n                mainAxisSize: MainAxisSize.max,\n                children: [\n                  Container(\n                    decoration: BoxDecoration(\n                      color: appTheme.lightBGColor,\n                      borderRadius: BorderRadius.only(\n                          topLeft: Radius.circular(5), bottomLeft: Radius.circular(5)),\n                    ),\n                    width: getSize(62),\n                    child: Padding(\n                      padding: EdgeInsets.only(\n                        top: getSize(8),\n                        left: getSize(5),\n                        right: getSize(5),\n                        bottom: getSize(10),\n                      ),\n                      child: Center(\n                        child: GestureDetector(\n                          onTap: () {\n                            //\n                          },\n                          child: Column(\n                            children: [\n                              Text(\n                                \"${model.crt} \\n Carat \",\n                                style: appTheme.blue14TextStyle.copyWith(\n                                  color: appTheme.colorPrimary,\n                                  fontSize: getFontSize(12),\n                                ),\n                                textAlign: TextAlign.center,\n                              ),\n                              Container(\n                                alignment: Alignment.center,\n                                margin: EdgeInsets.only(top: getSize(5)),\n                                // width: getSize(55),\n                                // height: getSize(19),\n                                decoration: BoxDecoration(\n                                    color: appTheme.whiteColor,\n                                    borderRadius: BorderRadius.circular(getSize(5))),\n                                child: Padding(\n                                  padding: EdgeInsets.all(getSize(2)),\n                                  child: Text(\n                                    PriceUtilities.getPercent(model.getFinalDiscount()),\n                                    style: appTheme.green10TextStyle\n                                        .copyWith(fontSize: getFontSize(9)),\n                                  ),\n                                ),\n                              )\n                            ],\n                          ),\n                        ),\n                      ),\n                    ),\n                  ),\n                  SizedBox(\n                    width: getSize(10),\n                  ),\n                  Expanded(\n                    child: Column(\n                      // mainAxisAlignment: MainAxisAlignment.end,\n                      // crossAxisAlignment: CrossAxisAlignment.end,\n                      // mainAxisSize: MainAxisSize.max,\n                      children: [\n                        SizedBox(\n                          height: getSize(4),\n                        ),\n                        Row(\n                          children: [\n                            getText(model.stoneId ?? \"-\"),\n                            Spacer(),\n                            getAmountText(model.getPricePerCarat()),\n                          ],\n                        ),\n                        SizedBox(\n                          height: getSize(6),\n                        ),\n                        Row(\n                          children: [\n                            getText(\n                              model.shpNm ?? \"\",\n                              fontWeight: FontWeight.w500,\n                            ),\n                            Spacer(),\n                            getAmountText(model.getAmount()),\n                          ],\n                        ),\n                        SizedBox(\n                          height: getSize(6),\n                        ),\n                        Row(\n                          children: <Widget>[\n                            getText(model.colNm ?? \"\"),\n                            Spacer(),\n                            getText(model.clrNm ?? \"\"),\n                            Spacer(),\n                            getText(model.cutNm ?? \"\"),\n                            getDot(),\n                            getText(model.polNm ?? \"\"),\n                            getDot(),\n                            getText(model.symNm ?? \"\"),\n                            Spacer(),\n                            getText(model.lbNm ?? \"\"),\n                          ],\n                        ),\n                        SizedBox(\n                          height: getSize(8),\n                        ),\n                      ],\n                    ),\n                  ),\n                  SizedBox(\n                    width: getSize(10),\n                  ),\n                ],\n              ),\n            ),\n          )\n        ],\n      ),\n    );\n  }\n\n  // getBannerSection() {\n  //   if (isNullEmptyOrFalse(this.dashboardModel)) {\n  //     return SizedBox();\n  //   }\n  //   if (isNullEmptyOrFalse(this.dashboardModel.banners)) {\n  //     return SizedBox();\n  //   }\n  //   return Container(\n  //     child: buildtopSectfion(this.dashboardModel.banners),\n  //   );\n  // }\n\n  getSavedSearchSection() {\n    if (isNullEmptyOrFalse(this.dashboardModel)) {\n      return SizedBox();\n    }\n\n    if (isNullEmptyOrFalse(this.dashboardModel.savedSearch)) {\n      return SizedBox();\n    }\n    if (!(app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_mySavedSearch)\n        .view)) {\n      return SizedBox();\n    }\n\n    return Padding(\n      padding: EdgeInsets.only(top: getSize(8)),\n      child: Column(\n        children: [\n          Padding(\n            padding: EdgeInsets.only(\n              left: getSize(Spacing.leftPadding),\n              right: getSize(Spacing.rightPadding),\n            ),\n            child: Row(\n              children: [\n                Text(\n                  R.string.screenTitle.savedSearch,\n                  key: checkTourIsShown() ? savedSearchKey : null,\n                  style: appTheme.blackNormal18TitleColorblack.copyWith(\n                    fontWeight: FontWeight.w500,\n                  ),\n                ),\n                Spacer(),\n                InkWell(\n                  onTap: () {\n                    Map<String, dynamic> dict = new HashMap();\n                    dict[ArgumentConstant.ModuleType] =\n                        DiamondModuleConstant.MODULE_TYPE_MY_SAVED_SEARCH;\n                    dict[ArgumentConstant.IsFromDrawer] = false;\n                    NavigationUtilities.pushRoute(SavedSearchScreen.route, args: dict);\n                  },\n                  child: getViewAll(),\n                ),\n              ],\n            ),\n          ),\n          SizedBox(\n            height: getSize(16),\n          ),\n          ListView.builder(\n              shrinkWrap: true,\n              physics: NeverScrollableScrollPhysics(),\n              itemCount: (this.dashboardModel.savedSearch?.list?.length) ?? 0,\n              itemBuilder: (context, index) {\n                return InkWell(\n                  onTap: () {\n                    Map<String, dynamic> dict = new HashMap();\n                    dict[ArgumentConstant.ModuleType] =\n                        DiamondModuleConstant.MODULE_TYPE_MY_SAVED_SEARCH;\n                    dict[ArgumentConstant.IsFromDrawer] = false;\n                    dict[\"filterId\"] = dashboardModel.savedSearch.list[index].id;\n                    NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);\n                  },\n                  child: getSavedSearchItem(this.dashboardModel.savedSearch.list[index]),\n                );\n              }),\n        ],\n      ),\n    );\n  }\n\n  getSavedSearchItem(SavedSearchModel model) {\n    return Padding(\n      padding: EdgeInsets.only(\n        left: getSize(Spacing.leftPadding),\n        right: getSize(Spacing.rightPadding),\n      ),\n      child: Slidable(\n        actionPane: SlidableDrawerActionPane(),\n        actionExtentRatio: 0.2,\n        child: Column(\n          children: [\n            Material(\n              elevation: 10,\n              shadowColor: appTheme.shadowColor,\n              borderRadius: BorderRadius.circular(getSize(5)),\n              child: Container(\n                decoration: BoxDecoration(\n                  color: appTheme.whiteColor,\n                  borderRadius: BorderRadius.circular(getSize(5)),\n                  border: Border.all(width: getSize(1), color: appTheme.borderColor),\n                  // boxShadow: getBoxShadow(context),\n                ),\n                child: Padding(\n                  padding: EdgeInsets.fromLTRB(getSize(20), getSize(8), getSize(20), getSize(8)),\n                  child: Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    crossAxisAlignment: CrossAxisAlignment.center,\n                    children: [\n                      Image.asset(\n                        home_clock,\n                        width: getSize(30),\n                        height: getSize(30),\n                      ),\n                      SizedBox(\n                        width: getSize(16),\n                      ),\n                      Expanded(\n                        child: Column(\n                          mainAxisAlignment: MainAxisAlignment.center,\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            Text(\n                              model.name ?? \"-\",\n                              style: appTheme.black16TextStyle.copyWith(\n                                fontWeight: FontWeight.w500,\n                              ),\n                            ),\n                            SizedBox(\n                              height: getSize(2),\n                            ),\n                            Text(\n                              DateUtilities().convertServerDateToFormatterString(model.createdAt,\n                                  formatter: DateUtilities.dd_mmm_yy_h_mm_a),\n                              style: appTheme.black14TextStyle.copyWith(\n                                color: appTheme.textGreyColor,\n                              ),\n                            ),\n                          ],\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n            SizedBox(\n              height: getSize(20),\n            ),\n          ],\n        ),\n        secondaryActions: <Widget>[\n          IconSlideAction(\n            onTap: () {\n              app.resolve<CustomDialogs>().confirmDialog(context,\n                  barrierDismissible: true,\n                  title: \"\",\n                  desc: R.string.commonString.deleteItem,\n                  positiveBtnTitle: R.string.commonString.ok,\n                  negativeBtnTitle: R.string.commonString.cancel, onClickCallback: (buttonType) {\n                if (buttonType == ButtonType.PositveButtonClick) {\n                  SyncManager.instance.callApiForDeleteSavedSearch(context, model.id,\n                      success: (resp) {\n                    this\n                        .dashboardModel\n                        .savedSearch\n                        .list\n                        .removeWhere((element) => element.id == model.id);\n                    setState(() {});\n                  });\n                }\n              });\n            },\n            iconWidget: Column(\n              mainAxisAlignment: MainAxisAlignment.center,\n              crossAxisAlignment: CrossAxisAlignment.center,\n              children: [\n                Center(\n                  child: Container(\n                    decoration: BoxDecoration(\n                      color: fromHex(\"#FFE7E7\"),\n                      border: Border.all(color: fromHex(\"#FF4D4D\")),\n                      shape: BoxShape.circle,\n                    ),\n                    height: getSize(40),\n                    width: getSize(40),\n                    child: Padding(\n                      padding: EdgeInsets.all(getSize(10)),\n                      child: Image.asset(\n                        home_delete,\n                        // height: getSize(20),\n                        // width: getSize(20),\n                      ),\n                    ),\n                  ),\n                ),\n                SizedBox(\n                  height: getSize(20),\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  getRecentSection() {\n    if (isNullEmptyOrFalse(this.dashboardModel)) {\n      return SizedBox();\n    }\n\n    if (isNullEmptyOrFalse(this.dashboardModel.recentSearch)) {\n      return SizedBox();\n    }\n    if (!(app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_mySavedSearch)\n        .view)) {\n      return SizedBox();\n    }\n    return RecentSearchWidget(\n      recentSearch: this.dashboardModel.recentSearch.list,\n    );\n    return Padding(\n      padding: EdgeInsets.only(\n        left: getSize(Spacing.leftPadding),\n        right: getSize(Spacing.rightPadding),\n        top: getSize(20),\n      ),\n      child: Column(\n        // mainAxisAlignment: mainaxisal,\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          getTitleText(R.string.screenTitle.recentSearch),\n          SizedBox(\n            height: getSize(20),\n          ),\n          Container(\n            height: getSize(90),\n            child: ListView(\n              scrollDirection: Axis.horizontal,\n              children: [\n                // for (var i = 0; i < 5; i++) getRecentItem(),\n              ],\n            ),\n          )\n        ],\n      ),\n    );\n  }\n\n  getRecentItem(DiamondModel model) {\n    return Padding(\n      padding: EdgeInsets.only(\n        // right: getSize(20),\n        bottom: getSize(20),\n      ),\n      child: Material(\n        color: Colors.transparent,\n        elevation: 0,\n        shadowColor: appTheme.shadowColor,\n        // borderRadius: BorderRadius.circular(getSize(5)),\n        child: Container(\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(getSize(5)),\n          ),\n          child: Row(\n            children: [\n              Expanded(\n                child: Container(\n                  // width: getSize(122),\n                  // width: MathUtilities.screenWidth(context) / 2,\n                  child: Stack(\n                    children: [\n                      Row(\n                        children: [\n                          Container(\n                            color: appTheme.lightBGColor,\n                            // width: getSize(30),\n                            child: SizedBox(\n                              width: getSize(30),\n                            ),\n                          ),\n                          Material(\n                            color: Colors.transparent,\n                            elevation: 10,\n                            shadowColor: appTheme.shadowColor,\n                            child: Container(\n                                // width: getSize(92),\n                                width: MathUtilities.screenWidth(context) / 4.6,\n                                decoration: BoxDecoration(\n                                  color: appTheme.lightBGColor,\n                                  borderRadius: BorderRadius.circular(getSize(5)),\n                                ),\n                                child: Align(\n                                  alignment: Alignment.centerRight,\n                                  child: Padding(\n                                    padding: EdgeInsets.only(\n                                      left: getSize(10),\n                                      right: getSize(10),\n                                    ),\n                                    child: Column(\n                                      mainAxisAlignment: MainAxisAlignment.center,\n                                      crossAxisAlignment: CrossAxisAlignment.center,\n                                      children: [\n                                        Text(\n                                          \"${model.crt} \\n Carat\",\n                                          style: appTheme.black14TextStyle.copyWith(\n                                            fontWeight: FontWeight.w500,\n                                            color: appTheme.colorPrimary,\n                                          ),\n                                          maxLines: 2,\n                                          textAlign: TextAlign.center,\n                                        ),\n                                        Container(\n                                          margin: EdgeInsets.only(top: getSize(5)),\n                                          // width: getSize(55),\n                                          // height: getSize(19),\n                                          decoration: BoxDecoration(\n                                              color: appTheme.whiteColor,\n                                              borderRadius: BorderRadius.circular(getSize(5))),\n                                          child: Padding(\n                                            padding: EdgeInsets.all(getSize(2)),\n                                            child: Text(\n                                              PriceUtilities.getPercent(model.getFinalDiscount()),\n                                              style: appTheme.green10TextStyle\n                                                  .copyWith(fontSize: getFontSize(9)),\n                                            ),\n                                          ),\n                                        ),\n                                      ],\n                                    ),\n                                  ),\n                                )),\n                          )\n                        ],\n                      ),\n                      Align(\n                        alignment: Alignment.centerLeft,\n                        child: Material(\n                          elevation: 10,\n                          shadowColor: appTheme.shadowColor,\n                          color: Colors.transparent,\n                          borderRadius: BorderRadius.circular(getSize(30)),\n                          child: Container(\n                            width: getSize(60),\n                            height: getSize(60),\n                            decoration: BoxDecoration(\n                              color: appTheme.whiteColor,\n                              shape: BoxShape.circle,\n                            ),\n                            child: Padding(\n                              padding: EdgeInsets.all(getSize(10)),\n                              child: ClipRRect(\n                                borderRadius: BorderRadius.all(Radius.circular(getSize(20))),\n                                child: getImageView(\n                                  \"\",\n                                  finalUrl: DiamondUrls.image + model.mfgStnId + \"/\" + \"still.jpg\",\n                                  width: getSize(40),\n                                  height: getSize(40),\n                                  fit: BoxFit.fitWidth,\n                                ),\n                              ),\n                            ),\n                          ),\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n              Material(\n                elevation: 10,\n                shadowColor: appTheme.shadowColor,\n                borderRadius: BorderRadius.circular(getSize(5)),\n                child: Container(\n                  // width: getSize(111),\n                  width: MathUtilities.screenWidth(context) / 3,\n                  decoration: BoxDecoration(\n                    color: appTheme.whiteColor,\n                    borderRadius: BorderRadius.circular(getSize(5)),\n                  ),\n                  child: Padding(\n                    padding: EdgeInsets.only(\n                      left: getSize(10),\n                      right: getSize(10),\n                    ),\n                    child: Column(\n                      mainAxisAlignment: MainAxisAlignment.center,\n                      crossAxisAlignment: CrossAxisAlignment.center,\n                      children: [\n                        getStoneIdShape(model),\n                        SizedBox(\n                          height: getSize(6),\n                        ),\n                        getColorClarityLab(model),\n                        SizedBox(\n                          height: getSize(6),\n                        ),\n                        getCutPolSynData(model),\n                      ],\n                    ),\n                  ),\n                ),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  getRecentItemWithPrice() {\n    return Padding(\n      padding: EdgeInsets.only(\n        right: getSize(20),\n        bottom: getSize(20),\n      ),\n      child: Material(\n        color: Colors.transparent,\n        elevation: 0,\n        shadowColor: appTheme.shadowColor,\n        // borderRadius: BorderRadius.circular(getSize(5)),\n        child: Container(\n          decoration: BoxDecoration(\n            borderRadius: BorderRadius.circular(getSize(5)),\n          ),\n          child: Row(\n            children: [\n              Container(\n                width: getSize(122),\n                child: Stack(\n                  children: [\n                    Row(\n                      children: [\n                        Container(\n                          color: appTheme.lightBGColor,\n                          width: getSize(30),\n                          child: SizedBox(\n                            width: getSize(30),\n                          ),\n                        ),\n                        Material(\n                          color: Colors.transparent,\n                          elevation: 10,\n                          shadowColor: appTheme.shadowColor,\n                          child: Container(\n                              width: getSize(92),\n                              decoration: BoxDecoration(\n                                color: appTheme.lightBGColor,\n                                borderRadius: BorderRadius.circular(getSize(5)),\n                              ),\n                              child: Align(\n                                alignment: Alignment.centerRight,\n                                child: Padding(\n                                  padding: EdgeInsets.only(\n                                    left: getSize(10),\n                                    right: getSize(10),\n                                  ),\n                                  child: Column(\n                                    mainAxisAlignment: MainAxisAlignment.center,\n                                    crossAxisAlignment: CrossAxisAlignment.center,\n                                    children: [\n                                      Text(\n                                        \"12.50 \\n Carat\",\n                                        style: appTheme.black14TextStyle.copyWith(\n                                          fontWeight: FontWeight.w500,\n                                          color: appTheme.colorPrimary,\n                                        ),\n                                        maxLines: 2,\n                                        textAlign: TextAlign.center,\n                                      ),\n                                      Container(\n                                        margin: EdgeInsets.only(top: getSize(5)),\n                                        // width: getSize(55),\n                                        // height: getSize(19),\n                                        decoration: BoxDecoration(\n                                            color: appTheme.whiteColor,\n                                            borderRadius: BorderRadius.circular(getSize(5))),\n                                        child: Padding(\n                                          padding: EdgeInsets.all(getSize(2)),\n                                          child: Text(\n                                            \"-44.33 %\",\n                                            style: appTheme.green10TextStyle\n                                                .copyWith(fontSize: getFontSize(9)),\n                                          ),\n                                        ),\n                                      ),\n                                    ],\n                                  ),\n                                ),\n                              )),\n                        )\n                      ],\n                    ),\n                    Align(\n                      alignment: Alignment.centerLeft,\n                      child: Material(\n                        elevation: 10,\n                        shadowColor: appTheme.shadowColor,\n                        color: Colors.transparent,\n                        borderRadius: BorderRadius.circular(getSize(30)),\n                        child: Container(\n                          width: getSize(60),\n                          height: getSize(60),\n                          decoration: BoxDecoration(\n                            color: appTheme.whiteColor,\n                            shape: BoxShape.circle,\n                          ),\n                          child: Padding(\n                            padding: EdgeInsets.all(getSize(10)),\n                            child: ClipRRect(\n                              borderRadius: BorderRadius.all(Radius.circular(getSize(20))),\n                              child: getImageView(\n                                \"\",\n                                width: getSize(40),\n                                height: getSize(40),\n                                fit: BoxFit.cover,\n                              ),\n                            ),\n                          ),\n                        ),\n                      ),\n                    ),\n                  ],\n                ),\n              ),\n              Material(\n                elevation: 10,\n                shadowColor: appTheme.shadowColor,\n                borderRadius: BorderRadius.circular(getSize(5)),\n                child: Container(\n                  // width: getSize(111),\n                  width: MathUtilities.screenWidth(context) / 2.8,\n                  decoration: BoxDecoration(\n                    color: appTheme.whiteColor,\n                    borderRadius: BorderRadius.circular(getSize(5)),\n                  ),\n                  child: Padding(\n                    padding: EdgeInsets.only(\n                      left: getSize(10),\n                      right: getSize(10),\n                    ),\n                    child: Column(\n                      mainAxisAlignment: MainAxisAlignment.center,\n                      crossAxisAlignment: CrossAxisAlignment.center,\n                      children: [\n                        Row(\n                          children: [\n                            getText(\"191071\"),\n                            Spacer(),\n                            getAmountText(\"13,992.50/Cts\"),\n                          ],\n                        ),\n                        SizedBox(\n                          height: getSize(6),\n                        ),\n                        Row(\n                          children: [\n                            getText(\n                              \"Round\",\n                              fontWeight: FontWeight.w500,\n                            ),\n                            Spacer(),\n                            getAmountText(\"13,992.50/Amt\"),\n                          ],\n                        ),\n                        SizedBox(\n                          height: getSize(6),\n                        ),\n                        Row(\n                          children: [\n                            getText(\"D\"),\n                            Spacer(),\n                            getText(\"IF\"),\n                            Spacer(),\n                            getText(\"EX\"),\n                            getDot(),\n                            getText(\"EX\"),\n                            getDot(),\n                            getText(\"EX\"),\n                            Spacer(),\n                            getText(\"GIA\"),\n                          ],\n                        ),\n                      ],\n                    ),\n                  ),\n                ),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n\n  getSalesSection() {\n    if (isNullEmptyOrFalse(this.dashboardModel)) {\n      return SizedBox();\n    }\n    if (isNullEmptyOrFalse(this.dashboardModel.seller)) {\n      return SizedBox();\n    }\n    if (isNullEmptyOrFalse(this.dashboardModel.seller.id)) {\n      return SizedBox();\n    }\n    return Padding(\n      // padding: EdgeInsets.only(top: getSize(20)),\n      padding: EdgeInsets.only(\n        left: getSize(Spacing.leftPadding),\n        right: getSize(Spacing.rightPadding),\n        top: getSize(8),\n      ),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            R.string.screenTitle.salesPersonDetail,\n            key: checkTourIsShown() ? sellerKey : null,\n            style: appTheme.blackNormal18TitleColorblack.copyWith(\n              fontWeight: FontWeight.w500,\n            ),\n          ),\n          SizedBox(\n            height: getSize(16),\n          ),\n          Padding(\n            padding: EdgeInsets.only(\n              left: getSize(0),\n              right: getSize(0),\n            ),\n            child: Material(\n              elevation: 10,\n              shadowColor: appTheme.shadowColor,\n              borderRadius: BorderRadius.circular(getSize(5)),\n              child: Container(\n                decoration: BoxDecoration(\n                  color: appTheme.whiteColor,\n                  borderRadius: BorderRadius.circular(getSize(5)),\n                  border: Border.all(width: getSize(1), color: appTheme.borderColor),\n                ),\n                child: Padding(\n                  padding: EdgeInsets.all(\n                    getSize(20),\n                  ),\n                  child: Column(\n                    crossAxisAlignment: CrossAxisAlignment.start,\n                    children: [\n                      Row(\n                        children: [\n                          Text(\n                            this.dashboardModel.seller.firstName +\n                                \" \" +\n                                this.dashboardModel.seller.lastName,\n                            style: appTheme.black18TextStyle.copyWith(\n                              color: appTheme.colorPrimary,\n                              fontWeight: FontWeight.w500,\n                            ),\n                          ),\n                          Spacer(),\n                          Row(\n                            mainAxisSize: MainAxisSize.min,\n                            children: [\n                              InkWell(\n                                  onTap: () async {\n                                    await whatsAppOpen(this.dashboardModel.seller.mobile);\n                                  },\n                                  child: Image.asset(\n                                    whatsappIcon,\n                                    height: getSize(20),\n                                    width: getSize(20),\n                                  )),\n                              SizedBox(width: getSize(18)),\n                              InkWell(\n                                onTap: () {\n                                  //change firstname to skypeId, when available on server.\n                                  openSkype(this.dashboardModel.seller.firstName);\n                                },\n                                child: Image.asset(\n                                  skypeIcon,\n                                  height: getSize(20),\n                                  width: getSize(20),\n                                ),\n                              ),\n                            ],\n                          )\n                          // Spacer(),\n                          // InkWell(onTap : (){\n\n                          // }, child : Image.asset(CrossAxisAlignment.start))\n                        ],\n                      ),\n                      SizedBox(\n                        height: getSize(10),\n                      ),\n                      InkWell(\n                        onTap: () async {\n                          if (!isNullEmptyOrFalse(this.dashboardModel.seller.email)) {\n                            openURLWithApp(\"mailto:?subject=PnShah&body=PnShah\", context);\n                          }\n                        },\n                        child: Row(\n                          children: [\n                            Image.asset(\n                              email,\n                              width: getSize(16),\n                              height: getSize(16),\n                            ),\n                            SizedBox(\n                              width: getSize(10),\n                            ),\n                            Text(\n                              this.dashboardModel.seller?.email ?? \"-\",\n                              style: appTheme.black16TextStyle,\n                            ),\n                          ],\n                        ),\n                      ),\n                      SizedBox(\n                        height: getSize(10),\n                      ),\n                      InkWell(\n                        onTap: () {\n                          if (!isNullEmptyOrFalse(this.dashboardModel.seller.mobile)) {\n                            openURLWithApp(\"tel://${this.dashboardModel.seller.mobile}\", context);\n                          }\n                        },\n                        child: Row(\n                          children: [\n                            Image.asset(\n                              phone,\n                              width: getSize(16),\n                              height: getSize(16),\n                            ),\n                            SizedBox(\n                              width: getSize(10),\n                            ),\n                            Text(\n                              this.dashboardModel.seller.mobile ?? \"-\",\n                              style: appTheme.black16TextStyle,\n                            ),\n                          ],\n                        ),\n                      ),\n                    ],\n                  ),\n                ),\n              ),\n            ),\n          )\n        ],\n      ),\n    );\n  }\n\n  void whatsAppOpen(String phoneNo, {String message = \"\"}) async {\n    phoneNo = \"91\" + phoneNo;\n    String url() {\n      if (Platform.isIOS) {\n        return \"whatsapp://wa.me/$phoneNo/?text=${message}\";\n      } else {\n        return \"whatsapp://send?phone=$phoneNo&text=${message}\";\n      }\n    }\n\n    if (await canLaunch(url())) {\n      await launch(url());\n    } else {\n      throw showToast(\"whatspp is not installed in this device\", context: context);\n    }\n  }\n\n  void openSkype(String username) async {\n    if (await canLaunch('skype:${username}')) {\n      await launch('skype:${username}');\n    } else {\n      showToast(\"skype is not installed in this device\", context: context);\n    }\n  }\n\n  getTitleText(String title) {\n    return Text(\n      title,\n      style: appTheme.blackNormal18TitleColorblack.copyWith(\n        fontWeight: FontWeight.w500,\n      ),\n    );\n  }\n\n  getViewAll() {\n    return Text(\n      R.string.screenTitle.viewAll,\n      style: appTheme.black14TextStyle.copyWith(\n        fontWeight: FontWeight.w500,\n        color: appTheme.colorPrimary,\n      ),\n    );\n  }\n\n  getText(String text, {FontWeight fontWeight = FontWeight.normal, double fontsize = 12}) {\n    return Text(\n      text,\n      style: appTheme.black12TextStyle.copyWith(\n        fontSize: getFontSize(fontsize),\n        fontWeight: fontWeight,\n      ),\n    );\n  }\n\n  getAmountText(String text) {\n    return Text(\n      text,\n      style: appTheme.black12TextStyle.copyWith(\n        fontWeight: FontWeight.w500,\n        color: appTheme.colorPrimary,\n      ),\n    );\n  }\n\n  getDot() {\n    return Padding(\n      padding: EdgeInsets.only(left: getSize(4), right: getSize(4)),\n      child: Container(\n        height: getSize(4),\n        width: getSize(4),\n        decoration: BoxDecoration(color: appTheme.dividerColor, shape: BoxShape.circle),\n      ),\n    );\n  }\n\n  getColorClarityLab(DiamondModel model) {\n    return Row(\n      children: [\n        getText(\n          model.colNm ?? \"\",\n        ),\n        Spacer(),\n        getText(\n          model.clrNm ?? \"\",\n        ),\n        Spacer(),\n        getText(\n          model.lbNm ?? \"\",\n        ),\n      ],\n    );\n  }\n\n  getStoneIdShape(DiamondModel model) {\n    return Row(\n      children: [\n        getText(model.stoneId ?? \"\"),\n        Spacer(),\n        getText(\n          model.shpNm ?? \"\",\n          fontWeight: FontWeight.w500,\n        ),\n      ],\n    );\n  }\n\n  getCutPolSynData(DiamondModel model) {\n    return Row(\n      children: [\n        getText(model.cutNm ?? \"-\"),\n        Spacer(),\n        getDot(),\n        Spacer(),\n        getText(model.polNm ?? \"-\"),\n        Spacer(),\n        getDot(),\n        Spacer(),\n        getText(model.symNm ?? \"-\"),\n      ],\n    );\n  }\n\n  moveToDetail(DiamondModel model) {\n    var dict = Map<String, dynamic>();\n    dict[ArgumentConstant.DiamondDetail] = model;\n    dict[ArgumentConstant.ModuleType] = DiamondModuleConstant.MODULE_TYPE_HOME;\n\n    NavigationUtilities.pushRoute(DiamondDetailScreen.route, args: dict);\n  }\n\n  openProfile() {\n    Map<String, dynamic> dict = new HashMap();\n    dict[ArgumentConstant.IsFromDrawer] = false;\n    NavigationUtilities.pushRoute(MyAccountScreen.route, args: dict).then((value) {\n      setState(() {});\n    });\n  }\n\n  buildTopSection(String type) {\n    bool isVideo = this.dashboardModel.getBannerDetails(type).isVideo;\n    return Container(\n      height: getSize(450),\n      child: Stack(\n        children: [\n          Positioned(\n            top: getSize(0),\n            left: getSize(0),\n            right: getSize(0),\n            child: Card(\n              margin: EdgeInsets.all(\n                getSize(20),\n              ),\n              shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(\n                  getSize(10),\n                ),\n              ),\n              elevation: 10,\n              child: ClipRRect(\n                borderRadius: BorderRadius.circular(\n                  getSize(10),\n                ),\n                child: isVideo\n                    ? openWebView(type)\n                    : getImageView(getHomeCenterImage(type),\n                        fit: BoxFit.cover,\n                        placeHolderImage: diamond,\n                        height: getSize(243),\n                        width: MathUtilities.screenWidth(context)),\n              ),\n            ),\n          ),\n          Positioned(\n            top: getSize(200),\n            left: getSize(42),\n            right: getSize(42),\n            child: Card(\n              elevation: 10,\n              child: Container(\n                padding: EdgeInsets.only(bottom: 13),\n                width: getSize(311),\n                //height: getSize(207),\n                decoration: BoxDecoration(\n                  borderRadius: BorderRadius.circular(\n                    getSize(10),\n                  ),\n                  color: Colors.white,\n                ),\n                child: Column(\n                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n                  crossAxisAlignment: CrossAxisAlignment.start,\n                  children: [\n                    Container(\n                        margin: EdgeInsets.all(10),\n                        child: getText(\n                          this.dashboardModel.getBannerDetails(type).description,\n                          fontWeight: FontWeight.bold,\n                          fontsize: 16,\n                        )),\n                    Row(\n                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n                      children: [\n                        Column(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\n                          getSideImages(\n                              type == HOME_TOP_CENTRE ? HOME_TOP_LEFT_1 : HOME_BOTTOM_LEFT_1),\n                          SizedBox(\n                            height: getSize(13),\n                          ),\n                          getSideImages(\n                              type == HOME_TOP_CENTRE ? HOME_TOP_RIGHT_1 : HOME_BOTTOM_RIGHT_1),\n                        ]),\n                        Column(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\n                          getSideImages(\n                              type == HOME_TOP_CENTRE ? HOME_TOP_LEFT_2 : HOME_BOTTOM_LEFT_2),\n                          SizedBox(\n                            height: getSize(13),\n                          ),\n                          getSideImages(\n                              type == HOME_TOP_CENTRE ? HOME_TOP_RIGHT_2 : HOME_BOTTOM_RIGHT_2),\n                        ]),\n                        Column(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [\n                          getSideImages(\n                              type == HOME_TOP_CENTRE ? HOME_TOP_LEFT_3 : HOME_BOTTOM_LEFT_3),\n                          SizedBox(\n                            height: getSize(13),\n                          ),\n                          getSideImages(\n                              type == HOME_TOP_CENTRE ? HOME_TOP_RIGHT_3 : HOME_BOTTOM_RIGHT_3),\n                        ]),\n                      ],\n                    ),\n                  ],\n                ),\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n\n  getHomeCenterImage(String type) {\n//Removes everything after first '?'\n    //List<String> result = s.split(\"?\");\n    //print(s);\n    //print(this.dashboardModel.getBannerDetails(type).url);\n    return this.dashboardModel.getBannerDetails(type).getDisplayImage();\n    //for(int i=0;i<banners.length;i++)\n  }\n\n  getHomeSliderImage(String type) {\n    List<String> images = this.dashboardModel.getBannerDetails(type).getSliderImage();\n    return Container(\n      height: getSize(200),\n      child: CarouselSlider(\n        options: CarouselOptions(\n          height: getSize(180),\n          enlargeCenterPage: true,\n          autoPlay: true,\n          aspectRatio: 16 / 9,\n          autoPlayCurve: Curves.fastOutSlowIn,\n          enableInfiniteScroll: true,\n          autoPlayAnimationDuration: Duration(milliseconds: 800),\n          viewportFraction: 0.8,\n        ),\n        items: images\n            .map((item) => Container(\n                  margin: EdgeInsets.all(\n                    getSize(6.0),\n                  ),\n                  decoration: BoxDecoration(\n                    borderRadius: BorderRadius.circular(\n                      getSize(8.0),\n                    ),\n                  ),\n                  child: ClipRRect(\n                    borderRadius: BorderRadius.circular(\n                      getSize(10),\n                    ),\n                    child: getImageView(item /*.substring(1)*/,\n                        placeHolderImage: diamond,\n                        fit: BoxFit.cover,\n                        height: getSize(\n                          getSize(243),\n                        ),\n                        width: MathUtilities.screenWidth(context)),\n                  ),\n                ))\n            .toList(),\n      ),\n    );\n  }\n\n  openDiamondList(String id) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_searchResult)\n        .view) {\n      Map<String, dynamic> dict = new HashMap();\n      dict[\"filterId\"] = id;\n      dict[ArgumentConstant.ModuleType] = DiamondModuleConstant.MODULE_TYPE_SEARCH;\n      NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);\n    }\n  }\n\n  getSideImages(String type) {\n    Banners banner = this.dashboardModel.getBannerDetails(type);\n    //banner.url;\n    return InkWell(\n      onTap: () {\n        List<String> result = banner.url.split(\"?\");\n        //print(result[1]);\n        if (result != null && result.length > 1) {\n          print(result[1]);\n          openDiamondList(result[1]);\n        }\n      },\n      child: Container(\n        height: getSize(72),\n        width: getSize(90),\n        child: ClipRRect(\n          borderRadius: BorderRadius.circular(13),\n          child: getImageView(banner.getDisplayImage(),\n              fit: BoxFit.cover,\n              placeHolderImage: diamond,\n              height: getSize(243),\n              width: MathUtilities.screenWidth(context)),\n        ),\n      ),\n    );\n  }\n\n  Future<WebView> openWebView(String type) async {\n    return WebView(\n        initialUrl: this.dashboardModel.getBannerDetails(type).getDisplayImage(),\n        onPageStarted: (url) {\n          // app.resolve<CustomDialogs>().showProgressDialog(context, \"\");\n          setState(() {\n            isLoading = true;\n          });\n        },\n        onPageFinished: (finish) {\n          // app.resolve<CustomDialogs>().hideProgressDialog();\n          setState(() {\n            isLoading = false;\n          });\n        },\n        onWebResourceError: (error) {\n          // print(error);\n          setState(() {\n            isLoading = true;\n          });\n        },\n        javascriptMode: JavascriptMode.unrestricted);\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/components/Screens/DashBoard/Dashboard.dart b/lib/components/Screens/DashBoard/Dashboard.dart
--- a/lib/components/Screens/DashBoard/Dashboard.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/components/Screens/DashBoard/Dashboard.dart	(date 1635308481344)
@@ -30,6 +30,7 @@
 import 'package:diamnow/models/DiamondList/DiamondConfig.dart';
 import 'package:diamnow/models/DiamondList/DiamondConstants.dart';
 import 'package:diamnow/models/FilterModel/BottomTabModel.dart';
+import 'package:diamnow/models/LoginModel.dart';
 import 'package:diamnow/models/SavedSearch/SavedSearchModel.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart';
@@ -85,7 +86,8 @@
 
   _DashboardState({this.moduleType, this.isFromDrawer});
 
-  RefreshController refreshController = RefreshController(initialRefresh: false);
+  RefreshController refreshController =
+      RefreshController(initialRefresh: false);
 
   final searchKey = new GlobalKey();
   final savedSearchKey = new GlobalKey();
@@ -123,7 +125,9 @@
     dict["banners"] = true;
     print(dict);
     NetworkCall<DashboardResp>()
-        .makeCall(() => app.resolve<ServiceModule>().networkService().dashboard(dict), context,
+        .makeCall(
+            () => app.resolve<ServiceModule>().networkService().dashboard(dict),
+            context,
             isProgress: false)
         // !isRefress && !isLoading
         .then((resp) {
@@ -167,7 +171,8 @@
             item.value = this.dashboardModel.newArrival.length.toString();
           }
         }
-      } else if (item.type == DiamondModuleConstant.MODULE_TYPE_STONE_OF_THE_DAY) {
+      } else if (item.type ==
+          DiamondModuleConstant.MODULE_TYPE_STONE_OF_THE_DAY) {
         //TRACK_TYPE_BEST_BUY
         item.value =
             "${this.dashboardModel.tracks[DiamondTrackConstant.TRACK_TYPE_BEST_BUY.toString()].pieces}";
@@ -181,6 +186,8 @@
   }
 
   List<Widget> getToolbarItem() {
+    final key = GlobalKey<State<Tooltip>>();
+    User userAccount = app.resolve<PrefUtils>().getUserDetails();
     List<Widget> list = [];
     diamondConfig.toolbarList.forEach((element) {
       list.add(GestureDetector(
@@ -189,14 +196,17 @@
         },
         child: (element.code == BottomCodeConstant.TBProfile)
             ? Padding(
-                padding: EdgeInsets.only(left: getSize(8.0), right: getSize(Spacing.rightPadding)),
+                padding: EdgeInsets.only(
+                    left: getSize(8.0), right: getSize(Spacing.rightPadding)),
                 child: Container(
                   width: getSize(30),
                   height: getSize(30),
-                  margin: EdgeInsets.only(top: getSize(16), bottom: getSize(16)),
+                  margin:
+                      EdgeInsets.only(top: getSize(16), bottom: getSize(16)),
                   child: Center(
                     child: ClipRRect(
-                      borderRadius: BorderRadius.all(Radius.circular(getSize(15))),
+                      borderRadius:
+                          BorderRadius.all(Radius.circular(getSize(15))),
                       child: getImageView(
                         app.resolve<PrefUtils>().getUserDetails().profileImage,
                         placeHolderImage: placeHolder,
@@ -233,14 +243,16 @@
                                 color: appTheme.whiteColor,
                               ),
                               Padding(
-                                padding: EdgeInsets.only(left: getSize(14.0), top: getSize(0.0)),
+                                padding: EdgeInsets.only(
+                                    left: getSize(14.0), top: getSize(0.0)),
                                 child: Container(
                                   decoration: BoxDecoration(
                                     color: Colors.red,
                                     shape: BoxShape.circle,
                                     // borderRadius: BorderRadius.circular(getSize(5)),
-                                    border:
-                                        Border.all(color: appTheme.whiteColor, width: getSize(2)),
+                                    border: Border.all(
+                                        color: appTheme.whiteColor,
+                                        width: getSize(2)),
                                   ),
                                   height: getSize(10),
                                   width: getSize(10),
@@ -250,14 +262,291 @@
                           ),
                         )),
                   )
-                : Padding(
-                    padding: EdgeInsets.all(getSize(8.0)),
-                    child: Image.asset(
-                      element.image,
-                      height: getSize(20),
-                      width: getSize(20),
-                    ),
-                  ),
+                : (element.code == BottomCodeConstant.TBCreditLimit)
+                    ? Tooltip(
+                        key: key,
+                        message: "Boss",
+                        child: InkWell(
+                          onTap: () {
+                            final dynamic tooltip = key.currentState;
+                            tooltip?.ensureTooltipVisible();
+                          },
+                          child: Padding(
+                              padding: EdgeInsets.all(getSize(8.0)),
+                              child: Image.asset(
+                                element.image,
+                                height: getSize(20),
+                                width: getSize(20),
+                              )),
+                        ),
+                      )
+                    : (element.code == BottomCodeConstant.TBContactUs)
+                        ? InkWell(
+                            onTap: () {
+                              showDialog(
+                                  context: context,
+                                  builder: (context) {
+                                    return SimpleDialog(
+                                      backgroundColor: Colors.white,
+                                      children: [
+                                        // Text(
+                                        //   R.string.screenTitle
+                                        //       .salesPersonDetail,
+                                        //   key: checkTourIsShown()
+                                        //       ? sellerKey
+                                        //       : null,
+                                        //   style: appTheme
+                                        //       .blackNormal18TitleColorblack
+                                        //       .copyWith(
+                                        //     fontWeight: FontWeight.w500,
+                                        //   ),
+                                        // ),
+                                        // SizedBox(
+                                        //   height: getSize(16),
+                                        // ),
+                                        Padding(
+                                          padding: EdgeInsets.only(
+                                            left: getSize(0),
+                                            right: getSize(0),
+                                          ),
+                                          child: Material(
+                                            // elevation: 10,
+                                            // shadowColor: appTheme.shadowColor,
+                                            // borderRadius: BorderRadius.circular(
+                                            //     getSize(5)),
+                                            child: Container(
+                                              decoration: BoxDecoration(
+                                                color: appTheme.whiteColor,
+                                                borderRadius:
+                                                    BorderRadius.circular(
+                                                        getSize(5)),
+                                                // border: Border.all(
+                                                //     width: getSize(1),
+                                                //     color:
+                                                //         appTheme.borderColor),
+                                              ),
+                                              child: Padding(
+                                                padding: EdgeInsets.all(
+                                                  getSize(20),
+                                                ),
+                                                child: Column(
+                                                  crossAxisAlignment:
+                                                      CrossAxisAlignment.start,
+                                                  children: [
+                                                    Row(
+                                                      children: [
+                                                        Text(
+                                                          "Hello, " +
+                                                                  userAccount
+                                                                      .getFullName() ??
+                                                              "-",
+                                                          style: appTheme
+                                                              .black18TextStyle
+                                                              .copyWith(
+                                                            color: appTheme
+                                                                .colorPrimary,
+                                                            fontWeight:
+                                                                FontWeight.w500,
+                                                          ),
+                                                        ),
+                                                        Spacer(),
+
+                                                        // Spacer(),
+                                                        // InkWell(onTap : (){
+
+                                                        // }, child : Image.asset(CrossAxisAlignment.start))
+                                                      ],
+                                                    ),
+                                                    SizedBox(
+                                                      height: getSize(10),
+                                                    ),
+                                                    Row(
+                                                      children: [
+                                                        Text(
+                                                          "Your Customer representativ is,",
+                                                          style: appTheme
+                                                              .black16TextStyle
+                                                              .copyWith(
+                                                            color: appTheme
+                                                                .colorPrimary,
+                                                            fontWeight:
+                                                                FontWeight
+                                                                    .normal,
+                                                          ),
+                                                        ),
+                                                        Spacer(),
+
+                                                        // Spacer(),
+                                                        // InkWell(onTap : (){
+
+                                                        // }, child : Image.asset(CrossAxisAlignment.start))
+                                                      ],
+                                                    ),
+                                                    SizedBox(
+                                                      height: getSize(10),
+                                                    ),
+                                                    Row(
+                                                      children: [
+                                                        Text(
+                                                          this
+                                                                  .dashboardModel
+                                                                  .seller
+                                                                  .firstName +
+                                                              " " +
+                                                              this
+                                                                  .dashboardModel
+                                                                  .seller
+                                                                  .lastName,
+                                                          style: appTheme
+                                                              .black18TextStyle
+                                                              .copyWith(
+                                                            color: appTheme
+                                                                .colorPrimary,
+                                                            fontWeight:
+                                                                FontWeight.w500,
+                                                          ),
+                                                        ),
+                                                        Text(" | "),
+                                                        InkWell(
+                                                          onTap: () {
+                                                            if (!isNullEmptyOrFalse(
+                                                                this
+                                                                    .dashboardModel
+                                                                    .seller
+                                                                    .mobile)) {
+                                                              openURLWithApp(
+                                                                  "tel://${this.dashboardModel.seller.mobile}",
+                                                                  context);
+                                                            }
+                                                          },
+                                                          child: Row(
+                                                            children: [
+                                                              // Image.asset(
+                                                              //   phone,
+                                                              //   width: getSize(16),
+                                                              //   height: getSize(16),
+                                                              // ),
+                                                              // SizedBox(
+                                                              //   width: getSize(10),
+                                                              // ),
+                                                              Text(
+                                                                this
+                                                                        .dashboardModel
+                                                                        .seller
+                                                                        .mobile ??
+                                                                    "-",
+                                                                style: appTheme
+                                                                    .black16TextStyle,
+                                                              ),
+                                                            ],
+                                                          ),
+                                                        ),
+                                                        Spacer(),
+                                                        // Row(
+                                                        //   mainAxisSize: MainAxisSize.min,
+                                                        //   children: [
+                                                        //     InkWell(
+                                                        //         onTap: () async {
+                                                        //           await whatsAppOpen(
+                                                        //               this.dashboardModel.seller.mobile);
+                                                        //         },
+                                                        //         child: Image.asset(
+                                                        //           whatsappIcon,
+                                                        //           height: getSize(20),
+                                                        //           width: getSize(20),
+                                                        //         )),
+                                                        //     SizedBox(width: getSize(18)),
+                                                        //     InkWell(
+                                                        //       onTap: () {
+                                                        //         //change firstname to skypeId, when available on server.
+                                                        //         openSkype(
+                                                        //             this.dashboardModel.seller.firstName);
+                                                        //       },
+                                                        //       child: Image.asset(
+                                                        //         skypeIcon,
+                                                        //         height: getSize(20),
+                                                        //         width: getSize(20),
+                                                        //       ),
+                                                        //     ),
+                                                        //   ],
+                                                        // )
+                                                        // Spacer(),
+                                                        // InkWell(onTap : (){
+
+                                                        // }, child : Image.asset(CrossAxisAlignment.start))
+                                                      ],
+                                                    ),
+                                                    SizedBox(
+                                                      height: getSize(10),
+                                                    ),
+                                                    InkWell(
+                                                      onTap: () async {
+                                                        if (!isNullEmptyOrFalse(
+                                                            this
+                                                                .dashboardModel
+                                                                .seller
+                                                                .email)) {
+                                                          openURLWithApp(
+                                                              "mailto:?subject=Arjiv&body=Arjiv",
+                                                              context);
+                                                        }
+                                                      },
+                                                      child: Row(
+                                                        children: [
+                                                          // Image.asset(
+                                                          //   email,
+                                                          //   width: getSize(16),
+                                                          //   height: getSize(16),
+                                                          // ),
+                                                          Text(
+                                                            "Email :",
+                                                            style: appTheme
+                                                                .black16TextStyle,
+                                                          ),
+                                                          SizedBox(
+                                                            width: getSize(7),
+                                                          ),
+                                                          Text(
+                                                            this
+                                                                    .dashboardModel
+                                                                    .seller
+                                                                    ?.email ??
+                                                                "-",
+                                                            style: appTheme
+                                                                .black16TextStyle,
+                                                          ),
+                                                        ],
+                                                      ),
+                                                    ),
+                                                    // SizedBox(
+                                                    //   height: getSize(10),
+                                                    // ),
+                                                  ],
+                                                ),
+                                              ),
+                                            ),
+                                          ),
+                                        ),
+                                      ],
+                                    );
+                                  });
+                            },
+                            child: Padding(
+                                padding: EdgeInsets.all(getSize(8.0)),
+                                child: Image.asset(
+                                  element.image,
+                                  height: getSize(20),
+                                  width: getSize(20),
+                                )),
+                          )
+                        : Padding(
+                            padding: EdgeInsets.all(getSize(8.0)),
+                            child: Image.asset(
+                              element.image,
+                              height: getSize(20),
+                              width: getSize(20),
+                            ),
+                          ),
       ));
     });
     return list;
@@ -293,8 +582,9 @@
               context,
               diamondConfig.getScreenTitle(),
               bgColor: appTheme.colorPrimary,
-              leadingButton:
-                  isFromDrawer ? getDrawerButton(context, false) : getBackButton(context),
+              leadingButton: isFromDrawer
+                  ? getDrawerButton(context, false)
+                  : getBackButton(context),
               centerTitle: false,
               actionItems: getToolbarItem(),
               isWhite: true,
@@ -331,7 +621,7 @@
                             getHomeSliderImage(HOME_CENTRE),
                             buildTopSection(HOME_BOTTOM_CENTRE),
                             getSavedSearchSection(),
-                            //getRecentSection(),
+                            getRecentSection(),
                             getSalesSection(),
                             SizedBox(
                               height: getSize(20),
@@ -355,12 +645,14 @@
   }
 
   checkTourIsShown() {
-    return (app.resolve<PrefUtils>().isDisplayedTour(PrefUtils().keyHomeTour) == false &&
+    return (app.resolve<PrefUtils>().isDisplayedTour(PrefUtils().keyHomeTour) ==
+            false &&
         isNullEmptyOrFalse(this.dashboardModel) == false);
   }
 
   showTour() {
-    return (app.resolve<PrefUtils>().isDisplayedTour(PrefUtils().keyHomeTour) == false &&
+    return (app.resolve<PrefUtils>().isDisplayedTour(PrefUtils().keyHomeTour) ==
+                false &&
             isNullEmptyOrFalse(this.dashboardModel) == false)
         ? OverlayScreen(
             moduleType,
@@ -407,7 +699,8 @@
                     decoration: BoxDecoration(
                       color: appTheme.colorPrimary,
                       borderRadius: BorderRadius.circular(getSize(5)),
-                      border: Border.all(color: appTheme.colorPrimary, width: getSize(1)),
+                      border: Border.all(
+                          color: appTheme.colorPrimary, width: getSize(1)),
                     ),
                     child: TextField(
                       textAlignVertical: TextAlignVertical(y: 1.0),
@@ -428,16 +721,22 @@
                       decoration: InputDecoration(
                         fillColor: fromHex("#FFEFEF"),
                         enabledBorder: OutlineInputBorder(
-                          borderRadius: BorderRadius.all(Radius.circular(getSize(5))),
-                          borderSide: BorderSide(color: appTheme.dividerColor, width: getSize(1)),
+                          borderRadius:
+                              BorderRadius.all(Radius.circular(getSize(5))),
+                          borderSide: BorderSide(
+                              color: appTheme.dividerColor, width: getSize(1)),
                         ),
                         focusedBorder: OutlineInputBorder(
-                          borderRadius: BorderRadius.all(Radius.circular(getSize(5))),
-                          borderSide: BorderSide(color: appTheme.dividerColor, width: getSize(1)),
+                          borderRadius:
+                              BorderRadius.all(Radius.circular(getSize(5))),
+                          borderSide: BorderSide(
+                              color: appTheme.dividerColor, width: getSize(1)),
                         ),
                         border: OutlineInputBorder(
-                          borderRadius: BorderRadius.all(Radius.circular(getSize(5))),
-                          borderSide: BorderSide(color: appTheme.dividerColor, width: getSize(1)),
+                          borderRadius:
+                              BorderRadius.all(Radius.circular(getSize(5))),
+                          borderSide: BorderSide(
+                              color: appTheme.dividerColor, width: getSize(1)),
                         ),
 
                         hintStyle: appTheme.grey16HintTextStyle.copyWith(
@@ -451,7 +750,8 @@
                         // suffix: widget.textOption.postfixWidOnFocus,
                         suffixIcon: Padding(
                             padding: EdgeInsets.all(getSize(10)),
-                            child: Image.asset(search, color: appTheme.whiteColor)),
+                            child: Image.asset(search,
+                                color: appTheme.whiteColor)),
                       ),
                       onChanged: (String text) {
                         //
@@ -464,7 +764,8 @@
                         Map<String, dynamic> dict = new HashMap();
                         dict["isFromSearch"] = false;
                         dict["isFromManual"] = false;
-                        NavigationUtilities.pushRoute(SearchScreen.route, args: dict);
+                        NavigationUtilities.pushRoute(SearchScreen.route,
+                            args: dict);
                       },
                     ),
                   ),
@@ -636,7 +937,8 @@
   getStoneOfDaySection() {
     if (app
         .resolve<PrefUtils>()
-        .getModulePermission(ModulePermissionConstant.permission_stone_of_the_day)
+        .getModulePermission(
+            ModulePermissionConstant.permission_stone_of_the_day)
         .view) {
       if (!isNullEmptyOrFalse(this.dashboardModel)) {
         if (!isNullEmptyOrFalse(this.dashboardModel.featuredStone)) {
@@ -708,11 +1010,15 @@
                       child: Padding(
                         padding: EdgeInsets.all(getSize(10)),
                         child: ClipRRect(
-                          borderRadius: BorderRadius.all(Radius.circular(getSize(61))),
+                          borderRadius:
+                              BorderRadius.all(Radius.circular(getSize(61))),
                           child: getImageView(
                             "",
                             finalUrl: true //model.img
-                                ? DiamondUrls.image + model.mfgStnId + "/" + "still.jpg"
+                                ? DiamondUrls.image +
+                                    model.mfgStnId +
+                                    "/" +
+                                    "still.jpg"
                                 : "",
                             width: getSize(122),
                             height: getSize(122),
@@ -745,7 +1051,8 @@
                       decoration: BoxDecoration(
                         color: appTheme.lightBGColor,
                         borderRadius: BorderRadius.only(
-                            topLeft: Radius.circular(5), bottomLeft: Radius.circular(5)),
+                            topLeft: Radius.circular(5),
+                            bottomLeft: Radius.circular(5)),
                       ),
                       width: getSize(62),
                       child: Padding(
@@ -783,11 +1090,13 @@
                                   // height: getSize(19),
                                   decoration: BoxDecoration(
                                       color: appTheme.whiteColor,
-                                      borderRadius: BorderRadius.circular(getSize(5))),
+                                      borderRadius:
+                                          BorderRadius.circular(getSize(5))),
                                   child: Padding(
                                     padding: EdgeInsets.all(getSize(2)),
                                     child: Text(
-                                      PriceUtilities.getPercent(model.getFinalDiscount()),
+                                      PriceUtilities.getPercent(
+                                          model.getFinalDiscount()),
                                       style: appTheme.green10TextStyle
                                           .copyWith(fontSize: getFontSize(9)),
                                     ),
@@ -893,10 +1202,14 @@
                       child: Padding(
                         padding: EdgeInsets.all(getSize(10)),
                         child: ClipRRect(
-                          borderRadius: BorderRadius.all(Radius.circular(getSize(61))),
+                          borderRadius:
+                              BorderRadius.all(Radius.circular(getSize(61))),
                           child: getImageView(
                             "",
-                            finalUrl: DiamondUrls.image + model.mfgStnId + "/" + "still.jpg",
+                            finalUrl: DiamondUrls.image +
+                                model.mfgStnId +
+                                "/" +
+                                "still.jpg",
                             width: getSize(122),
                             height: getSize(122),
                             fit: BoxFit.cover,
@@ -928,7 +1241,8 @@
                     decoration: BoxDecoration(
                       color: appTheme.lightBGColor,
                       borderRadius: BorderRadius.only(
-                          topLeft: Radius.circular(5), bottomLeft: Radius.circular(5)),
+                          topLeft: Radius.circular(5),
+                          bottomLeft: Radius.circular(5)),
                     ),
                     width: getSize(62),
                     child: Padding(
@@ -960,11 +1274,13 @@
                                 // height: getSize(19),
                                 decoration: BoxDecoration(
                                     color: appTheme.whiteColor,
-                                    borderRadius: BorderRadius.circular(getSize(5))),
+                                    borderRadius:
+                                        BorderRadius.circular(getSize(5))),
                                 child: Padding(
                                   padding: EdgeInsets.all(getSize(2)),
                                   child: Text(
-                                    PriceUtilities.getPercent(model.getFinalDiscount()),
+                                    PriceUtilities.getPercent(
+                                        model.getFinalDiscount()),
                                     style: appTheme.green10TextStyle
                                         .copyWith(fontSize: getFontSize(9)),
                                   ),
@@ -1096,7 +1412,8 @@
                     dict[ArgumentConstant.ModuleType] =
                         DiamondModuleConstant.MODULE_TYPE_MY_SAVED_SEARCH;
                     dict[ArgumentConstant.IsFromDrawer] = false;
-                    NavigationUtilities.pushRoute(SavedSearchScreen.route, args: dict);
+                    NavigationUtilities.pushRoute(SavedSearchScreen.route,
+                        args: dict);
                   },
                   child: getViewAll(),
                 ),
@@ -1117,10 +1434,13 @@
                     dict[ArgumentConstant.ModuleType] =
                         DiamondModuleConstant.MODULE_TYPE_MY_SAVED_SEARCH;
                     dict[ArgumentConstant.IsFromDrawer] = false;
-                    dict["filterId"] = dashboardModel.savedSearch.list[index].id;
-                    NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);
+                    dict["filterId"] =
+                        dashboardModel.savedSearch.list[index].id;
+                    NavigationUtilities.pushRoute(DiamondListScreen.route,
+                        args: dict);
                   },
-                  child: getSavedSearchItem(this.dashboardModel.savedSearch.list[index]),
+                  child: getSavedSearchItem(
+                      this.dashboardModel.savedSearch.list[index]),
                 );
               }),
         ],
@@ -1147,11 +1467,13 @@
                 decoration: BoxDecoration(
                   color: appTheme.whiteColor,
                   borderRadius: BorderRadius.circular(getSize(5)),
-                  border: Border.all(width: getSize(1), color: appTheme.borderColor),
+                  border: Border.all(
+                      width: getSize(1), color: appTheme.borderColor),
                   // boxShadow: getBoxShadow(context),
                 ),
                 child: Padding(
-                  padding: EdgeInsets.fromLTRB(getSize(20), getSize(8), getSize(20), getSize(8)),
+                  padding: EdgeInsets.fromLTRB(
+                      getSize(20), getSize(8), getSize(20), getSize(8)),
                   child: Row(
                     mainAxisAlignment: MainAxisAlignment.center,
                     crossAxisAlignment: CrossAxisAlignment.center,
@@ -1179,8 +1501,11 @@
                               height: getSize(2),
                             ),
                             Text(
-                              DateUtilities().convertServerDateToFormatterString(model.createdAt,
-                                  formatter: DateUtilities.dd_mmm_yy_h_mm_a),
+                              DateUtilities()
+                                  .convertServerDateToFormatterString(
+                                      model.createdAt,
+                                      formatter:
+                                          DateUtilities.dd_mmm_yy_h_mm_a),
                               style: appTheme.black14TextStyle.copyWith(
                                 color: appTheme.textGreyColor,
                               ),
@@ -1206,10 +1531,11 @@
                   title: "",
                   desc: R.string.commonString.deleteItem,
                   positiveBtnTitle: R.string.commonString.ok,
-                  negativeBtnTitle: R.string.commonString.cancel, onClickCallback: (buttonType) {
+                  negativeBtnTitle: R.string.commonString.cancel,
+                  onClickCallback: (buttonType) {
                 if (buttonType == ButtonType.PositveButtonClick) {
-                  SyncManager.instance.callApiForDeleteSavedSearch(context, model.id,
-                      success: (resp) {
+                  SyncManager.instance.callApiForDeleteSavedSearch(
+                      context, model.id, success: (resp) {
                     this
                         .dashboardModel
                         .savedSearch
@@ -1340,7 +1666,8 @@
                                 width: MathUtilities.screenWidth(context) / 4.6,
                                 decoration: BoxDecoration(
                                   color: appTheme.lightBGColor,
-                                  borderRadius: BorderRadius.circular(getSize(5)),
+                                  borderRadius:
+                                      BorderRadius.circular(getSize(5)),
                                 ),
                                 child: Align(
                                   alignment: Alignment.centerRight,
@@ -1350,12 +1677,15 @@
                                       right: getSize(10),
                                     ),
                                     child: Column(
-                                      mainAxisAlignment: MainAxisAlignment.center,
-                                      crossAxisAlignment: CrossAxisAlignment.center,
+                                      mainAxisAlignment:
+                                          MainAxisAlignment.center,
+                                      crossAxisAlignment:
+                                          CrossAxisAlignment.center,
                                       children: [
                                         Text(
                                           "${model.crt} \n Carat",
-                                          style: appTheme.black14TextStyle.copyWith(
+                                          style: appTheme.black14TextStyle
+                                              .copyWith(
                                             fontWeight: FontWeight.w500,
                                             color: appTheme.colorPrimary,
                                           ),
@@ -1363,18 +1693,23 @@
                                           textAlign: TextAlign.center,
                                         ),
                                         Container(
-                                          margin: EdgeInsets.only(top: getSize(5)),
+                                          margin:
+                                              EdgeInsets.only(top: getSize(5)),
                                           // width: getSize(55),
                                           // height: getSize(19),
                                           decoration: BoxDecoration(
                                               color: appTheme.whiteColor,
-                                              borderRadius: BorderRadius.circular(getSize(5))),
+                                              borderRadius:
+                                                  BorderRadius.circular(
+                                                      getSize(5))),
                                           child: Padding(
                                             padding: EdgeInsets.all(getSize(2)),
                                             child: Text(
-                                              PriceUtilities.getPercent(model.getFinalDiscount()),
+                                              PriceUtilities.getPercent(
+                                                  model.getFinalDiscount()),
                                               style: appTheme.green10TextStyle
-                                                  .copyWith(fontSize: getFontSize(9)),
+                                                  .copyWith(
+                                                      fontSize: getFontSize(9)),
                                             ),
                                           ),
                                         ),
@@ -1402,10 +1737,14 @@
                             child: Padding(
                               padding: EdgeInsets.all(getSize(10)),
                               child: ClipRRect(
-                                borderRadius: BorderRadius.all(Radius.circular(getSize(20))),
+                                borderRadius: BorderRadius.all(
+                                    Radius.circular(getSize(20))),
                                 child: getImageView(
                                   "",
-                                  finalUrl: DiamondUrls.image + model.mfgStnId + "/" + "still.jpg",
+                                  finalUrl: DiamondUrls.image +
+                                      model.mfgStnId +
+                                      "/" +
+                                      "still.jpg",
                                   width: getSize(40),
                                   height: getSize(40),
                                   fit: BoxFit.fitWidth,
@@ -1509,11 +1848,13 @@
                                   ),
                                   child: Column(
                                     mainAxisAlignment: MainAxisAlignment.center,
-                                    crossAxisAlignment: CrossAxisAlignment.center,
+                                    crossAxisAlignment:
+                                        CrossAxisAlignment.center,
                                     children: [
                                       Text(
                                         "12.50 \n Carat",
-                                        style: appTheme.black14TextStyle.copyWith(
+                                        style:
+                                            appTheme.black14TextStyle.copyWith(
                                           fontWeight: FontWeight.w500,
                                           color: appTheme.colorPrimary,
                                         ),
@@ -1521,18 +1862,21 @@
                                         textAlign: TextAlign.center,
                                       ),
                                       Container(
-                                        margin: EdgeInsets.only(top: getSize(5)),
+                                        margin:
+                                            EdgeInsets.only(top: getSize(5)),
                                         // width: getSize(55),
                                         // height: getSize(19),
                                         decoration: BoxDecoration(
                                             color: appTheme.whiteColor,
-                                            borderRadius: BorderRadius.circular(getSize(5))),
+                                            borderRadius: BorderRadius.circular(
+                                                getSize(5))),
                                         child: Padding(
                                           padding: EdgeInsets.all(getSize(2)),
                                           child: Text(
                                             "-44.33 %",
                                             style: appTheme.green10TextStyle
-                                                .copyWith(fontSize: getFontSize(9)),
+                                                .copyWith(
+                                                    fontSize: getFontSize(9)),
                                           ),
                                         ),
                                       ),
@@ -1560,7 +1904,8 @@
                           child: Padding(
                             padding: EdgeInsets.all(getSize(10)),
                             child: ClipRRect(
-                              borderRadius: BorderRadius.all(Radius.circular(getSize(20))),
+                              borderRadius: BorderRadius.all(
+                                  Radius.circular(getSize(20))),
                               child: getImageView(
                                 "",
                                 width: getSize(40),
@@ -1646,6 +1991,7 @@
   }
 
   getSalesSection() {
+    User userAccount = app.resolve<PrefUtils>().getUserDetails();
     if (isNullEmptyOrFalse(this.dashboardModel)) {
       return SizedBox();
     }
@@ -1688,7 +2034,8 @@
                 decoration: BoxDecoration(
                   color: appTheme.whiteColor,
                   borderRadius: BorderRadius.circular(getSize(5)),
-                  border: Border.all(width: getSize(1), color: appTheme.borderColor),
+                  border: Border.all(
+                      width: getSize(1), color: appTheme.borderColor),
                 ),
                 child: Padding(
                   padding: EdgeInsets.all(
@@ -1700,41 +2047,34 @@
                       Row(
                         children: [
                           Text(
-                            this.dashboardModel.seller.firstName +
-                                " " +
-                                this.dashboardModel.seller.lastName,
+                            "Hello, " + userAccount.getFullName() ?? "-",
                             style: appTheme.black18TextStyle.copyWith(
                               color: appTheme.colorPrimary,
                               fontWeight: FontWeight.w500,
                             ),
                           ),
                           Spacer(),
-                          Row(
-                            mainAxisSize: MainAxisSize.min,
-                            children: [
-                              InkWell(
-                                  onTap: () async {
-                                    await whatsAppOpen(this.dashboardModel.seller.mobile);
-                                  },
-                                  child: Image.asset(
-                                    whatsappIcon,
-                                    height: getSize(20),
-                                    width: getSize(20),
-                                  )),
-                              SizedBox(width: getSize(18)),
-                              InkWell(
-                                onTap: () {
-                                  //change firstname to skypeId, when available on server.
-                                  openSkype(this.dashboardModel.seller.firstName);
-                                },
-                                child: Image.asset(
-                                  skypeIcon,
-                                  height: getSize(20),
-                                  width: getSize(20),
-                                ),
-                              ),
-                            ],
-                          )
+
+                          // Spacer(),
+                          // InkWell(onTap : (){
+
+                          // }, child : Image.asset(CrossAxisAlignment.start))
+                        ],
+                      ),
+                      SizedBox(
+                        height: getSize(10),
+                      ),
+                      Row(
+                        children: [
+                          Text(
+                            "Your Customer representativ is,",
+                            style: appTheme.black16TextStyle.copyWith(
+                              color: appTheme.colorPrimary,
+                              fontWeight: FontWeight.normal,
+                            ),
+                          ),
+                          Spacer(),
+
                           // Spacer(),
                           // InkWell(onTap : (){
 
@@ -1744,55 +2084,114 @@
                       SizedBox(
                         height: getSize(10),
                       ),
-                      InkWell(
-                        onTap: () async {
-                          if (!isNullEmptyOrFalse(this.dashboardModel.seller.email)) {
-                            openURLWithApp("mailto:?subject=PnShah&body=PnShah", context);
-                          }
-                        },
-                        child: Row(
-                          children: [
-                            Image.asset(
-                              email,
-                              width: getSize(16),
-                              height: getSize(16),
-                            ),
-                            SizedBox(
-                              width: getSize(10),
-                            ),
-                            Text(
-                              this.dashboardModel.seller?.email ?? "-",
-                              style: appTheme.black16TextStyle,
-                            ),
-                          ],
-                        ),
+                      Row(
+                        children: [
+                          Text(
+                            this.dashboardModel.seller.firstName +
+                                " " +
+                                this.dashboardModel.seller.lastName,
+                            style: appTheme.black18TextStyle.copyWith(
+                              color: appTheme.colorPrimary,
+                              fontWeight: FontWeight.w500,
+                            ),
+                          ),
+                          Text(" | "),
+                          InkWell(
+                            onTap: () {
+                              if (!isNullEmptyOrFalse(
+                                  this.dashboardModel.seller.mobile)) {
+                                openURLWithApp(
+                                    "tel://${this.dashboardModel.seller.mobile}",
+                                    context);
+                              }
+                            },
+                            child: Row(
+                              children: [
+                                // Image.asset(
+                                //   phone,
+                                //   width: getSize(16),
+                                //   height: getSize(16),
+                                // ),
+                                // SizedBox(
+                                //   width: getSize(10),
+                                // ),
+                                Text(
+                                  this.dashboardModel.seller.mobile ?? "-",
+                                  style: appTheme.black16TextStyle,
+                                ),
+                              ],
+                            ),
+                          ),
+                          Spacer(),
+                          // Row(
+                          //   mainAxisSize: MainAxisSize.min,
+                          //   children: [
+                          //     InkWell(
+                          //         onTap: () async {
+                          //           await whatsAppOpen(
+                          //               this.dashboardModel.seller.mobile);
+                          //         },
+                          //         child: Image.asset(
+                          //           whatsappIcon,
+                          //           height: getSize(20),
+                          //           width: getSize(20),
+                          //         )),
+                          //     SizedBox(width: getSize(18)),
+                          //     InkWell(
+                          //       onTap: () {
+                          //         //change firstname to skypeId, when available on server.
+                          //         openSkype(
+                          //             this.dashboardModel.seller.firstName);
+                          //       },
+                          //       child: Image.asset(
+                          //         skypeIcon,
+                          //         height: getSize(20),
+                          //         width: getSize(20),
+                          //       ),
+                          //     ),
+                          //   ],
+                          // )
+                          // Spacer(),
+                          // InkWell(onTap : (){
+
+                          // }, child : Image.asset(CrossAxisAlignment.start))
+                        ],
                       ),
                       SizedBox(
                         height: getSize(10),
                       ),
                       InkWell(
-                        onTap: () {
-                          if (!isNullEmptyOrFalse(this.dashboardModel.seller.mobile)) {
-                            openURLWithApp("tel://${this.dashboardModel.seller.mobile}", context);
+                        onTap: () async {
+                          if (!isNullEmptyOrFalse(
+                              this.dashboardModel.seller.email)) {
+                            openURLWithApp(
+                                "mailto:?subject=Arjiv&body=Arjiv", context);
                           }
                         },
                         child: Row(
                           children: [
-                            Image.asset(
-                              phone,
-                              width: getSize(16),
-                              height: getSize(16),
+                            // Image.asset(
+                            //   email,
+                            //   width: getSize(16),
+                            //   height: getSize(16),
+                            // ),
+                            Text(
+                              "Email :",
+                              style: appTheme.black16TextStyle,
                             ),
                             SizedBox(
-                              width: getSize(10),
+                              width: getSize(7),
                             ),
                             Text(
-                              this.dashboardModel.seller.mobile ?? "-",
+                              this.dashboardModel.seller?.email ?? "-",
                               style: appTheme.black16TextStyle,
                             ),
                           ],
                         ),
                       ),
+                      // SizedBox(
+                      //   height: getSize(10),
+                      // ),
                     ],
                   ),
                 ),
@@ -1817,7 +2216,8 @@
     if (await canLaunch(url())) {
       await launch(url());
     } else {
-      throw showToast("whatspp is not installed in this device", context: context);
+      throw showToast("whatspp is not installed in this device",
+          context: context);
     }
   }
 
@@ -1848,7 +2248,8 @@
     );
   }
 
-  getText(String text, {FontWeight fontWeight = FontWeight.normal, double fontsize = 12}) {
+  getText(String text,
+      {FontWeight fontWeight = FontWeight.normal, double fontsize = 12}) {
     return Text(
       text,
       style: appTheme.black12TextStyle.copyWith(
@@ -1874,7 +2275,8 @@
       child: Container(
         height: getSize(4),
         width: getSize(4),
-        decoration: BoxDecoration(color: appTheme.dividerColor, shape: BoxShape.circle),
+        decoration:
+            BoxDecoration(color: appTheme.dividerColor, shape: BoxShape.circle),
       ),
     );
   }
@@ -1937,7 +2339,8 @@
   openProfile() {
     Map<String, dynamic> dict = new HashMap();
     dict[ArgumentConstant.IsFromDrawer] = false;
-    NavigationUtilities.pushRoute(MyAccountScreen.route, args: dict).then((value) {
+    NavigationUtilities.pushRoute(MyAccountScreen.route, args: dict)
+        .then((value) {
       setState(() {});
     });
   }
@@ -1999,40 +2402,55 @@
                     Container(
                         margin: EdgeInsets.all(10),
                         child: getText(
-                          this.dashboardModel.getBannerDetails(type).description,
+                          this
+                              .dashboardModel
+                              .getBannerDetails(type)
+                              .description,
                           fontWeight: FontWeight.bold,
                           fontsize: 16,
                         )),
                     Row(
                       mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                       children: [
-                        Column(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [
-                          getSideImages(
-                              type == HOME_TOP_CENTRE ? HOME_TOP_LEFT_1 : HOME_BOTTOM_LEFT_1),
-                          SizedBox(
-                            height: getSize(13),
-                          ),
-                          getSideImages(
-                              type == HOME_TOP_CENTRE ? HOME_TOP_RIGHT_1 : HOME_BOTTOM_RIGHT_1),
-                        ]),
-                        Column(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [
-                          getSideImages(
-                              type == HOME_TOP_CENTRE ? HOME_TOP_LEFT_2 : HOME_BOTTOM_LEFT_2),
-                          SizedBox(
-                            height: getSize(13),
-                          ),
-                          getSideImages(
-                              type == HOME_TOP_CENTRE ? HOME_TOP_RIGHT_2 : HOME_BOTTOM_RIGHT_2),
-                        ]),
-                        Column(mainAxisAlignment: MainAxisAlignment.spaceEvenly, children: [
-                          getSideImages(
-                              type == HOME_TOP_CENTRE ? HOME_TOP_LEFT_3 : HOME_BOTTOM_LEFT_3),
-                          SizedBox(
-                            height: getSize(13),
-                          ),
-                          getSideImages(
-                              type == HOME_TOP_CENTRE ? HOME_TOP_RIGHT_3 : HOME_BOTTOM_RIGHT_3),
-                        ]),
+                        Column(
+                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+                            children: [
+                              getSideImages(type == HOME_TOP_CENTRE
+                                  ? HOME_TOP_LEFT_1
+                                  : HOME_BOTTOM_LEFT_1),
+                              SizedBox(
+                                height: getSize(13),
+                              ),
+                              getSideImages(type == HOME_TOP_CENTRE
+                                  ? HOME_TOP_RIGHT_1
+                                  : HOME_BOTTOM_RIGHT_1),
+                            ]),
+                        Column(
+                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+                            children: [
+                              getSideImages(type == HOME_TOP_CENTRE
+                                  ? HOME_TOP_LEFT_2
+                                  : HOME_BOTTOM_LEFT_2),
+                              SizedBox(
+                                height: getSize(13),
+                              ),
+                              getSideImages(type == HOME_TOP_CENTRE
+                                  ? HOME_TOP_RIGHT_2
+                                  : HOME_BOTTOM_RIGHT_2),
+                            ]),
+                        Column(
+                            mainAxisAlignment: MainAxisAlignment.spaceEvenly,
+                            children: [
+                              getSideImages(type == HOME_TOP_CENTRE
+                                  ? HOME_TOP_LEFT_3
+                                  : HOME_BOTTOM_LEFT_3),
+                              SizedBox(
+                                height: getSize(13),
+                              ),
+                              getSideImages(type == HOME_TOP_CENTRE
+                                  ? HOME_TOP_RIGHT_3
+                                  : HOME_BOTTOM_RIGHT_3),
+                            ]),
                       ],
                     ),
                   ],
@@ -2055,7 +2473,8 @@
   }
 
   getHomeSliderImage(String type) {
-    List<String> images = this.dashboardModel.getBannerDetails(type).getSliderImage();
+    List<String> images =
+        this.dashboardModel.getBannerDetails(type).getSliderImage();
     return Container(
       height: getSize(200),
       child: CarouselSlider(
@@ -2104,7 +2523,8 @@
         .view) {
       Map<String, dynamic> dict = new HashMap();
       dict["filterId"] = id;
-      dict[ArgumentConstant.ModuleType] = DiamondModuleConstant.MODULE_TYPE_SEARCH;
+      dict[ArgumentConstant.ModuleType] =
+          DiamondModuleConstant.MODULE_TYPE_SEARCH;
       NavigationUtilities.pushRoute(DiamondListScreen.route, args: dict);
     }
   }
@@ -2138,7 +2558,8 @@
 
   Future<WebView> openWebView(String type) async {
     return WebView(
-        initialUrl: this.dashboardModel.getBannerDetails(type).getDisplayImage(),
+        initialUrl:
+            this.dashboardModel.getBannerDetails(type).getDisplayImage(),
         onPageStarted: (url) {
           // app.resolve<CustomDialogs>().showProgressDialog(context, "");
           setState(() {
Index: lib/components/Screens/More/OfferViewScreen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:diamnow/app/app.export.dart';\nimport 'package:diamnow/app/constant/EnumConstant.dart';\nimport 'package:diamnow/app/localization/app_locales.dart';\nimport 'package:diamnow/app/network/NetworkCall.dart';\nimport 'package:diamnow/app/network/ServiceModule.dart';\nimport 'package:diamnow/app/utils/CommonWidgets.dart';\nimport 'package:diamnow/app/utils/CustomDialog.dart';\nimport 'package:diamnow/app/utils/date_utils.dart';\nimport 'package:diamnow/components/Screens/DiamondList/Widget/DiamondListItemWidget.dart';\nimport 'package:diamnow/components/Screens/Filter/Widget/AddDemand.dart';\nimport 'package:diamnow/models/DiamondList/DiamondConstants.dart';\nimport 'package:diamnow/models/Slot/SlotModel.dart';\nimport 'package:flutter/cupertino.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:intl/intl.dart';\n\nclass OfferViewScreen extends StatefulWidget {\n  static const route = \"OfferView\";\n\n  List<DiamondModel> list;\n\n  OfferViewScreen(\n    Map<String, dynamic> arguments, {\n    Key key,\n  }) : super(key: key) {\n    if (arguments != null) {\n      if (arguments[ArgumentConstant.DiamondList] != null) {\n        list = arguments[ArgumentConstant.DiamondList];\n      }\n    }\n  }\n\n  @override\n  _OfferViewScreenState createState() => _OfferViewScreenState();\n}\n\nclass _OfferViewScreenState extends State<OfferViewScreen> {\n  final _formKey = GlobalKey<FormState>();\n  bool _autoValidate = false;\n  DateTime now = DateTime.now();\n  List<DateModel> days;\n  DateTime pickedDate = DateTime.now();\n  String pd = DateTime.now().toIso8601String();\n  int selectedDate = -1;\n  int selectedSlot ;\n  int selectedVirtualType = -1;\n  List<SlotModel> arrSlots = [];\n  List<SlotModel> disableSlots = [];\n  List<String> virtualList = [\n    VirtualTypesString.phoneCall,\n    VirtualTypesString.webConference,\n    VirtualTypesString.inPerson\n  ];\n  final TextEditingController _virtualTypeController = TextEditingController();\n  final TextEditingController _commentTypeController = TextEditingController();\n\n  @override\n  void initState() {\n    super.initState();\n    days = setDateList();\n    callApiforTimeSlots();\n\n  }\n\n  getDate(int day) {\n    return now.add(Duration(days: day));\n  }\n\n  callApiforTimeSlots() {\n    Map<String, dynamic> req = {};\n    req[\"sort\"] = [\n      {\"end\": \"ASC\"}\n    ];\n    NetworkCall<SlotResp>()\n        .makeCall(\n            () => app.resolve<ServiceModule>().networkService().getSlots(req),\n            context,\n            isProgress: true)\n        .then((resp) async {\n      arrSlots = resp.data.list;\n\n      DateTime now = DateTime.now();\n\n      arrSlots.forEach((element) {\n        DateTime serverStart = DateUtilities().convertServerStringToFormatterDate(element.start);\n\n        if (now.isAfter(DateTime(\n            now.year,\n            now.month,\n            now.day,\n            serverStart.hour,\n            serverStart.minute,\n            serverStart.second,\n            serverStart.millisecond))){\n          element.disable = true;\n        }else{\n          element.disable = false;\n        }\n      });\n      setState(() {});\n    }).catchError((onError) {\n      if (onError is ErrorResp) {\n        app.resolve<CustomDialogs>().confirmDialog(\n              context,\n              title: \"\",\n              desc: onError.message,\n              positiveBtnTitle: R.string.commonString.ok,\n            );\n      }\n    });\n  }\n\n  callApiForRequestForOffice() {\n    Map<String, dynamic> req = {};\n    List<String> diamondId = [];\n    req[\"purpose\"] = _commentTypeController.text;\n    DateTime date = DateTime(pickedDate.year, pickedDate.month, pickedDate.day,\n            pickedDate.hour, pickedDate.minute)\n        .toUtc();\n    req[\"date\"] = DateTime.now().toUtc().toIso8601String();\n    req[\"type\"] = 2;\n    req[\"start\"] = DateUtilities()\n        .getSpecificTimeOfDate(date, 9, 30, 00)\n        .toUtc()\n        .toIso8601String();\n    req[\"end\"] = DateUtilities()\n        .getSpecificTimeOfDate(date, 5, 00, 00)\n        .toUtc()\n        .toIso8601String();\n\n    req[\"meetingType\"] =\n        _virtualTypeController.text == VirtualTypesString.phoneCall\n            ? VirtualTypes.phoneCall\n            : _virtualTypeController.text == VirtualTypesString.webConference\n                ? VirtualTypes.webConference\n                : VirtualTypes.inPerson;\n    req[\"cabinSlot\"] = [arrSlots[selectedSlot]];\n    widget.list.forEach((element) {\n      diamondId.add(element.id);\n    });\n    req['diamonds'] = diamondId;\n\n    NetworkCall<BaseApiResp>()\n        .makeCall(\n            () => app\n                .resolve<ServiceModule>()\n                .networkService()\n                .createOfficerequest(req),\n            context,\n            isProgress: true)\n        .then((resp) async {\n      app.resolve<CustomDialogs>().confirmDialog(context,\n          title: \"\",\n          desc: resp.message,\n          positiveBtnTitle: R.string.commonString.ok, onClickCallback: (type) {\n        Navigator.pop(context);\n      });\n    }).catchError((onError) {\n      if (onError is ErrorResp) {\n        app.resolve<CustomDialogs>().confirmDialog(\n              context,\n              title: \"\",\n              desc: onError.message,\n              positiveBtnTitle: R.string.commonString.ok,\n            );\n      }\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: appTheme.whiteColor,\n      appBar: getAppBar(\n        context,\n        R.string.screenTitle.appointment,\n        leadingButton: getBackButton(context),\n        centerTitle: false,\n      ),\n      body: SingleChildScrollView(\n        child: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            getTopRow(),\n            getDateList(),\n            getTimeSlot(),\n//            setVirtualDropDown(virtualList, (value) {\n//              _virtualTypeController.text = value;\n//            }),\n//            SizedBox(\n//              height: getSize(10),\n//            ),\n//            getCommentTextField(),\n          ],\n        ),\n      ),\n      bottomNavigationBar: Container(\n        height: getSize(70),\n        decoration: new BoxDecoration(\n          color: appTheme.colorPrimary,\n          boxShadow: [\n            BoxShadow(\n              color: Colors.black.withOpacity(0.2),\n              blurRadius: 5.0,\n              spreadRadius: 1.0, //extend the shadow\n              offset: Offset(\n                0, // Move to right 10  horizontally\n                1, // Move to bottom 10 Vertically\n              ),\n            )\n          ],\n        ),\n        child: Row(\n          mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n          children: [\n            Center(\n              child: Container(\n                margin: EdgeInsets.all(getSize(8)),\n                width: getSize(172),\n                height: getSize(40),\n                child: AppButton.flat(\n                  onTap: () {\n                    Navigator.pop(context);\n                  },\n                  textColor: appTheme.whiteColor,\n                  backgroundColor: appTheme.colorPrimary,\n                  text: R.string.commonString.cancel,\n                ),\n              ),\n            ),\n            Center(\n              child: Container(\n                width: getSize(172),\n                height: getSize(50),\n                child: AppButton.flat(\n                    onTap: () {\n                      FocusScope.of(context).unfocus();\n\n                      if (pickedDate == null) {\n                        app.resolve<CustomDialogs>().confirmDialog(\n                              context,\n                              title: \"\",\n                              desc: R.string.errorString.selectAppointmentDate,\n                              positiveBtnTitle: R.string.commonString.ok,\n                            );\n                        return;\n                      } else if (selectedSlot ==null) {\n                        app.resolve<CustomDialogs>().confirmDialog(\n                              context,\n                              title: \"\",\n                              desc: R.string.errorString.selectTimeSlot,\n                              positiveBtnTitle: R.string.commonString.ok,\n                            );\n                        return;\n                      }\n                      showAppoitmentDialog(context);\n                    },\n                    textColor: appTheme.colorPrimary,\n                    backgroundColor: appTheme.whiteColor,\n                    text: R.string.screenTitle.reqOfficeView),\n              ),\n            )\n          ],\n        ),\n      ),\n    );\n  }\n\n  getTopRow() {\n    return Padding(\n      padding: EdgeInsets.only(\n        left: Spacing.leftPadding,\n        right: Spacing.rightPadding,\n        bottom: getSize(10),\n      ),\n      child: Row(\n        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n        crossAxisAlignment: CrossAxisAlignment.center,\n        children: [\n          Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                R.string.screenTitle.availableSlot,\n                style: appTheme.black16TextStyle\n                    .copyWith(fontWeight: FontWeight.w500),\n              ),\n              Padding(\n                padding: EdgeInsets.only(top: getSize(5)),\n                child: Text(\n                  DateUtilities().convertServerDateToFormatterString(\n                      DateTime.now().toIso8601String(),\n                      formatter: DateUtilities.mmm_yyyy),\n                  style: appTheme.black16TextStyle,\n                ),\n              ),\n            ],\n          ),\n          InkWell(\n            onTap: () {\n              showDialog(\n                context: context,\n                barrierDismissible: true,\n                builder: (BuildContext context) {\n                  return Dialog(\n                    insetPadding: EdgeInsets.symmetric(\n                        horizontal: getSize(20), vertical: getSize(20)),\n                    shape: RoundedRectangleBorder(\n                      borderRadius: BorderRadius.circular(getSize(25)),\n                    ),\n                    child: AddDemand(\n                        title: \"OfferView\",\n                        isShowTextField: false,\n                        applyCallBack: (\n                            {String selectedDate, String diamondTitle}) {\n                          pd = selectedDate;\n                          days.forEach((element) {\n                            element.isSelected = false;\n                            if (element.date.day ==\n                                DateTime.parse(selectedDate).day) {\n                              element.isSelected = true;\n                            }\n                          });\n\n                          setState(() {});\n                        }),\n                  );\n                },\n              );\n\n              // DateUtilities().pickDateDialog(context).then((value) {\n              //   pickedDate = value;\n              //   days.forEach((element) {\n              //     if (value.day == element.date.day) {\n              //       element.isSelected = true;\n              //     } else {\n              //       element.isSelected = false;\n              //     }\n              //   });\n              //   setState(() {});\n              // });\n            },\n            child: Container(\n//              width: getSize(175),\n              padding: EdgeInsets.only(bottom: getSize(5)),\n              decoration: BoxDecoration(\n                  border: Border(\n                      bottom: BorderSide(\n                          color: appTheme.dividerColor, width: getSize(2)))),\n              child: Row(\n                mainAxisAlignment: MainAxisAlignment.spaceEvenly,\n                children: [\n                  Text(\n                    pd != null\n                        ? DateUtilities().convertServerDateToFormatterString(\n                            pd,\n                            formatter: DateUtilities.ddmmyyyy_,\n                          )\n                        : R.string.screenTitle.selectCustomDate,\n                    style: appTheme.black16TextStyle,\n                  ),\n                  SizedBox(\n                    width: getSize(10),\n                  ),\n                  Image.asset(\n                    calender,\n                    height: getSize(20),\n                    width: getSize(20),\n                  )\n                ],\n              ),\n            ),\n          )\n        ],\n      ),\n    );\n  }\n\n  getDateList() {\n    return Padding(\n      padding: EdgeInsets.only(left: Spacing.leftPadding),\n      child: Container(\n        height: getSize(100),\n        child: ListView.builder(\n          scrollDirection: Axis.horizontal,\n          itemCount: days.length,\n          itemBuilder: (context, index) {\n            return InkWell(\n              onTap: () {\n                setState(() {\n                  days.forEach((element) {\n                    element.isSelected = false;\n                  });\n                  days[index].isSelected = !days[index].isSelected;\n                  if (days[index].isSelected) {\n                    pickedDate = days[index].date;\n                    pd = pickedDate.toIso8601String();\n                  }\n//                  print()\n//                  if(pickedDate != pd){\n//                    pd = null;\n//                  }\n                });\n              },\n              child: Container(\n                alignment: Alignment.center,\n                padding: EdgeInsets.symmetric(horizontal: getSize(10)),\n                margin: EdgeInsets.only(\n                    left: getSize(10),\n                    right: getSize(10),\n                    top: getSize(15),\n                    bottom: getSize(15)),\n                decoration: BoxDecoration(\n                  borderRadius: BorderRadius.circular(getSize(5)),\n                  color: days[index].isSelected\n                      ? appTheme.colorPrimary\n                      : Colors.transparent,\n                  boxShadow: days[index].isSelected\n                      ? getBoxShadow(context)\n                      : [BoxShadow(color: Colors.transparent)],\n                ),\n                child: Column(\n                  mainAxisAlignment: MainAxisAlignment.center,\n                  children: [\n                    Text(\n                      DateUtilities().convertServerDateToFormatterString(\n                          days[index].date.toString(),\n                          formatter: DateUtilities.dd),\n                      textAlign: TextAlign.center,\n                      style: days[index].isSelected\n                          ? appTheme.white16TextStyle\n                              .copyWith(fontWeight: FontWeight.w500)\n                          : appTheme.black16TextStyle\n                              .copyWith(fontWeight: FontWeight.w500),\n                    ),\n                    Text(\n                      DateUtilities().convertServerDateToFormatterString(\n                          days[index].date.toString(),\n                          formatter: DateUtilities.ee),\n                      textAlign: TextAlign.center,\n                      style: days[index].isSelected\n                          ? appTheme.white16TextStyle\n                          : appTheme.black16TextStyle,\n                    ),\n                  ],\n                ),\n              ),\n            );\n          },\n        ),\n      ),\n    );\n  }\n\n  getTimeSlot() {\n    return Padding(\n      padding: EdgeInsets.only(\n        left: Spacing.leftPadding,\n        right: Spacing.rightPadding,\n        bottom: getSize(30),\n      ),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            R.string.screenTitle.timeSlots,\n            style:\n                appTheme.black16TextStyle.copyWith(fontWeight: FontWeight.w500),\n          ),\n          SizedBox(\n            height: getSize(15),\n          ),\n          isNullEmptyOrFalse(arrSlots)\n              ? Text(R.string.commonString.noSlotFound,\n                  style: appTheme.black14TextStyle)\n              : GridView.builder(\n                  physics: NeverScrollableScrollPhysics(),\n                  shrinkWrap: true,\n                  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(\n                      crossAxisCount: 2, childAspectRatio: 4),\n                  itemCount: arrSlots.length,\n                  itemBuilder: (context, index) {\n                    return InkWell(\n                      onTap: () {\n                        setState(() {\n                          arrSlots.forEach((element) {\n                           // element.\n                          });\n                          if(arrSlots[index].disable){\n\n                          }else {\n                            selectedSlot = index;\n                          }\n                        });\n                      },\n                      child: Container(\n                        margin: EdgeInsets.only(\n                            right: getSize(5), bottom: getSize(5)),\n                        decoration: BoxDecoration(\n                          borderRadius: BorderRadius.circular(getSize(5)),\n                          border: Border.all(color: appTheme.borderColor),\n                          color: arrSlots[index].disable\n                                  ? appTheme.colorPrimaryShadow\n                              : selectedSlot==index\n                                 ? appTheme.colorPrimary\n                                 : Colors.transparent,\n                        ),\n                        child: Center(\n                          child: Text(\n                            \"${arrSlots[index].startTime} - ${arrSlots[index].endTime}\",\n                            style:appTheme.black16TextStyle\n                                // ? appTheme.white16TextStyle\n                                // : appTheme.black16TextStyle,\n                          ),\n                        ),\n                      ),\n                    );\n                  },\n                )\n        ],\n      ),\n    );\n  }\n\n  Widget setVirtualDropDown(List<String> list, Function(String) selectedValue,\n          {bool isPer = false}) =>\n      PopupMenuButton<String>(\n        shape: TooltipShapeBorder(arrowArc: 0.5),\n        onSelected: (newValue) {\n          // add this property\n          selectedValue(newValue);\n        },\n        itemBuilder: (context) => [\n          for (var item in list) getPopupItems(item),\n          PopupMenuItem(\n            height: getSize(30),\n            value: \"Start\",\n            child: SizedBox(),\n          ),\n        ],\n        child: getVirtualTypeDropDown(),\n        offset: Offset(25, 110),\n      );\n\n  getVirtualTypeDropDown() {\n    return AbsorbPointer(\n      child: CommonTextfield(\n          enable: false,\n          textOption: TextFieldOption(\n              prefixWid: getCommonIconWidget(\n                  imageName: company, imageType: IconSizeType.small),\n              hintText: R.string.commonString.selectType,\n              maxLine: 1,\n              keyboardType: TextInputType.text,\n              type: TextFieldType.DropDown,\n              inputController: _virtualTypeController,\n              isSecureTextField: false),\n          textCallback: (text) {\n//                  setState(() {\n//                    checkValidation();\n//                  });\n          },\n          validation: (text) {\n            if (text.isEmpty) {\n              return R.string.errorString.selectVirtualType;\n            } else {\n              return null;\n            }\n          },\n          inputAction: TextInputAction.next,\n          onNextPress: () {\n            FocusScope.of(context).unfocus();\n          }),\n    );\n  }\n\n  getPopupItems(\n    String per,\n  ) {\n    return PopupMenuItem(\n      value: per,\n      height: getSize(20),\n      child: Container(\n        padding: EdgeInsets.symmetric(vertical: getSize(10)),\n        width: MathUtilities.screenWidth(context),\n        child: Row(\n          mainAxisAlignment: MainAxisAlignment.spaceBetween,\n          children: <Widget>[\n            Text(\n              per,\n              style: appTheme.black16TextStyle,\n            )\n          ],\n        ),\n      ),\n    );\n  }\n\n  getCommentTextField() {\n    return CommonTextfield(\n      textOption: TextFieldOption(\n        maxLine: 4,\n        inputController: _commentTypeController,\n        hintText: \"Enter Comments\",\n        formatter: [\n//          WhitelistingTextInputFormatter(new RegExp(alphaRegEx)),\n          BlacklistingTextInputFormatter(RegExp(RegexForEmoji))\n        ],\n        errorBorder: InputBorder.none,\n        //isSecureTextField: false\n      ),\n      validation: (text) {\n        if (text.isEmpty) {\n          return R.string.errorString.enterComments;\n        } else {\n          return null;\n        }\n      },\n      textCallback: (text) {},\n      inputAction: TextInputAction.done,\n      onNextPress: () {\n        FocusScope.of(context).unfocus();\n      },\n    );\n  }\n\n  List<DateModel> setDateList() {\n    return [\n      DateModel(0, getDate(1), false),\n      DateModel(1, getDate(2), false),\n      DateModel(2, getDate(3), false),\n      DateModel(3, getDate(4), false),\n      DateModel(4, getDate(5), false),\n      DateModel(5, getDate(6), false),\n      DateModel(6, getDate(7), false),\n    ];\n  }\n\n  showAppoitmentDialog(BuildContext context) {\n    return showDialog(\n        context: context,\n        builder: (context) {\n          return Dialog(\n            shape: RoundedRectangleBorder(\n                borderRadius: BorderRadius.circular(getSize(15))),\n            insetPadding: EdgeInsets.all(getSize(20)),\n            child: Padding(\n              padding: EdgeInsets.all(getSize(15)),\n              child: Form(\n                key: _formKey,\n                autovalidate: _autoValidate,\n                child: Column(\n                  mainAxisSize: MainAxisSize.min,\n                  children: [\n                    Text(\n                      \"Book Appointment\",\n                      style: appTheme.black16MediumTextStyle,\n                    ),\n                    setVirtualDropDown(virtualList, (value) {\n                      _virtualTypeController.text = value;\n                    }),\n                    SizedBox(\n                      height: getSize(10),\n                    ),\n                    getCommentTextField(),\n                    Padding(\n                      padding: EdgeInsets.only(\n                          top: getSize(20), bottom: getSize(20)),\n                      child: Row(\n                        mainAxisAlignment: MainAxisAlignment.spaceBetween,\n                        children: <Widget>[\n                          Expanded(\n                            child: Container(\n                              decoration: BoxDecoration(\n                                // border: Border.all(\n                                //     color: appTheme.colorPrimary, width: getSize(1)),\n                                borderRadius: BorderRadius.circular(getSize(5)),\n                              ),\n                              child: AppButton.flat(\n                                onTap: () {\n                                  Navigator.pop(context);\n                                },\n                                // borderRadius: getSize(5),\n                                text: R.string.commonString.cancel,\n                                textColor: appTheme.colorPrimary,\n                                backgroundColor: appTheme.whiteColor,\n                              ),\n                            ),\n                          ),\n                          SizedBox(\n                            width: getSize(20),\n                          ),\n                          Expanded(\n                            child: Container(\n                              decoration: BoxDecoration(\n                                  // color: appTheme.colorPrimary,\n                                  // borderRadius: BorderRadius.circular(getSize(5)),\n                                  boxShadow: getBoxShadow(context)),\n                              child: AppButton.flat(\n                                onTap: () {\n                                  FocusScope.of(context).unfocus();\n                                  if (_formKey.currentState.validate()) {\n                                    callApiForRequestForOffice();\n                                  } else {\n                                    _autoValidate = true;\n                                  }\n                                },\n                                // borderRadius: getSize(5),\n                                text: R.string.commonString.btnSubmit,\n                              ),\n                            ),\n                          )\n                        ],\n                      ),\n                    )\n                  ],\n                ),\n              ),\n            ),\n          );\n        });/*.then((value) => Navigator.pop(context, true))*/\n  }\n}\n\nclass DateModel {\n  int id;\n  DateTime date;\n  bool isSelected;\n\n  DateModel(this.id, this.date, this.isSelected);\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/components/Screens/More/OfferViewScreen.dart b/lib/components/Screens/More/OfferViewScreen.dart
--- a/lib/components/Screens/More/OfferViewScreen.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/components/Screens/More/OfferViewScreen.dart	(date 1635247625083)
@@ -43,7 +43,7 @@
   DateTime pickedDate = DateTime.now();
   String pd = DateTime.now().toIso8601String();
   int selectedDate = -1;
-  int selectedSlot ;
+  int selectedSlot;
   int selectedVirtualType = -1;
   List<SlotModel> arrSlots = [];
   List<SlotModel> disableSlots = [];
@@ -54,13 +54,16 @@
   ];
   final TextEditingController _virtualTypeController = TextEditingController();
   final TextEditingController _commentTypeController = TextEditingController();
+  int selectedHourStart = 3;
+  int selectedMinuteStart = 30;
+  int selectedHourEnd = 4;
+  int selectedMinuteEnd = 00;
 
   @override
   void initState() {
     super.initState();
     days = setDateList();
     callApiforTimeSlots();
-
   }
 
   getDate(int day) {
@@ -83,18 +86,13 @@
       DateTime now = DateTime.now();
 
       arrSlots.forEach((element) {
-        DateTime serverStart = DateUtilities().convertServerStringToFormatterDate(element.start);
+        DateTime serverStart =
+            DateUtilities().convertServerStringToFormatterDate(element.start);
 
-        if (now.isAfter(DateTime(
-            now.year,
-            now.month,
-            now.day,
-            serverStart.hour,
-            serverStart.minute,
-            serverStart.second,
-            serverStart.millisecond))){
+        if (now.isAfter(DateTime(now.year, now.month, now.day, serverStart.hour,
+            serverStart.minute, serverStart.second, serverStart.millisecond))) {
           element.disable = true;
-        }else{
+        } else {
           element.disable = false;
         }
       });
@@ -118,15 +116,14 @@
     DateTime date = DateTime(pickedDate.year, pickedDate.month, pickedDate.day,
             pickedDate.hour, pickedDate.minute)
         .toUtc();
-    req["date"] = DateTime.now().toUtc().toIso8601String();
+    req["date"] = date.toUtc().toIso8601String();
+
     req["type"] = 2;
     req["start"] = DateUtilities()
-        .getSpecificTimeOfDate(date, 9, 30, 00)
-        .toUtc()
+        .getSpecificTimeOfDate(date, selectedHourStart, selectedMinuteStart, 00)
         .toIso8601String();
     req["end"] = DateUtilities()
-        .getSpecificTimeOfDate(date, 5, 00, 00)
-        .toUtc()
+        .getSpecificTimeOfDate(date, selectedHourEnd, selectedMinuteEnd, 00)
         .toIso8601String();
 
     req["meetingType"] =
@@ -245,7 +242,7 @@
                               positiveBtnTitle: R.string.commonString.ok,
                             );
                         return;
-                      } else if (selectedSlot ==null) {
+                      } else if (selectedSlot == null) {
                         app.resolve<CustomDialogs>().confirmDialog(
                               context,
                               title: "",
@@ -321,6 +318,35 @@
                                 DateTime.parse(selectedDate).day) {
                               element.isSelected = true;
                             }
+
+                            DateTime now = DateTime.now();
+                            arrSlots.forEach((element) {
+                              element.disable = false;
+                            });
+                            if (now.day == DateTime.parse(selectedDate).day &&
+                                now.month ==
+                                    DateTime.parse(selectedDate).month &&
+                                now.year == DateTime.parse(selectedDate).year) {
+                              selectedSlot = null;
+                              arrSlots.forEach((element) {
+                                DateTime serverStart = DateUtilities()
+                                    .convertServerStringToFormatterDate(
+                                        element.start);
+
+                                if (now.isAfter(DateTime(
+                                    now.year,
+                                    now.month,
+                                    now.day,
+                                    serverStart.hour,
+                                    serverStart.minute,
+                                    serverStart.second,
+                                    serverStart.millisecond))) {
+                                  element.disable = true;
+                                } else {
+                                  element.disable = false;
+                                }
+                              });
+                            }
                           });
 
                           setState(() {});
@@ -392,10 +418,53 @@
                   days.forEach((element) {
                     element.isSelected = false;
                   });
+                  // arrSlots.forEach((element) {
+                  //   element.isSelected = false;
+                  // });
                   days[index].isSelected = !days[index].isSelected;
                   if (days[index].isSelected) {
                     pickedDate = days[index].date;
                     pd = pickedDate.toIso8601String();
+
+                    DateTime now = DateTime.now();
+                    if (now.day == pickedDate.day &&
+                        now.month == pickedDate.month &&
+                        now.year == pickedDate.year) {
+                      arrSlots.forEach((element) {
+                        DateTime serverStart = DateUtilities()
+                            .convertServerStringToFormatterDate(element.start);
+
+                        if (now.isAfter(DateTime(
+                            now.year,
+                            now.month,
+                            now.day,
+                            serverStart.hour,
+                            serverStart.minute,
+                            serverStart.second,
+                            serverStart.millisecond))) {
+                          element.disable = true;
+                        } else {
+                          element.disable = false;
+                        }
+                      });
+                    } else {
+                      arrSlots.forEach((element) {
+                        DateTime serverStart = DateUtilities()
+                            .convertServerStringToFormatterDate(element.start);
+
+                        if (pickedDate.isAfter(DateTime(
+                          now.year,
+                          now.month,
+                          now.day,
+                        ))) {
+                          element.disable = false;
+                        } else {
+                          element.disable = true;
+                        }
+                      });
+                    }
+
+                    setState(() {});
                   }
 //                  print()
 //                  if(pickedDate != pd){
@@ -485,12 +554,23 @@
                       onTap: () {
                         setState(() {
                           arrSlots.forEach((element) {
-                           // element.
+                            // element.
                           });
-                          if(arrSlots[index].disable){
-
-                          }else {
+                          if (arrSlots[index].disable) {
+                          } else {
                             selectedSlot = index;
+                            selectedHourStart = DateUtilities()
+                                .getDateFromString(arrSlots[selectedSlot].start)
+                                .hour;
+                            selectedMinuteStart = DateUtilities()
+                                .getDateFromString(arrSlots[selectedSlot].start)
+                                .minute;
+                            selectedHourEnd = DateUtilities()
+                                .getDateFromString(arrSlots[selectedSlot].end)
+                                .hour;
+                            selectedMinuteEnd = DateUtilities()
+                                .getDateFromString(arrSlots[selectedSlot].end)
+                                .minute;
                           }
                         });
                       },
@@ -501,18 +581,18 @@
                           borderRadius: BorderRadius.circular(getSize(5)),
                           border: Border.all(color: appTheme.borderColor),
                           color: arrSlots[index].disable
-                                  ? appTheme.colorPrimaryShadow
-                              : selectedSlot==index
-                                 ? appTheme.colorPrimary
-                                 : Colors.transparent,
+                              ? appTheme.colorPrimaryShadow
+                              : selectedSlot == index
+                                  ? appTheme.colorPrimary
+                                  : Colors.transparent,
                         ),
                         child: Center(
                           child: Text(
-                            "${arrSlots[index].startTime} - ${arrSlots[index].endTime}",
-                            style:appTheme.black16TextStyle
-                                // ? appTheme.white16TextStyle
-                                // : appTheme.black16TextStyle,
-                          ),
+                              "${arrSlots[index].startTime} - ${arrSlots[index].endTime}",
+                              style: appTheme.black16TextStyle
+                              // ? appTheme.white16TextStyle
+                              // : appTheme.black16TextStyle,
+                              ),
                         ),
                       ),
                     );
@@ -540,7 +620,7 @@
           ),
         ],
         child: getVirtualTypeDropDown(),
-        offset: Offset(25, 110),
+        offset: Offset(25, 220),
       );
 
   getVirtualTypeDropDown() {
@@ -610,14 +690,15 @@
         errorBorder: InputBorder.none,
         //isSecureTextField: false
       ),
-      validation: (text) {
-        if (text.isEmpty) {
-          return R.string.errorString.enterComments;
-        } else {
-          return null;
-        }
-      },
+      // validation: (text) {
+      //   if (text.isEmpty) {
+      //     return R.string.errorString.enterComments;
+      //   } else {
+      //     return null;
+      //   }
+      // },
       textCallback: (text) {},
+
       inputAction: TextInputAction.done,
       onNextPress: () {
         FocusScope.of(context).unfocus();
@@ -719,7 +800,7 @@
               ),
             ),
           );
-        });/*.then((value) => Navigator.pop(context, true))*/
+        }); /*.then((value) => Navigator.pop(context, true))*/
   }
 }
 
Index: assets/Json/Localization.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\n  \"English\": {\n    \"language_code\": \"English\",\n    \"is_default\": true,\n    \"auth_strings\": {\n      \"sendEmailForForgetPassword\": \"We will send an email to your entered email address. Please enter the email address.\",\n      \"editCompanyInformation\": \"Edit Company Information\",\n      \"selectNatureOfOrganization\": \"Select Nature Of Organization\",\n      \"setNewPassword\": \"Set your new password and sign in again.\",\n      \"enterCompanyName\": \"Please enter Company Name.\",\n      \"pleaseEnterCustomerOTP\": \"Please enter customer ride code.\",\n      \"pleaseEnterPickupOTP\": \"Please enter customer pickup code.\",\n      \"pleaseEnterDeliveryOTP\": \"Please enter customer delivery code.\",\n      \"verified\": \"Verified\",\n      \"verify\": \"Verify\",\n      \"addressLineOne\": \"Address\",\n      \"addressLineTwo\": \"Address 2\",\n      \"addressLineThree\": \"Address 3\",\n      \"oldPassword\": \"Old Password\",\n      \"skype\": \"Skype\",\n      \"whatsApp\": \"Whatsapp Number\",\n      \"pinCode\": \"PinCode*\",\n      \"verifyMobileDesc\": \"Please verify mobile number to update the profile.\",\n      \"verifyNow\": \"Verify Now\",\n      \"password\": \"Password\",\n      \"backToHome\": \"Go to Home\",\n      \"forgotPassword\": \"Forgot Password?\",\n      \"signInCap\": \"Sign In\",\n      \"moveToLogIn\": \"Move to Log In\",\n      \"dontHaveAnAccount\": \"Don't have an account? \",\n      \"clickHere\": \"Click here\",\n      \"signUpHere\": \"Sign Up\",\n      \"reset\": \"Reset\",\n      \"haveRegisterCode\": \"Have a registration code?\",\n      \"welcome\": \"Welcome Back!\",\n      \"signInAsGuest\": \"Sign In as Guest\",\n      \"editProfileTitle\": \"Edit Profile\",\n      \"emaillbl\": \"Email\",\n      \"searchInventory\": \"Search product\",\n      \"emailAddress\": \"Email Address*\",\n      \"offlineFilter\": \"Unable to find the desired solitaire? We can help you get the best deal from our offline inventory.\",\n      \"loginDesc\": \"Do you want to enable Touch Id/MPin to unlock Arjiv? Please choose an option to unlock app\",\n      \"searchDiamonds\": \"Search diamonds\",\n      \"continueWithSearch\": \"Do you want to continue your search?\",\n      \"mobileNumber\": \"Mobile Number\",\n      \"searchHint\": \"Search...\",\n      \"selectYourCountry\": \"Select Country\",\n      \"resendCodeIn\": \"Resend code in\",\n      \"resendCode\": \"Resend\",\n      \"haveAnAccount\": \"Already have an account?\",\n      \"dontReceiveCode\": \"If you didn't receive a code!\",\n      \"inLogin\": \"to log in.\",\n      \"resetPwdDesc\": \"Add password and confirm password to reset your password.\",\n      \"backToLogin\": \"Back to Log In\",\n      \"firstName\": \"First Name*\",\n      \"name\": \"Username*\",\n      \"lastName\": \"Last Name*\",\n      \"middleName\": \"Middle Name*\",\n      \"confirmPassword\": \"Confirm Password\",\n      \"currentPasswordErr\": \"Current Password Error\",\n      \"passwordChanged\": \"Password Changed\",\n      \"lblLogInErr\": \"Log In Error\",\n      \"enterYour\": \"Enter your\",\n      \"details\": \"Details\",\n      \"registerCode\": \"Registration Code\",\n      \"registerCodeDesc\": \"Add a registration code to start your enrolment with 3eco.\",\n      \"uploadPhotoDesc\": \"Take a selfie of your self\",\n      \"updateProfile\": \"Update Profile\",\n      \"postalCode\": \"Postal Code*\",\n      \"removeButton\": \"Remove\",\n      \"gender\": \"Gender\",\n      \"male\": \"Male\",\n      \"female\": \"Female\",\n      \"changePassword\": \"Change Password\",\n      \"currentPassword\": \"Current Password*\",\n      \"newPassword\": \"New Password*\",\n      \"confirmNewPassword\": \"Confirm Password*\",\n      \"personalDocuments\": \"Personal Documents\",\n      \"assignedAuto\": \"Assigned Auto\",\n      \"logout\": \"Log Out\",\n      \"logoutConfirmationMsg\": \"Are you sure you want to log out?\",\n      \"address\": \"Address*\",\n      \"addressTwo\": \"Address2*\",\n      \"addressThree\": \"Address3\",\n      \"accountNumber\": \"Account Number\",\n      \"bankerName\": \"Bankers Name\",\n      \"nameLable\": \"Name\",\n      \"ifscCode\": \"IFSC code\",\n      \"businessRegistrationNumbr\": \"Business Registration Number\",\n      \"businessRelationshipPeriod\": \"Business Relationship Period (In Years)\",\n      \"designation\": \"Designation\",\n      \"nameofDesignation\": \"Name of\",\n      \"natureofOrganization\": \"Nature of Organization\",\n      \"uploadFile\": \"No File Choosen\",\n      \"update\": \"UPDATE\",\n      \"resetPwd\": \"Reset Password\",\n      \"pwdReset\": \"Password reset\",\n      \"signInWithMPIN\": \"Sign In with MPIN\",\n      \"pwdChanged\": \"Password Changed\",\n      \"successfullyPwdDesc\": \"You have successfully reset your password. Please use your new password when logging in.\",\n      \"lblProfileSetup\": \"Your profile is set up\",\n      \"lblProfileSetupDesc\": \"We have received your profile details\",\n      \"hoursAvailable\": \"Total Shifttime\",\n      \"confirmStoneDetail\": \"Confirm Stone Detail\",\n      \"companyName\": \"Company Name\",\n      \"invoiceDate\": \"Invoice Date\",\n      \"companyCode\": \"Company Code\",\n      \"saveCompanyDetails\": \"Save Company Details\",\n      \"passwordNotChange\": \"Password does not match\",\n      \"rememberPassword\": \"Remember Password?\",\n      \"sendOTP\": \"Send OTP\",\n      \"resendNow\": \"Resend Now\",\n      \"didNotReceiveOTP\": \"If you didn't receive an OTP!\",\n      \"sendOTPToEmail\": \"We will send an OTP to your entered email address or user name. Please enter the email address or user name.\",\n      \"enterOTP\": \"The OTP has been sent to your registered Email address. Please enter the OTP.\",\n      \"backToSignIn\": \"Back to Sign In\",\n      \"passwordResetSuccessfully\": \"Password reset successfully.\",\n      \"emailAndUname\": \"Email/UserName\",\n      \"signUp\": \"Sign Up\",\n      \"promotionText\": \"Promotional offers, newsletters and stock update\",\n      \"termsAndCondition\": \"Terms and Condition\",\n      \"mustAgreeTermsAndCondition\": \"You must agree to terms and condition to Sign In as Guest User\",\n      \"forgotPasswordTitle\": \"Forgot Password\",\n      \"uploadKYC\": \"Upload KYC\",\n      \"uploadKycDesc\": \"Please upload your KYC documents to access full features.\",\n      \"hintPhotoIdentityProof\": \"Photo Identity Proof*\",\n      \"hintBussinerssProof\": \"Business Identity Proof*\",\n      \"btnFileUpload\": \"File Upload\",\n      \"pleaseUploadPhotoProof\": \"Please upload Photo Identity Proof.\",\n      \"pleaseUploadBussinessProof\": \"Please upload Business Identity Proof.\",\n      \"pleaseSelectFileFormat\": \"Please upload file in any of following formats : .jpg\",\n      \"kycSubmitted\": \"KYC Submitted\",\n      \"kycSubmmittedDesc\": \"Your KYC has been submitted successfully.\",\n      \"btnMoveToHome\": \"Move to Home\",\n      \"kYCRejected\": \"KYC Rejected\",\n      \"kycRejectedDesc\": \"Your KYC has been rejected. Please upload your KYC documents again to access all features.\"\n    },\n    \"common_string\": {\n      \"seeMore\": \"See More\",\n      \"seeLess\": \"See Less\",\n      \"modify\": \"Modify\",\n      \"delete\": \"Delete\",\n      \"details\": \"Details\",\n      \"edit\": \"Edit\",\n      \"addDemand\": \"Add Demand/Order Request\",\n      \"demandTitle\": \"Demand Title\",\n      \"pleaseEnterDemandTitle\": \"Please enter Demand Title\",\n      \"demandAddedSuccessfully\": \"Your new demand request has been submitted successfully\",\n      \"demandadded\": \"Demand added\",\n      \"selectAtleastOneFilter\": \"Please\",\n      \"savedSearch\": \"Saved Search\",\n      \"searchSavedSearch\": \"Search Saved Search\",\n      \"viewDetails\": \"View Details\",\n      \"viewLessDetails\": \"View Less Details\",\n      \"myDemand\": \"My Demand\",\n      \"date\": \"Date\",\n      \"selectTime\": \"Select Time\",\n      \"selectDate\": \"Select Date\",\n      \"offerVelidTill\": \"Offer Valid Till\",\n      \"officeVisitDate\": \"Office Visit Date\",\n      \"all\": \"All\",\n      \"status\": \"Status\",\n      \"save\": \"Save\",\n      \"verify\": \"Verify\",\n      \"readMore\": \"Read More\",\n      \"goodMorning\": \"Good Morning\",\n      \"goodAfternoon\": \"Good Afternoon\",\n      \"goodEvening\": \"Good Evening\",\n      \"btnSkip\": \"Skip\",\n      \"btnUpdate\": \"Update\",\n      \"btnContinue\": \"Continue\",\n      \"btnContinueCap\": \"CONTINUE\",\n      \"btnEdit\": \"Edit\",\n      \"btnSubmit\": \"Submit\",\n      \"btnNextCap\": \"Next\",\n      \"btnSaveCap\": \"Update Password\",\n      \"btnWithdrawCap\": \"WITHDRAW\",\n      \"btnSaveAndContinueCap\": \"SAVE & CONTINUE\",\n      \"btnUnregister\": \"Unregistered Mobile\",\n      \"btnClose\": \"Close\",\n      \"remove\": \"Remove\",\n      \"refresh\": \"Refresh\",\n      \"fetchLocationMessage\": \"Please wait we are fetching your location\",\n      \"done\": \"Done\",\n      \"doneCap\": \"DONE\",\n      \"cancel\": \"Cancel\",\n      \"allow\": \"Allow\",\n      \"countryFirst\": \"Please Select Country First\",\n      \"apply\": \"Apply\",\n      \"cancelCap\": \"CANCEL\",\n      \"uploadCap\": \"UPLOAD\",\n      \"yesCancelCap\": \"YES\",\n      \"upload\": \"Upload\",\n      \"ok\": \"Ok\",\n      \"home\": \"Home\",\n      \"goToMyWatchList\": \"Go to My Watchlist\",\n      \"goToMyOrder\": \"Go to My Order\",\n      \"gotToMyOffer\": \"Go to My Offer\",\n      \"gotToMyHold\": \"Go to My Hold\",\n      \"gotToMyEnquiry\": \"Go to My Enquiry\",\n      \"gotToMyBid\": \"Go to My Bid\",\n      \"gotToMyReminder\": \"Go to My Reminder\",\n      \"gotToMyComments\": \"Go to My Notes\",\n      \"yes\": \"Yes\",\n      \"no\": \"No\",\n      \"selectCountry\": \"Select Country\",\n      \"clickHere\": \"Click Here\",\n      \"btnAddNewAddress\": \"ADD NEW ADDRESS\",\n      \"btnCancel\": \"CANCEL\",\n      \"btnTakeSelfie\": \"Take Selfie\",\n      \"successfully\": \"Successfully\",\n      \"lblAppExit\": \"Are you sure you want to exit?\",\n      \"lblExit\": \"Exit\",\n      \"openAppSetting\": \"Open Settings\",\n      \"lblOr\": \"Or\",\n      \"fromLbl\": \"From\",\n      \"toLbl\": \"To\",\n      \"showMore\": \"Show More\",\n      \"showLess\": \"Show Less\",\n      \"selectCity\": \"Select City\",\n      \"notYetAvailable\": \"Not yet available\",\n      \"updateAvailable\": \"Update Available!\",\n      \"downloadAppFrom\": \"Download application update from\",\n      \"playStore\": \"Play Store\",\n      \"skipUpdate\": \"Skip Update\",\n      \"stateFirst\": \"Please Select State First\",\n      \"reallyExit\": \"Really exit?\",\n      \"alert\": \"Alert!\",\n      \"loading\": \"Loading\",\n      \"error\": \"Error\",\n      \"jumpToTop\": \"Jump to top\",\n      \"ihaveread\": \"I have read and accept\",\n      \"selected\": \"Select\",\n      \"lbllogout\": \"Log Out\",\n      \"lblThanx\": \"Thank you\",\n      \"lblSelectCity\": \"Select City\",\n      \"lblSelectState\": \"Select State\",\n      \"lblSelectCountry\": \"Select Country\",\n      \"lblCity\": \"City\",\n      \"lblCountry\": \"Country\",\n      \"lblName\": \"Name\",\n      \"lblPinCode\": \"Zip Code\",\n      \"lblMobileNumber\": \"Mobile Number\",\n      \"lblState\": \"State\",\n      \"lblCode\": \"Code:\",\n      \"lblFaxNumber\": \"Fax Number\",\n      \"lblOrderNo\": \"Order No:\",\n      \"lblOrderItem\": \"Order Item:\",\n      \"lblDelivered\": \"Delivered\",\n      \"lblTicketReady\": \"Your ticket is ready\",\n      \"lblPersonTicket\": \"Ticket of 2 person\",\n      \"lblShuttleBus\": \"Shuttle Bus\",\n      \"lblPickup\": \"Pickup\",\n      \"lblDropoff\": \"Dropoff\",\n      \"lblPassenger\": \"Passenger\",\n      \"lblDeliveryNo\": \"Delivery No.\",\n      \"lblPrice\": \"Price\",\n      \"lblValid\": \"Valid For\",\n      \"lblRenew\": \"Renew\",\n      \"lblDeparture\": \"Departure\",\n      \"lblArrived\": \"Arrived\",\n      \"lblSendtoFriend\": \"Send to friend\",\n      \"popupRenewTitle\": \"Renew ticket\",\n      \"popupRenewDesc\": \"Lorem ipsum dolor sit amet\",\n      \"popuplblPassenger\": \"Passenger\",\n      \"popuplblCancel\": \"Cancel\",\n      \"popupbtnRenew\": \"Renew\",\n      \"ridelblAwesome\": \"Awesome\",\n      \"ridebtnDone\": \"Done\",\n      \"offerPricePerCarat\": \"Offered Price (Cts)\",\n      \"dropOffText\": \"Dropoff\",\n      \"pickUpText\": \"Pickup\",\n      \"startAtText\": \"Start at\",\n      \"endAtText\": \"End at\",\n      \"personText\": \"person\",\n      \"paymentScreenTitle\": \"Payment\",\n      \"pickuplbl\": \"Pickup\",\n      \"droplbl\": \"Dropoff\",\n      \"makePaymentButtonlbl\": \"Make payment\",\n      \"pessangerslbl\": \"Passengers\",\n      \"priceBreakuplbl\": \"Price Breakup\",\n      \"tripPricelbl\": \"Trip Price\",\n      \"taxeslbl\": \"Taxes\",\n      \"totallbl\": \"Total\",\n      \"cardNumberhint\": \"Card Number\",\n      \"cvvhint\": \"CVV\",\n      \"datehint\": \"MM/YY\",\n      \"btnTryAgain\": \"Try Again\",\n      \"cityFirst\": \"Please select city first\",\n      \"enterFareDetails\": \"Enter Sales Details\",\n      \"fromDate\": \"From Date\",\n      \"toDate\": \"Selected Date\",\n      \"btnUnderstand\": \"I Understand\",\n      \"applicationUpdate\": \"Application Update\",\n      \"newVersionMessage\": \"A new version of application is available\",\n      \"paymentCollected\": \"Payment Collected\",\n      \"addComment\": \"Add a note\",\n      \"more\": \"More\",\n      \"carat\": \"Carat\",\n      \"pcs\": \"Pcs\",\n      \"cts\": \"Cts\",\n      \"disc\": \"Disc %\",\n      \"avgPriceCrt\": \"Avg. Price/Ct\",\n      \"amount\": \"Amount\",\n      \"confirmStone\": \"Confirm Stone\",\n      \"confirm\": \"Confirm\",\n      \"offered\": \"Offered\",\n      \"validTill\": \"Valid till\",\n      \"remark\": \"Remark\",\n      \"color\": \"Color\",\n      \"colorGroup\": \"Color Group\",\n      \"colorFancy\": \"Fancy\",\n      \"colorWhite\": \"White\",\n      \"clarity\": \"Clarity\",\n      \"clarityGroup\": \"Clarity Group\",\n      \"intensity\": \"Intensity\",\n      \"overtone\": \"Overtone\",\n      \"selectBusinessType\": \"Select Business Type\",\n      \"selectState\": \"Select State\",\n      \"search\": \"Search\",\n      \"profile\": \"My Profile\",\n      \"personal\": \"Personal\",\n      \"business\": \"Business\",\n      \"documents\": \"Documents\",\n      \"noSlotFound\": \"No slots found\",\n      \"noDiamondFound\": \"No Diamonds matching your search. Please add you demand.\",\n      \"selectType\": \"Select Virtual Type\",\n      \"noSavedSearch\": \"No Saved Search Exists\",\n      \"searchCity\": \"Search city\",\n      \"searchCountry\": \"Search Country\",\n      \"searchState\": \"Search state\",\n      \"notifications\": \"Notification\",\n      \"enter2Stone\": \"Please select at least 2 stone to compare.\",\n      \"bidDesc\": \"is currently located in India and for delivery in any other country apart from india will take at least 7-10 working days.\",\n      \"packetNo\": \"Packet No:\",\n      \"quit\": \"Quit\",\n      \"agree\": \"I Agree\",\n      \"laterToday\": \"Later today\",\n      \"later\": \"Later\",\n      \"toMorrow\": \"Tomorrow\",\n      \"nextWeek\": \"Next week\",\n      \"chooseAnother\": \"Choose another\",\n      \"dateTime\": \"Date & time\",\n      \"language\": \"Language\",\n      \"diamNow\": \"DiamNow\",\n      \"noDocument\": \"No Documents Found\",\n      \"searchBusinessType\": \"Search Business Type\",\n      \"hours\": \"Hours\",\n      \"hrs\":\"hrs\",\n      \"min\":\"min\",\n      \"sec\":\"sec\",\n      \"offerExpired\":\"Offer Expired\",\n      \"minutes\": \"Minutes\",\n      \"seconds\": \"Seconds\",\n      \"bidEndsIn\": \"Bid ends in:\",\n      \"shape\": \"Shape\",\n      \"download\": \"Download\",\n      \"share\": \"Share\",\n      \"placeOrder\": \"Place order\",\n      \"diamond250\": \">250 stone Found.\",\n      \"narrowSearch\": \"Please narrow your search criteria.\",\n      \"enterComment\": \"Please Enter Note\",\n      \"deleteItem\": \"Are you sure you want to delete?\",\n      \"shippingPolicy\": \"Shipping Policy\",\n      \"offerSundayRestriction\": \"Sunday is not allowed. Office working days are Monday to Saturday\",\n      \"weekAgo\": \"1 week ago\",\n      \"lastWeek\": \"Last Week\",\n      \"dayAgo\": \"days ago\",\n      \"onedayAgo\": \"1 day ago\",\n      \"yesterday\": \"Yesterday\",\n      \"hourAgo\": \"hours ago\",\n      \"onehourAgo\": \"1 hour ago\",\n      \"anhourAgo\": \"An hour ago\",\n      \"mintuesAgo\": \"minutes ago\",\n      \"onemintuesAgo\": \"1 minute ago\",\n      \"amintueAgo\": \"A minute ago\",\n      \"secondsAgo\": \"seconds ago\",\n      \"justNow\": \"Just Now\",\n      \"today\": \"Today\",\n      \"past\": \"Past\",\n      \"selectPhotoProof\": \"Select document\",\n      \"pleaseSelectPhotoProof\": \"Please select document\",\n      \"selectBusinessProof\": \"Select document\",\n      \"pleaseSelectBusinessProof\": \"Please select document\",\n      \"touchId\": \"Touch Id\",\n      \"faceId\": \"Face Id\",\n      \"enableTouchId\": \"Enable Touch Id to unlock Arjiv?\",\n      \"enableFaceId\": \"Enable Face Id to unlock Arjiv?\",\n      \"unlockWithTouchId\": \"Unlock Arjiv using Touch Id\",\n      \"unlockWithFaceId\": \"Unlock Arjiv using Face Id.\",\n      \"mPin\": \"MPin\",\n      \"holdMemoStatusDiamondOrder\": \"You can not confirmed stones which are already in hold or memo status\",\n      \"holdMemoStatusDiamondOffer\": \"You can not make an offer for a stones which are already in hold or memo status\",\n      \"holdMemoStatusDiamondAddToCart\" :\"You can not add stones to cart which are already in hold or memo status\",\n      \"holdMemoStatusDiamondMoreActions\" : \"You can not perform any action on stones which are already in hold or memo status\",\n      \"searchStoneIdCertificateNo\": \"Search Stone Id/Certificate No\",\n      \"createMPin\": \"Create New MPin\",\n      \"reentermpin\": \"Reenter MPin\",\n      \"forgotmpin\": \"Forgot MPIN?\",\n      \"verifympin\": \"Verify Mpin\",\n      \"enteryoursixdigitcode\": \"Enter your 6 digit MPIN\",\n      \"changempin\": \"Change MPin\",\n      \"faceidandtouchnotenable\": \"FaceId/TouchId is not enabled in your phone, Please enable to use this feature\",\n      \"enablempintounlockmydiamonds\": \"Enable MPin to unlock app? It will disable Touch Id. Are you sure you want to continue?\",\n      \"enabletouchidtounlockmydiamonds\": \"Enable Touch Id to unlock app? It will disable MPin. Are you sure you want to continue?\",\n      \"rememberme\": \"Remember Me\",\n      \"usertouchid\": \"Use Touch Id\",\n      \"usempin\": \"Use MPin\",\n      \"filesarenotavailableonserver\": \"Files are not available on server,Please try again later\",\n      \"allfileshavebeendownloaded\": \"All files have been downloaded.\",\n      \"filesisdownloaded\": \"files is downloaded\",\n      \"filesisnotdownloadedbcz\": \"files is not downloaded because it's not exist in the server.\",\n      \"downloading canceled\": \"Downloading canceled\",\n      \"downloading\": \"Downloading...\",\n      \"expirydate\": \"Expiry Date :\",\n      \"youreallywanttodelete\": \"You really want to delete\"\n    },\n    \"error_string\": {\n\n      \"accessDenide\": \"Access denied\",\n      \"pleaseSelectOfferTillDate\": \"Please select offer till date.\",\n      \"pleaseSelectOfficeVisitDate\": \"Please select office visit date\",\n      \"deleteStoneMsg\": \"Are you sure you want to delete stone(s) ?\",\n      \"acceptTermsAndCondition\": \"Please accept terms and condition\",\n      \"diamondCompareRemove\": \"At least 2 Stones are required to compare.\",\n      \"diamondSelectionError\": \"Please select at least one stone.\",\n      \"pleaseEnterCompanyName\": \"Please enter company name.\",\n      \"selectInvoiceDate\": \"Select Invoice Date\",\n      \"pleaseEnterComment\": \"Please enter comment.\",\n      \"pleaseEnterRemarks\": \"Please enter remarks.\",\n      \"selectExpiryDate\": \"Please select expiry date.\",\n      \"enterOTP\": \"Please enter code\",\n      \"pleaseEnterOTP\": \"Please enter verification code.\",\n      \"enteredCodeNotMatching\": \"Entered code is not matching. Try again\",\n      \"selectCancellationReason\": \"Please select reason for cancellation\",\n      \"enterDesc\": \"Please enter description.\",\n      \"enterTitle\": \"Please enter title.\",\n      \"enterEmailOrPhone\": \"Please enter email/mobile.\",\n      \"enterPassword\": \"Password can't be empty. Please enter Password.\",\n      \"enterConfirmPassword\": \"Please enter confirm password.\",\n      \"enterSkype\": \"Please Enter Skype.\",\n      \"enterRegisterCode\": \"Please enter registration code\",\n      \"enterEmail\": \"Please enter the Email address.\",\n      \"enterPhone\": \"Please enter the Mobile Number.\",\n      \"enterTelePhone\": \"Please enter the TelePhone Number.\",\n      \"enterFax\": \"Please enter Fax Number.\",\n      \"enterDesignation\": \"Please select the designation.\",\n      \"selectNatureOfOrganization\": \"Please select the Nature Of The Organization.\",\n      \"selectCountry\": \"Please select the country.\",\n      \"selectState\": \"Please select the State.\",\n      \"selectCity\": \"Please select the City.\",\n      \"enterBusinessType\": \"Please select the Business Type.\",\n      \"enterUsername\": \"Username can't be empty. Please enter Username.\",\n      \"enterValidEmail\": \"Please enter the valid Email address.\",\n      \"enterValidPhone\": \"Please enter the valid Mobile Number.\",\n      \"enterValidTelePhone\": \"Please enter the valid Telephone Number.\",\n      \"enterValidFaxNumber\": \"Please enter the valid fax number.\",\n      \"enterValidWhatsappPhone\": \"Please enter the valid WhatsApp Mobile Number.\",\n      \"enterValidPassword\": \"Please enter 6 characters or long password.\",\n      \"mismatchPassword\": \"Password and confirm password is not matching.\",\n      \"enterFirstName\": \"Please enter the First Name.\",\n      \"enterMiddleName\": \"Please enter the Middle Name.\",\n      \"enterPinCode\": \"Please enter the Pin Code.\",\n      \"enterName\": \"Please enter name.\",\n      \"enterLastName\": \"Please enter the Last Name.\",\n      \"enterAddress\": \"Please enter address.\",\n      \"enterValidPinCode\": \"Please enter the Valid PinCode.\",\n      \"enterValidZipCode\": \"Please enter the valid Zip Code.\",\n      \"enterValidAddress\": \"Please enter 10 characters or long address.\",\n      \"enterPostalCode\": \"Please enter postal code.\",\n      \"enterValidPostalCode\": \"Please enter 6 digit numeric postal code.\",\n      \"enterCurrentPassword\": \"Please enter current password.\",\n      \"enterNewPassword\": \"Please enter new password.\",\n      \"enterFareAmount\": \"Please enter sales amount.\",\n      \"enterOrderNO\": \"Please enter order no.\",\n      \"enterServiceType\": \"Please select type of service.\",\n      \"enterPaymentType\": \"Please select payment type.\",\n      \"enterValidFareAmount\": \"Sales amount can not be zero.\",\n      \"enterPassangerNo\": \"Please enter no. of passengers.\",\n      \"enterValidPassangerNo\": \"No. of passengers can not be zero.\",\n      \"notEnterMorePassangerNo\": \"No. of passengers can not be more than seven.\",\n      \"drivingLicenseValidationText\": \"Please enter 15 digit alphanumeric driving licence number.\",\n      \"PANCardValidationText\": \"Please enter 10 digit alphanumeric PAN card number.\",\n      \"selectFromDate\": \"Please select from date\",\n      \"selectToDate\": \"Please select to date\",\n      \"fromGreaterTo\": \"Selected date must be greater than current date\",\n      \"wrongPassword\": \"Password must contains, Minimum 8 characters, 1 uppercase alphabet, 1 lower case alphabet, 1 digit, 1 special charater\",\n      \"fromValueGreateThanTo\": \"From Value should be less than or equal to To value\",\n      \"toValueGreaterThanFrom\": \"To Value should be greater than or equal to From value\",\n      \"pleaseEnterCompanyCode\": \"Please enter company code\",\n      \"enterSamePassword\": \"Confirm Password does not match with New Password. Please enter confirm password same as New Password.\",\n      \"selectAppointmentDate\": \"Please select appointment date\",\n      \"selectTimeSlot\": \"Please select time slot\",\n      \"enterComments\": \"Please enter comment\",\n      \"selectVirtualType\": \"Please select virtual type\",\n      \"versionError\": \"Version Error\",\n      \"enterParty\": \"Please select and enter party.\",\n      \"enterBuyer\": \"Please select and enter buyer name.\",\n      \"enterSales\":  \"Please select and enter salesman.\",\n      \"enterHoldTime\":\"Please select and enter time.\",\n      \"minHoldTime\": \"Min Hold Time: 1\",\n      \"maxHoldTime\": \"Max Hold Time: 72\"\n    },\n    \"no_data strings\": {\n      \"noDataFound\": \"No record found\"\n    },\n    \"screen_title\": {\n      \"placeAnOffer\": \"Apply Offer\",\n      \"addedInWatchList\": \"Added in Watchlist\",\n      \"addedInOffer\": \"Offer Submitted\",\n      \"addedInCart\": \"Added in Cart\",\n      \"addedInBid\": \"Added in Bid\",\n      \"myEnquiry\": \"My Enquiry\",\n      \"delete\": \"Delete\",\n      \"addDemand\": \"Order Request\",\n      \"matchPair\": \"Match Pair\",\n      \"layout\": \"Layout\",\n      \"savedAndSearch\": \"Save & Search\",\n      \"updateAndSearch\": \"Update & Search\",\n      \"upcoming\": \"Upcoming\",\n      \"bidPricePerCt\": \"Bid Price / Ct\",\n      \"bidDisc\": \"Bid Disc\",\n      \"bidValue\": \"Bid Value\",\n      \"bidStone\": \"Bid Stone\",\n      \"myCart\": \"My Cart\",\n      \"myComment\": \"My Notes\",\n      \"compare\": \"Compare\",\n      \"compareStones\": \"Compare Stone\",\n      \"statusHold\": \"On Hold\",\n      \"statusOnMemo\": \"On Memo\",\n      \"statusAvailable\": \"Available\",\n      \"statusNew\": \"New Arrival\",\n      \"statusOffer\": \"Stone Of The Day/Promotion\",\n      \"statusMyHold\": \"My Hold\",\n      \"signup\": \"Sign up\",\n      \"addToOffice\": \"Add To Office\",\n      \"addComment\": \"Add Comment\",\n      \"addEnquiry\": \"Enquiry\",\n      \"finalOffer\": \"Final Offer\",\n      \"finalDisc\": \"Final Disc\",\n      \"finalRate\": \"Final Rate\",\n      \"finalValue\": \"Final Value\",\n      \"orderMsg\": \"1) The prices mentioned over here are fixed and hence not negotiable. \\\\\\\\n2) The grading, parameters mentioned on our website beyond GIA's Grading.\",\n      \"orderMsg1\": \"1) The prices mentioned over here are fixed and hence not negotiable.\",\n      \"orderMsg2\" : \"2) The grading, parameters mentioned on our website beyond GIA's Grading.\",\n      \"offerMsg\": \"Offered stone will directly be confirmed if the price gets approved so we request you to be sure before offering. Any stone(s) put in Offer list is not kept on hold for you as it is available for other customer's as well.\",\n      \"note\": \"Note\",\n      \"hours\": \"Hours\",\n      \"offeredDisc\": \"Offered Dis\",\n      \"offeredPriceCt\": \"Offered Pr/Ct\",\n      \"addOffer\": \"Add Offer\",\n      \"expDiscPer\": \"Expected Discount\",\n      \"todayDiscPer\": \"Today's Disc\",\n      \"searchResult\": \"Search Result\",\n      \"searchDiamond\": \"Search Diamond\",\n      \"basic\": \"Basic\",\n      \"advanced\": \"Advanced\",\n      \"stoneIdCertNo\": \"StoneID/Cert No\",\n      \"takeSignature\": \"Take Signature\",\n      \"optional\": \"Optional\",\n      \"MyAddress\": \"My Address\",\n      \"expiryDate\": \"Expiry Date\",\n      \"drivingLicenceDesc\": \"Your driving licence picture\",\n      \"PanDesc\": \"Your PAN card picture\",\n      \"selfie\": \"Selfie\",\n      \"selfieDesc\": \"Your selfie picture\",\n      \"pending\": \"Pending\",\n      \"rejected\": \"Rejected\",\n      \"uploadAgain\": \"Upload\",\n      \"remove\": \"Remove\",\n      \"title\": \"Title\",\n      \"description\": \"Description\",\n      \"uploadYour\": \"Upload your\",\n      \"raiseDispute\": \"Tell us about it\",\n      \"drivingLicense\": \"Driving Licence\",\n      \"PANCard\": \"PAN Card\",\n      \"saveContinue\": \"Save and Continue\",\n      \"uploadFrontUmgText\": \"Upload Front Side Image\",\n      \"uploadPANCardImgText\": \"Upload PAN Card Image\",\n      \"uploadBackImageText\": \"Upload Back Side Image\",\n      \"helptopic\": \"Help Topics\",\n      \"newRideSharingRequest\": \"New Ride Sharing Requests\",\n      \"newRequest\": \"New Requests\",\n      \"welcomeTo\": \"Welcome to\",\n      \"welcomeDesc\": \"Login to your existing account of Mani Jewel\",\n      \"forgotPassword\": \"Forgot your\",\n      \"forgotPasswordDesc\": \"Enter your registered mobile number to recover your password.\",\n      \"termsAndCondition\": \"Terms & Condition\",\n      \"privacyPolicy\": \"Privacy Policy\",\n      \"aboutUS\": \"About Us\",\n      \"otpVerification\": \"Verify Ride Code\",\n      \"otpVerificationDelivery\": \"Verify Pickup Code\",\n      \"otpVerificationDeliveryDone\": \"Verify Delivery Code\",\n      \"enterOtp\": \"Enter 4-digit\",\n      \"recoveryCode\": \"Recovery code\",\n      \"editProfile\": \"Edit Profile\",\n      \"myProfile\": \"My Profile\",\n      \"reset\": \"Reset\",\n      \"yourPassword\": \"Your Password\",\n      \"photo\": \"Photo\",\n      \"otpDesc\": \"The recovery code was sent to your mobile number. Please enter the code.\",\n      \"otpVerifyDesc\": \"The verification code was sent to your mobile number. Please enter the code.\",\n      \"diamondDetail\": \"Diamond Detail\",\n      \"home\": \"Dashboard\",\n      \"search\": \"Stone Search\",\n      \"quickSearch\": \"Quick Search\",\n      \"newArrival\": \"New Arrival\",\n      \"exclusiveDiamonds\": \"Arjiv Exclusive\",\n      \"diamondOnAuction\": \"Bid It\",\n      \"stoneOfTheDays\": \"Best Buy\",\n      \"myWatchlist\": \"My Watchlist\",\n      \"myBid\": \"My Bid\",\n      \"myHold\": \"My Hold\",\n      \"myOrder\": \"My Ordered List\",\n      \"confirmStone\": \"My Confirm List\",\n      \"myOffice\": \"My Appointments\",\n      \"myOffer\": \"My Offer List\",\n      \"myPurchased\": \"My Invoices History\",\n      \"mySavedSearch\": \"Saved Search\",\n      \"savedSearch\": \"Saved Search\",\n      \"myDemand\": \"My Demand/Order Request\",\n      \"contactUs\": \"Contact Us\",\n      \"changePassword\": \"Change Password\",\n      \"logout\": \"Logout\",\n      \"fareDetailsTitle\": \"Enter Sales Details\",\n      \"fairAmt\": \"Sales Amount\",\n      \"noOfPassengers\": \"No. of Passengers\",\n      \"remarks\": \"Remarks\",\n      \"orderNo\": \"Order No.\",\n      \"typeOfService\": \"Type of Service\",\n      \"paymentType\": \"Payment Type*\",\n      \"recentlyView\": \"Recently View\",\n      \"uploadImgValidationText\": \"Upload file must be .jpg, .jpeg, .png or .pdf having size 5 mb or less.\",\n      \"drivingLicenseHintText\": \"Driving Licence Number\",\n      \"PANCARDHintText\": \"PAN Card Number\",\n      \"viewRide\": \"View Rides\",\n      \"myVehicle\": \"My Vehicle\",\n      \"personalDocument\": \"Personal Documents\",\n      \"help\": \"HELP\",\n      \"about\": \"About\",\n      \"bankDetails\": \"Bank Details\",\n      \"accountAndPayment\": \"Account and Payment\",\n      \"enquiry\": \"Enquiry\",\n      \"download\": \"Download\",\n      \"addToCart\": \"Cart\",\n      \"addToWatchList\": \"Add To Watchlist\",\n      \"memo\": \"Memo\",\n      \"memoStone\" :\"Memo Stone\",\n      \"finalCalculation\": \"Final Calculation\",\n      \"bookOffice\": \"Book Office\",\n      \"clearSelection\": \"Clear Selection\",\n      \"hold\": \"Hold\",\n      \"holdStone\": \"Hold Stone\",\n      \"offer\": \"Offer\",\n      \"officeView\": \"Office\",\n      \"placeOrder\": \"Place Order\",\n      \"buyNow\": \"Buy Now\",\n      \"cancelStone\": \"Cancel Stone\",\n      \"share\": \"Share\",\n      \"watchlist\": \"Watchlist\",\n      \"exclusive\": \"Exclusive\",\n      \"featuredStones\": \"Featured Stones\",\n      \"stoneOfDay\": \"Best Buy\",\n      \"recentSearch\": \"Recent Search\",\n      \"viewAll\": \"View All\",\n      \"salesPersonDetail\": \"Sales Person Detail\",\n      \"searchTitle\": \"Search Title\",\n      \"enterSearchTitle\": \"Enter Search Title\",\n      \"timeSlots\": \"Time Slots\",\n      \"selectCustomDate\": \"Select Custom date\",\n      \"availableSlot\": \"Available Slots\",\n      \"reqOfficeView\": \"Request Appointment\",\n      \"myComments\": \"My Note\",\n      \"myReminder\": \"My Reminder\",\n      \"reminder\": \"Reminder\",\n      \"manageAddress\": \"Manage Addresses\",\n      \"myAccount\": \"My Account\",\n      \"declaimer\": \"Disclaimer\",\n      \"shareStone\": \"Share Stone\",\n      \"addRemider\": \"Add reminder\",\n      \"offlineSearch\": \"Offline Search\",\n      \"searchHistory\": \"Search History\",\n      \"offlineStock\": \"Offline Stock\",\n      \"searchOffline\": \"Search (Offline)\",\n      \"voiceSearch\": \"Voice Search\",\n      \"tapMictoSpeak\": \"Tap mic to Speak\",\n      \"typeToSearch\": \"Type to Search\",\n      \"typeWordsToSearch\": \"Type at least 3 character to search\",\n      \"selectCompany\": \"Select Company\",\n      \"selectParty\": \"Select Party\",\n      \"selectSalesman\": \"Select Salesman\",\n      \"selectBuyer\": \"Select Buyer\",\n      \"selectBroker\": \"Select Broker\",\n      \"selectBillType\": \"Select Bill Type\",\n      \"bankRate\": \"Bank Rate\",\n      \"selectInvoiceType\" :  \"Select Invoice Type\",\n      \"selectTermType\": \"Select Term Type\",\n      \"Party\" : \"Party\",\n      \"buyerName\" : \"Buyer Name\",\n      \"salesman\" : \"Salesman\",\n      \"broker\" : \"Broker\",\n      \"invoicedate\" : \"Invoice Date\",\n      \"billType\" : \"Bill Type\",\n      \"terms\" :  \"Terms\",\n      \"comment\" : \"Note\",\n      \"holdTimeTitle\": \"Enter Hold Time (Hours)*\",\n      \"appointment\" : \"Appointment\"\n    },\n    \"dynamickeys\": {\n      \"dynamicKeys\": [\n        \"shape\",\n        \"caratRange\",\n        \"basicDetail\",\n        \"measurementTitle\",\n        \"inclusionDetail\",\n        \"other\",\n        \"stoneID\",\n        \"labTitle\",\n        \"certNo\",\n        \"locationTitle\",\n        \"caratTitle\",\n        \"colorTitle\",\n        \"clarityTitle\",\n        \"cutTitle\",\n        \"polishTitle\",\n        \"symmentryTitle\",\n        \"fluorescenceTitle\",\n        \"rapTitle\",\n        \"discountTitle\",\n        \"priceAndCt\",\n        \"amountTitle\",\n        \"eyeCleanTitle\",\n        \"brownTitle\",\n        \"milkyTitle\",\n        \"mixTingeTitle\",\n        \"dimensionTitle\",\n        \"girdleTitle\",\n        \"tableTitle\",\n        \"crownAngleTitle\",\n        \"depthTitle\",\n        \"pavAngleTitle\",\n        \"crownHeightTitle\",\n        \"pavDepthTitle\",\n        \"starLengthTitle\",\n        \"lowerHalfTitle\",\n        \"gridleTitle\",\n        \"gridleFacetedTitle\",\n        \"culetTitle\",\n        \"rationTitle\",\n        \"blackInclusionTitle\",\n        \"otherInclusionTitle\",\n        \"openInclusionTitle\",\n        \"extraFacetTitle\",\n        \"naturalTitle\",\n        \"hAndATitle\",\n        \"keyToSymbol\",\n        \"labComments\",\n        \"laserInsTitle\",\n        \"basicTitle\",\n        \"advancedTitle\",\n        \"stoneIdTitle\",\n        \"defaultTitle\",\n        \"newDiamondsTitle\",\n        \"priceLowToHigh\",\n        \"priceHighToLow\",\n        \"disLowToHigh\",\n        \"disHighToLow\",\n        \"colorLowToHigh\",\n        \"colorHighToLow\",\n        \"caratLowToHigh\",\n        \"caratHighToLow\",\n        \"clarityLowToHigh\",\n        \"clarityHighToLow\",\n        \"colorShadeTitle\",\n        \"certiTitle\",\n        \"arrivalsTitle\",\n        \"lengthTitle\",\n        \"widthTitle\",\n        \"pavilionAngleTitle\",\n        \"girdleConditionTitle\",\n        \"cluetConditionTitle\",\n        \"disTitle\",\n        \"depthTitleWithoutPerc\",\n        \"otherInformationTitle\",\n        \"matchPairTitle\",\n        \"layoutTitle\",\n        \"heartArrow\",\n        \"tableBlack\",\n        \"tableOpen\",\n        \"sideBlack\",\n        \"crownOpen\",\n        \"tableInclusion\",\n        \"sideInclusion\",\n        \"pavillionOpen\",\n        \"girdleOpen\",\n        \"pavHeight\",\n        \"eTK\",\n        \"bGMDetails\",\n        \"brownTinge\",\n        \"otherTinge\",\n        \"reportNo\",\n        \"packetNo\",\n        \"heightTitle\"\n      ],\n      \"heightTitle\":\"Height\",\n      \"shape\": \"Shape\",\n      \"caratRange\": \"Carat\",\n      \"basicDetail\": \"Basic Details\",\n      \"measurementTitle\": \"Measurements\",\n      \"inclusionDetail\": \"Inclusion Details\",\n      \"other\": \"Other\",\n      \"stoneID\": \"Stone ID\",\n      \"labTitle\": \"Lab\",\n      \"certNo\": \"Cert. No.\",\n      \"locationTitle\": \"Origin\",\n      \"caratTitle\": \"Carat\",\n      \"colorTitle\": \"Color\",\n      \"clarityTitle\": \"Clarity\",\n      \"cutTitle\": \"Cut\",\n      \"polishTitle\": \"Polish\",\n      \"symmentryTitle\": \"Symmentry\",\n      \"fluorescenceTitle\": \"Fluorescence\",\n      \"rapTitle\": \"Rap (%)\",\n      \"discountTitle\": \"Discount (%)\",\n      \"priceAndCt\": \"Price/Ct\",\n      \"amountTitle\": \"Amount\",\n      \"eyeCleanTitle\": \"Eye Clean\",\n      \"brownTitle\": \"Brown\",\n      \"milkyTitle\": \"Milky\",\n      \"mixTingeTitle\": \"Mix Tinge\",\n      \"dimensionTitle\": \"Dimensions  (MM)\",\n      \"girdleTitle\": \"Girdle (%)\",\n      \"tableTitle\": \"Table %\",\n      \"crownAngleTitle\": \"Crown Angle\",\n      \"depthTitle\": \"Depth %\",\n      \"pavAngleTitle\": \"Pav Angle\",\n      \"crownHeightTitle\": \"Crown Height(%)\",\n      \"pavDepthTitle\": \"Pavilion Depth (%)\",\n      \"starLengthTitle\": \"Star Length\",\n      \"lowerHalfTitle\": \"Lower Half\",\n      \"gridleFacetedTitle\": \"Gridle Faceted\",\n      \"culetTitle\": \"Culet\",\n      \"rationTitle\": \"Ratio\",\n      \"blackInclusionTitle\": \"Black Inclusion\",\n      \"otherInclusionTitle\": \"Other Inclusion\",\n      \"openInclusionTitle\": \"Open Inclusion\",\n      \"extraFacetTitle\": \"Extra Facet\",\n      \"naturalTitle\": \"Natural\",\n      \"hAndATitle\": \"H & A\",\n      \"keyToSymbol\": \"Key To Symbol\",\n      \"labComments\": \"Lab Comments\",\n      \"laserInsTitle\": \"Laser Ins\",\n      \"basicTitle\": \"Basic\",\n      \"advancedTitle\": \"Advanced\",\n      \"stoneIdTitle\": \"Stone ID/Cert No\",\n      \"defaultTitle\": \"Default\",\n      \"newDiamondsTitle\": \"New Diamonds\",\n      \"priceLowToHigh\": \"Price Low to High\",\n      \"priceHighToLow\": \"Price High to Low\",\n      \"disLowToHigh\": \"Discount Low to High\",\n      \"disHighToLow\": \"Discount High to Low\",\n      \"colorLowToHigh\": \"Color Low to High\",\n      \"colorHighToLow\": \"Color High to Low\",\n      \"caratLowToHigh\": \"Carat Low to High\",\n      \"caratHighToLow\": \"Carat High to Low\",\n      \"clarityLowToHigh\": \"Clarity Low to High\",\n      \"clarityHighToLow\": \"Clarity High to Low\",\n      \"colorShadeTitle\": \"Color Shade\",\n      \"certiTitle\": \"Certificate Number\",\n      \"arrivalsTitle\": \"Arrivals\",\n      \"lengthTitle\": \"Length\",\n      \"widthTitle\": \"Width\",\n      \"pavilionAngleTitle\": \"Pavilion Angle\",\n      \"girdleConditionTitle\": \"Girdle Condition\",\n      \"cluetConditionTitle\": \"Culet Condition\",\n      \"disTitle\": \"Dis%\",\n      \"depthTitleWithoutPerc\": \"Depth\",\n      \"otherInformationTitle\": \"Other Information\",\n      \"matchPairTitle\" : \"Match Pair\",\n      \"layoutTitle\": \"Layout\",\n      \"heartArrow\":\"Heart and Arrow\",\n      \"tableBlack\":\"Table Black\",\n      \"tableOpen\":\"Table Open\",\n      \"sideBlack\":\"Side Black\",\n      \"crownOpen\":\"Crown Open\",\n      \"tableInclusion\":\"Table Inclusion\",\n      \"sideInclusion\":\"Side Inclusion\",\n      \"pavillionOpen\":\"Pavillion Open\",\n      \"girdleOpen\":\"Girdle Open\",\n      \"pavHeight\":\"Pav Height\",\n      \"eTK\":\"ETK\",\n      \"bGMDetails\":\"BGM Details\",\n      \"brownTinge\":\"Brown Tinge\",\n      \"otherTinge\":\"Other Tinge\",\n      \"reportNo\":\"Report No\",\n      \"packetNo\":\"Packet No\"\n    }\n  },\n  \"Chinese\": {\n    \"language_code\": \"Chinese\",\n    \"auth_strings\": {\n      \"editCompanyInformation\": \"出问题了！ \\\\\\\\n下拉刷新\",\n      \"selectNatureOfOrganization\": \"选择性质组织\",\n      \"setNewPassword\": \"重新设置新密码，请请进进入系统\",\n      \"enterCompanyName\": \"请输入公司名称。\",\n      \"pleaseEnterCustomerOTP\": \"请输入客户乘坐的代码。\",\n      \"pleaseEnterPickupOTP\": \"请输入自取代码。\",\n      \"pleaseEnterDeliveryOTP\": \"请输入客户交付代码。\",\n      \"verified\": \"验证\",\n      \"verify\": \"校验\",\n      \"addressLineOne\": \"地址1\",\n      \"addressLineTwo\": \"地址2\",\n      \"addressLineThree\": \"地址3\",\n      \"oldPassword\": \"旧密码\",\n      \"skype\": \"Skype的\",\n      \"whatsApp\": \"WhatsApp的\",\n      \"pinCode\": \"PIN码*\",\n      \"verifyMobileDesc\": \"请确认手机号码，以更新的姿态。\",\n      \"verifyNow\": \"立即验证\",\n      \"password\": \"密码\",\n      \"backToHome\": \"回家\",\n      \"forgotPassword\": \"忘记密码？\",\n      \"signInCap\": \"登入\",\n      \"moveToLogIn\": \"移动登录\",\n      \"dontHaveAnAccount\": \"#ERROR!\",\n      \"clickHere\": \"点击这里\",\n      \"signUpHere\": \"在此注册\",\n      \"reset\": \"重启\",\n      \"haveRegisterCode\": \"有注册码？\",\n      \"welcome\": \"欢迎回来！\",\n      \"signInAsGuest\": \"以访客身分登入\",\n      \"editProfileTitle\": \"编辑个人资料\",\n      \"emaillbl\": \"电子邮件\",\n      \"searchInventory\": \"搜索产品\",\n      \"emailAddress\": \"电子邮件地址*\",\n      \"offlineFilter\": \"无法找到所需的纸牌？我们可以帮助你从我们的离线的库存最好的交易。\",\n      \"loginDesc\": \"是否要启用触摸ID / M-PIN解锁我的钻石？请选择一个选项，以解锁应用\",\n      \"searchDiamonds\": \"搜索钻石\",\n      \"continueWithSearch\": \"你想继续搜索？\",\n      \"mobileNumber\": \"移动\",\n      \"searchHint\": \"搜索...\",\n      \"selectYourCountry\": \"选择国家\",\n      \"resendCodeIn\": \"在重新发送代码\",\n      \"resendCode\": \"重发\",\n      \"haveAnAccount\": \"已经有一个帐户？\",\n      \"dontReceiveCode\": \"如果您没有收到代码！\",\n      \"inLogin\": \"登录。\",\n      \"resetPwdDesc\": \"添加密码和确认密码重置您的密码。\",\n      \"backToLogin\": \"回到登入\",\n      \"firstName\": \"名字*\",\n      \"name\": \"用户名*\",\n      \"lastName\": \"姓*\",\n      \"middleName\": \"中间名字*\",\n      \"confirmPassword\": \"确认密码\",\n      \"currentPasswordErr\": \"当前密码错误\",\n      \"passwordChanged\": \"密码已更改\",\n      \"lblLogInErr\": \"登录错误\",\n      \"enterYour\": \"输入您的\",\n      \"details\": \"细节\",\n      \"registerCode\": \"注册码\",\n      \"registerCodeDesc\": \"添加一个注册码与3eco启动招生。\",\n      \"uploadPhotoDesc\": \"把你自己的自拍照\",\n      \"updateProfile\": \"更新配置文件\",\n      \"postalCode\": \"邮政编码*\",\n      \"removeButton\": \"去掉\",\n      \"gender\": \"性别\",\n      \"male\": \"男\",\n      \"female\": \"女\",\n      \"changePassword\": \"更改密码\",\n      \"currentPassword\": \"当前密码*\",\n      \"newPassword\": \"新密码*\",\n      \"confirmNewPassword\": \"确认密码*\",\n      \"personalDocuments\": \"个人文档\",\n      \"assignedAuto\": \"自动分配\",\n      \"logout\": \"登出\",\n      \"logoutConfirmationMsg\": \"你确定要注销？\",\n      \"address\": \"地址*\",\n      \"accountNumber\": \"账号\",\n      \"bankerName\": \"银行名称\",\n      \"nameLable\": \"名称\",\n      \"ifscCode\": \"IFSC代码\",\n      \"businessRegistrationNumbr\": \"商业登记号码\",\n      \"businessRelationshipPeriod\": \"业务关系期限（年）\",\n      \"designation\": \"指定\",\n      \"nameofDesignation\": \"的名字\",\n      \"natureofOrganization\": \"组织的性质\",\n      \"uploadFile\": \"没有文件Choosen\",\n      \"update\": \"UPDATE\",\n      \"resetPwd\": \"重设密码\",\n      \"pwdReset\": \"重设密码\",\n      \"signInWithMPIN\": \"请用M-PIN\",\n      \"pwdChanged\": \"密码已更改\",\n      \"successfullyPwdDesc\": \"您已成功重置您的密码。在登录时，请使用您的新密码。\",\n      \"lblProfileSetup\": \"您的个人资料设置\",\n      \"lblProfileSetupDesc\": \"我们已经收到您的个人资料详细信息\",\n      \"hoursAvailable\": \"总Shifttime\",\n      \"confirmStoneDetail\": \"确认石详细\",\n      \"companyName\": \"公司名\",\n      \"invoiceDate\": \"发票日期\",\n      \"companyCode\": \"公司代码\",\n      \"saveCompanyDetails\": \"保存公司信息\",\n      \"passwordNotChange\": \"密码不匹配\",\n      \"rememberPassword\": \"记住密码？\",\n      \"sendOTP\": \"发送OTP\",\n      \"resendNow\": \"现在重发\",\n      \"didNotReceiveOTP\": \"如果您没有收到OTP！\",\n      \"sendOTPToEmail\": \"我们将发送一个OTP到您输入的电子邮件地址或用户名。请输入电子邮件地址或用户名。\",\n      \"enterOTP\": \"检察官办公室已经被发送到您注册的电子邮件地址。请输入OTP。\",\n      \"backToSignIn\": \"返回登录\",\n      \"passwordResetSuccessfully\": \"密码重置成功。\",\n      \"emailAndUname\": \"Email /用户名\",\n      \"signUp\": \"注册\",\n      \"promotionText\": \"促销优惠\",\n      \"termsAndCondition\": \"附带条约\",\n      \"mustAgreeTermsAndCondition\": \"你必须同意的条款和条件，以访客身分登入用户\",\n      \"forgotPasswordTitle\": \"忘记密码\",\n      \"uploadKYC\": \"上传KYC\",\n      \"uploadKycDesc\": \"请上传您的KYC文件来访问完整的功能。\",\n      \"hintPhotoIdentityProof\": \"照片的身份证明*\",\n      \"hintBussinerssProof\": \"商务身份证明*\",\n      \"btnFileUpload\": \"上传文件\",\n      \"pleaseUploadPhotoProof\": \"请上传照片的身份证明。\",\n      \"pleaseUploadBussinessProof\": \"请上传商家身份证明。\",\n      \"pleaseSelectFileFormat\": \"请所有的上传以下格式的文件名：.jpg\",\n      \"kycSubmitted\": \"KYC提交\",\n      \"kycSubmmittedDesc\": \"您的KYC已成功提交。\",\n      \"btnMoveToHome\": \"移至首页\",\n      \"kYCRejected\": \"KYC拒绝\",\n      \"kycRejectedDesc\": \"您的KYC已被拒绝。请重新上传您的文件KYC访问所有功能。\"\n    },\n    \"common_string\": {\n      \"seeMore\": \"查看更多\",\n      \"seeLess\": \"较少见\",\n      \"modify\": \"修改\",\n      \"delete\": \"删除\",\n      \"details\": \"细节\",\n      \"edit\": \"编辑\",\n      \"addDemand\": \"新增需求\",\n      \"demandTitle\": \"需求标题\",\n      \"pleaseEnterDemandTitle\": \"请输入需求标题\",\n      \"demandAddedSuccessfully\": \"需求增加成功\",\n      \"selectAtleastOneFilter\": \"请\",\n      \"savedSearch\": \"保存的搜索\",\n      \"searchSavedSearch\": \"搜索保存的搜索\",\n      \"viewDetails\": \"查看详情\",\n      \"viewLessDetails\": \"查看较少的细节\",\n      \"myDemand\": \"我的需求\",\n      \"date\": \"日期\",\n      \"selectTime\": \"选择时间\",\n      \"selectDate\": \"选择日期\",\n      \"offerVelidTill\": \"优惠有效期至\",\n      \"officeVisitDate\": \"办公室访问日期\",\n      \"all\": \"所有\",\n      \"status\": \"状态\",\n      \"save\": \"保存\",\n      \"verify\": \"校验\",\n      \"readMore\": \"阅读更多\",\n      \"goodMorning\": \"早上好\",\n      \"goodAfternoon\": \"下午好\",\n      \"goodEvening\": \"晚上好\",\n      \"btnSkip\": \"跳跃\",\n      \"btnUpdate\": \"更新\",\n      \"btnContinue\": \"继续\",\n      \"btnContinueCap\": \"继续\",\n      \"btnEdit\": \"编辑\",\n      \"btnSubmit\": \"提交\",\n      \"btnNextCap\": \"下一个\",\n      \"btnSaveCap\": \"更新密码\",\n      \"btnWithdrawCap\": \"收回\",\n      \"btnSaveAndContinueCap\": \"保存并继续\",\n      \"btnUnregister\": \"未注册手机\",\n      \"btnClose\": \"关\",\n      \"remove\": \"去掉\",\n      \"refresh\": \"刷新\",\n      \"fetchLocationMessage\": \"请等待我们撷取你的位置\",\n      \"done\": \"完成\",\n      \"doneCap\": \"DONE\",\n      \"cancel\": \"取消\",\n      \"allow\": \"允许\",\n      \"countryFirst\": \"请选择国家一\",\n      \"apply\": \"应用\",\n      \"cancelCap\": \"取消\",\n      \"uploadCap\": \"上传\",\n      \"yesCancelCap\": \"是\",\n      \"upload\": \"上传\",\n      \"ok\": \"好\",\n      \"home\": \"家\",\n      \"goToMyWatchList\": \"转到我的关注\",\n      \"goToMyOrder\": \"转到我的订单\",\n      \"gotToMyOffer\": \"转到我的报价\",\n      \"gotToMyHold\": \"转到我保持\",\n      \"gotToMyEnquiry\": \"转到我的询价\",\n      \"gotToMyBid\": \"转到我的出价\",\n      \"gotToMyReminder\": \"转到我的提醒\",\n      \"gotToMyComments\": \"转到我的注释\",\n      \"yes\": \"是\",\n      \"no\": \"没有\",\n      \"selectCountry\": \"选择国家\",\n      \"clickHere\": \"点击这里\",\n      \"btnAddNewAddress\": \"添加新地址\",\n      \"btnCancel\": \"取消\",\n      \"btnTakeSelfie\": \"就拿自拍\",\n      \"successfully\": \"顺利\",\n      \"lblAppExit\": \"你确定要离开？\",\n      \"lblExit\": \"出口\",\n      \"openAppSetting\": \"打开设置\",\n      \"lblOr\": \"要么\",\n      \"fromLbl\": \"从\",\n      \"toLbl\": \"至\",\n      \"showMore\": \"展示更多\",\n      \"showLess\": \"显示较少\",\n      \"selectCity\": \"选择城市\",\n      \"notYetAvailable\": \"尚不可用\",\n      \"updateAvailable\": \"有可用更新！\",\n      \"downloadAppFrom\": \"下载应用程序更新从\",\n      \"playStore\": \"应用商店\",\n      \"skipUpdate\": \"跳过更新\",\n      \"stateFirst\": \"请选择国家一\",\n      \"reallyExit\": \"真的退出？\",\n      \"alert\": \"警报！\",\n      \"loading\": \"载入中\",\n      \"error\": \"错误\",\n      \"jumpToTop\": \"跳转到顶部\",\n      \"ihaveread\": \"我已阅读并接受\",\n      \"selected\": \"选择\",\n      \"lbllogout\": \"登出\",\n      \"lblThanx\": \"谢谢\",\n      \"lblSelectCity\": \"选择城市\",\n      \"lblSelectState\": \"选择国家\",\n      \"lblSelectCountry\": \"选择国家\",\n      \"lblCity\": \"市\",\n      \"lblCountry\": \"国家\",\n      \"lblName\": \"名称\",\n      \"lblPinCode\": \"PIN码\",\n      \"lblMobileNumber\": \"手机号码\",\n      \"lblState\": \"州\",\n      \"lblCode\": \"码：\",\n      \"lblOrderNo\": \"订单号：\",\n      \"lblOrderItem\": \"订购：\",\n      \"lblDelivered\": \"交付\",\n      \"lblTicketReady\": \"你的票了\",\n      \"lblPersonTicket\": \"2人门票\",\n      \"lblShuttleBus\": \"机场摆渡车\",\n      \"lblPickup\": \"拾起\",\n      \"lblDropoff\": \"放下\",\n      \"lblPassenger\": \"乘客\",\n      \"lblDeliveryNo\": \"交货号\",\n      \"lblPrice\": \"价钱\",\n      \"lblValid\": \"有效期\",\n      \"lblRenew\": \"更新\",\n      \"lblDeparture\": \"离开\",\n      \"lblArrived\": \"到达\",\n      \"lblSendtoFriend\": \"发送给朋友\",\n      \"popupRenewTitle\": \"续订票\",\n      \"popupRenewDesc\": \"Lorem存有悲坐阿梅德\",\n      \"popuplblPassenger\": \"乘客\",\n      \"popuplblCancel\": \"取消\",\n      \"popupbtnRenew\": \"更新\",\n      \"ridelblAwesome\": \"真棒\",\n      \"ridebtnDone\": \"完成\",\n      \"offerPricePerCarat\": \"所报的价格（CTS）\",\n      \"dropOffText\": \"放下\",\n      \"pickUpText\": \"拾起\",\n      \"startAtText\": \"在开始\",\n      \"endAtText\": \"在结束\",\n      \"personText\": \"人\",\n      \"paymentScreenTitle\": \"付款\",\n      \"pickuplbl\": \"拾起\",\n      \"droplbl\": \"放下\",\n      \"makePaymentButtonlbl\": \"付款\",\n      \"pessangerslbl\": \"乘客\",\n      \"priceBreakuplbl\": \"价格解体\",\n      \"tripPricelbl\": \"旅行价格\",\n      \"taxeslbl\": \"税\",\n      \"totallbl\": \"总\",\n      \"cardNumberhint\": \"卡号\",\n      \"cvvhint\": \"CVV\",\n      \"datehint\": \"MM / YY\",\n      \"btnTryAgain\": \"再试一次\",\n      \"cityFirst\": \"首先请选择城市\",\n      \"enterFareDetails\": \"进入销售详细信息\",\n      \"fromDate\": \"从日期\",\n      \"toDate\": \"选定的日期\",\n      \"btnUnderstand\": \"我明白\",\n      \"applicationUpdate\": \"应用程序更新\",\n      \"newVersionMessage\": \"应用程序的新版本可用\",\n      \"paymentCollected\": \"收集付款\",\n      \"addComment\": \"添加评论\",\n      \"more\": \"更多\",\n      \"carat\": \"克拉\",\n      \"pcs\": \"PCS\",\n      \"cts\": \"CTS\",\n      \"disc\": \"光盘％\",\n      \"avgPriceCrt\": \"平均。价格/ CT\",\n      \"amount\": \"量\",\n      \"confirmStone\": \"确认石\",\n      \"confirm\": \"确认\",\n      \"offered\": \"参团\",\n      \"validTill\": \"有效期至\",\n      \"remark\": \"备注\",\n      \"color\": \"颜色\",\n      \"colorGroup\": \"色集团\",\n      \"colorFancy\": \"幻想\",\n      \"colorWhite\": \"白色\",\n      \"clarity\": \"明晰\",\n      \"clarityGroup\": \"清晰度集团\",\n      \"intensity\": \"强度\",\n      \"overtone\": \"弦外之音\",\n      \"selectBusinessType\": \"选择业务类型\",\n      \"selectState\": \"选择国家\",\n      \"search\": \"搜索\",\n      \"profile\": \"我的简历\",\n      \"personal\": \"个人\",\n      \"business\": \"商业\",\n      \"documents\": \"文件\",\n      \"noSlotFound\": \"没有找到插槽\",\n      \"noDiamondFound\": \"没有钻石符合搜索。请添加您的需求。\",\n      \"selectType\": \"选择虚拟类型\",\n      \"noSavedSearch\": \"没有保存的搜索已存在\",\n      \"searchCity\": \"搜索城市\",\n      \"searchCountry\": \"搜索国家\",\n      \"searchState\": \"搜索状态\",\n      \"notifications\": \"通知\",\n      \"enter2Stone\": \"请选择至少2个石头比较。\",\n      \"bidDesc\": \"目前位于印度和用于分离任何其他国家交付印度至少需要7-10个工作日。\",\n      \"packetNo\": \"包号：\",\n      \"quit\": \"放弃\",\n      \"agree\": \"我同意\",\n      \"laterToday\": \"今天晚些时候\",\n      \"toMorrow\": \"明天\",\n      \"nextWeek\": \"下周\",\n      \"chooseAnother\": \"另一种选择\",\n      \"dateTime\": \"约会时间\",\n      \"language\": \"语言\",\n      \"diamNow\": \"DiamNow\",\n      \"noDocument\": \"找不到任何文档\",\n      \"searchBusinessType\": \"搜索业务类型\",\n      \"hours\": \"小时\",\n      \"minutes\": \"分钟\",\n      \"seconds\": \"秒\",\n      \"bidEndsIn\": \"投标结束在：\",\n      \"shape\": \"形状\",\n      \"download\": \"下载\",\n      \"share\": \"分享\",\n      \"placeOrder\": \"下订单\",\n      \"enterComment\": \"请填写评论\",\n      \"deleteItem\": \"你确定你要删除？\",\n      \"shippingPolicy\": \"航运政策\",\n      \"offerSundayRestriction\": \"周日是不允许的。办公室工作日为周一至周六\",\n      \"weekAgo\": \"1周前\",\n      \"lastWeek\": \"上个星期\",\n      \"dayAgo\": \"几天前\",\n      \"onedayAgo\": \"1天前\",\n      \"yesterday\": \"昨天\",\n      \"hourAgo\": \"小时前\",\n      \"onehourAgo\": \"1小时前\",\n      \"anhourAgo\": \"一小时前\",\n      \"mintuesAgo\": \"几分钟前\",\n      \"onemintuesAgo\": \"1分钟前\",\n      \"amintueAgo\": \"一分钟前\",\n      \"secondsAgo\": \"秒前\",\n      \"justNow\": \"现在\",\n      \"today\": \"今天\",\n      \"past\": \"过去\",\n      \"selectPhotoProof\": \"选择文档\",\n      \"pleaseSelectPhotoProof\": \"请选择文件\",\n      \"selectBusinessProof\": \"选择文档\",\n      \"pleaseSelectBusinessProof\": \"请选择文件\",\n      \"touchId\": \"触摸标识\",\n      \"faceId\": \"面部识别\",\n      \"enableTouchId\": \"允许使用Touch ID解锁我的钻石？\",\n      \"enableFaceId\": \"启用面部识别解锁我的钻石？\",\n      \"unlockWithTouchId\": \"采用触摸式标识解锁我的钻石\",\n      \"unlockWithFaceId\": \"解锁使用面部识别我的钻石。\",\n      \"mPin\": \"M-PIN\",\n      \"holdMemoStatusDiamondorder\": \"你不能确诊的石块，已经在保持或备忘录状态\",\n      \"searchStoneIdCertificateNo\": \"搜索石ID /证书号\",\n      \"createMPin\": \"创建新的M-PIN\",\n      \"reentermpin\": \"重新输入M-PIN\",\n      \"forgotmpin\": \"忘记了M-PIN？\",\n      \"verifympin\": \"验证M-PIN\",\n      \"enteryoursixdigitcode\": \"输入您的6位M-PIN\",\n      \"changempin\": \"更改M-PIN\",\n      \"faceidandtouchnotenable\": \"FaceId / TouchId在您的手机未启用，请启用使用此功能\",\n      \"enablempintounlockmydiamonds\": \"启用M-PIN解锁应用程序？这将禁用触摸标识。你确定你要继续吗？\",\n      \"enabletouchidtounlockmydiamonds\": \"允许使用Touch ID解锁应用？这将禁用M-PIN。你确定你要继续吗？\",\n      \"rememberme\": \"记得我\",\n      \"usertouchid\": \"使用触摸标识\",\n      \"usempin\": \"使用M-PIN\",\n      \"filesarenotavailableonserver\": \"文件不可用的服务器，请稍后重试\",\n      \"allfileshavebeendownloaded\": \"所有文件都被下载。\",\n      \"filesisdownloaded\": \"文件下载\",\n      \"filesisnotdownloadedbcz\": \"文件没有下载，因为它不是在服务器存在。\",\n      \"downloading canceled\": \"取消下载\",\n      \"downloading\": \"下载...\",\n      \"expirydate\": \"到期日 ：\",\n      \"youreallywanttodelete\": \"你真的要删除\"\n    },\n    \"error_string\": {\n      \"accessDenide\": \"拒绝访问\",\n      \"pleaseSelectOfferTillDate\": \"请选择报价，直到日期。\",\n      \"pleaseSelectOfficeVisitDate\": \"请选择办公室访问日期\",\n      \"deleteStoneMsg\": \"你确定要删除石（S）？\",\n      \"acceptTermsAndCondition\": \"请接受条款和条件\",\n      \"diamondCompareRemove\": \"至少2块石头都需要进行比较。\",\n      \"diamondSelectionError\": \"请选择至少一石。\",\n      \"pleaseEnterCompanyName\": \"请输入公司名称。\",\n      \"selectInvoiceDate\": \"选择发票日期\",\n      \"pleaseEnterComment\": \"请输入评论。\",\n      \"pleaseEnterRemarks\": \"请输入备注。\",\n      \"selectExpiryDate\": \"请选择到期日。\",\n      \"enterOTP\": \"请输入代码\",\n      \"pleaseEnterOTP\": \"请输入验证码。\",\n      \"enteredCodeNotMatching\": \"输入的代码不匹配。再试一次\",\n      \"selectCancellationReason\": \"请选择取消原因\",\n      \"enterDesc\": \"请输入描述。\",\n      \"enterTitle\": \"请输入标题。\",\n      \"enterEmailOrPhone\": \"请输入电子邮件/移动。\",\n      \"enterPassword\": \"密码不能为空。请输入密码。\",\n      \"enterConfirmPassword\": \"请输入确认密码。\",\n      \"enterSkype\": \"请输入Skype的。\",\n      \"enterRegisterCode\": \"请输入注册码\",\n      \"enterEmail\": \"请输入电子邮件地址。\",\n      \"enterPhone\": \"请输入手机号码。\",\n      \"enterUsername\": \"用户名不能为空。请输入用户名。\",\n      \"enterValidEmail\": \"请输入有效电子邮件地址。\",\n      \"enterValidPhone\": \"请输入有效的手机号码。\",\n      \"enterValidWhatsappPhone\": \"请输入有效的WhatsApp的手机号码。\",\n      \"enterValidPassword\": \"请输入6个字符或长密码。\",\n      \"mismatchPassword\": \"密码和确认密码不匹配。\",\n      \"enterFirstName\": \"请输入名字。\",\n      \"enterMiddleName\": \"请输入中间名。\",\n      \"enterPinCode\": \"请输入PIN码。\",\n      \"enterName\": \"请输入名称。\",\n      \"enterLastName\": \"请输入姓氏。\",\n      \"enterAddress\": \"请输入地址。\",\n      \"enterValidPinCode\": \"输入pin码有效。\",\n      \"enterValidAddress\": \"请输入10个字符或长地址。\",\n      \"enterPostalCode\": \"请输入邮政编码。\",\n      \"enterValidPostalCode\": \"请输入6位数字的邮政编码。\",\n      \"enterCurrentPassword\": \"请输入当前的密码。\",\n      \"enterNewPassword\": \"请输入新的密码。\",\n      \"enterFareAmount\": \"请输入销售金额。\",\n      \"enterOrderNO\": \"请输入任何命令。\",\n      \"enterServiceType\": \"请选择服务类型。\",\n      \"enterPaymentType\": \"请选择付款方式。\",\n      \"enterValidFareAmount\": \"销售金额不能为零。\",\n      \"enterPassangerNo\": \"请输入no。的乘客。\",\n      \"enterValidPassangerNo\": \"乘客人数不能为零。\",\n      \"notEnterMorePassangerNo\": \"乘客人数不能超过7。\",\n      \"drivingLicenseValidationText\": \"请输入15位的字母数字驾驶执照号码。\",\n      \"PANCardValidationText\": \"请输入10位的字母数字PAN卡号码。\",\n      \"selectFromDate\": \"请从日期选择\",\n      \"selectToDate\": \"请选择最新\",\n      \"fromGreaterTo\": \"选定的日期必须大于当前日期\",\n      \"wrongPassword\": \"密码必须含有至少8个字符，1个大写字母，1个小写字母，1位，1个特殊系统字符\",\n      \"fromValueGreateThanTo\": \"从值应小于或等于要值\",\n      \"toValueGreaterThanFrom\": \"价值应大于或等于从价值\",\n      \"pleaseEnterCompanyCode\": \"请输入公司代码\",\n      \"enterSamePassword\": \"确认密码不匹配新密码。请输入确认密码相同的新密码。\",\n      \"selectAppointmentDate\": \"请选择预约日期\",\n      \"selectTimeSlot\": \"请选择时隙\",\n      \"enterComments\": \"请填写评论\",\n      \"selectVirtualType\": \"请选择虚拟型\",\n      \"versionError\": \"版本错误\"\n    },\n    \"no_data strings\": {\n      \"noDataFound\": \"没有找到记录\"\n    },\n    \"screen_title\": {\n      \"placeAnOffer\": \"将报价\",\n      \"addedInWatchList\": \"加入监视列表\",\n      \"addedInOffer\": \"提交报价\",\n      \"addedInCart\": \"加入购物车\",\n      \"addedInBid\": \"加入投标\",\n      \"myEnquiry\": \"我的询价\",\n      \"delete\": \"删除\",\n      \"addDemand\": \"添加请求\",\n      \"matchPair\": \"比赛配对\",\n      \"savedAndSearch\": \"保存和搜索\",\n      \"updateAndSearch\": \"更新和搜索\",\n      \"upcoming\": \"即将到来\",\n      \"bidPricePerCt\": \"买入价/ CT\",\n      \"bidDisc\": \"竞价盘\",\n      \"bidValue\": \"投标值\",\n      \"bidStone\": \"投标石\",\n      \"myCart\": \"我的车\",\n      \"myComment\": \"我的笔记\",\n      \"compare\": \"比较\",\n      \"compareStones\": \"比较石头\",\n      \"statusHold\": \"等候接听\",\n      \"statusOnMemo\": \"在备忘录\",\n      \"statusAvailable\": \"可得到\",\n      \"statusNew\": \"新品到货\",\n      \"statusOffer\": \"石天/促销\",\n      \"statusMyHold\": \"我保持\",\n      \"signup\": \"注册\",\n      \"addToOffice\": \"添加到办公室\",\n      \"addComment\": \"添加评论\",\n      \"addEnquiry\": \"加入询价\",\n      \"finalOffer\": \"最终发\",\n      \"finalDisc\": \"最终光盘\",\n      \"finalRate\": \"最终速率\",\n      \"finalValue\": \"最终值\",\n      \"orderMsg\": \"1）价格提到在这里是固定的，因此没有商量的余地。 \\\\\\\\ N2）分级，参数上我们超越GIA的分级网站提及。\",\n      \"offerMsg\": \"如果价格得到批准，所以我们要求你要发行之前，请确保所提供的石头会直接予以确认。放在发售列表中的所有石（S）没有保持搁置了你，因为它是供其他客户也是如此。\",\n      \"note\": \"注意\",\n      \"hours\": \"小时\",\n      \"offeredDisc\": \"参团派息\",\n      \"offeredPriceCt\": \"提供镨/ CT\",\n      \"addOffer\": \"新增优惠\",\n      \"expDiscPer\": \"预计折扣\",\n      \"todayDiscPer\": \"今天的盘\",\n      \"searchResult\": \"搜索结果\",\n      \"searchDiamond\": \"搜索钻石\",\n      \"basic\": \"基本\",\n      \"advanced\": \"高级\",\n      \"stoneIdCertNo\": \"StoneID /证书号\",\n      \"takeSignature\": \"拿签名\",\n      \"optional\": \"可选的\",\n      \"MyAddress\": \"我的地址\",\n      \"expiryDate\": \"到期日\",\n      \"drivingLicenceDesc\": \"你的驾驶执照图片\",\n      \"PanDesc\": \"您的PAN卡图片\",\n      \"selfie\": \"自拍\",\n      \"selfieDesc\": \"您的自拍照片\",\n      \"pending\": \"待定\",\n      \"rejected\": \"拒绝\",\n      \"uploadAgain\": \"上传\",\n      \"remove\": \"去掉\",\n      \"title\": \"标题\",\n      \"description\": \"描述\",\n      \"uploadYour\": \"上传\",\n      \"raiseDispute\": \"告诉我们\",\n      \"drivingLicense\": \"驾照\",\n      \"PANCard\": \"PAN卡\",\n      \"saveContinue\": \"保存并继续\",\n      \"uploadFrontUmgText\": \"上传正面图像\",\n      \"uploadPANCardImgText\": \"上传PAN卡图片\",\n      \"uploadBackImageText\": \"上传背面图像\",\n      \"helptopic\": \"帮助主题\",\n      \"newRideSharingRequest\": \"新的拼车要求\",\n      \"newRequest\": \"新要求\",\n      \"welcomeTo\": \"欢迎来到\",\n      \"welcomeDesc\": \"登录到您的现有帐户摩尼宝石的\",\n      \"forgotPassword\": \"忘了你的\",\n      \"forgotPasswordDesc\": \"输入你的手机号码，以恢复您的密码。\",\n      \"termsAndCondition\": \"条款和条件\",\n      \"privacyPolicy\": \"隐私政策\",\n      \"aboutUS\": \"关于我们\",\n      \"otpVerification\": \"验证码换乘\",\n      \"otpVerificationDelivery\": \"验证应答码\",\n      \"otpVerificationDeliveryDone\": \"验证码交付\",\n      \"enterOtp\": \"输入4位数\",\n      \"recoveryCode\": \"恢复码\",\n      \"editProfile\": \"编辑个人资料\",\n      \"myProfile\": \"我的简历\",\n      \"reset\": \"重启\",\n      \"yourPassword\": \"你的密码\",\n      \"photo\": \"照片\",\n      \"otpDesc\": \"恢复码已发送到您的手机号码。请输入验证码。\",\n      \"otpVerifyDesc\": \"验证码已发送到您的手机号码。请输入验证码。\",\n      \"diamondDetail\": \"钻石详细\",\n      \"home\": \"家\",\n      \"search\": \"搜索\",\n      \"quickSearch\": \"快速搜索\",\n      \"newArrival\": \"新品到货\",\n      \"exclusiveDiamonds\": \"独家钻石级\",\n      \"diamondOnAuction\": \"钻石拍卖\",\n      \"stoneOfTheDays\": \"百思买\",\n      \"myWatchlist\": \"我的关注\",\n      \"myBid\": \"我的出价\",\n      \"myHold\": \"我保持\",\n      \"myOrder\": \"我的有序列表\",\n      \"confirmStone\": \"确认石\",\n      \"myOffice\": \"我的办公室查看\",\n      \"myOffer\": \"我的报价列表\",\n      \"myPurchased\": \"我购买的历史\",\n      \"mySavedSearch\": \"我保存的搜索\",\n      \"savedSearch\": \"保存的搜索\",\n      \"myDemand\": \"我的需求\",\n      \"contactUs\": \"联系我们\",\n      \"changePassword\": \"更改密码\",\n      \"logout\": \"登出\",\n      \"fareDetailsTitle\": \"进入销售详细信息\",\n      \"fairAmt\": \"销售额\",\n      \"noOfPassengers\": \"乘客人数\",\n      \"remarks\": \"备注\",\n      \"orderNo\": \"订单号。\",\n      \"typeOfService\": \"服务类型\",\n      \"paymentType\": \"支付方式*\",\n      \"recentlyView\": \"最近查看\",\n      \"uploadImgValidationText\": \"具有大小为5 MB或更少上传文件必须是.JPG，.JPEG，png格式或.PDF。\",\n      \"drivingLicenseHintText\": \"驾驶执照号码\",\n      \"PANCARDHintText\": \"PAN卡号码\",\n      \"viewRide\": \"查看游戏机\",\n      \"myVehicle\": \"我的车\",\n      \"personalDocument\": \"个人文档\",\n      \"help\": \"救命\",\n      \"about\": \"关于\",\n      \"bankDetails\": \"银行明细\",\n      \"accountAndPayment\": \"帐户和付费\",\n      \"enquiry\": \"查询\",\n      \"download\": \"下载\",\n      \"addToCart\": \"添加到购物车\",\n      \"addToWatchList\": \"加入观看列表\",\n      \"finalCalculation\": \"最终计算\",\n      \"bookOffice\": \"图书办公室\",\n      \"clearSelection\": \"清空选项\",\n      \"comment\": \"评论\",\n      \"hold\": \"保持\",\n      \"offer\": \"提供\",\n      \"officeView\": \"办公室查看\",\n      \"placeOrder\": \"下订单\",\n      \"buyNow\": \"立即购买\",\n      \"cancelStone\": \"取消石\",\n      \"share\": \"分享\",\n      \"watchlist\": \"监视列表\",\n      \"exclusive\": \"独家\",\n      \"featuredStones\": \"特色石材\",\n      \"stoneOfDay\": \"日石\",\n      \"recentSearch\": \"最近的搜索\",\n      \"viewAll\": \"查看全部\",\n      \"salesPersonDetail\": \"销售人员详细\",\n      \"searchTitle\": \"搜索标题\",\n      \"enterSearchTitle\": \"输入搜索标题\",\n      \"timeSlots\": \"时隙\",\n      \"selectCustomDate\": \"选择自定义日期\",\n      \"availableSlot\": \"可用插槽\",\n      \"reqOfficeView\": \"要求事务查看\",\n      \"myComments\": \"我的评论\",\n      \"myReminder\": \"我的提醒\",\n      \"reminder\": \"提醒\",\n      \"manageAddress\": \"管理地址\",\n      \"myAccount\": \"我的帐户\",\n      \"declaimer\": \"放弃\",\n      \"shareStone\": \"分享石\",\n      \"addRemider\": \"添加提醒\",\n      \"offlineSearch\": \"在线搜索\",\n      \"searchHistory\": \"搜索历史记录\",\n      \"offlineStock\": \"脱机股票\",\n      \"searchOffline\": \"搜索（离线）\",\n      \"voiceSearch\": \"声音搜索\",\n      \"tapMictoSpeak\": \"点击麦克风讲\",\n      \"typeToSearch\": \"键入搜索\",\n      \"typeWordsToSearch\": \"键入至少3个字进行搜索石头\"\n    },\n    \"dynamickeys\": {\n      \"shape\": \"形状\",\n      \"caratRange\": \"克拉范围\",\n      \"basicDetail\": \"基本详情\",\n      \"measurementTitle\": \"测量\",\n      \"inclusionDetail\": \"包容详情\",\n      \"other\": \"其他\",\n      \"stoneID\": \"石ID\",\n      \"labTitle\": \"实验室\",\n      \"certNo\": \"CERT。没有。\",\n      \"locationTitle\": \"位置\",\n      \"shapeTitle\": \"形状\",\n      \"caratTitle\": \"克拉\",\n      \"colorTitle\": \"颜色\",\n      \"clarityTitle\": \"明晰\",\n      \"cutTitle\": \"切\",\n      \"polishTitle\": \"抛光\",\n      \"symmentryTitle\": \"Symmentry\",\n      \"fluorescenceTitle\": \"荧光\",\n      \"rapTitle\": \"Rap（％）\",\n      \"discountTitle\": \"折扣（％）\",\n      \"priceAndCt\": \"价格/ CT\",\n      \"amountTitle\": \"量\",\n      \"eyeCleanTitle\": \"眼部清洁\",\n      \"brownTitle\": \"棕色\",\n      \"milkyTitle\": \"乳白色\",\n      \"mixTingeTitle\": \"MIX色彩\",\n      \"dimensionTitle\": \"尺寸（mm）\",\n      \"girdleTitle\": \"腰带（％）\",\n      \"tableTitle\": \"表％\",\n      \"crownAngleTitle\": \"皇冠角\",\n      \"depthTitle\": \"深度％\",\n      \"pavAngleTitle\": \"Pav Angle\",\n      \"crownHeightTitle\": \"冠高（％）\",\n      \"pavDepthTitle\": \"亭深比（％）\",\n      \"starLengthTitle\": \"长星\",\n      \"lowerHalfTitle\": \"下半\",\n      \"gridleTitle\": \"腰带\",\n      \"gridleFacetedTitle\": \"束带FACETED\",\n      \"culetTitle\": \"底尖\",\n      \"rationTitle\": \"比\",\n      \"blackInclusionTitle\": \"黑色包裹体\",\n      \"otherInclusionTitle\": \"其他入选\",\n      \"openInclusionTitle\": \"打开包裹\",\n      \"extraFacetTitle\": \"EXTRA FACET\",\n      \"naturalTitle\": \"自然\",\n      \"hAndATitle\": \"哈\",\n      \"keyToSymbol\": \"关键符号\",\n      \"labComments\": \"LAB评论\",\n      \"laserInsTitle\": \"激光惯导系统\",\n      \"basicTitle\": \"基本\",\n      \"advancedTitle\": \"高级\",\n      \"stoneIdTitle\": \"石ID /证书号\",\n      \"defaultTitle\": \"默认\",\n      \"newDiamondsTitle\": \"新的钻石\",\n      \"priceLowToHigh\": \"价格由低到高\",\n      \"priceHighToLow\": \"价格从高到低\",\n      \"disLowToHigh\": \"折扣低到高\",\n      \"disHighToLow\": \"折扣高至低\",\n      \"colorLowToHigh\": \"颜色从低到高\",\n      \"colorHighToLow\": \"颜色从高到低\",\n      \"caratLowToHigh\": \"克拉低到高\",\n      \"caratHighToLow\": \"克拉从高到低\",\n      \"clarityLowToHigh\": \"净度从低到高\",\n      \"clarityHighToLow\": \"净度从高到低\",\n      \"colorShadeTitle\": \"色光\",\n      \"certiTitle\": \"证书编号\",\n      \"arrivalsTitle\": \"到达\",\n      \"lengthTitle\": \"长度\",\n      \"widthTitle\": \"宽度\",\n      \"pavilionAngleTitle\": \"亭角\",\n      \"girdleConditionTitle\": \"束带条件\",\n      \"cluetConditionTitle\": \"底尖状况\",\n      \"disTitle\": \"派息％\",\n      \"depthTitleWithoutPerc\": \"深度\",\n      \"otherInformationTitle\": \"其他信息\"\n    }\n  },\n  \"French\": {\n    \"language_code\": \"French\",\n    \"auth_strings\": {\n      \"editCompanyInformation\": \"Quelque chose a mal tourné! \\\\\\\\n Déroulez Actualiser\",\n      \"selectNatureOfOrganization\": \"Sélectionnez la nature de l'organisation\",\n      \"setNewPassword\": \"Définissez votre nouveau mot de passe et vous connecter à nouveau.\",\n      \"enterCompanyName\": \"S'il vous plaît entrer Nom de la société.\",\n      \"pleaseEnterCustomerOTP\": \"S'il vous plaît entrer le code de conduite du client.\",\n      \"pleaseEnterPickupOTP\": \"S'il vous plaît entrer le code de pick-up à la clientèle.\",\n      \"pleaseEnterDeliveryOTP\": \"S'il vous plaît entrer le code de livraison du client.\",\n      \"verified\": \"Vérifié\",\n      \"verify\": \"Vérifier\",\n      \"addressLineOne\": \"Adresse 1\",\n      \"addressLineTwo\": \"Adresse 2\",\n      \"addressLineThree\": \"adresse 3\",\n      \"oldPassword\": \"ancien mot de passe\",\n      \"skype\": \"Skype\",\n      \"whatsApp\": \"WhatsApp\",\n      \"pinCode\": \"Code PIN*\",\n      \"verifyMobileDesc\": \"S'il vous plaît vérifier le numéro mobile pour mettre à jour le profil.\",\n      \"verifyNow\": \"Vérifiez maintenant\",\n      \"password\": \"Mot de passe\",\n      \"backToHome\": \"Aller à la maison\",\n      \"forgotPassword\": \"Mot de passe oublié?\",\n      \"signInCap\": \"Se connecter\",\n      \"moveToLogIn\": \"Déplacer vers Connexion\",\n      \"dontHaveAnAccount\": \"#ERROR!\",\n      \"clickHere\": \"Cliquez ici\",\n      \"signUpHere\": \"Inscrivez-vous ici\",\n      \"reset\": \"Réinitialiser\",\n      \"haveRegisterCode\": \"Un code d'enregistrement?\",\n      \"welcome\": \"Nous saluons le retour!\",\n      \"signInAsGuest\": \"Se connecter comme invité\",\n      \"editProfileTitle\": \"Editer le profil\",\n      \"emaillbl\": \"Email\",\n      \"searchInventory\": \"Recherche produit\",\n      \"emailAddress\": \"Adresse e-mail*\",\n      \"offlineFilter\": \"Impossible de trouver le solitaire désiré? Nous pouvons vous aider à obtenir la meilleure affaire de notre inventaire hors ligne.\",\n      \"loginDesc\": \"Est-ce que vous voulez activer tactile Id / Ampin pour déverrouiller Mes diamants? S'il vous plaît choisir une option pour l'application déverrouiller\",\n      \"searchDiamonds\": \"Recherche diamants\",\n      \"continueWithSearch\": \"Voulez-vous continuer votre recherche?\",\n      \"mobileNumber\": \"Mobile\",\n      \"searchHint\": \"Chercher...\",\n      \"selectYourCountry\": \"Choisissez le pays\",\n      \"resendCodeIn\": \"Code Renvoyez\",\n      \"resendCode\": \"Recevoir à nouveau\",\n      \"haveAnAccount\": \"Vous avez déjà un compte?\",\n      \"dontReceiveCode\": \"Si vous ne recevez pas de code!\",\n      \"inLogin\": \"ouvrir une session.\",\n      \"resetPwdDesc\": \"Ajouter un mot de passe et confirmez le mot de passe pour réinitialiser votre mot de passe.\",\n      \"backToLogin\": \"Retour connexion\",\n      \"firstName\": \"Prénom*\",\n      \"name\": \"Nom d'utilisateur*\",\n      \"lastName\": \"Nom de famille*\",\n      \"middleName\": \"Deuxième nom*\",\n      \"confirmPassword\": \"Confirmez le mot de passe\",\n      \"currentPasswordErr\": \"Erreur de mot de passe actuel\",\n      \"passwordChanged\": \"Mot de passe changé\",\n      \"lblLogInErr\": \"Erreur d'identification\",\n      \"enterYour\": \"Entrez votre\",\n      \"details\": \"Détails\",\n      \"registerCode\": \"Code d'enregistrement\",\n      \"registerCodeDesc\": \"Ajouter un code d'enregistrement pour commencer votre inscription avec 3Eco.\",\n      \"uploadPhotoDesc\": \"Prenez un selfie de votre auto\",\n      \"updateProfile\": \"Mettre à jour le profil\",\n      \"postalCode\": \"Code postal*\",\n      \"removeButton\": \"Retirer\",\n      \"gender\": \"Le sexe\",\n      \"male\": \"Masculin\",\n      \"female\": \"Femme\",\n      \"changePassword\": \"Changer le mot de passe\",\n      \"currentPassword\": \"Mot de passe actuel*\",\n      \"newPassword\": \"Nouveau mot de passe*\",\n      \"confirmNewPassword\": \"Confirmez le mot de passe*\",\n      \"personalDocuments\": \"Documents personnels\",\n      \"assignedAuto\": \"attribué automatiquement\",\n      \"logout\": \"Se déconnecter\",\n      \"logoutConfirmationMsg\": \"Êtes-vous sûr de vouloir vous déconnecter?\",\n      \"address\": \"Adresse*\",\n      \"accountNumber\": \"Numéro de compte\",\n      \"bankerName\": \"Les banquiers Nom\",\n      \"nameLable\": \"Nom\",\n      \"ifscCode\": \"Code IFSC\",\n      \"businessRegistrationNumbr\": \"Numéro d'enregistrement professionel\",\n      \"businessRelationshipPeriod\": \"Relation d'affaires Période (en années)\",\n      \"designation\": \"La désignation\",\n      \"nameofDesignation\": \"Nom de\",\n      \"natureofOrganization\": \"Nature de l'organisation\",\n      \"uploadFile\": \"Aucun fichier Choosen\",\n      \"update\": \"METTRE À JOUR\",\n      \"resetPwd\": \"réinitialiser le mot de passe\",\n      \"pwdReset\": \"Réinitialisation du mot de passe\",\n      \"signInWithMPIN\": \"Connectez-vous avec MPIN\",\n      \"pwdChanged\": \"Mot de passe changé\",\n      \"successfullyPwdDesc\": \"Vous avez réussi à réinitialiser votre mot de passe. S'il vous plaît utiliser votre nouveau mot de passe lors de la connexion.\",\n      \"lblProfileSetup\": \"Votre profil est mis en place\",\n      \"lblProfileSetupDesc\": \"Nous avons reçu les détails de votre profil\",\n      \"hoursAvailable\": \"total des Shifttime\",\n      \"confirmStoneDetail\": \"Confirmer Détail Pierre\",\n      \"companyName\": \"Nom de la compagnie\",\n      \"invoiceDate\": \"date de la facture\",\n      \"companyCode\": \"Code de l'entreprise\",\n      \"saveCompanyDetails\": \"Enregistrer sur la société\",\n      \"passwordNotChange\": \"Le mot de passe ne correspond pas\",\n      \"rememberPassword\": \"Se souvenir du mot de passe?\",\n      \"sendOTP\": \"Envoyer OTP\",\n      \"resendNow\": \"maintenant Renvoyer\",\n      \"didNotReceiveOTP\": \"Si vous ne recevez pas un OTP!\",\n      \"sendOTPToEmail\": \"Nous vous ferons parvenir un OTP à votre adresse e-mail indiquée ou nom d'utilisateur. S'il vous plaît entrez l'adresse e-mail ou nom d'utilisateur.\",\n      \"enterOTP\": \"Le Bureau du Procureur a été envoyé à votre adresse e-mail enregistrée. S'il vous plaît entrer dans le Bureau du Procureur.\",\n      \"backToSignIn\": \"Retour à Se connecter\",\n      \"passwordResetSuccessfully\": \"Mot de passe remis à zéro.\",\n      \"emailAndUname\": \"Email /\",\n      \"signUp\": \"S'inscrire\",\n      \"promotionText\": \"Offres promotionnelles\",\n      \"termsAndCondition\": \"Termes et conditions\",\n      \"mustAgreeTermsAndCondition\": \"Vous devez accepter les termes et condition Se connecter comme Utilisateur invité\",\n      \"forgotPasswordTitle\": \"Mot de passe oublié\",\n      \"uploadKYC\": \"Télécharger KYC\",\n      \"uploadKycDesc\": \"S'il vous plaît télécharger vos documents KYC pour accéder aux fonctionnalités complètes.\",\n      \"hintPhotoIdentityProof\": \"Photo preuve d'identité *\",\n      \"hintBussinerssProof\": \"Identité d'entreprise Preuve *\",\n      \"btnFileUpload\": \"Téléchargement de fichiers\",\n      \"pleaseUploadPhotoProof\": \"S'il vous plaît télécharger Preuve photo d'identité.\",\n      \"pleaseUploadBussinessProof\": \"S'il vous plaît télécharger Une preuve d'identité d'entreprise.\",\n      \"pleaseSelectFileFormat\": \"S'il vous plaît télécharger le fichier dans l'un des formats suivants: .jpg\",\n      \"kycSubmitted\": \"KYC Soumis\",\n      \"kycSubmmittedDesc\": \"Votre KYC a été soumis avec succès.\",\n      \"btnMoveToHome\": \"Déplacer à l'accueil\",\n      \"kYCRejected\": \"KYC Rejeté\",\n      \"kycRejectedDesc\": \"Votre KYC a été rejetée. S'il vous plaît télécharger vos documents KYC à nouveau pour accéder à toutes les fonctionnalités.\"\n    },\n    \"common_string\": {\n      \"seeMore\": \"voir plus\",\n      \"seeLess\": \"Voir Moins\",\n      \"modify\": \"Modifier\",\n      \"delete\": \"Effacer\",\n      \"details\": \"Détails\",\n      \"edit\": \"Éditer\",\n      \"addDemand\": \"Ajouter la demande\",\n      \"demandTitle\": \"Titre de la demande\",\n      \"pleaseEnterDemandTitle\": \"S'il vous plaît entrer le titre de la demande\",\n      \"demandAddedSuccessfully\": \"La demande d'ajout avec succès\",\n      \"selectAtleastOneFilter\": \"S'il vous plaît\",\n      \"savedSearch\": \"Recherche sauvegardée\",\n      \"searchSavedSearch\": \"Recherche sauvegardée Recherche\",\n      \"viewDetails\": \"Voir les détails\",\n      \"viewLessDetails\": \"Voir Moins de détails\",\n      \"myDemand\": \"ma demande\",\n      \"date\": \"Date\",\n      \"selectTime\": \"Sélectionnez Heure\",\n      \"selectDate\": \"Sélectionner une date\",\n      \"offerVelidTill\": \"Offre valable jusqu'au\",\n      \"officeVisitDate\": \"Bureau Date de la visite\",\n      \"all\": \"Tout\",\n      \"status\": \"Statut\",\n      \"save\": \"sauver\",\n      \"verify\": \"Vérifier\",\n      \"readMore\": \"Lire la suite\",\n      \"goodMorning\": \"Bonjour\",\n      \"goodAfternoon\": \"Bonne après-midi\",\n      \"goodEvening\": \"Bonsoir\",\n      \"btnSkip\": \"Sauter\",\n      \"btnUpdate\": \"Mettre à jour\",\n      \"btnContinue\": \"Continuer\",\n      \"btnContinueCap\": \"CONTINUER\",\n      \"btnEdit\": \"Éditer\",\n      \"btnSubmit\": \"Soumettre\",\n      \"btnNextCap\": \"Prochain\",\n      \"btnSaveCap\": \"Mettre à jour le mot de passe\",\n      \"btnWithdrawCap\": \"SE DÉSISTER\",\n      \"btnSaveAndContinueCap\": \"ENREGISTRER CONTINUER\",\n      \"btnUnregister\": \"non enregistré mobile\",\n      \"btnClose\": \"Fermer\",\n      \"remove\": \"Retirer\",\n      \"refresh\": \"Rafraîchir\",\n      \"fetchLocationMessage\": \"S'il vous plaît attendre que nous récupérions votre emplacement\",\n      \"done\": \"Terminé\",\n      \"doneCap\": \"TERMINÉ\",\n      \"cancel\": \"Annuler\",\n      \"allow\": \"Autoriser\",\n      \"countryFirst\": \"Choisissez un pays d'abord\",\n      \"apply\": \"Appliquer\",\n      \"cancelCap\": \"ANNULER\",\n      \"uploadCap\": \"TÉLÉCHARGER\",\n      \"yesCancelCap\": \"OUI\",\n      \"upload\": \"Télécharger\",\n      \"ok\": \"D'accord\",\n      \"home\": \"Accueil\",\n      \"goToMyWatchList\": \"Allez à ma liste\",\n      \"goToMyOrder\": \"Allez à ma commande\",\n      \"gotToMyOffer\": \"Aller à mon offre\",\n      \"gotToMyHold\": \"Allez à mon attente\",\n      \"gotToMyEnquiry\": \"Allez à mon enquête\",\n      \"gotToMyBid\": \"Allez à mon offre\",\n      \"gotToMyReminder\": \"Allez à Mon Rappel\",\n      \"gotToMyComments\": \"Aller à Mes notes\",\n      \"yes\": \"Oui\",\n      \"no\": \"Non\",\n      \"selectCountry\": \"Choisissez le pays\",\n      \"clickHere\": \"Cliquez ici\",\n      \"btnAddNewAddress\": \"AJOUTER UNE NOUVELLE ADRESSE\",\n      \"btnCancel\": \"ANNULER\",\n      \"btnTakeSelfie\": \"prenez selfie\",\n      \"successfully\": \"Avec succès\",\n      \"lblAppExit\": \"Êtes-vous sûr de vouloir quitter?\",\n      \"lblExit\": \"Sortie\",\n      \"openAppSetting\": \"ouvrir les paramètres\",\n      \"lblOr\": \"Ou\",\n      \"fromLbl\": \"De\",\n      \"toLbl\": \"À\",\n      \"showMore\": \"Montre plus\",\n      \"showLess\": \"Montrer moins\",\n      \"selectCity\": \"Sélectionnez une ville\",\n      \"notYetAvailable\": \"Pas encore disponible\",\n      \"updateAvailable\": \"Mise à jour disponible!\",\n      \"downloadAppFrom\": \"Télécharger l'application de mise à jour\",\n      \"playStore\": \"Play Store\",\n      \"skipUpdate\": \"Sauter Mise à jour\",\n      \"stateFirst\": \"Veuillez sélectionner État d'abord\",\n      \"reallyExit\": \"Vraiment quitter?\",\n      \"alert\": \"Alerte!\",\n      \"loading\": \"Chargement\",\n      \"error\": \"Erreur\",\n      \"jumpToTop\": \"Sauter vers le haut\",\n      \"ihaveread\": \"j'ai lu et accepté\",\n      \"selected\": \"Sélectionner\",\n      \"lbllogout\": \"Se déconnecter\",\n      \"lblThanx\": \"Je vous remercie\",\n      \"lblSelectCity\": \"Sélectionnez une ville\",\n      \"lblSelectState\": \"Sélectionnez l'état\",\n      \"lblSelectCountry\": \"Choisissez le pays\",\n      \"lblCity\": \"Ville\",\n      \"lblCountry\": \"Pays\",\n      \"lblName\": \"Nom\",\n      \"lblPinCode\": \"Code PIN\",\n      \"lblMobileNumber\": \"Numéro de portable\",\n      \"lblState\": \"Etat\",\n      \"lblCode\": \"Code:\",\n      \"lblOrderNo\": \"N ° de commande:\",\n      \"lblOrderItem\": \"Passer commande Référence:\",\n      \"lblDelivered\": \"Livré\",\n      \"lblTicketReady\": \"Votre billet est prêt\",\n      \"lblPersonTicket\": \"Ticket de 2 personnes\",\n      \"lblShuttleBus\": \"Navette\",\n      \"lblPickup\": \"Ramasser\",\n      \"lblDropoff\": \"Déposer\",\n      \"lblPassenger\": \"Passager\",\n      \"lblDeliveryNo\": \"No. de livraison\",\n      \"lblPrice\": \"Prix\",\n      \"lblValid\": \"Valable\",\n      \"lblRenew\": \"Renouveler\",\n      \"lblDeparture\": \"Départ\",\n      \"lblArrived\": \"Arrivée\",\n      \"lblSendtoFriend\": \"Envoyer à un ami\",\n      \"popupRenewTitle\": \"renouveler billet\",\n      \"popupRenewDesc\": \"Lorem ipsum dolor sit amet\",\n      \"popuplblPassenger\": \"Passager\",\n      \"popuplblCancel\": \"Annuler\",\n      \"popupbtnRenew\": \"Renouveler\",\n      \"ridelblAwesome\": \"Impressionnant\",\n      \"ridebtnDone\": \"Terminé\",\n      \"offerPricePerCarat\": \"Prix \u200B\u200Boffert (Cts)\",\n      \"dropOffText\": \"Déposer\",\n      \"pickUpText\": \"Ramasser\",\n      \"startAtText\": \"Commencer à\",\n      \"endAtText\": \"Fin à\",\n      \"personText\": \"la personne\",\n      \"paymentScreenTitle\": \"Paiement\",\n      \"pickuplbl\": \"Ramasser\",\n      \"droplbl\": \"Déposer\",\n      \"makePaymentButtonlbl\": \"Effectuer le paiement\",\n      \"pessangerslbl\": \"Les passagers\",\n      \"priceBreakuplbl\": \"Prix \u200B\u200BBreakup\",\n      \"tripPricelbl\": \"Prix \u200B\u200Bde voyage\",\n      \"taxeslbl\": \"impôts\",\n      \"totallbl\": \"Total\",\n      \"cardNumberhint\": \"Numéro de carte\",\n      \"cvvhint\": \"CVV\",\n      \"datehint\": \"MM / AA\",\n      \"btnTryAgain\": \"Réessayer\",\n      \"cityFirst\": \"S'il vous plaît sélectionner la ville première\",\n      \"enterFareDetails\": \"Entrez détails de vente\",\n      \"fromDate\": \"Partir de la date\",\n      \"toDate\": \"date sélectionnée\",\n      \"btnUnderstand\": \"Je comprends\",\n      \"applicationUpdate\": \"Mise à jour d'application\",\n      \"newVersionMessage\": \"Une nouvelle version de l'application est disponible\",\n      \"paymentCollected\": \"paiement Collected\",\n      \"addComment\": \"Ajouter un commentaire\",\n      \"more\": \"Plus\",\n      \"carat\": \"Carat\",\n      \"pcs\": \"pcs\",\n      \"cts\": \"Cts\",\n      \"disc\": \"disque%\",\n      \"avgPriceCrt\": \"Moy. Prix \u200B\u200B/ Ct\",\n      \"amount\": \"Montant\",\n      \"confirmStone\": \"Confirmer pierre\",\n      \"confirm\": \"Confirmer\",\n      \"offered\": \"Offert\",\n      \"validTill\": \"Valable jusqu'au\",\n      \"remark\": \"Remarque\",\n      \"color\": \"Couleur\",\n      \"colorGroup\": \"Groupe de couleurs\",\n      \"colorFancy\": \"Fantaisie\",\n      \"colorWhite\": \"blanc\",\n      \"clarity\": \"Clarté\",\n      \"clarityGroup\": \"Groupe clarté\",\n      \"intensity\": \"Intensité\",\n      \"overtone\": \"Harmonique\",\n      \"selectBusinessType\": \"Sélectionner le type d'entreprise\",\n      \"selectState\": \"Sélectionnez l'état\",\n      \"search\": \"Chercher\",\n      \"profile\": \"Mon profil\",\n      \"personal\": \"Personnel\",\n      \"business\": \"Affaires\",\n      \"documents\": \"documents\",\n      \"noSlotFound\": \"Aucun emplacement trouvé\",\n      \"noDiamondFound\": \"Aucun diamants correspondant à votre recherche. S'il vous plaît vous ajoutez exigez.\",\n      \"selectType\": \"Sélectionner le type virtuel\",\n      \"noSavedSearch\": \"Aucune recherche enregistrée Exists\",\n      \"searchCity\": \"ville Recherche\",\n      \"searchCountry\": \"Recherche Pays\",\n      \"searchState\": \"État de recherche\",\n      \"notifications\": \"Notification\",\n      \"enter2Stone\": \"S'il vous plaît sélectionner au moins 2 pierre à comparer.\",\n      \"bidDesc\": \"est actuellement situé en Inde et pour la livraison dans un autre pays en dehors de l'Inde prendra au moins 7-10 jours ouvrables.\",\n      \"packetNo\": \"Non paquet:\",\n      \"quit\": \"Quitter\",\n      \"agree\": \"Je suis d'accord\",\n      \"laterToday\": \"Plus tard aujourd'hui\",\n      \"toMorrow\": \"Demain\",\n      \"nextWeek\": \"Prochaine semaine\",\n      \"chooseAnother\": \"Choisis un autre\",\n      \"dateTime\": \"Date et heure\",\n      \"language\": \"Langue\",\n      \"diamNow\": \"DiamNow\",\n      \"noDocument\": \"Aucun document trouvé\",\n      \"searchBusinessType\": \"Rechercher Type d'entreprise\",\n      \"hours\": \"Heures\",\n      \"minutes\": \"Minutes\",\n      \"seconds\": \"secondes\",\n      \"bidEndsIn\": \"Offre se termine par:\",\n      \"shape\": \"Forme\",\n      \"download\": \"Télécharger\",\n      \"share\": \"Partager\",\n      \"placeOrder\": \"Passer la commande\",\n      \"enterComment\": \"S'il vous plaît écrire votre commentaire\",\n      \"deleteItem\": \"Etes-vous sûr que vous voulez supprimer?\",\n      \"shippingPolicy\": \"Politique des transports maritimes\",\n      \"offerSundayRestriction\": \"Dimanche n'est pas autorisé. Bureau journées de travail sont du lundi au samedi\",\n      \"weekAgo\": \"Il ya 1 semaine\",\n      \"lastWeek\": \"La semaine dernière\",\n      \"dayAgo\": \"il y a quelques jours\",\n      \"onedayAgo\": \"il y a 1 jour\",\n      \"yesterday\": \"Hier\",\n      \"hourAgo\": \"il y a des heures\",\n      \"onehourAgo\": \"Il ya 1 heure\",\n      \"anhourAgo\": \"Il y a une heure\",\n      \"mintuesAgo\": \"il y a quelques minutes\",\n      \"onemintuesAgo\": \"il y a 1 minute\",\n      \"amintueAgo\": \"Il y'a une minute\",\n      \"secondsAgo\": \"il y a quelques instants\",\n      \"justNow\": \"Juste maintenant\",\n      \"today\": \"Aujourd'hui\",\n      \"past\": \"Passé\",\n      \"selectPhotoProof\": \"sélection du document\",\n      \"pleaseSelectPhotoProof\": \"S'il vous plaît sélectionner le document\",\n      \"selectBusinessProof\": \"sélection du document\",\n      \"pleaseSelectBusinessProof\": \"S'il vous plaît sélectionner le document\",\n      \"touchId\": \"Id tactile\",\n      \"faceId\": \"Id visage\",\n      \"enableTouchId\": \"Activer tactile Id pour déverrouiller Mes diamants?\",\n      \"enableFaceId\": \"Activer Id Face à déverrouiller Mes diamants?\",\n      \"unlockWithTouchId\": \"Débloquer Mes diamants à l'aide tactile Id\",\n      \"unlockWithFaceId\": \"Déverrouillez Mes diamants en utilisant Id Face.\",\n      \"mPin\": \"Ampin\",\n      \"holdMemoStatusDiamondorder\": \"Vous ne pouvez pas confirmer les pierres qui sont déjà en attente ou de l'état mémo\",\n      \"searchStoneIdCertificateNo\": \"Recherche Pierre Id / certificat Non\",\n      \"createMPin\": \"Créer un nouveau Ampin\",\n      \"reentermpin\": \"reenter Ampin\",\n      \"forgotmpin\": \"Mot MPIN?\",\n      \"verifympin\": \"vérifier Ampin\",\n      \"enteryoursixdigitcode\": \"Entrez votre 6 chiffres MPIN\",\n      \"changempin\": \"changement Ampin\",\n      \"faceidandtouchnotenable\": \"FaceID / TouchId n'est pas activé dans votre téléphone, activez S'il vous plaît utiliser cette fonctionnalité\",\n      \"enablempintounlockmydiamonds\": \"Activer Ampin pour application déverrouiller? Il désactivera tactile Id. Es-tu sur de vouloir continuer?\",\n      \"enabletouchidtounlockmydiamonds\": \"Activer tactile Id pour l'application déverrouiller? Il désactive Ampin. Es-tu sur de vouloir continuer?\",\n      \"rememberme\": \"Souviens-toi de moi\",\n      \"usertouchid\": \"Utilisation tactile Id\",\n      \"usempin\": \"Utilisez Ampin\",\n      \"filesarenotavailableonserver\": \"Les fichiers ne sont pas disponibles sur le serveur, S'il vous plaît réessayer plus tard\",\n      \"allfileshavebeendownloaded\": \"Tous les fichiers ont été téléchargés.\",\n      \"filesisdownloaded\": \"fichiers est téléchargé\",\n      \"filesisnotdownloadedbcz\": \"les fichiers ne sont pas téléchargés parce qu'il est existe pas dans le serveur.\",\n      \"downloading canceled\": \"le téléchargement annulé\",\n      \"downloading\": \"Téléchargement...\",\n      \"expirydate\": \"Date d'expiration :\",\n      \"youreallywanttodelete\": \"Vous voulez vraiment supprimer\"\n    },\n    \"error_string\": {\n      \"accessDenide\": \"Accès refusé\",\n      \"pleaseSelectOfferTillDate\": \"S'il vous plaît sélectionner l'offre jusqu'à ce jour.\",\n      \"pleaseSelectOfficeVisitDate\": \"S'il vous plaît choisir la date de visite de bureau\",\n      \"deleteStoneMsg\": \"Êtes-vous sûr de vouloir lapider delete (s)?\",\n      \"acceptTermsAndCondition\": \"S'il vous plaît accepter les termes et conditions\",\n      \"diamondCompareRemove\": \"Au moins 2 pierres sont nécessaires pour comparer.\",\n      \"diamondSelectionError\": \"S'il vous plaît sélectionner au moins une pierre.\",\n      \"pleaseEnterCompanyName\": \"S'il vous plaît entrez le nom de l'entreprise.\",\n      \"selectInvoiceDate\": \"Sélectionnez Date de la facture\",\n      \"pleaseEnterComment\": \"S'il vous plaît écrire votre commentaire.\",\n      \"pleaseEnterRemarks\": \"S'il vous plaît entrer des remarques.\",\n      \"selectExpiryDate\": \"S'il vous plaît choisir la date d'expiration.\",\n      \"enterOTP\": \"S'il vous plaît entrer le code\",\n      \"pleaseEnterOTP\": \"S'il vous plaît entrer le code de vérification.\",\n      \"enteredCodeNotMatching\": \"code saisi ne correspond pas à. Réessayer\",\n      \"selectCancellationReason\": \"S'il vous plaît choisir raison de l'annulation\",\n      \"enterDesc\": \"S'il vous plaît entrer la description.\",\n      \"enterTitle\": \"Veuillez entrer le titre.\",\n      \"enterEmailOrPhone\": \"S'il vous plaît entrer un email / mobile.\",\n      \"enterPassword\": \"Mot de passe ne peut pas être vide. Veuillez entrer le mot de passe.\",\n      \"enterConfirmPassword\": \"S'il vous plaît entrer le mot de passe de confirmation.\",\n      \"enterSkype\": \"Entrez s'il vous plaît Skype.\",\n      \"enterRegisterCode\": \"S'il vous plaît entrer le code d'inscription\",\n      \"enterEmail\": \"S'il vous plaît entrer votre adresse mail.\",\n      \"enterPhone\": \"S'il vous plaît entrer numéro de mobile.\",\n      \"enterUsername\": \"Nom d'utilisateur ne peut pas être vide. S'il vous plaît entrer Nom d'utilisateur.\",\n      \"enterValidEmail\": \"S'il vous plaît entrer l'adresse email valide.\",\n      \"enterValidPhone\": \"S'il vous plaît entrer le numéro de mobile valide.\",\n      \"enterValidWhatsappPhone\": \"S'il vous plaît entrer le numéro de mobile valide WhatsApp.\",\n      \"enterValidPassword\": \"S'il vous plaît entrer 6 caractères ou long mot de passe.\",\n      \"mismatchPassword\": \"Mot de passe et le mot de passe de confirmation ne correspond pas à.\",\n      \"enterFirstName\": \"S'il vous plaît entrer le prénom.\",\n      \"enterMiddleName\": \"S'il vous plaît entrer le prénom.\",\n      \"enterPinCode\": \"S'il vous plaît entrer le code PIN.\",\n      \"enterName\": \"S'il vous plaît entrez le nom.\",\n      \"enterLastName\": \"S'il vous plaît entrer Nom.\",\n      \"enterAddress\": \"S'il vous plaît entrer l'adresse.\",\n      \"enterValidPinCode\": \"Entrez Valid PinCode.\",\n      \"enterValidAddress\": \"S'il vous plaît entrer 10 caractères ou adresse longue.\",\n      \"enterPostalCode\": \"S'il vous plaît entrer le code postal.\",\n      \"enterValidPostalCode\": \"S'il vous plaît entrer le code postal numérique à 6 chiffres.\",\n      \"enterCurrentPassword\": \"S'il vous plaît entrer le mot de passe actuel.\",\n      \"enterNewPassword\": \"S'il vous plaît entrer un nouveau mot de passe.\",\n      \"enterFareAmount\": \"S'il vous plaît entrer le montant des ventes.\",\n      \"enterOrderNO\": \"S'il vous plaît entrer N ° de commande.\",\n      \"enterServiceType\": \"S'il vous plaît sélectionner le type de service.\",\n      \"enterPaymentType\": \"S'il vous plaît sélectionner le type de paiement.\",\n      \"enterValidFareAmount\": \"montant des ventes ne peut pas être égale à zéro.\",\n      \"enterPassangerNo\": \"S'il vous plaît entrer pas. des passagers.\",\n      \"enterValidPassangerNo\": \"Nombre de passagers ne peut pas être nul.\",\n      \"notEnterMorePassangerNo\": \"Nombre de passagers ne peut être plus de sept.\",\n      \"drivingLicenseValidationText\": \"S'il vous plaît entrer 15 chiffres alphanumériques numéro de permis de conduire.\",\n      \"PANCardValidationText\": \"S'il vous plaît entrez 10 chiffres alphanumériques numéro de carte PAN.\",\n      \"selectFromDate\": \"S'il vous plaît sélectionner la date\",\n      \"selectToDate\": \"S'il vous plaît sélectionner à ce jour\",\n      \"fromGreaterTo\": \"La date sélectionnée doit être supérieure à la date actuelle\",\n      \"wrongPassword\": \"Mot de passe doit contient 8 caractères minimum, 1 alphabet en majuscules, 1 alphabet minuscules, chiffres 1, 1 charater spéciale\",\n      \"fromValueGreateThanTo\": \"De valeur doit être inférieure ou égale à la valeur A\",\n      \"toValueGreaterThanFrom\": \"Pour la valeur doit être supérieure ou égale à la valeur A partir de\",\n      \"pleaseEnterCompanyCode\": \"S'il vous plaît entrer le code de l'entreprise\",\n      \"enterSamePassword\": \"Confirmer mot de passe ne correspond pas à nouveau mot de passe. S'il vous plaît entrer le mot de passe Confirmer même que nouveau mot de passe.\",\n      \"selectAppointmentDate\": \"S'il vous plaît choisir la date de rendez-vous\",\n      \"selectTimeSlot\": \"S'il vous plaît, sélectionner l'emplacement de temps\",\n      \"enterComments\": \"S'il vous plaît écrire votre commentaire\",\n      \"selectVirtualType\": \"S'il vous plaît sélectionner le type virtuel\",\n      \"versionError\": \"erreur version\"\n    },\n    \"no_data strings\": {\n      \"noDataFound\": \"Aucun Enregistrement Trouvé\"\n    },\n    \"screen_title\": {\n      \"placeAnOffer\": \"Placez une offre\",\n      \"addedInWatchList\": \"Ajouté à la liste de suivi\",\n      \"addedInOffer\": \"offre Submitted\",\n      \"addedInCart\": \"Ajouté au panier\",\n      \"addedInBid\": \"Ajouté dans l'offre\",\n      \"myEnquiry\": \"mon enquête sur\",\n      \"delete\": \"Effacer\",\n      \"addDemand\": \"Ajouter la demande\",\n      \"matchPair\": \"match Paire\",\n      \"savedAndSearch\": \"Enregistrer recherche\",\n      \"updateAndSearch\": \"Mise à jour et recherche\",\n      \"upcoming\": \"A venir\",\n      \"bidPricePerCt\": \"Prix \u200B\u200BOffre / Ct\",\n      \"bidDisc\": \"offre disque\",\n      \"bidValue\": \"offre Valeur\",\n      \"bidStone\": \"Pierre offre\",\n      \"myCart\": \"mon panier\",\n      \"myComment\": \"Mes notes\",\n      \"compare\": \"Comparer\",\n      \"compareStones\": \"Pierres comparer\",\n      \"statusHold\": \"En attente\",\n      \"statusOnMemo\": \"le Mémo\",\n      \"statusAvailable\": \"Disponible\",\n      \"statusNew\": \"Nouvelle arrivee\",\n      \"statusOffer\": \"Pierre du jour / Promotion\",\n      \"statusMyHold\": \"mon attente\",\n      \"signup\": \"S'inscrire\",\n      \"addToOffice\": \"Ajouter au bureau\",\n      \"addComment\": \"Ajouter un commentaire\",\n      \"addEnquiry\": \"Ajouter Enquête\",\n      \"finalOffer\": \"Offre définitive\",\n      \"finalDisc\": \"disque final\",\n      \"finalRate\": \"Taux final\",\n      \"finalValue\": \"Valeur finale\",\n      \"orderMsg\": \"1) Les prix mentionnés ici sont fixes et donc pas négociable. \\\\\\\\ n 2) Le classement, les paramètres mentionnés sur notre site au-delà du classement GIA.\",\n      \"offerMsg\": \"pierre offerte sera directement confirmée si le prix est approuvé nous vous demandons donc d'être sûr avant d'offrir. Toute pierre (s) mis en liste d'offre ne sont pas mis en attente pour vous car il est disponible pour les autres clients est aussi bien.\",\n      \"note\": \"Remarque\",\n      \"hours\": \"Heures\",\n      \"offeredDisc\": \"Dis offerts\",\n      \"offeredPriceCt\": \"Offert Pr / Ct\",\n      \"addOffer\": \"Ajouter une offre\",\n      \"expDiscPer\": \"Remise prévue\",\n      \"todayDiscPer\": \"Disque d'aujourd'hui\",\n      \"searchResult\": \"Résultat de la recherche\",\n      \"searchDiamond\": \"Recherche diamant\",\n      \"basic\": \"De base\",\n      \"advanced\": \"Avancée\",\n      \"stoneIdCertNo\": \"StoneID / Cert Non\",\n      \"takeSignature\": \"Prenez Signature\",\n      \"optional\": \"Optionnel\",\n      \"MyAddress\": \"Mon adresse\",\n      \"expiryDate\": \"Date d'expiration\",\n      \"drivingLicenceDesc\": \"image Votre permis de conduire\",\n      \"PanDesc\": \"Votre image de carte PAN\",\n      \"selfie\": \"selfie\",\n      \"selfieDesc\": \"Votre image selfie\",\n      \"pending\": \"En attente\",\n      \"rejected\": \"Rejeté\",\n      \"uploadAgain\": \"Télécharger\",\n      \"remove\": \"Retirer\",\n      \"title\": \"Titre\",\n      \"description\": \"La description\",\n      \"uploadYour\": \"Téléchargez votre\",\n      \"raiseDispute\": \"Dis nous à propos de cela\",\n      \"drivingLicense\": \"Permis de conduire\",\n      \"PANCard\": \"PAN carte\",\n      \"saveContinue\": \"Sauvegarder et continuer\",\n      \"uploadFrontUmgText\": \"Télécharger Image Front Side\",\n      \"uploadPANCardImgText\": \"Télécharger PAN Carte image\",\n      \"uploadBackImageText\": \"Réimportez Side image\",\n      \"helptopic\": \"Sujets d'aide\",\n      \"newRideSharingRequest\": \"Les nouvelles demandes de covoiturage\",\n      \"newRequest\": \"Les nouvelles demandes\",\n      \"welcomeTo\": \"Bienvenue à\",\n      \"welcomeDesc\": \"Connectez-vous à votre compte existant de Mani Jewel\",\n      \"forgotPassword\": \"Oublié votre\",\n      \"forgotPasswordDesc\": \"Entrez votre numéro de mobile enregistré pour récupérer votre mot de passe.\",\n      \"termsAndCondition\": \"termes et conditions\",\n      \"privacyPolicy\": \"Politique de confidentialité\",\n      \"aboutUS\": \"À propos de nous\",\n      \"otpVerification\": \"Vérification du code de tour\",\n      \"otpVerificationDelivery\": \"Vérification du code de ramassage\",\n      \"otpVerificationDeliveryDone\": \"Vérification du code de livraison\",\n      \"enterOtp\": \"Entrez 4 chiffres\",\n      \"recoveryCode\": \"Code de récupération\",\n      \"editProfile\": \"Editer le profil\",\n      \"myProfile\": \"Mon profil\",\n      \"reset\": \"Réinitialiser\",\n      \"yourPassword\": \"Votre mot de passe\",\n      \"photo\": \"Photo\",\n      \"otpDesc\": \"Le code de récupération a été envoyé à votre numéro de téléphone mobile. S'il vous plaît entrer le code.\",\n      \"otpVerifyDesc\": \"Le code de vérification a été envoyé à votre numéro de téléphone mobile. S'il vous plaît entrer le code.\",\n      \"diamondDetail\": \"Détail diamant\",\n      \"home\": \"Accueil\",\n      \"search\": \"Chercher\",\n      \"quickSearch\": \"Recherche rapide\",\n      \"newArrival\": \"Nouvelle arrivee\",\n      \"exclusiveDiamonds\": \"Diamants exclusifs\",\n      \"diamondOnAuction\": \"Diamond sur Auction\",\n      \"stoneOfTheDays\": \"Meilleur achat\",\n      \"myWatchlist\": \"Watchlist Mes\",\n      \"myBid\": \"mon offre\",\n      \"myHold\": \"mon attente\",\n      \"myOrder\": \"Ma liste ordonnée\",\n      \"confirmStone\": \"Confirmer pierre\",\n      \"myOffice\": \"Mon bureau Voir\",\n      \"myOffer\": \"Ma liste d'offre\",\n      \"myPurchased\": \"Mon histoire achetée\",\n      \"mySavedSearch\": \"Mes recherches\",\n      \"savedSearch\": \"Recherche sauvegardée\",\n      \"myDemand\": \"ma demande\",\n      \"contactUs\": \"Nous contacter\",\n      \"changePassword\": \"Changer le mot de passe\",\n      \"logout\": \"Se déconnecter\",\n      \"fareDetailsTitle\": \"Entrez détails de vente\",\n      \"fairAmt\": \"Montant des ventes\",\n      \"noOfPassengers\": \"Nombre de passagers\",\n      \"remarks\": \"Remarques\",\n      \"orderNo\": \"N ° de commande.\",\n      \"typeOfService\": \"Type de service\",\n      \"paymentType\": \"Type de paiement*\",\n      \"recentlyView\": \"récemment Voir\",\n      \"uploadImgValidationText\": \"fichier Upload doit être .jpg, .jpeg, .png ou .pdf taille ayant 5 Mo ou moins.\",\n      \"drivingLicenseHintText\": \"Numéro de permis de conduire\",\n      \"PANCARDHintText\": \"PAN Numéro de la carte\",\n      \"viewRide\": \"Manèges Voir\",\n      \"myVehicle\": \"mon véhicule\",\n      \"personalDocument\": \"Documents personnels\",\n      \"help\": \"AIDEZ-MOI\",\n      \"about\": \"À propos\",\n      \"bankDetails\": \"Coordonnées bancaires\",\n      \"accountAndPayment\": \"Compte et paiement\",\n      \"enquiry\": \"Enquête\",\n      \"download\": \"Télécharger\",\n      \"addToCart\": \"Ajouter au chariot\",\n      \"addToWatchList\": \"Ajouter à la liste\",\n      \"finalCalculation\": \"Calcul final\",\n      \"bookOffice\": \"Bureau du livre\",\n      \"clearSelection\": \"Effacer la sélection\",\n      \"comment\": \"commentaires\",\n      \"hold\": \"Tenir\",\n      \"offer\": \"Offre\",\n      \"officeView\": \"bureau Vue\",\n      \"placeOrder\": \"Passer la commande\",\n      \"buyNow\": \"Acheter maintenant\",\n      \"cancelStone\": \"annuler Pierre\",\n      \"share\": \"Partager\",\n      \"watchlist\": \"liste\",\n      \"exclusive\": \"Exclusif\",\n      \"featuredStones\": \"Pierres en vedette\",\n      \"stoneOfDay\": \"Pierres de jour\",\n      \"recentSearch\": \"Recherche récente\",\n      \"viewAll\": \"Voir tout\",\n      \"salesPersonDetail\": \"Détail des ventes Personne\",\n      \"searchTitle\": \"Recherche Titre\",\n      \"enterSearchTitle\": \"Entrez votre recherche Titre\",\n      \"timeSlots\": \"Tranches de temps\",\n      \"selectCustomDate\": \"Choisissez une date personnalisée\",\n      \"availableSlot\": \"Machines à sous disponibles\",\n      \"reqOfficeView\": \"Demander bureau Voir\",\n      \"myComments\": \"Mon commentaire\",\n      \"myReminder\": \"mon Rappel\",\n      \"reminder\": \"Rappel\",\n      \"manageAddress\": \"gérer les adresses\",\n      \"myAccount\": \"Mon compte\",\n      \"declaimer\": \"Avertissement\",\n      \"shareStone\": \"Partager Pierre\",\n      \"addRemider\": \"Ajouter un rappel\",\n      \"offlineSearch\": \"Hors ligne Recherche\",\n      \"searchHistory\": \"Historique des recherches\",\n      \"offlineStock\": \"Stock Hors ligne\",\n      \"searchOffline\": \"Rechercher (Hors ligne)\",\n      \"voiceSearch\": \"Recherche vocale\",\n      \"tapMictoSpeak\": \"Appuyez sur micro à parler\",\n      \"typeToSearch\": \"Tapez pour rechercher\",\n      \"typeWordsToSearch\": \"Tapez au moins 3 mots pour rechercher des pierres\"\n    },\n    \"dynamickeys\": {\n      \"shape\": \"Forme\",\n      \"caratRange\": \"carat Gamme\",\n      \"basicDetail\": \"Détails de base\",\n      \"measurementTitle\": \"Des mesures\",\n      \"inclusionDetail\": \"Détails d'inclusion\",\n      \"other\": \"Autre\",\n      \"stoneID\": \"Stone ID\",\n      \"labTitle\": \"Laboratoire\",\n      \"certNo\": \"Cert. Non.\",\n      \"locationTitle\": \"EMPLACEMENT\",\n      \"shapeTitle\": \"Forme\",\n      \"caratTitle\": \"Carat\",\n      \"colorTitle\": \"Couleur\",\n      \"clarityTitle\": \"CLARTÉ\",\n      \"cutTitle\": \"Couper\",\n      \"polishTitle\": \"polonais\",\n      \"symmentryTitle\": \"Symmentry\",\n      \"fluorescenceTitle\": \"Fluorescence\",\n      \"rapTitle\": \"Rap (%)\",\n      \"discountTitle\": \"Remise (%)\",\n      \"priceAndCt\": \"Prix \u200B\u200B/ Ct\",\n      \"amountTitle\": \"Montant\",\n      \"eyeCleanTitle\": \"Nettoyer les yeux\",\n      \"brownTitle\": \"MARRON\",\n      \"milkyTitle\": \"Laiteux\",\n      \"mixTingeTitle\": \"MIX Tinge\",\n      \"dimensionTitle\": \"Dimensions (mm)\",\n      \"girdleTitle\": \"Girdle (%)\",\n      \"tableTitle\": \"Table %\",\n      \"crownAngleTitle\": \"Couronne Angle\",\n      \"depthTitle\": \"profondeur%\",\n      \"pavAngleTitle\": \"Pav Angle\",\n      \"crownHeightTitle\": \"Couronne Hauteur (%)\",\n      \"pavDepthTitle\": \"Profondeur du Pavillon (en%)\",\n      \"starLengthTitle\": \"Longueur étoiles\",\n      \"lowerHalfTitle\": \"Moitié inférieure\",\n      \"gridleTitle\": \"Ceinture\",\n      \"gridleFacetedTitle\": \"GIRDLE FACETTES\",\n      \"culetTitle\": \"colette\",\n      \"rationTitle\": \"Rapport\",\n      \"blackInclusionTitle\": \"BLACK INCLUSION\",\n      \"otherInclusionTitle\": \"autres inclusion\",\n      \"openInclusionTitle\": \"INCLUSION OUVERT\",\n      \"extraFacetTitle\": \"EXTRA FACETTES\",\n      \"naturalTitle\": \"Naturel\",\n      \"hAndATitle\": \"H & A\",\n      \"keyToSymbol\": \"CLÉ DE SYMBOLE\",\n      \"labComments\": \"LAB COMMENTAIRES\",\n      \"laserInsTitle\": \"LASER INS\",\n      \"basicTitle\": \"De base\",\n      \"advancedTitle\": \"Avancée\",\n      \"stoneIdTitle\": \"Pierre ID / Cert Non\",\n      \"defaultTitle\": \"Défaut\",\n      \"newDiamondsTitle\": \"nouveaux diamants\",\n      \"priceLowToHigh\": \"Prix \u200B\u200Bcroissant\",\n      \"priceHighToLow\": \"Prix \u200B\u200Bélevé au plus bas\",\n      \"disLowToHigh\": \"Remise bas au plus élevé\",\n      \"disHighToLow\": \"Remise élevé au plus bas\",\n      \"colorLowToHigh\": \"Couleur bas au plus élevé\",\n      \"colorHighToLow\": \"Couleur élevé au plus bas\",\n      \"caratLowToHigh\": \"Carat bas au plus élevé\",\n      \"caratHighToLow\": \"Carat élevé au plus bas\",\n      \"clarityLowToHigh\": \"Clarté bas au plus élevé\",\n      \"clarityHighToLow\": \"Clarté élevé au plus bas\",\n      \"colorShadeTitle\": \"Nuance de couleur\",\n      \"certiTitle\": \"Numéro de certificat\",\n      \"arrivalsTitle\": \"Arrivées\",\n      \"lengthTitle\": \"Longueur\",\n      \"widthTitle\": \"Largeur\",\n      \"pavilionAngleTitle\": \"pavillon Angle\",\n      \"girdleConditionTitle\": \"Condition Ceinturon\",\n      \"cluetConditionTitle\": \"colette Condition\",\n      \"disTitle\": \"Dis%\",\n      \"depthTitleWithoutPerc\": \"Profondeur\",\n      \"otherInformationTitle\": \"les autres informations\"\n    }\n  },\n  \"JAPAN\": {\n    \"language_code\": \"JAPAN\",\n    \"auth_strings\": {\n      \"editCompanyInformation\": \"何かが間違っていました！ 1更新にプルダウン\",\n      \"selectNatureOfOrganization\": \"組織の性質を選択\",\n      \"setNewPassword\": \"もう一度新しいパスワードや記号を設定します。\",\n      \"enterCompanyName\": \"会社名を入力してください。\",\n      \"pleaseEnterCustomerOTP\": \"顧客の乗車コードを入力してください。\",\n      \"pleaseEnterPickupOTP\": \"顧客のピックアップコードを入力してください。\",\n      \"pleaseEnterDeliveryOTP\": \"顧客の配信コードを入力してください。\",\n      \"verified\": \"確認済み\",\n      \"verify\": \"確認\",\n      \"addressLineOne\": \"住所（1\",\n      \"addressLineTwo\": \"アドレス2\",\n      \"addressLineThree\": \"住所3\",\n      \"oldPassword\": \"以前のパスワード\",\n      \"skype\": \"スカイプ\",\n      \"whatsApp\": \"WhatsApp\",\n      \"pinCode\": \"ピンコード*\",\n      \"verifyMobileDesc\": \"プロファイルを更新するために携帯電話番号を確認してください。\",\n      \"verifyNow\": \"今すぐ確認\",\n      \"password\": \"パスワード\",\n      \"backToHome\": \"ホームへ\",\n      \"forgotPassword\": \"パスワードをお忘れですか？\",\n      \"signInCap\": \"サインイン\",\n      \"moveToLogIn\": \"ログインに移動\",\n      \"dontHaveAnAccount\": \"#ERROR!\",\n      \"clickHere\": \"ここをクリック\",\n      \"signUpHere\": \"ここにサインアップします\",\n      \"reset\": \"リセット\",\n      \"haveRegisterCode\": \"登録コードをお持ちですか？\",\n      \"welcome\": \"お帰りなさい！\",\n      \"signInAsGuest\": \"ゲストとしてサインイン\",\n      \"editProfileTitle\": \"プロファイル編集\",\n      \"emaillbl\": \"Eメール\",\n      \"searchInventory\": \"検索製品\",\n      \"emailAddress\": \"電子メールアドレス*\",\n      \"offlineFilter\": \"希望ソリティアを見つけることができませんでしたか？私たちは、あなたが私たちのオフラインインベントリから、最良の取引を得るのを助けることができます。\",\n      \"loginDesc\": \"あなたは私のダイヤモンドのロックを解除するために、タッチID / MPinを有効にしますか？ロック解除アプリのオプションを選択してください\",\n      \"searchDiamonds\": \"検索ダイヤモンド\",\n      \"continueWithSearch\": \"あなたの検索を継続しますか？\",\n      \"mobileNumber\": \"モバイル\",\n      \"searchHint\": \"探す...\",\n      \"selectYourCountry\": \"国を選択\",\n      \"resendCodeIn\": \"再送コードで\",\n      \"resendCode\": \"再送信\",\n      \"haveAnAccount\": \"すでにアカウントをお持ちですか？\",\n      \"dontReceiveCode\": \"あなたは、コードを受け取っていない場合は！\",\n      \"inLogin\": \"ログインします。\",\n      \"resetPwdDesc\": \"あなたのパスワードをリセットするためのパスワードと確認パスワードを追加します。\",\n      \"backToLogin\": \"ログインに戻る\",\n      \"firstName\": \"ファーストネーム*\",\n      \"name\": \"ユーザー名*\",\n      \"lastName\": \"苗字*\",\n      \"middleName\": \"ミドルネーム*\",\n      \"confirmPassword\": \"パスワードを認証する\",\n      \"currentPasswordErr\": \"現在のパスワードエラー\",\n      \"passwordChanged\": \"パスワード変更済み\",\n      \"lblLogInErr\": \"ログインエラー\",\n      \"enterYour\": \"あなたの〜を入力してください\",\n      \"details\": \"細部\",\n      \"registerCode\": \"登録コード\",\n      \"registerCodeDesc\": \"3ecoであなたの登録を開始するには登録コードを追加します。\",\n      \"uploadPhotoDesc\": \"あなたの自己の自分撮りを取ります\",\n      \"updateProfile\": \"プロフィールを更新\",\n      \"postalCode\": \"郵便番号*\",\n      \"removeButton\": \"削除する\",\n      \"gender\": \"性別\",\n      \"male\": \"男性\",\n      \"female\": \"女性\",\n      \"changePassword\": \"パスワードを変更する\",\n      \"currentPassword\": \"現在のパスワード*\",\n      \"newPassword\": \"新しいパスワード*\",\n      \"confirmNewPassword\": \"パスワードを認証する*\",\n      \"personalDocuments\": \"パーソナルドキュメント\",\n      \"assignedAuto\": \"割り当てられオート\",\n      \"logout\": \"ログアウト\",\n      \"logoutConfirmationMsg\": \"あなたがログアウトしてもよろしいですか？\",\n      \"address\": \"住所*\",\n      \"accountNumber\": \"口座番号\",\n      \"bankerName\": \"全国銀行名\",\n      \"nameLable\": \"名前\",\n      \"ifscCode\": \"IFSCコード\",\n      \"businessRegistrationNumbr\": \"ビジネス登録番号\",\n      \"businessRelationshipPeriod\": \"ビジネス関係の期間（年数）\",\n      \"designation\": \"指定\",\n      \"nameofDesignation\": \"の名前\",\n      \"natureofOrganization\": \"組織の性質\",\n      \"uploadFile\": \"NO FILEなかっ選びだし\",\n      \"update\": \"更新\",\n      \"resetPwd\": \"パスワードを再設定する\",\n      \"pwdReset\": \"パスワードのリセット\",\n      \"signInWithMPIN\": \"MPINでサインイン\",\n      \"pwdChanged\": \"パスワード変更済み\",\n      \"successfullyPwdDesc\": \"あなたは成功したパスワードをリセットしています。ログイン時に新しいパスワードを使用してください。\",\n      \"lblProfileSetup\": \"あなたのプロフィールが設定されています\",\n      \"lblProfileSetupDesc\": \"私たちはあなたのプロフィールの詳細を受けています\",\n      \"hoursAvailable\": \"総Shifttime\",\n      \"confirmStoneDetail\": \"確認ストーンの詳細\",\n      \"companyName\": \"会社名\",\n      \"invoiceDate\": \"請求書の日付\",\n      \"companyCode\": \"会社コード\",\n      \"saveCompanyDetails\": \"保存会社情報\",\n      \"passwordNotChange\": \"パスワードが一致しません\",\n      \"rememberPassword\": \"パスワードを覚える？\",\n      \"sendOTP\": \"OTPを送信\",\n      \"resendNow\": \"再送今\",\n      \"didNotReceiveOTP\": \"あなたはOTPを受け取っていない場合は！\",\n      \"sendOTPToEmail\": \"私たちはあなたの入力した電子メールアドレスまたはユーザー名にOTPを送信します。電子メールアドレスまたはユーザー名を入力してください。\",\n      \"enterOTP\": \"OTPは、ご登録のメールアドレスに送信されました。 OTPを入力してください。\",\n      \"backToSignIn\": \"Inを署名する戻ります\",\n      \"passwordResetSuccessfully\": \"パスワードが正常にリセット。\",\n      \"emailAndUname\": \"メール/ユーザー名\",\n      \"signUp\": \"サインアップ\",\n      \"promotionText\": \"プロモーション\",\n      \"termsAndCondition\": \"利用規約と条件\",\n      \"mustAgreeTermsAndCondition\": \"あなたはゲストユーザーとしてサインインする用語と条件に同意する必要があります\",\n      \"forgotPasswordTitle\": \"パスワードをお忘れですか\",\n      \"uploadKYC\": \"アップロードKYC\",\n      \"uploadKycDesc\": \"フル機能にアクセスするためにあなたのKYCのドキュメントをアップロードしてください。\",\n      \"hintPhotoIdentityProof\": \"写真のアイデンティティの証明*\",\n      \"hintBussinerssProof\": \"ビジネスアイデンティティ証明*\",\n      \"btnFileUpload\": \"ファイルのアップロード\",\n      \"pleaseUploadPhotoProof\": \"写真のアイデンティティの証明をアップロードしてください。\",\n      \"pleaseUploadBussinessProof\": \"ビジネスアイデンティティの証明をアップロードしてください。\",\n      \"pleaseSelectFileFormat\": \"次のいずれかの形式でファイルをアップロードしてください：.JPG\",\n      \"kycSubmitted\": \"KYC提出\",\n      \"kycSubmmittedDesc\": \"あなたのKYCは正常に送信されました。\",\n      \"btnMoveToHome\": \"ホームへ移動\",\n      \"kYCRejected\": \"KYC拒否\",\n      \"kycRejectedDesc\": \"あなたのKYCは拒否されました。すべての機能にアクセスするには、再度ごKYCのドキュメントをアップロードしてください。\"\n    },\n    \"common_string\": {\n      \"seeMore\": \"続きを見る\",\n      \"seeLess\": \"参照少ないです\",\n      \"modify\": \"変更\",\n      \"delete\": \"[削除]\",\n      \"details\": \"細部\",\n      \"edit\": \"編集します\",\n      \"addDemand\": \"需要を追加\",\n      \"demandTitle\": \"需要タイトル\",\n      \"pleaseEnterDemandTitle\": \"デマンドタイトルを入力してください。\",\n      \"demandAddedSuccessfully\": \"需要が正常に追加します\",\n      \"selectAtleastOneFilter\": \"お願いします\",\n      \"savedSearch\": \"保存された検索\",\n      \"searchSavedSearch\": \"保存された検索を検索\",\n      \"viewDetails\": \"詳細を見る\",\n      \"viewLessDetails\": \"画面を狭く詳細\",\n      \"myDemand\": \"マイデマンド\",\n      \"date\": \"日付\",\n      \"selectTime\": \"選択時間\",\n      \"selectDate\": \"日付を選択\",\n      \"offerVelidTill\": \"オファー有効ティル\",\n      \"officeVisitDate\": \"オフィス訪問日\",\n      \"all\": \"すべて\",\n      \"status\": \"状態\",\n      \"save\": \"保存する\",\n      \"verify\": \"確認\",\n      \"readMore\": \"続きを読む\",\n      \"goodMorning\": \"おはようございます\",\n      \"goodAfternoon\": \"こんにちは\",\n      \"goodEvening\": \"こんばんは\",\n      \"btnSkip\": \"スキップ\",\n      \"btnUpdate\": \"更新\",\n      \"btnContinue\": \"継続する\",\n      \"btnContinueCap\": \"継続する\",\n      \"btnEdit\": \"編集します\",\n      \"btnSubmit\": \"参加する\",\n      \"btnNextCap\": \"次\",\n      \"btnSaveCap\": \"更新パスワード\",\n      \"btnWithdrawCap\": \"WITHDRAW\",\n      \"btnSaveAndContinueCap\": \"SAVE＆CONTINUE\",\n      \"btnUnregister\": \"未登録の移動\",\n      \"btnClose\": \"閉じる\",\n      \"remove\": \"削除する\",\n      \"refresh\": \"リフレッシュ\",\n      \"fetchLocationMessage\": \"私たちはあなたの場所を取得しているお待ちください\",\n      \"done\": \"完了\",\n      \"doneCap\": \"DONE\",\n      \"cancel\": \"キャンセル\",\n      \"allow\": \"許します\",\n      \"countryFirst\": \"してください国を選択ファースト\",\n      \"apply\": \"適用します\",\n      \"cancelCap\": \"キャンセル\",\n      \"uploadCap\": \"UPLOAD\",\n      \"yesCancelCap\": \"はい\",\n      \"upload\": \"アップロード\",\n      \"ok\": \"OK\",\n      \"home\": \"家\",\n      \"goToMyWatchList\": \"マイウォッチリストに移動します\",\n      \"goToMyOrder\": \"私の注文に行きます\",\n      \"gotToMyOffer\": \"私の申し出に行きます\",\n      \"gotToMyHold\": \"私のホールドに行きます\",\n      \"gotToMyEnquiry\": \"お問合せに行きます\",\n      \"gotToMyBid\": \"私の入札に行きます\",\n      \"gotToMyReminder\": \"私のリマインダーに行きます\",\n      \"gotToMyComments\": \"マイノートに移動します\",\n      \"yes\": \"はい\",\n      \"no\": \"番号\",\n      \"selectCountry\": \"国を選択\",\n      \"clickHere\": \"ここをクリック\",\n      \"btnAddNewAddress\": \"新しい住所を追加する\",\n      \"btnCancel\": \"キャンセル\",\n      \"btnTakeSelfie\": \"自分撮りを取ります\",\n      \"successfully\": \"うまく\",\n      \"lblAppExit\": \"終了してよろしいですか？\",\n      \"lblExit\": \"出口\",\n      \"openAppSetting\": \"オープン設定\",\n      \"lblOr\": \"若しくは\",\n      \"fromLbl\": \"から\",\n      \"toLbl\": \"に\",\n      \"showMore\": \"もっと見せる\",\n      \"showLess\": \"レスショー\",\n      \"selectCity\": \"都市を選びなさい\",\n      \"notYetAvailable\": \"まだ利用できません\",\n      \"updateAvailable\": \"利用可能な更新！\",\n      \"downloadAppFrom\": \"からダウンロードしたアプリケーションのアップデート\",\n      \"playStore\": \"プレイストア\",\n      \"skipUpdate\": \"スキップアップデート\",\n      \"stateFirst\": \"してください選択国家ファースト\",\n      \"reallyExit\": \"本当に終了？\",\n      \"alert\": \"警告！\",\n      \"loading\": \"積載\",\n      \"error\": \"エラー\",\n      \"jumpToTop\": \"トップへジャンプ\",\n      \"ihaveread\": \"私は読み、同意します\",\n      \"selected\": \"選択する\",\n      \"lbllogout\": \"ログアウト\",\n      \"lblThanx\": \"ありがとうございました\",\n      \"lblSelectCity\": \"都市を選びなさい\",\n      \"lblSelectState\": \"選択状態\",\n      \"lblSelectCountry\": \"国を選択\",\n      \"lblCity\": \"市\",\n      \"lblCountry\": \"国\",\n      \"lblName\": \"名前\",\n      \"lblPinCode\": \"ピンコード\",\n      \"lblMobileNumber\": \"携帯電話番号\",\n      \"lblState\": \"状態\",\n      \"lblCode\": \"コード：\",\n      \"lblOrderNo\": \"注文番号：\",\n      \"lblOrderItem\": \"注文アイテム：\",\n      \"lblDelivered\": \"配信\",\n      \"lblTicketReady\": \"あなたのチケットは準備ができています\",\n      \"lblPersonTicket\": \"2人のチケット\",\n      \"lblShuttleBus\": \"シャトルバス\",\n      \"lblPickup\": \"選び出す\",\n      \"lblDropoff\": \"落ちる\",\n      \"lblPassenger\": \"旅客\",\n      \"lblDeliveryNo\": \"配達号\",\n      \"lblPrice\": \"価格\",\n      \"lblValid\": \"に有効\",\n      \"lblRenew\": \"書き換えます\",\n      \"lblDeparture\": \"出発\",\n      \"lblArrived\": \"到着した\",\n      \"lblSendtoFriend\": \"友達に送る\",\n      \"popupRenewTitle\": \"チケットを更新\",\n      \"popupRenewDesc\": \"Loremのイプサム嘆き座るAMET\",\n      \"popuplblPassenger\": \"旅客\",\n      \"popuplblCancel\": \"キャンセル\",\n      \"popupbtnRenew\": \"書き換えます\",\n      \"ridelblAwesome\": \"驚くばかり\",\n      \"ridebtnDone\": \"完了\",\n      \"offerPricePerCarat\": \"提示された価格（CTS）\",\n      \"dropOffText\": \"落ちる\",\n      \"pickUpText\": \"選び出す\",\n      \"startAtText\": \"スタート時\",\n      \"endAtText\": \"終わりに\",\n      \"personText\": \"人\",\n      \"paymentScreenTitle\": \"支払い\",\n      \"pickuplbl\": \"選び出す\",\n      \"droplbl\": \"落ちる\",\n      \"makePaymentButtonlbl\": \"支払う\",\n      \"pessangerslbl\": \"乗客\",\n      \"priceBreakuplbl\": \"価格分裂\",\n      \"tripPricelbl\": \"トリップ価格\",\n      \"taxeslbl\": \"税金\",\n      \"totallbl\": \"トータル\",\n      \"cardNumberhint\": \"カード番号\",\n      \"cvvhint\": \"CVV\",\n      \"datehint\": \"MM / YY\",\n      \"btnTryAgain\": \"再試行\",\n      \"cityFirst\": \"最初の都市を選択してください\",\n      \"enterFareDetails\": \"セールス詳細を入力します。\",\n      \"fromDate\": \"日から\",\n      \"toDate\": \"選択された日付\",\n      \"btnUnderstand\": \"わかります\",\n      \"applicationUpdate\": \"アプリケーションのアップデート\",\n      \"newVersionMessage\": \"アプリケーションの新しいバージョンが入手可能です\",\n      \"paymentCollected\": \"お支払い収集\",\n      \"addComment\": \"コメントを追加します\",\n      \"more\": \"もっと\",\n      \"carat\": \"カラット\",\n      \"pcs\": \"個\",\n      \"cts\": \"CTS\",\n      \"disc\": \"ディスク％\",\n      \"avgPriceCrt\": \"平均。価格/ CT\",\n      \"amount\": \"量\",\n      \"confirmStone\": \"確認ストーン\",\n      \"confirm\": \"確認\",\n      \"offered\": \"提供\",\n      \"validTill\": \"まで有効\",\n      \"remark\": \"リマーク\",\n      \"color\": \"色\",\n      \"colorGroup\": \"カラーグループ\",\n      \"colorFancy\": \"ファンシー\",\n      \"colorWhite\": \"白い\",\n      \"clarity\": \"明快\",\n      \"clarityGroup\": \"クラリティグループ\",\n      \"intensity\": \"強\",\n      \"overtone\": \"倍音\",\n      \"selectBusinessType\": \"ビジネスの種類を選択します\",\n      \"selectState\": \"選択状態\",\n      \"search\": \"探す\",\n      \"profile\": \"私のプロフィール\",\n      \"personal\": \"個人的な\",\n      \"business\": \"ビジネス\",\n      \"documents\": \"ドキュメント\",\n      \"noSlotFound\": \"スロット見つかりません\",\n      \"noDiamondFound\": \"検索条件に一致するダイヤモンドありません。あなたが求めて追加してください。\",\n      \"selectType\": \"仮想タイプを選択します\",\n      \"noSavedSearch\": \"ノー保存された検索が存在します\",\n      \"searchCity\": \"検索city\",\n      \"searchCountry\": \"検索する国\",\n      \"searchState\": \"検索状態\",\n      \"notifications\": \"お知らせ\",\n      \"enter2Stone\": \"比較するために、少なくとも2石を選択してください。\",\n      \"bidDesc\": \"現在、インドに位置し、他の国での配信のために離れてインドから少なくとも7-10営業日かかります。\",\n      \"packetNo\": \"パケット番号：\",\n      \"quit\": \"終了する\",\n      \"agree\": \"同意する\",\n      \"laterToday\": \"今日あとで\",\n      \"toMorrow\": \"明日\",\n      \"nextWeek\": \"来週\",\n      \"chooseAnother\": \"別のものを選びます\",\n      \"dateTime\": \"日付時刻\",\n      \"language\": \"言語\",\n      \"diamNow\": \"DiamNow\",\n      \"noDocument\": \"いいえドキュメントが見つかりませんでした\",\n      \"searchBusinessType\": \"検索ビジネスの種類\",\n      \"hours\": \"時間\",\n      \"minutes\": \"議事録\",\n      \"seconds\": \"秒\",\n      \"bidEndsIn\": \"入札に終了します。\",\n      \"shape\": \"形状\",\n      \"download\": \"ダウンロード\",\n      \"share\": \"シェア\",\n      \"placeOrder\": \"場所の順序\",\n      \"enterComment\": \"コメントを入力してください。\",\n      \"deleteItem\": \"消去してもよろしいですか？\",\n      \"shippingPolicy\": \"配送ポリシー\",\n      \"offerSundayRestriction\": \"日曜日は許可されていません。オフィス営業日は月曜日から土曜日までです\",\n      \"weekAgo\": \"1週間前\",\n      \"lastWeek\": \"先週\",\n      \"dayAgo\": \"数日前\",\n      \"onedayAgo\": \"1日前\",\n      \"yesterday\": \"昨日\",\n      \"hourAgo\": \"時間前\",\n      \"onehourAgo\": \"1時間前\",\n      \"anhourAgo\": \"1時間前\",\n      \"mintuesAgo\": \"数分前\",\n      \"onemintuesAgo\": \"1分前\",\n      \"amintueAgo\": \"分前\",\n      \"secondsAgo\": \"秒前\",\n      \"justNow\": \"ちょうど今\",\n      \"today\": \"今日\",\n      \"past\": \"過去\",\n      \"selectPhotoProof\": \"ドキュメントを選択\",\n      \"pleaseSelectPhotoProof\": \"文書を選択してください\",\n      \"selectBusinessProof\": \"ドキュメントを選択\",\n      \"pleaseSelectBusinessProof\": \"文書を選択してください\",\n      \"touchId\": \"タッチ同上\",\n      \"faceId\": \"フェイス同上\",\n      \"enableTouchId\": \"私のダイヤモンドのロックを解除するにはタッチIDを有効にしますか？\",\n      \"enableFaceId\": \"私のダイヤモンドのロックを解除する顔IDを有効にしますか？\",\n      \"unlockWithTouchId\": \"タッチIDを使用して私のダイヤモンドのロックを解除\",\n      \"unlockWithFaceId\": \"フェイスIDを使用して私のダイヤモンドのロックを解除します。\",\n      \"mPin\": \"MPin\",\n      \"holdMemoStatusDiamondorder\": \"あなたは保留に既にある石やメモの状態を確認することはできません\",\n      \"searchStoneIdCertificateNo\": \"ストーンID /証明書番号を検索\",\n      \"createMPin\": \"新しいMPinを作成します。\",\n      \"reentermpin\": \"再入力MPin\",\n      \"forgotmpin\": \"MPINを忘れましたか？\",\n      \"verifympin\": \"Mpinを確認\",\n      \"enteryoursixdigitcode\": \"あなたの6桁を入力しMPIN\",\n      \"changempin\": \"変更MPin\",\n      \"faceidandtouchnotenable\": \"FaceId / TouchIdお使いの携帯電話で有効になっていません、この機能を使用するために有効にしてください\",\n      \"enablempintounlockmydiamonds\": \"ロック解除アプリにMPinを有効にしますか？これは、タッチイドを無効にします。あなたが継続してもよろしいですか？\",\n      \"enabletouchidtounlockmydiamonds\": \"ロック解除アプリにタッチIDを有効にしますか？それはMPinを無効にします。あなたが継続してもよろしいですか？\",\n      \"rememberme\": \"私を覚えてますか\",\n      \"usertouchid\": \"使用タッチ同上\",\n      \"usempin\": \"使用MPin\",\n      \"filesarenotavailableonserver\": \"ファイルがサーバー上で利用できない、後でもう一度お試しください\",\n      \"allfileshavebeendownloaded\": \"すべてのファイルがダウンロードされています。\",\n      \"filesisdownloaded\": \"ファイルがダウンロードされます\",\n      \"filesisnotdownloadedbcz\": \"それは、サーバーに存在していないため、ファイルがダウンロードされません。\",\n      \"downloading canceled\": \"キャンセルダウンロード\",\n      \"downloading\": \"ダウンロード中...\",\n      \"expirydate\": \"有効期限 ：\",\n      \"youreallywanttodelete\": \"あなたは本当に削除したいです\"\n    },\n    \"error_string\": {\n      \"accessDenide\": \"アクセスが拒否されました\",\n      \"pleaseSelectOfferTillDate\": \"日付までのオファーを選択してください。\",\n      \"pleaseSelectOfficeVisitDate\": \"オフィスの訪問日を選択してください\",\n      \"deleteStoneMsg\": \"あなたは、削除石（複数可）にもよろしいですか？\",\n      \"acceptTermsAndCondition\": \"用語と条件を受け入れてください。\",\n      \"diamondCompareRemove\": \"少なくとも2枚のストーンズは、比較するのに必要とされます。\",\n      \"diamondSelectionError\": \"少なくとも一つの石を選択してください。\",\n      \"pleaseEnterCompanyName\": \"会社名を入力してください。\",\n      \"selectInvoiceDate\": \"請求書の日付を選択\",\n      \"pleaseEnterComment\": \"コメントを入力してください。\",\n      \"pleaseEnterRemarks\": \"発言を入力してください。\",\n      \"selectExpiryDate\": \"有効期限を選択してください。\",\n      \"enterOTP\": \"コードを入力してください\",\n      \"pleaseEnterOTP\": \"確認コードを入力してください。\",\n      \"enteredCodeNotMatching\": \"入力されたコードが一致していません。再試行\",\n      \"selectCancellationReason\": \"キャンセルの理由を選択してください\",\n      \"enterDesc\": \"説明を入力してください。\",\n      \"enterTitle\": \"タイトルを入力してください。\",\n      \"enterEmailOrPhone\": \"電子メール/モバイルを入力してください。\",\n      \"enterPassword\": \"パスワードが空にすることはできません。パスワードを入力してください。\",\n      \"enterConfirmPassword\": \"確認パスワードを入力してください。\",\n      \"enterSkype\": \"スカイプを入力してください。\",\n      \"enterRegisterCode\": \"登録コードを入力してください\",\n      \"enterEmail\": \"メールアドレスを入力してください。\",\n      \"enterPhone\": \"携帯電話番号を入力してください。\",\n      \"enterUsername\": \"ユーザー名は空にすることはできません。ユーザー名を入力してください。\",\n      \"enterValidEmail\": \"有効なメールアドレスを入力してください。\",\n      \"enterValidPhone\": \"有効な携帯電話番号を入力してください。\",\n      \"enterValidWhatsappPhone\": \"有効なのWhatsApp携帯電話番号を入力してください。\",\n      \"enterValidPassword\": \"6つの文字または長いパスワードを入力してください。\",\n      \"mismatchPassword\": \"パスワードと確認パスワードが一致していません。\",\n      \"enterFirstName\": \"まず名前を入力してください。\",\n      \"enterMiddleName\": \"ミドルネームを入力してください。\",\n      \"enterPinCode\": \"ピンコードを入力してください。\",\n      \"enterName\": \"名前を入力してください。\",\n      \"enterLastName\": \"姓を入力してください。\",\n      \"enterAddress\": \"アドレスを入力してください。\",\n      \"enterValidPinCode\": \"有効なPINコードを入力します。\",\n      \"enterValidAddress\": \"10文字または長いアドレスを入力してください。\",\n      \"enterPostalCode\": \"郵便番号を入力してください。\",\n      \"enterValidPostalCode\": \"6桁の数字郵便番号を入力してください。\",\n      \"enterCurrentPassword\": \"現在のパスワードを入力してください。\",\n      \"enterNewPassword\": \"新しいパスワードを入力してください。\",\n      \"enterFareAmount\": \"売上金額を入力してください。\",\n      \"enterOrderNO\": \"無順序を入力してください。\",\n      \"enterServiceType\": \"サービスの種類を選択してください。\",\n      \"enterPaymentType\": \"支払いタイプを選択してください。\",\n      \"enterValidFareAmount\": \"販売量はゼロにすることはできません。\",\n      \"enterPassangerNo\": \"何を入力していないしてください。乗客の。\",\n      \"enterValidPassangerNo\": \"乗客の番号はゼロにすることはできません。\",\n      \"notEnterMorePassangerNo\": \"乗客の番号は、7つ以上にすることはできません。\",\n      \"drivingLicenseValidationText\": \"ライセンス番号を駆動英数字15桁を入力してください。\",\n      \"PANCardValidationText\": \"PANカード番号英数字10桁を入力してください。\",\n      \"selectFromDate\": \"日付から選択してください\",\n      \"selectToDate\": \"日付を選択してください\",\n      \"fromGreaterTo\": \"選択した日付が現在の日付よりも大きくなければなりません\",\n      \"wrongPassword\": \"パスワード必須では、最低8つの文字、1つの大文字のアルファベット、1つの小文字のアルファベット、1桁、1つの特別charaterが含まれています\",\n      \"fromValueGreateThanTo\": \"値からより小かの値に等しくなければなりません\",\n      \"toValueGreaterThanFrom\": \"値よりも大きくなければなりませんまたは値に等しいから、\",\n      \"pleaseEnterCompanyCode\": \"会社コードを入力してください\",\n      \"enterSamePassword\": \"パスワードの確認は、新しいパスワードと一致していません。新しいパスワードと同じパスワードの確認を入力してください。\",\n      \"selectAppointmentDate\": \"予定の日付を選択してください\",\n      \"selectTimeSlot\": \"タイムスロットを選択してください\",\n      \"enterComments\": \"コメントを入力してください。\",\n      \"selectVirtualType\": \"仮想種類を選択してください\",\n      \"versionError\": \"バージョンエラー\"\n    },\n    \"no_data strings\": {\n      \"noDataFound\": \"いいえレコード見つかりませんでした\"\n    },\n    \"screen_title\": {\n      \"placeAnOffer\": \"オファーを配置\",\n      \"addedInWatchList\": \"ウォッチリストに追加しました\",\n      \"addedInOffer\": \"オファー提出\",\n      \"addedInCart\": \"カートに追加しました\",\n      \"addedInBid\": \"入札に追加しました\",\n      \"myEnquiry\": \"お問合せ\",\n      \"delete\": \"[削除]\",\n      \"addDemand\": \"需要を追加\",\n      \"matchPair\": \"マッチペア\",\n      \"savedAndSearch\": \"保存して検索\",\n      \"updateAndSearch\": \"アップデート＆検索\",\n      \"upcoming\": \"来たる\",\n      \"bidPricePerCt\": \"入札価格/ CT\",\n      \"bidDisc\": \"入札ディスク\",\n      \"bidValue\": \"入札値\",\n      \"bidStone\": \"入札ストーン\",\n      \"myCart\": \"私のカート\",\n      \"myComment\": \"私のノート\",\n      \"compare\": \"比較します\",\n      \"compareStones\": \"ストーンズの比較\",\n      \"statusHold\": \"保留\",\n      \"statusOnMemo\": \"メモオン\",\n      \"statusAvailable\": \"利用できます\",\n      \"statusNew\": \"新参者\",\n      \"statusOffer\": \"デイ/プロモーションストーン\",\n      \"statusMyHold\": \"マイホールド\",\n      \"signup\": \"サインアップ\",\n      \"addToOffice\": \"オフィスに追加\",\n      \"addComment\": \"コメントを追加\",\n      \"addEnquiry\": \"お問い合わせを追加します。\",\n      \"finalOffer\": \"最終提案\",\n      \"finalDisc\": \"最終的なディスク\",\n      \"finalRate\": \"最終レート\",\n      \"finalValue\": \"最終的な値\",\n      \"orderMsg\": \"1）価格はこっちに言及固定されているので、交渉の余地はありません。 \\\\\\\\ N2）グレーディングは、パラメータは、GIAのグレーディングを越えた当社のウェブサイト上で言及しました。\",\n      \"offerMsg\": \"私たちが提供する前に確認するためにあなたを要求するので、価格が承認されます場合はご提供石が直接確認されます。オファーリスト内の任意の石（S）プットは、それが、他の顧客のために利用可能であるとして、あなたのために保留されていません。\",\n      \"note\": \"注意\",\n      \"hours\": \"時間\",\n      \"offeredDisc\": \"提供されるディス\",\n      \"offeredPriceCt\": \"提供されるのPr / CT\",\n      \"addOffer\": \"オファーを追加\",\n      \"expDiscPer\": \"期待ディスカウント\",\n      \"todayDiscPer\": \"今日のディスク\",\n      \"searchResult\": \"検索結果\",\n      \"searchDiamond\": \"検索ダイヤモンド\",\n      \"basic\": \"基本的な\",\n      \"advanced\": \"高度\",\n      \"stoneIdCertNo\": \"StoneID /証明書はありません\",\n      \"takeSignature\": \"署名してください\",\n      \"optional\": \"オプショナル\",\n      \"MyAddress\": \"私の住所\",\n      \"expiryDate\": \"有効期限\",\n      \"drivingLicenceDesc\": \"あなたの運転免許証の写真\",\n      \"PanDesc\": \"あなたのPANカード画像\",\n      \"selfie\": \"自分撮り\",\n      \"selfieDesc\": \"あなたの自分撮り写真\",\n      \"pending\": \"保留中\",\n      \"rejected\": \"拒否されました\",\n      \"uploadAgain\": \"アップロード\",\n      \"remove\": \"削除する\",\n      \"title\": \"題名\",\n      \"description\": \"説明\",\n      \"uploadYour\": \"アップロード\",\n      \"raiseDispute\": \"それについて教えてください\",\n      \"drivingLicense\": \"運転免許証\",\n      \"PANCard\": \"PANカード\",\n      \"saveContinue\": \"保存して続行\",\n      \"uploadFrontUmgText\": \"アップロード表面画像\",\n      \"uploadPANCardImgText\": \"アップロードPANカードの画像\",\n      \"uploadBackImageText\": \"アップロード裏面の画像\",\n      \"helptopic\": \"ヘルプトピックス\",\n      \"newRideSharingRequest\": \"新ライド共有要求\",\n      \"newRequest\": \"新しい要求\",\n      \"welcomeTo\": \"へようこそ！\",\n      \"welcomeDesc\": \"マニジュエルの既存のアカウントにログイン\",\n      \"forgotPassword\": \"忘れました\",\n      \"forgotPasswordDesc\": \"あなたのパスワードを回復するために、ご登録の携帯電話番号を入力します。\",\n      \"termsAndCondition\": \"ご利用規約\",\n      \"privacyPolicy\": \"個人情報保護方針\",\n      \"aboutUS\": \"私たちに関しては\",\n      \"otpVerification\": \"ライドのコードを確認してください\",\n      \"otpVerificationDelivery\": \"ピックアップコードを確認してください\",\n      \"otpVerificationDeliveryDone\": \"配達コードを確認してください\",\n      \"enterOtp\": \"4桁を入力します。\",\n      \"recoveryCode\": \"回復コード\",\n      \"editProfile\": \"プロファイル編集\",\n      \"myProfile\": \"私のプロフィール\",\n      \"reset\": \"リセット\",\n      \"yourPassword\": \"あなたのパスワード\",\n      \"photo\": \"写真\",\n      \"otpDesc\": \"回復コードは、あなたの携帯電話番号に送信されました。コードを入力してください。\",\n      \"otpVerifyDesc\": \"検証コードは、あなたの携帯電話番号に送信されました。コードを入力してください。\",\n      \"diamondDetail\": \"ダイヤモンドの詳細\",\n      \"home\": \"家\",\n      \"search\": \"探す\",\n      \"quickSearch\": \"クイック検索\",\n      \"newArrival\": \"新参者\",\n      \"exclusiveDiamonds\": \"独占ダイヤモンド\",\n      \"diamondOnAuction\": \"ダイヤモンドでオークション\",\n      \"stoneOfTheDays\": \"ベストバイ\",\n      \"myWatchlist\": \"マイウォッチリスト\",\n      \"myBid\": \"私の入札\",\n      \"myHold\": \"マイホールド\",\n      \"myOrder\": \"私の順序付きリスト\",\n      \"confirmStone\": \"確認ストーン\",\n      \"myOffice\": \"私のオフィスを見ます\",\n      \"myOffer\": \"マイオファー一覧\",\n      \"myPurchased\": \"私の購入の歴史\",\n      \"mySavedSearch\": \"私の保存された検索\",\n      \"savedSearch\": \"保存された検索\",\n      \"myDemand\": \"マイデマンド\",\n      \"contactUs\": \"お問い合わせ\",\n      \"changePassword\": \"パスワードを変更する\",\n      \"logout\": \"ログアウト\",\n      \"fareDetailsTitle\": \"セールス詳細を入力します。\",\n      \"fairAmt\": \"売上高\",\n      \"noOfPassengers\": \"乗客の米国特許\",\n      \"remarks\": \"備考\",\n      \"orderNo\": \"注文番号。\",\n      \"typeOfService\": \"サービスの種類\",\n      \"paymentType\": \"支払いタイプ*\",\n      \"recentlyView\": \"最近で見ます\",\n      \"uploadImgValidationText\": \"アップロードファイルは.JPG、.JPEG、.pngのか.PDFたサイズ5メガバイト以下でなければなりません。\",\n      \"drivingLicenseHintText\": \"運転免許証番号\",\n      \"PANCARDHintText\": \"PANカード番号\",\n      \"viewRide\": \"ビューライド\",\n      \"myVehicle\": \"私の車\",\n      \"personalDocument\": \"パーソナルドキュメント\",\n      \"help\": \"助けて\",\n      \"about\": \"約\",\n      \"bankDetails\": \"銀行詳細\",\n      \"accountAndPayment\": \"アカウントとお支払い\",\n      \"enquiry\": \"問い合わせ\",\n      \"download\": \"ダウンロード\",\n      \"addToCart\": \"カートに追加\",\n      \"addToWatchList\": \"気に入ったリストに追加する\",\n      \"finalCalculation\": \"最終的な計算\",\n      \"bookOffice\": \"ブックオフィス\",\n      \"clearSelection\": \"明確な選択\",\n      \"comment\": \"注釈\",\n      \"hold\": \"ホールド\",\n      \"offer\": \"提供\",\n      \"officeView\": \"オフィスビュー\",\n      \"placeOrder\": \"オーダーします\",\n      \"buyNow\": \"今買う\",\n      \"cancelStone\": \"ストーンをキャンセル\",\n      \"share\": \"シェア\",\n      \"watchlist\": \"ウォッチリスト\",\n      \"exclusive\": \"排他的\",\n      \"featuredStones\": \"注目のストーンズ\",\n      \"stoneOfDay\": \"デイのストーンズ\",\n      \"recentSearch\": \"最近の検索\",\n      \"viewAll\": \"全てを見ます\",\n      \"salesPersonDetail\": \"営業担当者の詳細\",\n      \"searchTitle\": \"検索タイトル\",\n      \"enterSearchTitle\": \"検索タイトルを入力します。\",\n      \"timeSlots\": \"タイムスロット\",\n      \"selectCustomDate\": \"カスタム日付を選択\",\n      \"availableSlot\": \"使用可能なスロット\",\n      \"reqOfficeView\": \"Officeのビューをリクエスト\",\n      \"myComments\": \"私のコメント\",\n      \"myReminder\": \"私のリマインダー\",\n      \"reminder\": \"リマインダー\",\n      \"manageAddress\": \"アドレスを管理\",\n      \"myAccount\": \"マイアカウント\",\n      \"declaimer\": \"免責条項\",\n      \"shareStone\": \"シェアストーン\",\n      \"addRemider\": \"リマインダーを追加\",\n      \"offlineSearch\": \"オフライン検索\",\n      \"searchHistory\": \"検索履歴\",\n      \"offlineStock\": \"オフライン証券\",\n      \"searchOffline\": \"検索（オフライン）\",\n      \"voiceSearch\": \"音声検索\",\n      \"tapMictoSpeak\": \"話すようにマイクをタップ\",\n      \"typeToSearch\": \"検索の種類\",\n      \"typeWordsToSearch\": \"石を検索するには、少なくとも3つのワードを入力\"\n    },\n    \"dynamickeys\": {\n      \"shape\": \"形状\",\n      \"caratRange\": \"カラットの範囲\",\n      \"basicDetail\": \"基本的な詳細\",\n      \"measurementTitle\": \"測定\",\n      \"inclusionDetail\": \"インクルージョンの詳細\",\n      \"other\": \"他の\",\n      \"stoneID\": \"石のID\",\n      \"labTitle\": \"ラボ\",\n      \"certNo\": \"CERT。番号。\",\n      \"locationTitle\": \"ロケーション\",\n      \"shapeTitle\": \"形状\",\n      \"caratTitle\": \"カラット\",\n      \"colorTitle\": \"色\",\n      \"clarityTitle\": \"CLARITY\",\n      \"cutTitle\": \"切る\",\n      \"polishTitle\": \"研磨\",\n      \"symmentryTitle\": \"Symmentry\",\n      \"fluorescenceTitle\": \"蛍光\",\n      \"rapTitle\": \"RAP（％）\",\n      \"discountTitle\": \"割引（％）\",\n      \"priceAndCt\": \"価格/ CT\",\n      \"amountTitle\": \"量\",\n      \"eyeCleanTitle\": \"アイクリーン\",\n      \"brownTitle\": \"褐色\",\n      \"milkyTitle\": \"ミルキー\",\n      \"mixTingeTitle\": \"MIX色合い\",\n      \"dimensionTitle\": \"寸法（mm）\",\n      \"girdleTitle\": \"ガードル（％）\",\n      \"tableTitle\": \"テーブル ％\",\n      \"crownAngleTitle\": \"クラウン角度\",\n      \"depthTitle\": \"深％\",\n      \"pavAngleTitle\": \"Pav Angle\",\n      \"crownHeightTitle\": \"クラウン高さ（％）\",\n      \"pavDepthTitle\": \"パビリオンの深さ（％）\",\n      \"starLengthTitle\": \"スターの長さ\",\n      \"lowerHalfTitle\": \"下半分\",\n      \"gridleTitle\": \"ガードル\",\n      \"gridleFacetedTitle\": \"ガードルファセット\",\n      \"culetTitle\": \"キューレット\",\n      \"rationTitle\": \"比\",\n      \"blackInclusionTitle\": \"BLACK INCLUSION\",\n      \"otherInclusionTitle\": \"その他のインクルージョン\",\n      \"openInclusionTitle\": \"OPEN INCLUSION\",\n      \"extraFacetTitle\": \"EXTRA FACET\",\n      \"naturalTitle\": \"ナチュラル\",\n      \"hAndATitle\": \"H＆A\",\n      \"keyToSymbol\": \"KEY TO SYMBOL\",\n      \"labComments\": \"LABコメント\",\n      \"laserInsTitle\": \"LASER INS\",\n      \"basicTitle\": \"基本的な\",\n      \"advancedTitle\": \"高度\",\n      \"stoneIdTitle\": \"ストーンID /証明書はありません\",\n      \"defaultTitle\": \"デフォルト\",\n      \"newDiamondsTitle\": \"新しいダイヤモンド\",\n      \"priceLowToHigh\": \"高いに価格低\",\n      \"priceHighToLow\": \"低価格高へ\",\n      \"disLowToHigh\": \"ハイへの割引、低コスト\",\n      \"disHighToLow\": \"低への割引高いです\",\n      \"colorLowToHigh\": \"ハイへの色の低\",\n      \"colorHighToLow\": \"低への色のハイ\",\n      \"caratLowToHigh\": \"ハイへカラット低\",\n      \"caratHighToLow\": \"低へカラット高いです\",\n      \"clarityLowToHigh\": \"ハイへクラリティ低\",\n      \"clarityHighToLow\": \"低へクラリティ高いです\",\n      \"colorShadeTitle\": \"色合い\",\n      \"certiTitle\": \"証明書番号\",\n      \"arrivalsTitle\": \"到着\",\n      \"lengthTitle\": \"長さ\",\n      \"widthTitle\": \"幅\",\n      \"pavilionAngleTitle\": \"パビリオン角\",\n      \"girdleConditionTitle\": \"ガードル条件\",\n      \"cluetConditionTitle\": \"キューレット条件\",\n      \"disTitle\": \"ディス％\",\n      \"depthTitleWithoutPerc\": \"深さ\",\n      \"otherInformationTitle\": \"その他の情報\"\n    }\n  },\n  \"Italian\": {\n    \"language_code\": \"Italian\",\n    \"auth_strings\": {\n      \"editCompanyInformation\": \"Modifica informazioni sulla società\",\n      \"selectNatureOfOrganization\": \"Selezionare la natura di organizzazione\",\n      \"setNewPassword\": \"Impostare la nuova password e accedere nuovamente.\",\n      \"enterCompanyName\": \"Si prega di inserire Nome azienda.\",\n      \"pleaseEnterCustomerOTP\": \"Si prega di inserire il codice giro cliente.\",\n      \"pleaseEnterPickupOTP\": \"Si prega di inserire il codice cliente pickup.\",\n      \"pleaseEnterDeliveryOTP\": \"Si prega di inserire il codice consegna al cliente.\",\n      \"verified\": \"Verificati\",\n      \"verify\": \"Verificare\",\n      \"addressLineOne\": \"Indirizzo 1\",\n      \"addressLineTwo\": \"Indirizzo 2\",\n      \"addressLineThree\": \"indirizzo 3\",\n      \"oldPassword\": \"vecchia password\",\n      \"skype\": \"Skype\",\n      \"whatsApp\": \"WhatsApp\",\n      \"pinCode\": \"Codice PIN*\",\n      \"verifyMobileDesc\": \"Controllare numero di cellulare per aggiornare il profilo.\",\n      \"verifyNow\": \"verifica ora\",\n      \"password\": \"Parola d'ordine\",\n      \"backToHome\": \"Vai alla Home\",\n      \"forgotPassword\": \"Ha dimenticato la password?\",\n      \"signInCap\": \"Registrati\",\n      \"moveToLogIn\": \"Spostare a Login\",\n      \"dontHaveAnAccount\": \"#ERROR!\",\n      \"clickHere\": \"Clicca qui\",\n      \"signUpHere\": \"Registrati qui\",\n      \"reset\": \"Ripristina\",\n      \"haveRegisterCode\": \"Avere un codice di registrazione?\",\n      \"welcome\": \"Ben tornato!\",\n      \"signInAsGuest\": \"Accedi come Guest\",\n      \"editProfileTitle\": \"Modifica Profilo\",\n      \"emaillbl\": \"E-mail\",\n      \"searchInventory\": \"Ricerca prodotto\",\n      \"emailAddress\": \"Indirizzo email*\",\n      \"offlineFilter\": \"Impossibile trovare il solitario desiderato? Siamo in grado di aiutarvi a ottenere il miglior prezzo in nostro inventario offline.\",\n      \"loginDesc\": \"Vuoi abilitare tocco Id / MPin per sbloccare i miei diamanti? Scegliere l'opzione di sblocco app\",\n      \"searchDiamonds\": \"ricerca diamanti\",\n      \"continueWithSearch\": \"Vuoi continuare la ricerca?\",\n      \"mobileNumber\": \"Mobile\",\n      \"searchHint\": \"Ricerca...\",\n      \"selectYourCountry\": \"Seleziona il paese\",\n      \"resendCodeIn\": \"Codice rinvialo\",\n      \"resendCode\": \"Rispedisci\",\n      \"haveAnAccount\": \"Hai già un account?\",\n      \"dontReceiveCode\": \"Se non hai ricevuto un codice!\",\n      \"inLogin\": \"effettuare il login.\",\n      \"resetPwdDesc\": \"Aggiungere la password e la password Conferma per reimpostare la password.\",\n      \"backToLogin\": \"Torna al login\",\n      \"firstName\": \"Nome di battesimo*\",\n      \"name\": \"Nome utente*\",\n      \"lastName\": \"Cognome*\",\n      \"middleName\": \"Secondo nome*\",\n      \"confirmPassword\": \"conferma password\",\n      \"currentPasswordErr\": \"Errore password corrente\",\n      \"passwordChanged\": \"Password cambiata\",\n      \"lblLogInErr\": \"Errore di accesso\",\n      \"enterYour\": \"Inserisci la tua\",\n      \"details\": \"Dettagli\",\n      \"registerCode\": \"Codice di registrazione\",\n      \"registerCodeDesc\": \"Aggiungere un codice di registrazione per iniziare la vostra iscrizione con 3eco.\",\n      \"uploadPhotoDesc\": \"Prendete un selfie della vostra auto\",\n      \"updateProfile\": \"Aggiorna il profilo\",\n      \"postalCode\": \"Codice postale*\",\n      \"removeButton\": \"Rimuovere\",\n      \"gender\": \"Genere\",\n      \"male\": \"Maschio\",\n      \"female\": \"Femmina\",\n      \"changePassword\": \"Cambia la password\",\n      \"currentPassword\": \"Password attuale*\",\n      \"newPassword\": \"Nuova password*\",\n      \"confirmNewPassword\": \"Conferma password*\",\n      \"personalDocuments\": \"Documenti personali\",\n      \"assignedAuto\": \"assegnato Auto\",\n      \"logout\": \"Disconnettersi\",\n      \"logoutConfirmationMsg\": \"Sei sicuro di voler uscire?\",\n      \"address\": \"Indirizzo*\",\n      \"accountNumber\": \"Numero di conto\",\n      \"bankerName\": \"Nome banchieri\",\n      \"nameLable\": \"Nome\",\n      \"ifscCode\": \"codice IFSC\",\n      \"businessRegistrationNumbr\": \"Numero di registrazione\",\n      \"businessRelationshipPeriod\": \"Relazione d'affari Periodo (in anni)\",\n      \"designation\": \"Designazione\",\n      \"nameofDesignation\": \"Nome di\",\n      \"natureofOrganization\": \"Natura dell'Organizzazione\",\n      \"uploadFile\": \"Nessun file Scelto\",\n      \"update\": \"AGGIORNARE\",\n      \"resetPwd\": \"Resetta la password\",\n      \"pwdReset\": \"Reimpostazione della password\",\n      \"signInWithMPIN\": \"Accedi con MPIN\",\n      \"pwdChanged\": \"Password cambiata\",\n      \"successfullyPwdDesc\": \"Hai successo reimpostare la password. Si prega di utilizzare la nuova password quando si accede.\",\n      \"lblProfileSetup\": \"Il tuo profilo è impostato\",\n      \"lblProfileSetupDesc\": \"Abbiamo ricevuto i dettagli del profilo\",\n      \"hoursAvailable\": \"totale Shifttime\",\n      \"confirmStoneDetail\": \"Conferma di pietra Dettaglio\",\n      \"companyName\": \"Nome della ditta\",\n      \"invoiceDate\": \"Data fattura\",\n      \"companyCode\": \"Codice della ditta\",\n      \"saveCompanyDetails\": \"Salva Dettagli Azienda\",\n      \"passwordNotChange\": \"La password non corrisponde\",\n      \"rememberPassword\": \"Ricordare la password?\",\n      \"sendOTP\": \"Invia OTP\",\n      \"resendNow\": \"Rispedisci Ora\",\n      \"didNotReceiveOTP\": \"Se non hai ricevuto un'OTP!\",\n      \"sendOTPToEmail\": \"Invieremo un'OTP al tuo indirizzo email immesso o nome utente. Si prega di inserire l'indirizzo email o nome utente.\",\n      \"enterOTP\": \"L'OTP è stato inviato al tuo indirizzo email registrato. Si prega di inserire l'OTP.\",\n      \"backToSignIn\": \"Torna l'Entra\",\n      \"passwordResetSuccessfully\": \"Reimpostazione della password con successo.\",\n      \"emailAndUname\": \"Email / Username\",\n      \"signUp\": \"Iscriviti\",\n      \"promotionText\": \"Le offerte promozionali\",\n      \"termsAndCondition\": \"Termini e condizioni\",\n      \"mustAgreeTermsAndCondition\": \"È necessario accettare i termini e condizioni per accedere come Utente ospite\",\n      \"forgotPasswordTitle\": \"Ha dimenticato la password\",\n      \"uploadKYC\": \"Carica KYC\",\n      \"uploadKycDesc\": \"Si prega di caricare i documenti KYC per accedere alle funzioni complete.\",\n      \"hintPhotoIdentityProof\": \"Foto Identità * Proof\",\n      \"hintBussinerssProof\": \"Affari identità * Proof\",\n      \"btnFileUpload\": \"Upload di file\",\n      \"pleaseUploadPhotoProof\": \"Si prega di caricare foto prova di identità.\",\n      \"pleaseUploadBussinessProof\": \"Si prega di caricare Affari prova di identità.\",\n      \"pleaseSelectFileFormat\": \"Si prega di caricare file in uno dei seguenti formati: .jpg\",\n      \"kycSubmitted\": \"KYC Inserito\",\n      \"kycSubmmittedDesc\": \"Il tuo KYC è stato inviato con successo.\",\n      \"btnMoveToHome\": \"Spostare alla Home\",\n      \"kYCRejected\": \"KYC Rifiutato\",\n      \"kycRejectedDesc\": \"Il tuo KYC è stata rifiutata. Si prega di caricare nuovamente i documenti KYC per accedere a tutte le caratteristiche.\"\n    },\n    \"common_string\": {\n      \"seeMore\": \"Vedi altro\",\n      \"seeLess\": \"See Meno\",\n      \"modify\": \"Modificare\",\n      \"delete\": \"Elimina\",\n      \"details\": \"Dettagli\",\n      \"edit\": \"modificare\",\n      \"addDemand\": \"Add domanda\",\n      \"demandTitle\": \"La domanda Titolo\",\n      \"pleaseEnterDemandTitle\": \"Si prega di inserire la domanda Titolo\",\n      \"demandAddedSuccessfully\": \"La domanda di inserimento con successo\",\n      \"selectAtleastOneFilter\": \"per favore\",\n      \"savedSearch\": \"Saved Search\",\n      \"searchSavedSearch\": \"Cerca Saved Search\",\n      \"viewDetails\": \"Visualizza dettagli\",\n      \"viewLessDetails\": \"Vista Meno dettagli\",\n      \"myDemand\": \"La mia domanda\",\n      \"date\": \"Data\",\n      \"selectTime\": \"Seleziona Tempo\",\n      \"selectDate\": \"Selezionare Data\",\n      \"offerVelidTill\": \"Offerta valida fino al\",\n      \"officeVisitDate\": \"Ufficio Visita Data\",\n      \"all\": \"Tutti\",\n      \"status\": \"Stato\",\n      \"save\": \"Salva\",\n      \"verify\": \"Verificare\",\n      \"readMore\": \"Leggi di più\",\n      \"goodMorning\": \"Buongiorno\",\n      \"goodAfternoon\": \"Buon pomeriggio\",\n      \"goodEvening\": \"buona serata\",\n      \"btnSkip\": \"Salta\",\n      \"btnUpdate\": \"Aggiornare\",\n      \"btnContinue\": \"Continua\",\n      \"btnContinueCap\": \"CONTINUA\",\n      \"btnEdit\": \"modificare\",\n      \"btnSubmit\": \"Invia\",\n      \"btnNextCap\": \"Il prossimo\",\n      \"btnSaveCap\": \"Aggiornamento password\",\n      \"btnWithdrawCap\": \"PRELIEVI\",\n      \"btnSaveAndContinueCap\": \"Salva e continua\",\n      \"btnUnregister\": \"Non registrato mobile\",\n      \"btnClose\": \"Vicino\",\n      \"remove\": \"Rimuovere\",\n      \"refresh\": \"ricaricare\",\n      \"fetchLocationMessage\": \"Si prega di aspettare stiamo recupero vostra posizione\",\n      \"done\": \"Fatto\",\n      \"doneCap\": \"FATTO\",\n      \"cancel\": \"Annulla\",\n      \"allow\": \"permettere\",\n      \"countryFirst\": \"Si prega di selezionare prima la nazione\",\n      \"apply\": \"Applicare\",\n      \"cancelCap\": \"ANNULLA\",\n      \"uploadCap\": \"CARICARE\",\n      \"yesCancelCap\": \"SÌ\",\n      \"upload\": \"Caricare\",\n      \"ok\": \"Ok\",\n      \"home\": \"Casa\",\n      \"goToMyWatchList\": \"Vai all'elenco degli osservati\",\n      \"goToMyOrder\": \"Vai a mio Ordine\",\n      \"gotToMyOffer\": \"Vai a La mia offerta\",\n      \"gotToMyHold\": \"Vai alla mia presa\",\n      \"gotToMyEnquiry\": \"Vai alla mia domanda\",\n      \"gotToMyBid\": \"Vai alla mia offerta\",\n      \"gotToMyReminder\": \"Vai a Il mio promemoria\",\n      \"gotToMyComments\": \"Vai a My Notes\",\n      \"yes\": \"sì\",\n      \"no\": \"No\",\n      \"selectCountry\": \"Seleziona il paese\",\n      \"clickHere\": \"Clicca qui\",\n      \"btnAddNewAddress\": \"AGGIUNGI UN NUOVO INDIRIZZO\",\n      \"btnCancel\": \"ANNULLA\",\n      \"btnTakeSelfie\": \"prendere selfie\",\n      \"successfully\": \"Con successo\",\n      \"lblAppExit\": \"Sei sicuro di voler uscire?\",\n      \"lblExit\": \"Uscita\",\n      \"openAppSetting\": \"Aprire Impostazioni\",\n      \"lblOr\": \"O\",\n      \"fromLbl\": \"A partire dal\",\n      \"toLbl\": \"Per\",\n      \"showMore\": \"Mostra di più\",\n      \"showLess\": \"Mostra meno\",\n      \"selectCity\": \"Seleziona Città\",\n      \"notYetAvailable\": \"Non ancora disponibile\",\n      \"updateAvailable\": \"Aggiornamento disponibile!\",\n      \"downloadAppFrom\": \"Scarica l'applicazione aggiornamento dal\",\n      \"playStore\": \"Play Store\",\n      \"skipUpdate\": \"Skip Aggiornamento\",\n      \"stateFirst\": \"Si prega di selezionare Stato First\",\n      \"reallyExit\": \"Davvero uscire?\",\n      \"alert\": \"Mettere in guardia!\",\n      \"loading\": \"Caricamento in corso\",\n      \"error\": \"Errore\",\n      \"jumpToTop\": \"Salto in alto\",\n      \"ihaveread\": \"Ho letto e accetto\",\n      \"selected\": \"Selezionare\",\n      \"lbllogout\": \"Disconnettersi\",\n      \"lblThanx\": \"Grazie\",\n      \"lblSelectCity\": \"Seleziona Città\",\n      \"lblSelectState\": \"Seleziona stato\",\n      \"lblSelectCountry\": \"Seleziona il paese\",\n      \"lblCity\": \"Città\",\n      \"lblCountry\": \"Nazione\",\n      \"lblName\": \"Nome\",\n      \"lblPinCode\": \"Codice PIN\",\n      \"lblMobileNumber\": \"Numero di cellulare\",\n      \"lblState\": \"Stato\",\n      \"lblCode\": \"Codice:\",\n      \"lblOrderNo\": \"Numero d'ordine:\",\n      \"lblOrderItem\": \"Codice ordine:\",\n      \"lblDelivered\": \"consegnato\",\n      \"lblTicketReady\": \"Il biglietto è pronto\",\n      \"lblPersonTicket\": \"Biglietto di 2 persone\",\n      \"lblShuttleBus\": \"Bus navetta\",\n      \"lblPickup\": \"Raccogliere\",\n      \"lblDropoff\": \"Dropoff\",\n      \"lblPassenger\": \"Passeggeri\",\n      \"lblDeliveryNo\": \"No. consegna\",\n      \"lblPrice\": \"Prezzo\",\n      \"lblValid\": \"Valido per\",\n      \"lblRenew\": \"Rinnovare\",\n      \"lblDeparture\": \"Partenza\",\n      \"lblArrived\": \"Arrivato\",\n      \"lblSendtoFriend\": \"Invia ad un amico\",\n      \"popupRenewTitle\": \"Rinnova biglietto\",\n      \"popupRenewDesc\": \"Lorem ipsum dolor sit amet\",\n      \"popuplblPassenger\": \"Passeggeri\",\n      \"popuplblCancel\": \"Annulla\",\n      \"popupbtnRenew\": \"Rinnovare\",\n      \"ridelblAwesome\": \"Eccezionale\",\n      \"ridebtnDone\": \"Fatto\",\n      \"offerPricePerCarat\": \"Offerto Prezzo (Cts)\",\n      \"dropOffText\": \"Dropoff\",\n      \"pickUpText\": \"Raccogliere\",\n      \"startAtText\": \"Iniziare a\",\n      \"endAtText\": \"terminerà alle\",\n      \"personText\": \"persona\",\n      \"paymentScreenTitle\": \"Pagamento\",\n      \"pickuplbl\": \"Raccogliere\",\n      \"droplbl\": \"Dropoff\",\n      \"makePaymentButtonlbl\": \"Fare un pagamento\",\n      \"pessangerslbl\": \"viaggiatori\",\n      \"priceBreakuplbl\": \"Prezzo Breakup\",\n      \"tripPricelbl\": \"Trip Prezzo\",\n      \"taxeslbl\": \"Le tasse\",\n      \"totallbl\": \"Totale\",\n      \"cardNumberhint\": \"Numero di carta\",\n      \"cvvhint\": \"CVV\",\n      \"datehint\": \"MM / AA\",\n      \"btnTryAgain\": \"Riprova\",\n      \"cityFirst\": \"Si prega di selezionare la città prima\",\n      \"enterFareDetails\": \"Inserire i dettagli di vendita\",\n      \"fromDate\": \"dalla Data\",\n      \"toDate\": \"Selected Data\",\n      \"btnUnderstand\": \"Capisco\",\n      \"applicationUpdate\": \"Aggiornamento dell'applicazione\",\n      \"newVersionMessage\": \"Una nuova versione di applicazione è disponibile\",\n      \"paymentCollected\": \"pagamento Collected\",\n      \"addComment\": \"Aggiungi un commento\",\n      \"more\": \"Di Più\",\n      \"carat\": \"carato\",\n      \"pcs\": \"Pz\",\n      \"cts\": \"Cts\",\n      \"disc\": \"Disco%\",\n      \"avgPriceCrt\": \"Avg. Prezzo / Ct\",\n      \"amount\": \"Quantità\",\n      \"confirmStone\": \"pietra Conferma\",\n      \"confirm\": \"Confermare\",\n      \"offered\": \"offerto\",\n      \"validTill\": \"Valido fino a\",\n      \"remark\": \"osservazione\",\n      \"color\": \"Colore\",\n      \"colorGroup\": \"color Group\",\n      \"colorFancy\": \"Fantasia\",\n      \"colorWhite\": \"bianca\",\n      \"clarity\": \"Chiarezza\",\n      \"clarityGroup\": \"Gruppo chiarezza\",\n      \"intensity\": \"Intensità\",\n      \"overtone\": \"ipertono\",\n      \"selectBusinessType\": \"Seleziona Tipo di azienda\",\n      \"selectState\": \"Seleziona stato\",\n      \"search\": \"Ricerca\",\n      \"profile\": \"Il mio profilo\",\n      \"personal\": \"Personale\",\n      \"business\": \"Attività commerciale\",\n      \"documents\": \"Documenti\",\n      \"noSlotFound\": \"Nessuno slot trovato\",\n      \"noDiamondFound\": \"Nessun Diamonds corrispondono alla ricerca. Si prega di aggiungere si domanda.\",\n      \"selectType\": \"Seleziona tipo virtuale\",\n      \"noSavedSearch\": \"No Saved Search esiste\",\n      \"searchCity\": \"Cerca città\",\n      \"searchCountry\": \"Cerca Paese\",\n      \"searchState\": \"Ricerca stato\",\n      \"notifications\": \"Notifica\",\n      \"enter2Stone\": \"Seleziona almeno 2 pietra per confrontare.\",\n      \"bidDesc\": \"si trova attualmente in India e per la consegna in qualsiasi altro paese a parte l'India ci vorranno almeno 7-10 giorni lavorativi.\",\n      \"packetNo\": \"Packet No:\",\n      \"quit\": \"Smettere\",\n      \"agree\": \"Sono d'accordo\",\n      \"laterToday\": \"Più tardi oggi\",\n      \"toMorrow\": \"Domani\",\n      \"nextWeek\": \"La prossima settimana\",\n      \"chooseAnother\": \"Scegli un altro\",\n      \"dateTime\": \"Appuntamento\",\n      \"language\": \"linguaggio\",\n      \"diamNow\": \"DiamNow\",\n      \"noDocument\": \"Nessun documento trovato\",\n      \"searchBusinessType\": \"Cerca Tipo di azienda\",\n      \"hours\": \"Ore\",\n      \"minutes\": \"Minuti\",\n      \"seconds\": \"secondi\",\n      \"bidEndsIn\": \"Bid finisce in:\",\n      \"shape\": \"Forma\",\n      \"download\": \"Scarica\",\n      \"share\": \"Condividere\",\n      \"placeOrder\": \"Invia ordine\",\n      \"enterComment\": \"Inserisci il tuo commento\",\n      \"deleteItem\": \"Sei sicuro di voler eliminare?\",\n      \"shippingPolicy\": \"Condizioni della spedizione\",\n      \"offerSundayRestriction\": \"Domenica non è permesso. giorni lavorativi ufficio sono Lunedi al Sabato\",\n      \"weekAgo\": \"1 settimana fa\",\n      \"lastWeek\": \"La settimana scorsa\",\n      \"dayAgo\": \"giorni fa\",\n      \"onedayAgo\": \"1 giorno fa\",\n      \"yesterday\": \"Ieri\",\n      \"hourAgo\": \"ore fa\",\n      \"onehourAgo\": \"1 ora fa\",\n      \"anhourAgo\": \"Un'ora fa\",\n      \"mintuesAgo\": \"minuti fa\",\n      \"onemintuesAgo\": \"1 minuto fa\",\n      \"amintueAgo\": \"Un minuto fa\",\n      \"secondsAgo\": \"secondi fa\",\n      \"justNow\": \"Proprio adesso\",\n      \"today\": \"Oggi\",\n      \"past\": \"Passato\",\n      \"selectPhotoProof\": \"Selezionare il documento\",\n      \"pleaseSelectPhotoProof\": \"Si prega di selezionare il documento\",\n      \"selectBusinessProof\": \"Selezionare il documento\",\n      \"pleaseSelectBusinessProof\": \"Si prega di selezionare il documento\",\n      \"touchId\": \"tocco Id\",\n      \"faceId\": \"face ID\",\n      \"enableTouchId\": \"Abilita tocco Id per sbloccare i miei diamanti?\",\n      \"enableFaceId\": \"Abilita Face ID per sbloccare i miei diamanti?\",\n      \"unlockWithTouchId\": \"Sbloccare i miei diamanti utilizzando tocco Id\",\n      \"unlockWithFaceId\": \"Sbloccare i miei diamanti utilizzando Face ID.\",\n      \"mPin\": \"MPin\",\n      \"holdMemoStatusDiamondorder\": \"Non si può confermato le pietre che sono già in possesso o un memo di stato\",\n      \"searchStoneIdCertificateNo\": \"Cerca di pietra Id / Certificato No\",\n      \"createMPin\": \"Crea nuovo MPin\",\n      \"reentermpin\": \"Reinserire MPin\",\n      \"forgotmpin\": \"Hai dimenticato MPIN?\",\n      \"verifympin\": \"Verifica Mpin\",\n      \"enteryoursixdigitcode\": \"Inserisci il tuo MPIN 6 cifre\",\n      \"changempin\": \"Cambio MPin\",\n      \"faceidandtouchnotenable\": \"FaceID / TouchId non è abilitata nel telefono, Si prega di abilitare per utilizzare questa funzione\",\n      \"enablempintounlockmydiamonds\": \"Abilita MPin per app sbloccare? Sarà disabilitare tocco Id. Sei sicuro di voler continuare?\",\n      \"enabletouchidtounlockmydiamonds\": \"Abilita tocco Id al app sbloccare? Sarà disabilitare MPin. Sei sicuro di voler continuare?\",\n      \"rememberme\": \"Ricordati di me\",\n      \"usertouchid\": \"Uso Toccare Id\",\n      \"usempin\": \"Usa MPin\",\n      \"filesarenotavailableonserver\": \"I file non sono disponibili sul server di, riprova più tardi\",\n      \"allfileshavebeendownloaded\": \"Tutti i file sono stati scaricati.\",\n      \"filesisdownloaded\": \"file viene scaricato\",\n      \"filesisnotdownloadedbcz\": \"file non viene scaricato perché non è presente nel server.\",\n      \"downloading canceled\": \"Downloading annullata\",\n      \"downloading\": \"Download in corso ...\",\n      \"expirydate\": \"Data di scadenza :\",\n      \"youreallywanttodelete\": \"Si vuole veramente cancellare\"\n    },\n    \"error_string\": {\n      \"accessDenide\": \"Accesso negato\",\n      \"pleaseSelectOfferTillDate\": \"Si prega di selezionare l'offerta fino a data.\",\n      \"pleaseSelectOfficeVisitDate\": \"Si prega di selezionare data di ufficio visita\",\n      \"deleteStoneMsg\": \"Sei sicuro di voler cancellare pietra (s)?\",\n      \"acceptTermsAndCondition\": \"Si prega di accettare i termini e le condizioni\",\n      \"diamondCompareRemove\": \"Almeno 2 Stones sono tenuti a confrontare.\",\n      \"diamondSelectionError\": \"Seleziona almeno una fava.\",\n      \"pleaseEnterCompanyName\": \"Si prega di inserire nome della società.\",\n      \"selectInvoiceDate\": \"Seleziona Data fattura\",\n      \"pleaseEnterComment\": \"Inserisci il tuo commento.\",\n      \"pleaseEnterRemarks\": \"Si prega di inserire commenti.\",\n      \"selectExpiryDate\": \"Seleziona la data di scadenza.\",\n      \"enterOTP\": \"Si prega di inserire il codice\",\n      \"pleaseEnterOTP\": \"Si prega di inserire il codice di verifica.\",\n      \"enteredCodeNotMatching\": \"codice inserito non è la corrispondenza. Riprova\",\n      \"selectCancellationReason\": \"Seleziona motivo della cancellazione\",\n      \"enterDesc\": \"Si prega di inserire descrizione.\",\n      \"enterTitle\": \"Si prega di inserire il titolo.\",\n      \"enterEmailOrPhone\": \"Inserisci e-mail / mobile.\",\n      \"enterPassword\": \"La password non può essere vuoto. Per favore, inserisci la password.\",\n      \"enterConfirmPassword\": \"Si prega di inserire la password di conferma.\",\n      \"enterSkype\": \"Si prega di inserire Skype.\",\n      \"enterRegisterCode\": \"Si prega di inserire il codice di registrazione\",\n      \"enterEmail\": \"Si prega di inserire l'indirizzo e-mail.\",\n      \"enterPhone\": \"Si prega di inserire numero di cellulare.\",\n      \"enterUsername\": \"Nome utente non può essere vuoto. Si prega di inserire nome utente.\",\n      \"enterValidEmail\": \"Si prega di inserire l'indirizzo e-mail valido.\",\n      \"enterValidPhone\": \"Si prega di inserire il numero di cellulare valido.\",\n      \"enterValidWhatsappPhone\": \"Si prega di inserire la valida WhatsApp Mobile Number.\",\n      \"enterValidPassword\": \"Si prega di inserire 6 caratteri o password lunga.\",\n      \"mismatchPassword\": \"Password e password di conferma non corrisponde.\",\n      \"enterFirstName\": \"Si prega di inserire il Nome.\",\n      \"enterMiddleName\": \"Si prega di inserire il secondo nome.\",\n      \"enterPinCode\": \"Si prega di inserire il codice PIN.\",\n      \"enterName\": \"Si prega di inserire nome.\",\n      \"enterLastName\": \"Si prega di inserire cognome.\",\n      \"enterAddress\": \"Si prega di inserire l'indirizzo.\",\n      \"enterValidPinCode\": \"Inserisci PinCode valido.\",\n      \"enterValidAddress\": \"Si prega di inserire 10 caratteri o l'indirizzo a lungo.\",\n      \"enterPostalCode\": \"Si prega di inserire il codice postale.\",\n      \"enterValidPostalCode\": \"Si prega di inserire 6 cifre codice postale numerico.\",\n      \"enterCurrentPassword\": \"Si prega di inserire la password corrente.\",\n      \"enterNewPassword\": \"Si prega di inserire una nuova password.\",\n      \"enterFareAmount\": \"Si prega di inserire l'importo delle vendite.\",\n      \"enterOrderNO\": \"Si prega di inserire ordine no.\",\n      \"enterServiceType\": \"Si prega di selezionare il tipo di servizio.\",\n      \"enterPaymentType\": \"Si prega di selezionare il tipo di pagamento.\",\n      \"enterValidFareAmount\": \"importo delle vendite non può essere zero.\",\n      \"enterPassangerNo\": \"Si prega di inserire n. di passeggeri.\",\n      \"enterValidPassangerNo\": \"Numero di passeggeri non può essere zero.\",\n      \"notEnterMorePassangerNo\": \"Numero di passeggeri non può essere superiore a sette.\",\n      \"drivingLicenseValidationText\": \"Si prega di inserire 15 cifre alfanumeriche numero di patente.\",\n      \"PANCardValidationText\": \"Si prega di inserire 10 cifre alfanumeriche numero di carta di PAN.\",\n      \"selectFromDate\": \"Si prega di selezionare dalla data\",\n      \"selectToDate\": \"Si prega di selezionare fino ad oggi\",\n      \"fromGreaterTo\": \"Data selezionata deve essere superiore a data corrente\",\n      \"wrongPassword\": \"must password contiene, minimo 8 caratteri, 1 alfabeto maiuscolo, 1 minuscolo alfabeto, 1 cifra, 1 charater speciale\",\n      \"fromValueGreateThanTo\": \"Dal valore deve essere inferiore o uguale al valore A\",\n      \"toValueGreaterThanFrom\": \"Per valore deve essere maggiore o uguale al valore di Da\",\n      \"pleaseEnterCompanyCode\": \"Si prega di inserire il codice aziendale\",\n      \"enterSamePassword\": \"Conferma password non corrisponde con la nuova password. Si prega di inserire la password di conferma stessa di New Password.\",\n      \"selectAppointmentDate\": \"Seleziona la data di appuntamento\",\n      \"selectTimeSlot\": \"Seleziona fascia oraria\",\n      \"enterComments\": \"Inserisci il tuo commento\",\n      \"selectVirtualType\": \"Si prega di selezionare il tipo virtuale\",\n      \"versionError\": \"Errore Version\"\n    },\n    \"no_data strings\": {\n      \"noDataFound\": \"Dati non disponibili\"\n    },\n    \"screen_title\": {\n      \"placeAnOffer\": \"Mettere un'offerta\",\n      \"addedInWatchList\": \"Aggiunto in Watchlist\",\n      \"addedInOffer\": \"offerta presentata\",\n      \"addedInCart\": \"Aggiunto a carrello\",\n      \"addedInBid\": \"Aggiunto in Bid\",\n      \"myEnquiry\": \"la mia indagine\",\n      \"delete\": \"Elimina\",\n      \"addDemand\": \"Add domanda\",\n      \"matchPair\": \"partita coppia\",\n      \"savedAndSearch\": \"Salva ricerca\",\n      \"updateAndSearch\": \"Aggiornamento e Ricerca\",\n      \"upcoming\": \"Prossime\",\n      \"bidPricePerCt\": \"Prezzo di offerta / Ct\",\n      \"bidDisc\": \"Bid Disc\",\n      \"bidValue\": \"Bid Valore\",\n      \"bidStone\": \"offerta di pietra\",\n      \"myCart\": \"La mia carta\",\n      \"myComment\": \"I miei appunti\",\n      \"compare\": \"Confrontare\",\n      \"compareStones\": \"Pietre confronta\",\n      \"statusHold\": \"In attesa\",\n      \"statusOnMemo\": \"su Memo\",\n      \"statusAvailable\": \"A disposizione\",\n      \"statusNew\": \"Nuovo arrivo\",\n      \"statusOffer\": \"Pietra Del Giorno / Promozione\",\n      \"statusMyHold\": \"La mia attesa\",\n      \"signup\": \"Iscriviti\",\n      \"addToOffice\": \"Aggiungere a Office\",\n      \"addComment\": \"Aggiungi un commento\",\n      \"addEnquiry\": \"Aggiungere Inquiry\",\n      \"finalOffer\": \"Offerta finale\",\n      \"finalDisc\": \"Disco finale\",\n      \"finalRate\": \"tasso finale\",\n      \"finalValue\": \"Valore finale\",\n      \"orderMsg\": \"1) i prezzi menzionati qui sono fissi e quindi non trattabile. \\\\\\\\ n2) La classificazione, parametri menzionato sul nostro sito web al di là di classificazione del GIA.\",\n      \"offerMsg\": \"pietra Offerto sarà direttamente confermata se il prezzo viene approvato così vi chiediamo di essere sicuri prima di offrire. Ogni pietra (s) messo in lista Offerta non viene tenuto in attesa per voi in quanto è disponibile per altro cliente è pure.\",\n      \"note\": \"Nota\",\n      \"hours\": \"Ore\",\n      \"offeredDisc\": \"Dis offerti\",\n      \"offeredPriceCt\": \"Offerto Pr / Ct\",\n      \"addOffer\": \"Aggiungere offerta\",\n      \"expDiscPer\": \"Sconto previsto\",\n      \"todayDiscPer\": \"Disco di oggi\",\n      \"searchResult\": \"Risultato della ricerca\",\n      \"searchDiamond\": \"Ricerca diamante\",\n      \"basic\": \"Di base\",\n      \"advanced\": \"Avanzate\",\n      \"stoneIdCertNo\": \"StoneID / Cert No\",\n      \"takeSignature\": \"prendere Firma\",\n      \"optional\": \"Opzionale\",\n      \"MyAddress\": \"Il mio indirizzo\",\n      \"expiryDate\": \"Data di scadenza\",\n      \"drivingLicenceDesc\": \"La tua foto patente di guida\",\n      \"PanDesc\": \"La tua foto carta di PAN\",\n      \"selfie\": \"Autoscatto\",\n      \"selfieDesc\": \"La tua foto selfie\",\n      \"pending\": \"in attesa di\",\n      \"rejected\": \"Respinto\",\n      \"uploadAgain\": \"Caricare\",\n      \"remove\": \"Rimuovere\",\n      \"title\": \"Titolo\",\n      \"description\": \"Descrizione\",\n      \"uploadYour\": \"Carica la tua\",\n      \"raiseDispute\": \"Fatecelo sapere\",\n      \"drivingLicense\": \"Patente di guida\",\n      \"PANCard\": \"PAN carta\",\n      \"saveContinue\": \"Salva e continua\",\n      \"uploadFrontUmgText\": \"L'immagine Caricare Front Side\",\n      \"uploadPANCardImgText\": \"Carica PAN Immagine biglietto\",\n      \"uploadBackImageText\": \"L'immagine Caricare Back Side\",\n      \"helptopic\": \"Argomenti di aiuto\",\n      \"newRideSharingRequest\": \"Richieste Nuovo Autostop\",\n      \"newRequest\": \"nuove richieste\",\n      \"welcomeTo\": \"Benvenuto a\",\n      \"welcomeDesc\": \"Accedi al tuo account esistente di Mani Jewel\",\n      \"forgotPassword\": \"Ho dimenticato il tuo\",\n      \"forgotPasswordDesc\": \"Inserisci il tuo numero di cellulare registrato per recuperare la password.\",\n      \"termsAndCondition\": \"Termini & Condizioni\",\n      \"privacyPolicy\": \"politica sulla riservatezza\",\n      \"aboutUS\": \"Riguardo a noi\",\n      \"otpVerification\": \"Verifica il codice giro\",\n      \"otpVerificationDelivery\": \"Verifica il codice Pickup\",\n      \"otpVerificationDeliveryDone\": \"Verifica il codice di consegna\",\n      \"enterOtp\": \"Inserire 4 cifre\",\n      \"recoveryCode\": \"codice di ripristino\",\n      \"editProfile\": \"Modifica Profilo\",\n      \"myProfile\": \"Il mio profilo\",\n      \"reset\": \"Ripristina\",\n      \"yourPassword\": \"La tua password\",\n      \"photo\": \"Foto\",\n      \"otpDesc\": \"Il codice di ripristino è stato inviato al tuo numero di cellulare. Si prega di inserire il codice.\",\n      \"otpVerifyDesc\": \"Il codice di verifica è stato inviato al tuo numero di cellulare. Si prega di inserire il codice.\",\n      \"diamondDetail\": \"diamante Dettaglio\",\n      \"home\": \"Casa\",\n      \"search\": \"Ricerca\",\n      \"quickSearch\": \"Ricerca rapida\",\n      \"newArrival\": \"Nuovo arrivo\",\n      \"exclusiveDiamonds\": \"Diamanti Exclusive\",\n      \"diamondOnAuction\": \"Diamante all'asta\",\n      \"stoneOfTheDays\": \"Miglior acquisto\",\n      \"myWatchlist\": \"mio Lista memo\",\n      \"myBid\": \"la mia offerta\",\n      \"myHold\": \"La mia attesa\",\n      \"myOrder\": \"Il mio Elenco ordinato\",\n      \"confirmStone\": \"pietra Conferma\",\n      \"myOffice\": \"My Appointment\",\n      \"myOffer\": \"Il mio Elenco prodotti\",\n      \"myPurchased\": \"La mia storia acquistati\",\n      \"mySavedSearch\": \"La mia ricerca salvata\",\n      \"savedSearch\": \"Saved Search\",\n      \"myDemand\": \"La mia domanda\",\n      \"contactUs\": \"Contattaci\",\n      \"changePassword\": \"Cambia la password\",\n      \"logout\": \"Disconnettersi\",\n      \"fareDetailsTitle\": \"Inserire i dettagli di vendita\",\n      \"fairAmt\": \"Ammontare delle vendite\",\n      \"noOfPassengers\": \"Numero dei passeggeri\",\n      \"remarks\": \"Osservazioni\",\n      \"orderNo\": \"Numero d'ordine.\",\n      \"typeOfService\": \"Tipo di servizio\",\n      \"paymentType\": \"Modalità di pagamento*\",\n      \"recentlyView\": \"recentemente View\",\n      \"uploadImgValidationText\": \"Carica file deve essere .jpg, .jpeg, .png o .pdf con dimensioni 5 MB o meno.\",\n      \"drivingLicenseHintText\": \"Numero di patente\",\n      \"PANCARDHintText\": \"PAN Numero di carta\",\n      \"viewRide\": \"vista Rides\",\n      \"myVehicle\": \"Il mio veicolo\",\n      \"personalDocument\": \"Documenti personali\",\n      \"help\": \"AIUTO\",\n      \"about\": \"Di\",\n      \"bankDetails\": \"Coordinate bancarie\",\n      \"accountAndPayment\": \"Conto e pagamento\",\n      \"enquiry\": \"Inchiesta\",\n      \"download\": \"Scarica\",\n      \"addToCart\": \"Aggiungi al carrello\",\n      \"addToWatchList\": \"Aggiungere alla lista delle cose da vedere\",\n      \"finalCalculation\": \"calcolo finale\",\n      \"bookOffice\": \"book Office\",\n      \"clearSelection\": \"Annulla selezione\",\n      \"comment\": \"Commenti\",\n      \"hold\": \"Tenere\",\n      \"offer\": \"Offrire\",\n      \"officeView\": \"ufficio View\",\n      \"placeOrder\": \"Invia ordine\",\n      \"buyNow\": \"Acquista ora\",\n      \"cancelStone\": \"Annulla pietra\",\n      \"share\": \"Condividere\",\n      \"watchlist\": \"Watchlist\",\n      \"exclusive\": \"Esclusivo\",\n      \"featuredStones\": \"Pietre in vetrina\",\n      \"stoneOfDay\": \"Pietre di Giorno\",\n      \"recentSearch\": \"recenti Ricerca\",\n      \"viewAll\": \"Mostra tutto\",\n      \"salesPersonDetail\": \"Persona Vendite Dettaglio\",\n      \"searchTitle\": \"Ricerca Titolo\",\n      \"enterSearchTitle\": \"Inserisci Ricerca Titolo\",\n      \"timeSlots\": \"Fasce orarie\",\n      \"selectCustomDate\": \"Seleziona date personalizzato\",\n      \"availableSlot\": \"Slot disponibili\",\n      \"reqOfficeView\": \"Richiedi Ufficio View\",\n      \"myComments\": \"Il mio commento\",\n      \"myReminder\": \"Il mio promemoria\",\n      \"reminder\": \"Promemoria\",\n      \"manageAddress\": \"gestire gli indirizzi\",\n      \"myAccount\": \"Il mio account\",\n      \"declaimer\": \"disconoscimento\",\n      \"shareStone\": \"Condividi pietra\",\n      \"addRemider\": \"Aggiungi promemoria\",\n      \"offlineSearch\": \"offline Cerca\",\n      \"searchHistory\": \"Cronologia delle ricerche\",\n      \"offlineStock\": \"offline della\",\n      \"searchOffline\": \"Cerca (Offline)\",\n      \"voiceSearch\": \"Ricerca vocale\",\n      \"tapMictoSpeak\": \"Toccare microfono a parlare\",\n      \"typeToSearch\": \"Digita per ricerca\",\n      \"typeWordsToSearch\": \"Digitare almeno 3 parole per cercare pietre\"\n    },\n    \"dynamickeys\": {\n      \"shape\": \"Forma\",\n      \"caratRange\": \"Carat Gamma\",\n      \"basicDetail\": \"Dettagli di base\",\n      \"measurementTitle\": \"misure\",\n      \"inclusionDetail\": \"Dettagli di inclusione\",\n      \"other\": \"Altro\",\n      \"stoneID\": \"pietra ID\",\n      \"labTitle\": \"Laboratorio\",\n      \"certNo\": \"Cert. No.\",\n      \"locationTitle\": \"POSIZIONE\",\n      \"shapeTitle\": \"Forma\",\n      \"caratTitle\": \"carato\",\n      \"colorTitle\": \"Colore\",\n      \"clarityTitle\": \"CHIAREZZA\",\n      \"cutTitle\": \"Taglio\",\n      \"polishTitle\": \"polacco\",\n      \"symmentryTitle\": \"Symmentry\",\n      \"fluorescenceTitle\": \"Fluorescenza\",\n      \"rapTitle\": \"Rap (%)\",\n      \"discountTitle\": \"Sconto (%)\",\n      \"priceAndCt\": \"Prezzo / Ct\",\n      \"amountTitle\": \"Quantità\",\n      \"eyeCleanTitle\": \"Clean Eye\",\n      \"brownTitle\": \"MARRONE\",\n      \"milkyTitle\": \"latteo\",\n      \"mixTingeTitle\": \"MIX tinge\",\n      \"dimensionTitle\": \"Dimensioni (mm)\",\n      \"girdleTitle\": \"Cintura (%)\",\n      \"tableTitle\": \"Tavolo %\",\n      \"crownAngleTitle\": \"Angolo di corona\",\n      \"depthTitle\": \"profondità%\",\n      \"pavAngleTitle\": \"Pav Angolo\",\n      \"crownHeightTitle\": \"Corona Altezza (%)\",\n      \"pavDepthTitle\": \"Padiglione Profondità (%)\",\n      \"starLengthTitle\": \"stella Lunghezza\",\n      \"lowerHalfTitle\": \"La metà inferiore\",\n      \"gridleTitle\": \"Cintura\",\n      \"gridleFacetedTitle\": \"CINTURA SFACCETTATA\",\n      \"culetTitle\": \"culet\",\n      \"rationTitle\": \"Rapporto\",\n      \"blackInclusionTitle\": \"INCLUSIONE NERO\",\n      \"otherInclusionTitle\": \"Altro inclusione\",\n      \"openInclusionTitle\": \"INCLUSIONE APERTO\",\n      \"extraFacetTitle\": \"FACET EXTRA\",\n      \"naturalTitle\": \"Naturale\",\n      \"hAndATitle\": \"H & A\",\n      \"keyToSymbol\": \"LEGENDA SIMBOLO\",\n      \"labComments\": \"COMMENTI LAB\",\n      \"laserInsTitle\": \"LASER INS\",\n      \"basicTitle\": \"Di base\",\n      \"advancedTitle\": \"Avanzate\",\n      \"stoneIdTitle\": \"Pietra ID / Cert No\",\n      \"defaultTitle\": \"Predefinito\",\n      \"newDiamondsTitle\": \"nuovi Diamonds\",\n      \"priceLowToHigh\": \"Prezzo basso al più alto\",\n      \"priceHighToLow\": \"Prezzo decrescente\",\n      \"disLowToHigh\": \"Sconto basso al più alto\",\n      \"disHighToLow\": \"Alto sconto per Basso\",\n      \"colorLowToHigh\": \"Colore basso al più alto\",\n      \"colorHighToLow\": \"Colore decrescente\",\n      \"caratLowToHigh\": \"Carat basso al più alto\",\n      \"caratHighToLow\": \"Carat decrescente\",\n      \"clarityLowToHigh\": \"Chiarezza basso al più alto\",\n      \"clarityHighToLow\": \"La chiarezza decrescente\",\n      \"colorShadeTitle\": \"color Shade\",\n      \"certiTitle\": \"Numero di certificato\",\n      \"arrivalsTitle\": \"Arrivi\",\n      \"lengthTitle\": \"Lunghezza\",\n      \"widthTitle\": \"Larghezza\",\n      \"pavilionAngleTitle\": \"Angolo Pavilion\",\n      \"girdleConditionTitle\": \"Cintola Condizione\",\n      \"cluetConditionTitle\": \"culet Condizione\",\n      \"disTitle\": \"Dis%\",\n      \"depthTitleWithoutPerc\": \"Profondità\",\n      \"otherInformationTitle\": \"Altre informazioni\"\n    }\n  },\n  \"Spanish\": {\n    \"language_code\": \"Spanish\",\n    \"auth_strings\": {\n      \"editCompanyInformation\": \"Editar Información de la empresa\",\n      \"selectNatureOfOrganization\": \"Seleccionar naturaleza de la organización\",\n      \"setNewPassword\": \"Establecer la nueva contraseña y acceder de nuevo.\",\n      \"enterCompanyName\": \"Por favor, introduzca el nombre de la empresa.\",\n      \"pleaseEnterCustomerOTP\": \"Por favor, introduzca el código de trayecto al cliente.\",\n      \"pleaseEnterPickupOTP\": \"Por favor, introduzca el código de captación de clientes.\",\n      \"pleaseEnterDeliveryOTP\": \"Por favor, introduzca el código de entrega al cliente.\",\n      \"verified\": \"Verified\",\n      \"verify\": \"Verificar\",\n      \"addressLineOne\": \"Dirección 1\",\n      \"addressLineTwo\": \"Dirección 2\",\n      \"addressLineThree\": \"dirección 3\",\n      \"oldPassword\": \"Contraseña anterior\",\n      \"skype\": \"Skype\",\n      \"whatsApp\": \"Whatsapp\",\n      \"pinCode\": \"Código PIN*\",\n      \"verifyMobileDesc\": \"Por favor, compruebe el número móvil para actualizar el perfil.\",\n      \"verifyNow\": \"verifica ahora\",\n      \"password\": \"Contraseña\",\n      \"backToHome\": \"Ir a casa\",\n      \"forgotPassword\": \"¿Se te olvidó tu contraseña?\",\n      \"signInCap\": \"Registrarse\",\n      \"moveToLogIn\": \"Mover a Entrar\",\n      \"dontHaveAnAccount\": \"#ERROR!\",\n      \"clickHere\": \"haga clic aquí\",\n      \"signUpHere\": \"Registrate aquí\",\n      \"reset\": \"Reiniciar\",\n      \"haveRegisterCode\": \"Tener un código de registro?\",\n      \"welcome\": \"¡Dar una buena acogida!\",\n      \"signInAsGuest\": \"Iniciar sesión como invitado\",\n      \"editProfileTitle\": \"Editar perfil\",\n      \"emaillbl\": \"Email\",\n      \"searchInventory\": \"búsqueda de productos\",\n      \"emailAddress\": \"Dirección de correo electrónico*\",\n      \"offlineFilter\": \"No es posible encontrar el solitario deseada? Podemos ayudarle a obtener la mejor oferta de nuestro inventario en línea.\",\n      \"loginDesc\": \"¿Quieres activar Touch ID / MPIN para desbloquear mis diamantes? Por favor seleccione una opción para la aplicación de desbloqueo\",\n      \"searchDiamonds\": \"diamantes de búsqueda\",\n      \"continueWithSearch\": \"¿Quieres continuar su búsqueda?\",\n      \"mobileNumber\": \"Móvil\",\n      \"searchHint\": \"Buscar...\",\n      \"selectYourCountry\": \"Seleccionar país\",\n      \"resendCodeIn\": \"Reenviar mensaje en código\",\n      \"resendCode\": \"Enviar de nuevo\",\n      \"haveAnAccount\": \"¿Ya tienes una cuenta?\",\n      \"dontReceiveCode\": \"Si no recibe un código!\",\n      \"inLogin\": \"iniciar sesión.\",\n      \"resetPwdDesc\": \"Añadir contraseña y confirmación de contraseña para restablecer la contraseña.\",\n      \"backToLogin\": \"Atrás para iniciar sesión\",\n      \"firstName\": \"Primer nombre*\",\n      \"name\": \"Nombre de usuario *\",\n      \"lastName\": \"Apellido*\",\n      \"middleName\": \"Segundo nombre*\",\n      \"confirmPassword\": \"Confirmar contraseña\",\n      \"currentPasswordErr\": \"Error de contraseña actual\",\n      \"passwordChanged\": \"Contraseña cambiada\",\n      \"lblLogInErr\": \"Error de inicio de sesión\",\n      \"enterYour\": \"Entra tu\",\n      \"details\": \"detalles\",\n      \"registerCode\": \"Código de registro\",\n      \"registerCodeDesc\": \"Añadir un código de registro para iniciar su inscripción en 3eco.\",\n      \"uploadPhotoDesc\": \"Tome una autofoto de su auto\",\n      \"updateProfile\": \"Actualización del perfil\",\n      \"postalCode\": \"Código postal*\",\n      \"removeButton\": \"Eliminar\",\n      \"gender\": \"Género\",\n      \"male\": \"Masculino\",\n      \"female\": \"Hembra\",\n      \"changePassword\": \"Cambia la contraseña\",\n      \"currentPassword\": \"Contraseña actual*\",\n      \"newPassword\": \"Nueva contraseña*\",\n      \"confirmNewPassword\": \"Confirmar contraseña*\",\n      \"personalDocuments\": \"Documentos personales\",\n      \"assignedAuto\": \"Auto asignado\",\n      \"logout\": \"Cerrar sesión\",\n      \"logoutConfirmationMsg\": \"¿Seguro que desea finalizar la sesión?\",\n      \"address\": \"Habla a*\",\n      \"accountNumber\": \"Número de cuenta\",\n      \"bankerName\": \"Nombre banqueros\",\n      \"nameLable\": \"Nombre\",\n      \"ifscCode\": \"código IFSC\",\n      \"businessRegistrationNumbr\": \"Número de registro de negocios\",\n      \"businessRelationshipPeriod\": \"Negocios período de vinculación (en años)\",\n      \"designation\": \"Designacion\",\n      \"nameofDesignation\": \"Nombre de\",\n      \"natureofOrganization\": \"Naturaleza de la Organización\",\n      \"uploadFile\": \"Sin archivo Choosen\",\n      \"update\": \"ACTUALIZAR\",\n      \"resetPwd\": \"Restablecer la contraseña\",\n      \"pwdReset\": \"Restablecimiento de contraseña\",\n      \"signInWithMPIN\": \"Iniciar sesión con MPIN\",\n      \"pwdChanged\": \"Contraseña cambiada\",\n      \"successfullyPwdDesc\": \"Ha restablecido la contraseña correctamente. Por favor utilice su nueva contraseña al iniciar la sesión.\",\n      \"lblProfileSetup\": \"Su perfil está configurado\",\n      \"lblProfileSetupDesc\": \"Hemos recibido los datos de su perfil\",\n      \"hoursAvailable\": \"total Shifttime\",\n      \"confirmStoneDetail\": \"Confirmar Detalle de piedra\",\n      \"companyName\": \"nombre de empresa\",\n      \"invoiceDate\": \"Fecha de la factura\",\n      \"companyCode\": \"Codigo de compañia\",\n      \"saveCompanyDetails\": \"Guardar Datos Empresa\",\n      \"passwordNotChange\": \"Las contraseñas no coinciden\",\n      \"rememberPassword\": \"¿Recordar contraseña?\",\n      \"sendOTP\": \"Enviar OTP\",\n      \"resendNow\": \"Ahora volvemos a enviar\",\n      \"didNotReceiveOTP\": \"Si usted no recibió una OTP!\",\n      \"sendOTPToEmail\": \"Vamos a enviar una OTP a su dirección de correo electrónico introducida o nombre de usuario. Por favor, introduzca la dirección de correo electrónico o nombre de usuario.\",\n      \"enterOTP\": \"La Fiscalía ha sido enviada a su dirección de correo electrónico registrada. Por favor, introduzca la OTP.\",\n      \"backToSignIn\": \"Volver a entrar\",\n      \"passwordResetSuccessfully\": \"Restablecimiento de contraseñas con éxito.\",\n      \"emailAndUname\": \"Email / Usuario\",\n      \"signUp\": \"Regístrate\",\n      \"promotionText\": \"Ofertas promocionales\",\n      \"termsAndCondition\": \"Términos y Condiciones\",\n      \"mustAgreeTermsAndCondition\": \"Debe aceptar los términos y condiciones de entrar como usuario invitado\",\n      \"forgotPasswordTitle\": \"Se te olvidó tu contraseña\",\n      \"uploadKYC\": \"Subir KYC\",\n      \"uploadKycDesc\": \"Por favor, subir sus documentos KYC para acceder a funciones completas.\",\n      \"hintPhotoIdentityProof\": \"Foto Identidad * Prueba\",\n      \"hintBussinerssProof\": \"Identidad de negocios * Prueba\",\n      \"btnFileUpload\": \"Subir archivo\",\n      \"pleaseUploadPhotoProof\": \"Por favor, sube fotos prueba de identidad.\",\n      \"pleaseUploadBussinessProof\": \"Por favor, sube Identidad negocio a prueba.\",\n      \"pleaseSelectFileFormat\": \"Por favor, cargar el archivo en cualquiera de los formatos siguientes: .jpg\",\n      \"kycSubmitted\": \"KYC Enviado\",\n      \"kycSubmmittedDesc\": \"Su conocimiento del cliente se ha enviado correctamente.\",\n      \"btnMoveToHome\": \"Mover a Inicio\",\n      \"kYCRejected\": \"KYC Rechazado\",\n      \"kycRejectedDesc\": \"Su conocimiento del cliente ha sido rechazada. Por favor, subir sus documentos KYC de nuevo para acceder a todas las funciones.\"\n    },\n    \"common_string\": {\n      \"seeMore\": \"Ver más\",\n      \"seeLess\": \"Ver menos\",\n      \"modify\": \"Modificar\",\n      \"delete\": \"Eliminar\",\n      \"details\": \"detalles\",\n      \"edit\": \"Editar\",\n      \"addDemand\": \"Agregar la demanda\",\n      \"demandTitle\": \"La demanda Título\",\n      \"pleaseEnterDemandTitle\": \"Por favor, introduzca demanda Título\",\n      \"demandAddedSuccessfully\": \"La demanda agregado con éxito\",\n      \"selectAtleastOneFilter\": \"Por favor\",\n      \"savedSearch\": \"búsqueda guardada\",\n      \"searchSavedSearch\": \"Buscar búsqueda guardada\",\n      \"viewDetails\": \"Ver detalles\",\n      \"viewLessDetails\": \"Ver menos detalles\",\n      \"myDemand\": \"mi demanda\",\n      \"date\": \"Fecha\",\n      \"selectTime\": \"Seleccione Hora\",\n      \"selectDate\": \"Seleccione fecha\",\n      \"offerVelidTill\": \"Oferta válida Hasta\",\n      \"officeVisitDate\": \"Consultorio Fecha\",\n      \"all\": \"Todas\",\n      \"status\": \"Estado\",\n      \"save\": \"Salvar\",\n      \"verify\": \"Verificar\",\n      \"readMore\": \"Lee mas\",\n      \"goodMorning\": \"Buenos días\",\n      \"goodAfternoon\": \"Buenas tardes\",\n      \"goodEvening\": \"Buena noches\",\n      \"btnSkip\": \"Omitir\",\n      \"btnUpdate\": \"Actualizar\",\n      \"btnContinue\": \"Seguir\",\n      \"btnContinueCap\": \"SEGUIR\",\n      \"btnEdit\": \"Editar\",\n      \"btnSubmit\": \"Enviar\",\n      \"btnNextCap\": \"próximo\",\n      \"btnSaveCap\": \"Actualiza contraseña\",\n      \"btnWithdrawCap\": \"RETIRAR\",\n      \"btnSaveAndContinueCap\": \"GUARDAR CONTINUAR\",\n      \"btnUnregister\": \"no registrado móvil\",\n      \"btnClose\": \"Cerca\",\n      \"remove\": \"Eliminar\",\n      \"refresh\": \"Actualizar\",\n      \"fetchLocationMessage\": \"Por favor espere que están alcanzando su ubicación\",\n      \"done\": \"Hecho\",\n      \"doneCap\": \"HECHO\",\n      \"cancel\": \"Cancelar\",\n      \"allow\": \"Permitir\",\n      \"countryFirst\": \"Por favor, seleccione País Primera\",\n      \"apply\": \"Aplicar\",\n      \"cancelCap\": \"CANCELAR\",\n      \"uploadCap\": \"SUBIR\",\n      \"yesCancelCap\": \"SI\",\n      \"upload\": \"Subir\",\n      \"ok\": \"Okay\",\n      \"home\": \"Casa\",\n      \"goToMyWatchList\": \"Ir a lista\",\n      \"goToMyOrder\": \"Ir a Mi Pedido\",\n      \"gotToMyOffer\": \"Ir a mi oferta\",\n      \"gotToMyHold\": \"Ir a Mi Hold\",\n      \"gotToMyEnquiry\": \"Ir a mi solicitud\",\n      \"gotToMyBid\": \"Ir a mi oferta\",\n      \"gotToMyReminder\": \"Ir a Mi Recordatorio\",\n      \"gotToMyComments\": \"Ir a Mis Notas\",\n      \"yes\": \"si\",\n      \"no\": \"No\",\n      \"selectCountry\": \"Seleccionar país\",\n      \"clickHere\": \"Haga clic aquí\",\n      \"btnAddNewAddress\": \"AGREGAR NUEVA DIRECCIÓN\",\n      \"btnCancel\": \"CANCELAR\",\n      \"btnTakeSelfie\": \"tome selfie\",\n      \"successfully\": \"Exitosamente\",\n      \"lblAppExit\": \"¿Seguro que quieres salir?\",\n      \"lblExit\": \"Salida\",\n      \"openAppSetting\": \"Configuración abierta\",\n      \"lblOr\": \"O\",\n      \"fromLbl\": \"Desde\",\n      \"toLbl\": \"A\",\n      \"showMore\": \"Mostrar más\",\n      \"showLess\": \"Muestra menos\",\n      \"selectCity\": \"Ciudad selecta\",\n      \"notYetAvailable\": \"No disponible aún\",\n      \"updateAvailable\": \"¡Actualización disponible!\",\n      \"downloadAppFrom\": \"Descargar la aplicación de actualización de\",\n      \"playStore\": \"Tienda de juegos\",\n      \"skipUpdate\": \"Saltar actualización\",\n      \"stateFirst\": \"Por favor, seleccione Estado Primera\",\n      \"reallyExit\": \"Realmente salir?\",\n      \"alert\": \"¡Alerta!\",\n      \"loading\": \"Cargando\",\n      \"error\": \"Error\",\n      \"jumpToTop\": \"Saltar a la cima\",\n      \"ihaveread\": \"he leido y acepto\",\n      \"selected\": \"Seleccione\",\n      \"lbllogout\": \"Cerrar sesión\",\n      \"lblThanx\": \"Gracias\",\n      \"lblSelectCity\": \"Ciudad selecta\",\n      \"lblSelectState\": \"Seleccione estado\",\n      \"lblSelectCountry\": \"Seleccionar país\",\n      \"lblCity\": \"Ciudad\",\n      \"lblCountry\": \"País\",\n      \"lblName\": \"Nombre\",\n      \"lblPinCode\": \"Código PIN\",\n      \"lblMobileNumber\": \"Número de teléfono móvil\",\n      \"lblState\": \"Estado\",\n      \"lblCode\": \"Código:\",\n      \"lblOrderNo\": \"N º de pedido:\",\n      \"lblOrderItem\": \"Articulo ordenado:\",\n      \"lblDelivered\": \"Entregado\",\n      \"lblTicketReady\": \"Su billete está listo\",\n      \"lblPersonTicket\": \"Billete de 2 persona\",\n      \"lblShuttleBus\": \"Autobús de enlace\",\n      \"lblPickup\": \"Recoger\",\n      \"lblDropoff\": \"Bajar ó dejar algo\",\n      \"lblPassenger\": \"Pasajero\",\n      \"lblDeliveryNo\": \"Sin entrega.\",\n      \"lblPrice\": \"Precio\",\n      \"lblValid\": \"Valido para\",\n      \"lblRenew\": \"Renovar\",\n      \"lblDeparture\": \"Salida\",\n      \"lblArrived\": \"Llegado\",\n      \"lblSendtoFriend\": \"Enviala a un amigo\",\n      \"popupRenewTitle\": \"renovar billete\",\n      \"popupRenewDesc\": \"Lorem ipsum dolor sit amet\",\n      \"popuplblPassenger\": \"Pasajero\",\n      \"popuplblCancel\": \"Cancelar\",\n      \"popupbtnRenew\": \"Renovar\",\n      \"ridelblAwesome\": \"Increíble\",\n      \"ridebtnDone\": \"Hecho\",\n      \"offerPricePerCarat\": \"Precio ofrecido (CTS)\",\n      \"dropOffText\": \"Bajar ó dejar algo\",\n      \"pickUpText\": \"Recoger\",\n      \"startAtText\": \"Empieza en\",\n      \"endAtText\": \"Termina en\",\n      \"personText\": \"persona\",\n      \"paymentScreenTitle\": \"Pago\",\n      \"pickuplbl\": \"Recoger\",\n      \"droplbl\": \"Bajar ó dejar algo\",\n      \"makePaymentButtonlbl\": \"Hacer el pago\",\n      \"pessangerslbl\": \"Los pasajeros\",\n      \"priceBreakuplbl\": \"Precio desintegración\",\n      \"tripPricelbl\": \"Precio de viaje\",\n      \"taxeslbl\": \"Impuestos\",\n      \"totallbl\": \"Total\",\n      \"cardNumberhint\": \"Número de tarjeta\",\n      \"cvvhint\": \"CVV\",\n      \"datehint\": \"MM / YY\",\n      \"btnTryAgain\": \"Inténtalo de nuevo\",\n      \"cityFirst\": \"Por favor, seleccione la primera ciudad\",\n      \"enterFareDetails\": \"Entrar en detalles de ventas\",\n      \"fromDate\": \"Partir de la fecha\",\n      \"toDate\": \"Fecha seleccionada\",\n      \"btnUnderstand\": \"Entiendo\",\n      \"applicationUpdate\": \"actualización de aplicaciones\",\n      \"newVersionMessage\": \"Una nueva versión de la aplicación está disponible\",\n      \"paymentCollected\": \"pago Collected\",\n      \"addComment\": \"Añadir un comentario\",\n      \"more\": \"Más\",\n      \"carat\": \"Quilate\",\n      \"pcs\": \"pcs\",\n      \"cts\": \"cts\",\n      \"disc\": \"Dto %\",\n      \"avgPriceCrt\": \"Avg. Precio / Ct\",\n      \"amount\": \"Cantidad\",\n      \"confirmStone\": \"Piedra Confirmar\",\n      \"confirm\": \"Confirmar\",\n      \"offered\": \"Ofrecido\",\n      \"validTill\": \"Válida hasta\",\n      \"remark\": \"Observación\",\n      \"color\": \"Color\",\n      \"colorGroup\": \"Grupo de color\",\n      \"colorFancy\": \"Lujoso\",\n      \"colorWhite\": \"Blanco\",\n      \"clarity\": \"Claridad\",\n      \"clarityGroup\": \"Grupo claridad\",\n      \"intensity\": \"Intensidad\",\n      \"overtone\": \"Armónico\",\n      \"selectBusinessType\": \"Seleccionar el tipo de negocio\",\n      \"selectState\": \"Seleccione estado\",\n      \"search\": \"Buscar\",\n      \"profile\": \"Mi perfil\",\n      \"personal\": \"Personal\",\n      \"business\": \"Negocio\",\n      \"documents\": \"Documentos\",\n      \"noSlotFound\": \"No se encontraron ranuras\",\n      \"noDiamondFound\": \"No hay diamantes coinciden con la búsqueda. Por favor, agrega que la demanda.\",\n      \"selectType\": \"Seleccionar tipo virtual\",\n      \"noSavedSearch\": \"No existe búsqueda guardada\",\n      \"searchCity\": \"Buscar por ciudad\",\n      \"searchCountry\": \"Buscar País\",\n      \"searchState\": \"estado de búsqueda\",\n      \"notifications\": \"Notificación\",\n      \"enter2Stone\": \"Por favor, seleccione al menos 2 piedra para comparar.\",\n      \"bidDesc\": \"Actualmente se encuentra en la India y para la entrega en cualquier otro país, aparte de la India tendrá al menos 7-10 días laborables.\",\n      \"packetNo\": \"Sin paquete:\",\n      \"quit\": \"Dejar\",\n      \"agree\": \"Estoy de acuerdo\",\n      \"laterToday\": \"Mas tarde, hoy\",\n      \"toMorrow\": \"mañana\",\n      \"nextWeek\": \"La próxima semana\",\n      \"chooseAnother\": \"Seleccione otro\",\n      \"dateTime\": \"Fecha y hora\",\n      \"language\": \"Idioma\",\n      \"diamNow\": \"DiamNow\",\n      \"noDocument\": \"No se encontraron documentos\",\n      \"searchBusinessType\": \"Buscar Tipo de empresa\",\n      \"hours\": \"horas\",\n      \"minutes\": \"Minutos\",\n      \"seconds\": \"Segundos\",\n      \"bidEndsIn\": \"La subasta termina en:\",\n      \"shape\": \"Forma\",\n      \"download\": \"Descargar\",\n      \"share\": \"Compartir\",\n      \"placeOrder\": \"Realizar pedido\",\n      \"enterComment\": \"Por favor, introduzca comentario\",\n      \"deleteItem\": \"¿Estas seguro que quieres borrarlo?\",\n      \"shippingPolicy\": \"Politica de envios\",\n      \"offerSundayRestriction\": \"No está permitido domingo. Oficina días hábiles son de lunes a sábado\",\n      \"weekAgo\": \"Hace 1 semana\",\n      \"lastWeek\": \"La semana pasada\",\n      \"dayAgo\": \"hace días\",\n      \"onedayAgo\": \"Hace 1 día\",\n      \"yesterday\": \"Ayer\",\n      \"hourAgo\": \"horas atras\",\n      \"onehourAgo\": \"1 hora antes\",\n      \"anhourAgo\": \"Hace una hora\",\n      \"mintuesAgo\": \"hace minutos\",\n      \"onemintuesAgo\": \"Hace 1 minuto\",\n      \"amintueAgo\": \"Hace un minuto\",\n      \"secondsAgo\": \"hace segundos\",\n      \"justNow\": \"Justo ahora\",\n      \"today\": \"Hoy\",\n      \"past\": \"Pasado\",\n      \"selectPhotoProof\": \"Seleccione el documento\",\n      \"pleaseSelectPhotoProof\": \"Por favor, seleccione el documento\",\n      \"selectBusinessProof\": \"Seleccione el documento\",\n      \"pleaseSelectBusinessProof\": \"Por favor, seleccione el documento\",\n      \"touchId\": \"Identifición de toque\",\n      \"faceId\": \"Id cara\",\n      \"enableTouchId\": \"Activar contacto Id para desbloquear mis diamantes?\",\n      \"enableFaceId\": \"Habilitar Face ID para desbloquear mis diamantes?\",\n      \"unlockWithTouchId\": \"Desbloquear mis diamantes utilizando Touch ID\",\n      \"unlockWithFaceId\": \"Desbloquear mis diamantes utilizando Face ID.\",\n      \"mPin\": \"MPIN\",\n      \"holdMemoStatusDiamondorder\": \"你 不能 确诊 的 石块, 已经 在 保持 或 备忘录 状态\",\n      \"searchStoneIdCertificateNo\": \"搜索 石 ID / 证书 号\",\n      \"createMPin\": \"创建 新 的 M-PIN\",\n      \"reentermpin\": \"重新 输入 M-PIN\",\n      \"forgotmpin\": \"忘记 了 M-PIN?\",\n      \"verifympin\": \"验证 M-PIN\",\n      \"enteryoursixdigitcode\": \"输入 您 的 6 位 M-PIN\",\n      \"changempin\": \"更改 M-PIN\",\n      \"faceidandtouchnotenable\": \"FaceID / TouchId 在 您 的 手机 未 启用, 请 启用 使用 此 功能\",\n      \"enablempintounlockmydiamonds\": \"启用 M-PIN 解锁 应用 程序? 这 将 禁用 触摸 标识. 你 确定 你 要 继续 \u200B\u200B吗?\",\n      \"enabletouchidtounlockmydiamonds\": \"允许 使用 tocco ID 解锁 应用? 这 将 禁用 M-PIN. 你 确定 你 要 继续 \u200B\u200B吗?\",\n      \"rememberme\": \"记得 我\",\n      \"usertouchid\": \"使用 触摸 标识\",\n      \"usempin\": \"使用 M-PIN\",\n      \"filesarenotavailableonserver\": \"文件 不可 用 的 服务器, 请 稍后 重 试\",\n      \"allfileshavebeendownloaded\": \"所有 文件 都 被 下载.\",\n      \"filesisdownloaded\": \"文件 下载\",\n      \"filesisnotdownloadedbcz\": \"文件 没有 下载, 因为 它 不是 在 服务器 存在.\",\n      \"downloading canceled\": \"取消 下载\",\n      \"downloading\": \"下载 ...\",\n      \"expirydate\": \"到期 日:\",\n      \"youreallywanttodelete\": \"你 真的 要 删除\"\n    },\n    \"error_string\": {\n      \"accessDenide\": \"Acceso denegado\",\n      \"pleaseSelectOfferTillDate\": \"Por favor seleccione la oferta hasta la fecha.\",\n      \"pleaseSelectOfficeVisitDate\": \"Por favor, seleccione la oficina fecha de visita\",\n      \"deleteStoneMsg\": \"¿Seguro que quiere borrar la piedra (s)?\",\n      \"acceptTermsAndCondition\": \"Por favor, acepta los términos y condiciones\",\n      \"diamondCompareRemove\": \"Al menos 2 piedras están obligados a comparar.\",\n      \"diamondSelectionError\": \"Por favor, seleccione al menos una piedra.\",\n      \"pleaseEnterCompanyName\": \"Por favor, introduzca nombre de la empresa.\",\n      \"selectInvoiceDate\": \"Seleccionar Fecha de la factura\",\n      \"pleaseEnterComment\": \"Por favor, introduzca comentario.\",\n      \"pleaseEnterRemarks\": \"Por favor, introduzca las observaciones.\",\n      \"selectExpiryDate\": \"Por favor seleccione la fecha de caducidad.\",\n      \"enterOTP\": \"Por favor, introduzca el código\",\n      \"pleaseEnterOTP\": \"Por favor, introduzca el código de verificación.\",\n      \"enteredCodeNotMatching\": \"código introducido no coincide. Inténtalo de nuevo\",\n      \"selectCancellationReason\": \"Por favor, seleccione motivo de la cancelación\",\n      \"enterDesc\": \"Por favor, introduzca la descripción.\",\n      \"enterTitle\": \"Por favor, introduzca el título.\",\n      \"enterEmailOrPhone\": \"Por favor, introduzca correo electrónico / móvil.\",\n      \"enterPassword\": \"La contraseña no puede estar vacío. Por favor, ingrese contraseña.\",\n      \"enterConfirmPassword\": \"Por favor, introduzca la contraseña de confirmación.\",\n      \"enterSkype\": \"Por favor, introduzca Skype.\",\n      \"enterRegisterCode\": \"Por favor, introduzca el código de registro\",\n      \"enterEmail\": \"Por favor, introduzca la dirección de correo electrónico.\",\n      \"enterPhone\": \"Por favor, introduzca número de teléfono móvil.\",\n      \"enterUsername\": \"Nombre de usuario no puede estar vacío. Por favor, introduzca nombre de usuario.\",\n      \"enterValidEmail\": \"Por favor, introduzca la dirección de correo electrónico válida.\",\n      \"enterValidPhone\": \"Por favor, introduzca el número de móvil válido.\",\n      \"enterValidWhatsappPhone\": \"Por favor, introduzca el número de teléfono móvil WhatsApp válida.\",\n      \"enterValidPassword\": \"Por favor, introduzca 6 caracteres o contraseña larga.\",\n      \"mismatchPassword\": \"Contraseña y confirmación de contraseña no coincide.\",\n      \"enterFirstName\": \"Por favor, introduzca el nombre.\",\n      \"enterMiddleName\": \"Por favor, introduzca el nombre.\",\n      \"enterPinCode\": \"Por favor, introduzca el código PIN.\",\n      \"enterName\": \"Por favor, introduzca su nombre.\",\n      \"enterLastName\": \"Por favor, introduzca su apellido.\",\n      \"enterAddress\": \"Por favor, introduzca la dirección.\",\n      \"enterValidPinCode\": \"Introduzca código PIN válido.\",\n      \"enterValidAddress\": \"Por favor, introduzca 10 caracteres o dirección larga.\",\n      \"enterPostalCode\": \"Por favor, introduzca el código postal.\",\n      \"enterValidPostalCode\": \"Por favor, introduzca 6 dígitos código postal numérico.\",\n      \"enterCurrentPassword\": \"Por favor, introduzca la contraseña actual.\",\n      \"enterNewPassword\": \"Por favor, introduzca la nueva contraseña.\",\n      \"enterFareAmount\": \"Por favor, introduzca la cantidad de ventas.\",\n      \"enterOrderNO\": \"Por favor, introduzca el fin no.\",\n      \"enterServiceType\": \"Por favor, seleccione el tipo de servicio.\",\n      \"enterPaymentType\": \"Por favor, seleccione el tipo de pago.\",\n      \"enterValidFareAmount\": \"cantidad de ventas no puede ser cero.\",\n      \"enterPassangerNo\": \"Por favor, introduzca ninguna. de pasajeros.\",\n      \"enterValidPassangerNo\": \"No. de pasajeros no puede ser cero.\",\n      \"notEnterMorePassangerNo\": \"Número de pasajeros no puede contener más de siete.\",\n      \"drivingLicenseValidationText\": \"Por favor, introduzca 15 dígitos alfanuméricos del permiso de conducir.\",\n      \"PANCardValidationText\": \"Por favor, introduzca 10 dígitos alfanuméricos número de tarjeta de PAN.\",\n      \"selectFromDate\": \"Por favor seleccione de la fecha\",\n      \"selectToDate\": \"Por favor, seleccione hasta la fecha\",\n      \"fromGreaterTo\": \"Fecha seleccionada debe ser mayor que la fecha actual\",\n      \"wrongPassword\": \"La contraseña debe contiene, mínimo 8 caracteres, 1 alfabeto en mayúsculas, minúsculas del alfabeto 1, 1 dígito, 1 charater especial\",\n      \"fromValueGreateThanTo\": \"De valor debe ser menor o igual al valor de A\",\n      \"toValueGreaterThanFrom\": \"A valor debe ser mayor o igual al valor Desde\",\n      \"pleaseEnterCompanyCode\": \"Por favor, introduzca el código de empresa\",\n      \"enterSamePassword\": \"Confirmar contraseña no coincide con la nueva contraseña. Por favor, introduzca la contraseña confirman mismo que la nueva contraseña.\",\n      \"selectAppointmentDate\": \"Por favor, seleccione fecha de la cita\",\n      \"selectTimeSlot\": \"Por favor, seleccione la ranura de tiempo\",\n      \"enterComments\": \"Por favor, introduzca comentario\",\n      \"selectVirtualType\": \"Por favor, seleccione el tipo virtuales\",\n      \"versionError\": \"versión de error\"\n    },\n    \"no_data strings\": {\n      \"noDataFound\": \"Ningún record fue encontrado\"\n    },\n    \"screen_title\": {\n      \"placeAnOffer\": \"Coloque una Oferta\",\n      \"addedInWatchList\": \"Añadido en la lista\",\n      \"addedInOffer\": \"oferta presentada\",\n      \"addedInCart\": \"Añadido Carrito\",\n      \"addedInBid\": \"Añadido en la subasta\",\n      \"myEnquiry\": \"mi mensaje\",\n      \"delete\": \"Eliminar\",\n      \"addDemand\": \"Agregar demanda\",\n      \"matchPair\": \"partido Par\",\n      \"savedAndSearch\": \"Guardar y Buscar\",\n      \"updateAndSearch\": \"Actualización y búsqueda\",\n      \"upcoming\": \"próxima\",\n      \"bidPricePerCt\": \"Precio de la oferta / Ct\",\n      \"bidDisc\": \"Valor mínimo de disco\",\n      \"bidValue\": \"Valor mínimo de la subasta\",\n      \"bidStone\": \"Valor mínimo de la piedra\",\n      \"myCart\": \"Mi carrito\",\n      \"myComment\": \"Mis notas\",\n      \"compare\": \"Comparar\",\n      \"compareStones\": \"Piedras comparar\",\n      \"statusHold\": \"En espera\",\n      \"statusOnMemo\": \"en Memo\",\n      \"statusAvailable\": \"Disponible\",\n      \"statusNew\": \"Nueva llegada\",\n      \"statusOffer\": \"Piedra Del Día / Promoción\",\n      \"statusMyHold\": \"mi Hold\",\n      \"signup\": \"Regístrate\",\n      \"addToOffice\": \"Añadir Para Oficina\",\n      \"addComment\": \"Agregar comentario\",\n      \"addEnquiry\": \"Añadir mensaje\",\n      \"finalOffer\": \"Oferta final\",\n      \"finalDisc\": \"disco final\",\n      \"finalRate\": \"Tasa final\",\n      \"finalValue\": \"Valor final\",\n      \"orderMsg\": \"1) Los precios mencionados aquí son fijos y por lo tanto no negociable. \\\\\\\\ n2) La clasificación, parámetros mencionados en nuestro sitio web más allá que califican de GIA.\",\n      \"offerMsg\": \"piedra ofrecido directamente se puede confirmar si el precio se apruebe por lo que le rogamos que estar seguro antes de oferta. Cualquier piedra (s) puesto en la lista de oferta no se mantiene en espera por ti, ya que está disponible para otro cliente es así.\",\n      \"note\": \"Nota\",\n      \"hours\": \"horas\",\n      \"offeredDisc\": \"Dis ofrecidos\",\n      \"offeredPriceCt\": \"Presentado Pr / Ct\",\n      \"addOffer\": \"Agregar una Oferta\",\n      \"expDiscPer\": \"Descuento espera\",\n      \"todayDiscPer\": \"Disco de hoy\",\n      \"searchResult\": \"Resultado de búsqueda\",\n      \"searchDiamond\": \"Buscar diamante\",\n      \"basic\": \"Básico\",\n      \"advanced\": \"Avanzado\",\n      \"stoneIdCertNo\": \"StoneID / Cert n\",\n      \"takeSignature\": \"Firma para llevar\",\n      \"optional\": \"Opcional\",\n      \"MyAddress\": \"Mi dirección\",\n      \"expiryDate\": \"Fecha de caducidad\",\n      \"drivingLicenceDesc\": \"Su conducción imagen de licencia\",\n      \"PanDesc\": \"Su tarjeta de foto PAN\",\n      \"selfie\": \"selfie\",\n      \"selfieDesc\": \"Su imagen autofoto\",\n      \"pending\": \"Pendiente\",\n      \"rejected\": \"Rechazado\",\n      \"uploadAgain\": \"Subir\",\n      \"remove\": \"Eliminar\",\n      \"title\": \"Título\",\n      \"description\": \"Descripción\",\n      \"uploadYour\": \"subir su\",\n      \"raiseDispute\": \"contárnoslo\",\n      \"drivingLicense\": \"Licencia de conducir\",\n      \"PANCard\": \"Tarjeta de la cacerola\",\n      \"saveContinue\": \"Guardar y continuar\",\n      \"uploadFrontUmgText\": \"Subir Frente lado de la imagen\",\n      \"uploadPANCardImgText\": \"Tarjeta PAN Subiendo imagen\",\n      \"uploadBackImageText\": \"Subir Volver lado de la imagen\",\n      \"helptopic\": \"Temas de ayuda\",\n      \"newRideSharingRequest\": \"Las solicitudes nueva Agencia de viajes compartidos\",\n      \"newRequest\": \"nuevas solicitudes\",\n      \"welcomeTo\": \"Bienvenido a\",\n      \"welcomeDesc\": \"Ingrese a su cuenta existente de Mani Joya\",\n      \"forgotPassword\": \"Ha olvidado su\",\n      \"forgotPasswordDesc\": \"Introduzca su número de móvil registrado para recuperar su contraseña.\",\n      \"termsAndCondition\": \"Términos y condiciones\",\n      \"privacyPolicy\": \"Política de privacidad\",\n      \"aboutUS\": \"Sobre nosotros\",\n      \"otpVerification\": \"Verificar el código de paseo\",\n      \"otpVerificationDelivery\": \"Verificar el código de recogida\",\n      \"otpVerificationDeliveryDone\": \"Verificar el código de Entrega\",\n      \"enterOtp\": \"Introduzca 4 dígitos\",\n      \"recoveryCode\": \"Código de recuperación\",\n      \"editProfile\": \"Editar perfil\",\n      \"myProfile\": \"Mi perfil\",\n      \"reset\": \"Reiniciar\",\n      \"yourPassword\": \"Tu contraseña\",\n      \"photo\": \"Foto\",\n      \"otpDesc\": \"El código de recuperación fue enviado a su número de móvil. Por favor, introduzca el código.\",\n      \"otpVerifyDesc\": \"El código de verificación se envió a su número de móvil. Por favor, introduzca el código.\",\n      \"diamondDetail\": \"Detalle de diamantes\",\n      \"home\": \"Casa\",\n      \"search\": \"Buscar\",\n      \"quickSearch\": \"Búsqueda rápida\",\n      \"newArrival\": \"Nueva llegada\",\n      \"exclusiveDiamonds\": \"Diamantes exclusivos\",\n      \"diamondOnAuction\": \"Diamante en subasta\",\n      \"stoneOfTheDays\": \"La mejor compra\",\n      \"myWatchlist\": \"lista\",\n      \"myBid\": \"mi subasta\",\n      \"myHold\": \"mi Hold\",\n      \"myOrder\": \"Mi lista ordenada\",\n      \"confirmStone\": \"Piedra Confirmar\",\n      \"myOffice\": \"Mi opinión de la oficina\",\n      \"myOffer\": \"Mi Lista de producto\",\n      \"myPurchased\": \"Mi Historia comprada\",\n      \"mySavedSearch\": \"Mi búsqueda guardada\",\n      \"savedSearch\": \"búsqueda guardada\",\n      \"myDemand\": \"mi demanda\",\n      \"contactUs\": \"Contáctenos\",\n      \"changePassword\": \"Cambia la contraseña\",\n      \"logout\": \"Cerrar sesión\",\n      \"fareDetailsTitle\": \"Entrar en detalles de ventas\",\n      \"fairAmt\": \"Cantidad de ventas\",\n      \"noOfPassengers\": \"No. de Pasajeros\",\n      \"remarks\": \"observaciones\",\n      \"orderNo\": \"N º de pedido.\",\n      \"typeOfService\": \"Tipo de servicio\",\n      \"paymentType\": \"Tipo de pago*\",\n      \"recentlyView\": \"recientemente Vista\",\n      \"uploadImgValidationText\": \"Carga de archivos debe ser .jpg, .jpeg, .png o .pdf tiene un tamaño de 5 MB o menos.\",\n      \"drivingLicenseHintText\": \"Número de licencia de conducir\",\n      \"PANCARDHintText\": \"Número de tarjeta de PAN\",\n      \"viewRide\": \"Ver paseos\",\n      \"myVehicle\": \"mi Vehículo\",\n      \"personalDocument\": \"Documentos personales\",\n      \"help\": \"AYUDA\",\n      \"about\": \"Acerca de\",\n      \"bankDetails\": \"Detalles del banco\",\n      \"accountAndPayment\": \"Cuenta y Pago\",\n      \"enquiry\": \"Investigación\",\n      \"download\": \"Descargar\",\n      \"addToCart\": \"Añadir al carrito\",\n      \"addToWatchList\": \"Añadir a lista de seguimiento\",\n      \"finalCalculation\": \"El cálculo final\",\n      \"bookOffice\": \"Oficina libro\",\n      \"clearSelection\": \"Selección clara\",\n      \"comment\": \"comentarios\",\n      \"hold\": \"Sostener\",\n      \"offer\": \"Oferta\",\n      \"officeView\": \"Vista de Oficina\",\n      \"placeOrder\": \"Realizar pedido\",\n      \"buyNow\": \"Compra ahora\",\n      \"cancelStone\": \"Cancelar Piedra\",\n      \"share\": \"Compartir\",\n      \"watchlist\": \"lista\",\n      \"exclusive\": \"Exclusivo\",\n      \"featuredStones\": \"Piedras destacados\",\n      \"stoneOfDay\": \"Piedras del Día\",\n      \"recentSearch\": \"Búsqueda reciente\",\n      \"viewAll\": \"Ver todo\",\n      \"salesPersonDetail\": \"Detalle persona de ventas\",\n      \"searchTitle\": \"búsqueda de títulos\",\n      \"enterSearchTitle\": \"Introduzca Búsqueda de títulos\",\n      \"timeSlots\": \"Ranuras de tiempo\",\n      \"selectCustomDate\": \"Seleccione la fecha de encargo\",\n      \"availableSlot\": \"Ranuras disponibles\",\n      \"reqOfficeView\": \"Solicitar opinión de la oficina\",\n      \"myComments\": \"Mi comentario\",\n      \"myReminder\": \"mi Recordatorio\",\n      \"reminder\": \"Recordatorio\",\n      \"manageAddress\": \"administrar direcciones\",\n      \"myAccount\": \"Mi cuenta\",\n      \"declaimer\": \"Descargo de responsabilidad\",\n      \"shareStone\": \"Compartir Piedra\",\n      \"addRemider\": \"Agregar recordatorio\",\n      \"offlineSearch\": \"Desconectado Buscar\",\n      \"searchHistory\": \"Buscar Historia\",\n      \"offlineStock\": \"Desconectado de la\",\n      \"searchOffline\": \"Buscar (fuera de línea)\",\n      \"voiceSearch\": \"Búsqueda por voz\",\n      \"tapMictoSpeak\": \"Toca el micrófono a hablar\",\n      \"typeToSearch\": \"Escribe para buscar\",\n      \"typeWordsToSearch\": \"Escriba al menos 3 palabras para buscar piedras\"\n    },\n    \"dynamickeys\": {\n      \"shape\": \"Forma\",\n      \"caratRange\": \"Rango de quilates\",\n      \"basicDetail\": \"Detalles básicos\",\n      \"measurementTitle\": \"Mediciones\",\n      \"inclusionDetail\": \"Detalles de inclusión\",\n      \"other\": \"Otro\",\n      \"stoneID\": \"piedra ID\",\n      \"labTitle\": \"Laboratorio\",\n      \"certNo\": \"Cert. No.\",\n      \"locationTitle\": \"UBICACIÓN\",\n      \"shapeTitle\": \"Forma\",\n      \"caratTitle\": \"Quilate\",\n      \"colorTitle\": \"Color\",\n      \"clarityTitle\": \"CLARIDAD\",\n      \"cutTitle\": \"Cortar\",\n      \"polishTitle\": \"polaco\",\n      \"symmentryTitle\": \"Symmentry\",\n      \"fluorescenceTitle\": \"Fluorescencia\",\n      \"rapTitle\": \"Rap (%)\",\n      \"discountTitle\": \"Descuento (%)\",\n      \"priceAndCt\": \"Precio / Ct\",\n      \"amountTitle\": \"Cantidad\",\n      \"eyeCleanTitle\": \"A simple vista\",\n      \"brownTitle\": \"MARRÓN\",\n      \"milkyTitle\": \"lechoso\",\n      \"mixTingeTitle\": \"MIX tinte\",\n      \"dimensionTitle\": \"Dimensiones (mm)\",\n      \"girdleTitle\": \"Faja (%)\",\n      \"tableTitle\": \"Mesa %\",\n      \"crownAngleTitle\": \"ángulo de la corona\",\n      \"depthTitle\": \"profundidad%\",\n      \"pavAngleTitle\": \"PAV ÁNGULO\",\n      \"crownHeightTitle\": \"Altura de la corona (%)\",\n      \"pavDepthTitle\": \"Profundidad Pabellón (%)\",\n      \"starLengthTitle\": \"Longitud de la estrella\",\n      \"lowerHalfTitle\": \"Mitad inferior\",\n      \"gridleTitle\": \"Faja\",\n      \"gridleFacetedTitle\": \"FAJA FACETADO\",\n      \"culetTitle\": \"culet\",\n      \"rationTitle\": \"Proporción\",\n      \"blackInclusionTitle\": \"INCLUSIÓN NEGRO\",\n      \"otherInclusionTitle\": \"otro Inclusión\",\n      \"openInclusionTitle\": \"INCLUSIÓN ABIERTO\",\n      \"extraFacetTitle\": \"FACET EXTRA\",\n      \"naturalTitle\": \"Natural\",\n      \"hAndATitle\": \"H & A\",\n      \"keyToSymbol\": \"CLAVE PARA EL SÍMBOLO\",\n      \"labComments\": \"COMENTARIOS DE LABORATORIO\",\n      \"laserInsTitle\": \"LASER INS\",\n      \"basicTitle\": \"Básico\",\n      \"advancedTitle\": \"Avanzado\",\n      \"stoneIdTitle\": \"Piedra ID / Cert n\",\n      \"defaultTitle\": \"Defecto\",\n      \"newDiamondsTitle\": \"nuevos Diamantes\",\n      \"priceLowToHigh\": \"Precios de barato a caro\",\n      \"priceHighToLow\": \"Precio de mayor a menor\",\n      \"disLowToHigh\": \"Descuento de menor a mayor\",\n      \"disHighToLow\": \"Descuento de mayor a menor\",\n      \"colorLowToHigh\": \"El color de menor a mayor\",\n      \"colorHighToLow\": \"El color de mayor a menor\",\n      \"caratLowToHigh\": \"Quilates de menor a mayor\",\n      \"caratHighToLow\": \"Quilates de mayor a menor\",\n      \"clarityLowToHigh\": \"La claridad de menor a mayor\",\n      \"clarityHighToLow\": \"La claridad de mayor a menor\",\n      \"colorShadeTitle\": \"Color sombra\",\n      \"certiTitle\": \"Número certificado\",\n      \"arrivalsTitle\": \"Llegadas\",\n      \"lengthTitle\": \"Longitud\",\n      \"widthTitle\": \"Anchura\",\n      \"pavilionAngleTitle\": \"pabellón ángulo\",\n      \"girdleConditionTitle\": \"faja Condición\",\n      \"cluetConditionTitle\": \"Condición culata\",\n      \"disTitle\": \"Dis%\",\n      \"depthTitleWithoutPerc\": \"Profundidad\",\n      \"otherInformationTitle\": \"Otra información\"\n    }\n  },\n  \"Germany\": {\n    \"language_code\": \"Germany\",\n    \"auth_strings\": {\n      \"editCompanyInformation\": \"Firmeninformationen bearbeiten\",\n      \"selectNatureOfOrganization\": \"Wählen Natur Organisations\",\n      \"setNewPassword\": \"Legen Sie Ihr neues Passwort ein und Zeichen wieder in.\",\n      \"enterCompanyName\": \"Bitte geben Sie Name des Unternehmens.\",\n      \"pleaseEnterCustomerOTP\": \"Bitte geben Sie Kunden ride-Code.\",\n      \"pleaseEnterPickupOTP\": \"Bitte geben Sie PickupByCustomer Code.\",\n      \"pleaseEnterDeliveryOTP\": \"Bitte geben Sie Lieferung an den Kunden-Code.\",\n      \"verified\": \"Verifiziert\",\n      \"verify\": \"Überprüfen\",\n      \"addressLineOne\": \"Adresse 1\",\n      \"addressLineTwo\": \"Adresse 2\",\n      \"addressLineThree\": \"Adresse 3\",\n      \"oldPassword\": \"Altes Passwort\",\n      \"skype\": \"Skype\",\n      \"whatsApp\": \"WhatsApp\",\n      \"pinCode\": \"Geheimzahl*\",\n      \"verifyMobileDesc\": \"Bitte überprüfen Handynummer, um das Profil zu aktualisieren.\",\n      \"verifyNow\": \"Jetzt überprüfen\",\n      \"password\": \"Passwort\",\n      \"backToHome\": \"Zur Startseite\",\n      \"forgotPassword\": \"Passwort vergessen?\",\n      \"signInCap\": \"Anmelden\",\n      \"moveToLogIn\": \"Gehen Sie zu Login\",\n      \"dontHaveAnAccount\": \"#ERROR!\",\n      \"clickHere\": \"Klicke hier\",\n      \"signUpHere\": \"Hier anmelden\",\n      \"reset\": \"Reset\",\n      \"haveRegisterCode\": \"Haben Sie einen Registrierungscode?\",\n      \"welcome\": \"Willkommen zurück!\",\n      \"signInAsGuest\": \"Einloggen als Gast\",\n      \"editProfileTitle\": \"Profil bearbeiten\",\n      \"emaillbl\": \"Email\",\n      \"searchInventory\": \"Produkt suchen\",\n      \"emailAddress\": \"E-Mail-Addresse*\",\n      \"offlineFilter\": \"Kann nicht die gewünschte Solitär finden? Wir bieten Ihnen das beste Angebot aus unserem Offline Inventar helfen zu bekommen.\",\n      \"loginDesc\": \"Haben Sie Touch-Id / MPIN aktivieren möchten My Diamanten zu entsperren? Bitte wählen Sie eine Option zum Entsperren App\",\n      \"searchDiamonds\": \"Suche nach Diamanten\",\n      \"continueWithSearch\": \"Möchten Sie Ihre Suche fortsetzen?\",\n      \"mobileNumber\": \"Handy, Mobiltelefon\",\n      \"searchHint\": \"Suche...\",\n      \"selectYourCountry\": \"Land auswählen\",\n      \"resendCodeIn\": \"Erneut senden Code in\",\n      \"resendCode\": \"Erneut senden\",\n      \"haveAnAccount\": \"Sie haben bereits ein Konto?\",\n      \"dontReceiveCode\": \"Wenn Sie keinen Code erhalten!\",\n      \"inLogin\": \"Einloggen.\",\n      \"resetPwdDesc\": \"In Passwort und Passwort bestätigen Sie Ihr Passwort zurücksetzen.\",\n      \"backToLogin\": \"Zurück zur Anmeldung\",\n      \"firstName\": \"Vorname*\",\n      \"name\": \"Nutzername*\",\n      \"lastName\": \"Familienname, Nachname*\",\n      \"middleName\": \"Zweiter Vorname*\",\n      \"confirmPassword\": \"Kennwort bestätigen\",\n      \"currentPasswordErr\": \"Aktuelles Passwort-Fehler\",\n      \"passwordChanged\": \"Passwort geändert\",\n      \"lblLogInErr\": \"Login Fehler\",\n      \"enterYour\": \"Geben Sie Ihr\",\n      \"details\": \"Einzelheiten\",\n      \"registerCode\": \"Registrierungscode\",\n      \"registerCodeDesc\": \"Fügen Sie einen Registrierungscode Ihre Anmeldung mit 3eco zu starten.\",\n      \"uploadPhotoDesc\": \"Nehmen Sie einen selfie Ihrer Selbst\",\n      \"updateProfile\": \"Profil aktualisieren\",\n      \"postalCode\": \"Postleitzahl*\",\n      \"removeButton\": \"Entfernen\",\n      \"gender\": \"Geschlecht\",\n      \"male\": \"Männlich\",\n      \"female\": \"Weiblich\",\n      \"changePassword\": \"Passwort ändern\",\n      \"currentPassword\": \"Jetziges Passwort*\",\n      \"newPassword\": \"Neues Passwort*\",\n      \"confirmNewPassword\": \"Kennwort bestätigen*\",\n      \"personalDocuments\": \"persönliche Dokumente\",\n      \"assignedAuto\": \"Assigned Auto\",\n      \"logout\": \"Ausloggen\",\n      \"logoutConfirmationMsg\": \"Sind Sie sicher, dass Sie sich abmelden wollen?\",\n      \"address\": \"Adresse*\",\n      \"accountNumber\": \"Kontonummer\",\n      \"bankerName\": \"Bankers Namens\",\n      \"nameLable\": \"Name\",\n      \"ifscCode\": \"IFSC Code\",\n      \"businessRegistrationNumbr\": \"Firmenregistrierungsnummer:\",\n      \"businessRelationshipPeriod\": \"Geschäftsbeziehung Zeitraum (in Jahren)\",\n      \"designation\": \"Bezeichnung\",\n      \"nameofDesignation\": \"Name von\",\n      \"natureofOrganization\": \"Art der Organisation\",\n      \"uploadFile\": \"No File Choosen\",\n      \"update\": \"AKTUALISIEREN\",\n      \"resetPwd\": \"Passwort zurücksetzen\",\n      \"pwdReset\": \"Passwort zurücksetzen\",\n      \"signInWithMPIN\": \"Anmeldung mit MPIN\",\n      \"pwdChanged\": \"Passwort geändert\",\n      \"successfullyPwdDesc\": \"Sie haben Ihr Passwort zurücksetzen erfolgreich. Bitte benutzen Sie Ihr neues Passwort bei der Anmeldung.\",\n      \"lblProfileSetup\": \"Ihr Profil eingerichtet ist,\",\n      \"lblProfileSetupDesc\": \"Wir haben Ihre Profildetails erhalten\",\n      \"hoursAvailable\": \"insgesamt Shifttime\",\n      \"confirmStoneDetail\": \"Bestätigen Stein-Detail\",\n      \"companyName\": \"Name der Firma\",\n      \"invoiceDate\": \"Rechnungsdatum\",\n      \"companyCode\": \"Buchungskreis\",\n      \"saveCompanyDetails\": \"Speichern Firmendetails\",\n      \"passwordNotChange\": \"Passwort stimmt nicht überein\",\n      \"rememberPassword\": \"Passwort merken?\",\n      \"sendOTP\": \"senden OTP\",\n      \"resendNow\": \"Erneut senden Jetzt\",\n      \"didNotReceiveOTP\": \"Wenn Sie nicht erhalten eine OTP!\",\n      \"sendOTPToEmail\": \"Wir werden ein OTP an Ihre angegebene E-Mail-Adresse oder Benutzernamen senden. Bitte geben Sie die E-Mail-Adresse oder Benutzernamen.\",\n      \"enterOTP\": \"Die OTP wurde an Ihre registrierte E-Mail-Adresse gesendet. Bitte geben Sie die OTP.\",\n      \"backToSignIn\": \"Zurück sich anmelden\",\n      \"passwordResetSuccessfully\": \"Kennworts erfolgreich.\",\n      \"emailAndUname\": \"E-Mail / Benutzername\",\n      \"signUp\": \"Anmelden\",\n      \"promotionText\": \"Werbeangebote\",\n      \"termsAndCondition\": \"Geschäftsbedingung\",\n      \"mustAgreeTermsAndCondition\": \"Sie müssen zu Bedingungen und den Zustand zustimmen als Gast Benutzer anmelden\",\n      \"forgotPasswordTitle\": \"Passwort vergessen\",\n      \"uploadKYC\": \"hochladen KYC\",\n      \"uploadKycDesc\": \"Bitte laden Sie Ihre KYC-Dokumente voll Funktionen zuzugreifen.\",\n      \"hintPhotoIdentityProof\": \"Foto Identitätsnachweis *\",\n      \"hintBussinerssProof\": \"Geschäfts-Identität Proof *\",\n      \"btnFileUpload\": \"Datei-Upload\",\n      \"pleaseUploadPhotoProof\": \"Bitte laden Foto Identitätsnachweis.\",\n      \"pleaseUploadBussinessProof\": \"Bitte laden Geschäfts-Identität Beweis.\",\n      \"pleaseSelectFileFormat\": \"Bitte laden Sie Datei in einem der folgenden Formate: .jpg\",\n      \"kycSubmitted\": \"KYC eingereicht\",\n      \"kycSubmmittedDesc\": \"Ihre KYC wurde erfolgreich abgegeben.\",\n      \"btnMoveToHome\": \"Gehen Sie zu Start\",\n      \"kYCRejected\": \"KYC Zurückgewiesen\",\n      \"kycRejectedDesc\": \"Ihre KYC wurde abgelehnt. Bitte laden Sie Ihre KYC-Dokumente wieder alle Funktionen zugreifen zu können.\"\n    },\n    \"common_string\": {\n      \"seeMore\": \"Mehr sehen\",\n      \"seeLess\": \"Weniger anzeigen\",\n      \"modify\": \"Ändern\",\n      \"delete\": \"Löschen\",\n      \"details\": \"Einzelheiten\",\n      \"edit\": \"Bearbeiten\",\n      \"addDemand\": \"Add Nachfrage\",\n      \"demandTitle\": \"Die Nachfrage Titel\",\n      \"pleaseEnterDemandTitle\": \"Bitte geben Sie die Nachfrage Titel\",\n      \"demandAddedSuccessfully\": \"Die Nachfrage Erfolgreich\",\n      \"selectAtleastOneFilter\": \"Bitte\",\n      \"savedSearch\": \"Gespeicherte Suche\",\n      \"searchSavedSearch\": \"Suche Gespeicherte Suche\",\n      \"viewDetails\": \"Details anzeigen\",\n      \"viewLessDetails\": \"Anzeigen Weniger Details\",\n      \"myDemand\": \"Meine Nachfrage\",\n      \"date\": \"Datum\",\n      \"selectTime\": \"Wählen Sie Zeit\",\n      \"selectDate\": \"Datum auswählen\",\n      \"offerVelidTill\": \"Angebot gültig bis\",\n      \"officeVisitDate\": \"Büro Besuchsdatum\",\n      \"all\": \"Alle\",\n      \"status\": \"Status\",\n      \"save\": \"sparen\",\n      \"verify\": \"Überprüfen\",\n      \"readMore\": \"Weiterlesen\",\n      \"goodMorning\": \"Guten Morgen\",\n      \"goodAfternoon\": \"Guten Nachmittag\",\n      \"goodEvening\": \"Guten Abend\",\n      \"btnSkip\": \"Überspringen\",\n      \"btnUpdate\": \"Aktualisieren\",\n      \"btnContinue\": \"Fortsetzen\",\n      \"btnContinueCap\": \"FORTSETZEN\",\n      \"btnEdit\": \"Bearbeiten\",\n      \"btnSubmit\": \"einreichen\",\n      \"btnNextCap\": \"Nächster\",\n      \"btnSaveCap\": \"Passwort erneuern\",\n      \"btnWithdrawCap\": \"ABHEBEN\",\n      \"btnSaveAndContinueCap\": \"SPEICHERN FORTSETZEN\",\n      \"btnUnregister\": \"Nicht registrierte Mobil\",\n      \"btnClose\": \"Schließen\",\n      \"remove\": \"Entfernen\",\n      \"refresh\": \"Aktualisierung\",\n      \"fetchLocationMessage\": \"Bitte warten wir holen Sie Ihren Standort\",\n      \"done\": \"Getan\",\n      \"doneCap\": \"GETAN\",\n      \"cancel\": \"Stornieren\",\n      \"allow\": \"ermöglichen\",\n      \"countryFirst\": \"Bitte wähle ein Land aus\",\n      \"apply\": \"Anwenden\",\n      \"cancelCap\": \"STORNIEREN\",\n      \"uploadCap\": \"HOCHLADEN\",\n      \"yesCancelCap\": \"JA\",\n      \"upload\": \"Hochladen\",\n      \"ok\": \"In Ordnung\",\n      \"home\": \"Zuhause\",\n      \"goToMyWatchList\": \"Zum Meine Beobachtungsliste\",\n      \"goToMyOrder\": \"Zum Einloggen Bestellung\",\n      \"gotToMyOffer\": \"Zum Mein Angebot\",\n      \"gotToMyHold\": \"Gehen Sie zu Mein Halten\",\n      \"gotToMyEnquiry\": \"Zum Meine Anfrage\",\n      \"gotToMyBid\": \"Zum Mein Gebot\",\n      \"gotToMyReminder\": \"Zur Meiner Erinnerung\",\n      \"gotToMyComments\": \"Zum Meine Notizen\",\n      \"yes\": \"Ja\",\n      \"no\": \"Nein\",\n      \"selectCountry\": \"Land auswählen\",\n      \"clickHere\": \"Klicke hier\",\n      \"btnAddNewAddress\": \"NEUE ADRESSE HINZUFÜGEN\",\n      \"btnCancel\": \"STORNIEREN\",\n      \"btnTakeSelfie\": \"nehmen Sie Selfie\",\n      \"successfully\": \"Erfolgreich\",\n      \"lblAppExit\": \"Sie sind sicher, dass Sie beenden wollen?\",\n      \"lblExit\": \"Ausgang\",\n      \"openAppSetting\": \"Einstellungen öffnen\",\n      \"lblOr\": \"Oder\",\n      \"fromLbl\": \"Von\",\n      \"toLbl\": \"Zu\",\n      \"showMore\": \"Zeig mehr\",\n      \"showLess\": \"Zeige weniger\",\n      \"selectCity\": \"Stadt wählen\",\n      \"notYetAvailable\": \"Noch nicht verfügbar\",\n      \"updateAvailable\": \"Update verfügbar!\",\n      \"downloadAppFrom\": \"Download-Anwendung Update\",\n      \"playStore\": \"Spielladen\",\n      \"skipUpdate\": \"Update überspringen\",\n      \"stateFirst\": \"Bitte wählen Staat Erste\",\n      \"reallyExit\": \"Wirklich beenden?\",\n      \"alert\": \"Aufmerksam!\",\n      \"loading\": \"Wird geladen\",\n      \"error\": \"Error\",\n      \"jumpToTop\": \"Sprung nach oben\",\n      \"ihaveread\": \"Ich habe gelesen und akzeptiere\",\n      \"selected\": \"Wählen\",\n      \"lbllogout\": \"Ausloggen\",\n      \"lblThanx\": \"Vielen Dank\",\n      \"lblSelectCity\": \"Stadt wählen\",\n      \"lblSelectState\": \"Staat wählen\",\n      \"lblSelectCountry\": \"Land auswählen\",\n      \"lblCity\": \"Stadt\",\n      \"lblCountry\": \"Land\",\n      \"lblName\": \"Name\",\n      \"lblPinCode\": \"Geheimzahl\",\n      \"lblMobileNumber\": \"Handynummer\",\n      \"lblState\": \"Zustand\",\n      \"lblCode\": \"Code:\",\n      \"lblOrderNo\": \"Best.-Nr:\",\n      \"lblOrderItem\": \"Bestellungsartikel:\",\n      \"lblDelivered\": \"geliefert\",\n      \"lblTicketReady\": \"Ihr Ticket ist bereit\",\n      \"lblPersonTicket\": \"Ticket von 2 Personen\",\n      \"lblShuttleBus\": \"Shuttlebus\",\n      \"lblPickup\": \"Abholen\",\n      \"lblDropoff\": \"Dropoff\",\n      \"lblPassenger\": \"Passagier\",\n      \"lblDeliveryNo\": \"Liefer-Nr.\",\n      \"lblPrice\": \"Preis\",\n      \"lblValid\": \"Gültig für\",\n      \"lblRenew\": \"Erneuern\",\n      \"lblDeparture\": \"Abfahrt\",\n      \"lblArrived\": \"Ist eingetroffen\",\n      \"lblSendtoFriend\": \"An Freund senden\",\n      \"popupRenewTitle\": \"erneuern Ticket\",\n      \"popupRenewDesc\": \"Lorem ipsum dolor sit amet\",\n      \"popuplblPassenger\": \"Passagier\",\n      \"popuplblCancel\": \"Stornieren\",\n      \"popupbtnRenew\": \"Erneuern\",\n      \"ridelblAwesome\": \"Genial\",\n      \"ridebtnDone\": \"Getan\",\n      \"offerPricePerCarat\": \"Angeboten Preis (cts)\",\n      \"dropOffText\": \"Dropoff\",\n      \"pickUpText\": \"Abholen\",\n      \"startAtText\": \"Anfangen bei\",\n      \"endAtText\": \"beenden Sie bei\",\n      \"personText\": \"Person\",\n      \"paymentScreenTitle\": \"Zahlung\",\n      \"pickuplbl\": \"Abholen\",\n      \"droplbl\": \"Dropoff\",\n      \"makePaymentButtonlbl\": \"Jetzt Zahlung\",\n      \"pessangerslbl\": \"Passagiere\",\n      \"priceBreakuplbl\": \"Preis Breakup\",\n      \"tripPricelbl\": \"Reisepreis\",\n      \"taxeslbl\": \"Steuern\",\n      \"totallbl\": \"Gesamt\",\n      \"cardNumberhint\": \"Kartennummer\",\n      \"cvvhint\": \"CVV\",\n      \"datehint\": \"MM / JJ\",\n      \"btnTryAgain\": \"Versuchen Sie es nochmal\",\n      \"cityFirst\": \"Bitte wählen Sie eine Stadt zuerst\",\n      \"enterFareDetails\": \"Geben Sie Verkaufsdetails\",\n      \"fromDate\": \"Ab Datum\",\n      \"toDate\": \"ausgewählte Datum\",\n      \"btnUnderstand\": \"Ich verstehe\",\n      \"applicationUpdate\": \"Software-Update\",\n      \"newVersionMessage\": \"Eine neue Version von Anwendung ist\",\n      \"paymentCollected\": \"Zahlung Gesammelte\",\n      \"addComment\": \"Einen Kommentar hinzufügen\",\n      \"more\": \"Mehr\",\n      \"carat\": \"Karat\",\n      \"pcs\": \"Stck\",\n      \"cts\": \"cts\",\n      \"disc\": \"Rabatt %\",\n      \"avgPriceCrt\": \"Durchschn. Preis / Ct\",\n      \"amount\": \"Menge\",\n      \"confirmStone\": \"Bestätigen Stein\",\n      \"confirm\": \"Bestätigen\",\n      \"offered\": \"Angeboten\",\n      \"validTill\": \"Gültig bis\",\n      \"remark\": \"Anmerkung\",\n      \"color\": \"Farbe\",\n      \"colorGroup\": \"Color Group\",\n      \"colorFancy\": \"Schick\",\n      \"colorWhite\": \"Weiß\",\n      \"clarity\": \"Klarheit\",\n      \"clarityGroup\": \"Clarity-Gruppe\",\n      \"intensity\": \"Intensität\",\n      \"overtone\": \"Oberton\",\n      \"selectBusinessType\": \"Wählen Sie Unternehmensart\",\n      \"selectState\": \"Staat wählen\",\n      \"search\": \"Suche\",\n      \"profile\": \"Mein Profil\",\n      \"personal\": \"persönlich\",\n      \"business\": \"Geschäft\",\n      \"documents\": \"Unterlagen\",\n      \"noSlotFound\": \"Keine Slots\",\n      \"noDiamondFound\": \"Keine Diamanten für Ihre Suche. Bitte fügen Sie verlangen.\",\n      \"selectType\": \"Wählen Sie Virtuelle Typ\",\n      \"noSavedSearch\": \"Keine Gespeicherte Suche Exists\",\n      \"searchCity\": \"Suche nach Stadt\",\n      \"searchCountry\": \"Suchen Land\",\n      \"searchState\": \"Suchzustand\",\n      \"notifications\": \"Benachrichtigung\",\n      \"enter2Stone\": \"Bitte wählen Sie mindestens 2 Stein zu vergleichen.\",\n      \"bidDesc\": \"wird derzeit in Indien und für die Lieferung in jedem anderen Land außer Indien nehmen mindestens 7-10 Arbeitstag entfernt.\",\n      \"packetNo\": \"Packet No:\",\n      \"quit\": \"Verlassen\",\n      \"agree\": \"Genau\",\n      \"laterToday\": \"Später am heutigen Tag\",\n      \"toMorrow\": \"Morgen\",\n      \"nextWeek\": \"Nächste Woche\",\n      \"chooseAnother\": \"Wähle ein anderes\",\n      \"dateTime\": \"Terminzeit\",\n      \"language\": \"Sprache\",\n      \"diamNow\": \"DiamNow\",\n      \"noDocument\": \"Keine Dokumente gefunden\",\n      \"searchBusinessType\": \"Suche Unternehmensart\",\n      \"hours\": \"Std\",\n      \"minutes\": \"Protokoll\",\n      \"seconds\": \"Sekunden\",\n      \"bidEndsIn\": \"Bid endet in:\",\n      \"shape\": \"Gestalten\",\n      \"download\": \"Herunterladen\",\n      \"share\": \"Aktie\",\n      \"placeOrder\": \"Bestellung aufgeben\",\n      \"enterComment\": \"Bitte Kommentar eingeben\",\n      \"deleteItem\": \"Sind Sie sicher, dass Sie löschen möchten?\",\n      \"shippingPolicy\": \"Versandbedingungen\",\n      \"offerSundayRestriction\": \"Sonntag ist nicht erlaubt. Büroarbeitstage sind Montag bis Samstag\",\n      \"weekAgo\": \"Vor 1 Woche\",\n      \"lastWeek\": \"Letzte Woche\",\n      \"dayAgo\": \"Vor Tagen\",\n      \"onedayAgo\": \"Vor 1 Tag\",\n      \"yesterday\": \"Gestern\",\n      \"hourAgo\": \"Vor Stunden\",\n      \"onehourAgo\": \"vor 1 Stunde\",\n      \"anhourAgo\": \"Vor einer Stunde\",\n      \"mintuesAgo\": \"Vor ein paar Minuten\",\n      \"onemintuesAgo\": \"Vor 1 Minute\",\n      \"amintueAgo\": \"Vor einer Minute\",\n      \"secondsAgo\": \"Sekunden zuvor\",\n      \"justNow\": \"Grade eben\",\n      \"today\": \"Heute\",\n      \"past\": \"Vergangenheit\",\n      \"selectPhotoProof\": \"Wählen Sie Dokument\",\n      \"pleaseSelectPhotoProof\": \"Bitte wählen Sie Dokument\",\n      \"selectBusinessProof\": \"Wählen Sie Dokument\",\n      \"pleaseSelectBusinessProof\": \"Bitte wählen Sie Dokument\",\n      \"touchId\": \"Berührungsidentifikation\",\n      \"faceId\": \"Gesicht Id\",\n      \"enableTouchId\": \"Aktivieren Touch-Id My Diamanten zu entsperren?\",\n      \"enableFaceId\": \"Aktivieren Gesicht Id My Diamanten zu entsperren?\",\n      \"unlockWithTouchId\": \"Diamanten Unlock My mit Touch-Id\",\n      \"unlockWithFaceId\": \"Schalt Meine Diamanten mit dem Gesicht Id.\",\n      \"mPin\": \"MPIN\",\n      \"holdMemoStatusDiamondorder\": \"Sie können nicht mit Steinen bestätigt, die bereits im Halte- oder Memo-Status sind\",\n      \"searchStoneIdCertificateNo\": \"Suchen Stein Id / Zertifikat Nr\",\n      \"createMPin\": \"Create New MPIN\",\n      \"reentermpin\": \"reenter MPIN\",\n      \"forgotmpin\": \"Vergessen MPIN?\",\n      \"verifympin\": \"Stellen Sie sicher, MPIN\",\n      \"enteryoursixdigitcode\": \"Geben Sie Ihre 6-stellige MPIN\",\n      \"changempin\": \"ändern MPIN\",\n      \"faceidandtouchnotenable\": \"FaceID / TouchId ist in Ihrem Telefon nicht aktiviert, aktivieren Sie bitte diese Funktion zu nutzen\",\n      \"enablempintounlockmydiamonds\": \"Aktivieren MPIN zu entsperren app? Es wird Touch-Id deaktivieren. Bist du dir sicher, dass du weitermachen willst?\",\n      \"enabletouchidtounlockmydiamonds\": \"Aktivieren Touch-Id zu entsperren app? Es wird MPIN deaktivieren. Bist du dir sicher, dass du weitermachen willst?\",\n      \"rememberme\": \"Behalte mich in Erinnerung\",\n      \"usertouchid\": \"Verwenden Sie Touch-Id\",\n      \"usempin\": \"Verwenden MPIN\",\n      \"filesarenotavailableonserver\": \"Die Dateien sind nicht verfügbar auf dem Server, Bitte versuchen Sie es später noch einmal\",\n      \"allfileshavebeendownloaded\": \"Alle Dateien heruntergeladen wurden.\",\n      \"filesisdownloaded\": \"Dateien heruntergeladen\",\n      \"filesisnotdownloadedbcz\": \"Dateien nicht heruntergeladen, weil es nicht auf dem Server vorhanden ist.\",\n      \"downloading canceled\": \"Vorgang abgebrochen\",\n      \"downloading\": \"Wird heruntergeladen...\",\n      \"expirydate\": \"Verfallsdatum :\",\n      \"youreallywanttodelete\": \"Sie wollen wirklich löschen\"\n    },\n    \"error_string\": {\n      \"accessDenide\": \"Zugriff verweigert\",\n      \"pleaseSelectOfferTillDate\": \"Bitte wählen Angebot bis heute.\",\n      \"pleaseSelectOfficeVisitDate\": \"Bitte wählen Sie Büro Besuchstermin\",\n      \"deleteStoneMsg\": \"Sind Sie sicher, dass Sie löschen möchten Stein (e)?\",\n      \"acceptTermsAndCondition\": \"Bitte akzeptieren Bedingungen und den Zustand\",\n      \"diamondCompareRemove\": \"Mindestens 2 Steine \u200B\u200Bsind erforderlich, um zu vergleichen.\",\n      \"diamondSelectionError\": \"Bitte wählen Sie mindestens einen Stein.\",\n      \"pleaseEnterCompanyName\": \"Bitte geben Sie Firmennamen.\",\n      \"selectInvoiceDate\": \"Wählen Sie Rechnungsdatum\",\n      \"pleaseEnterComment\": \"Bitte Kommentar eingeben.\",\n      \"pleaseEnterRemarks\": \"Bitte geben Sie Bemerkungen.\",\n      \"selectExpiryDate\": \"Bitte wählen Sie Ablaufdatum.\",\n      \"enterOTP\": \"Bitte Code eingeben\",\n      \"pleaseEnterOTP\": \"Bitte Sicherheitscode eingeben.\",\n      \"enteredCodeNotMatching\": \"Eingegebene Code ist passend nicht. Versuchen Sie es nochmal\",\n      \"selectCancellationReason\": \"Bitte wählen Sie Grund für die Stornierung\",\n      \"enterDesc\": \"Bitte geben Sie Beschreibung.\",\n      \"enterTitle\": \"Bitte Titel eingeben.\",\n      \"enterEmailOrPhone\": \"Bitte geben Sie E-Mail / mobile.\",\n      \"enterPassword\": \"Das Passwort darf nicht leer sein. Bitte Passwort eingeben.\",\n      \"enterConfirmPassword\": \"Bitte geben Sie bestätigen Passwort.\",\n      \"enterSkype\": \"Bitte geben Sie Skype.\",\n      \"enterRegisterCode\": \"Bitte geben Sie den Registrierungscode\",\n      \"enterEmail\": \"Bitte geben Sie die E-Mail-Adresse ein.\",\n      \"enterPhone\": \"Bitte geben Sie Mobile Number.\",\n      \"enterUsername\": \"Benutzername darf nicht leer sein. Bitte geben sie einen Benutzernamen ein.\",\n      \"enterValidEmail\": \"Bitte geben Sie die gültige E-Mail-Adresse ein.\",\n      \"enterValidPhone\": \"Bitte geben Sie die Handynummer ein.\",\n      \"enterValidWhatsappPhone\": \"Bitte geben Sie das gültige WhatsApp Mobile Number.\",\n      \"enterValidPassword\": \"Bitte geben Sie 6 Zeichen oder langes Passwort.\",\n      \"mismatchPassword\": \"Passwort und Passwort bestätigen wird passend nicht.\",\n      \"enterFirstName\": \"Bitte geben Sie den Vornamen.\",\n      \"enterMiddleName\": \"Bitte geben Sie den Mittelnamen.\",\n      \"enterPinCode\": \"Bitte geben Sie den PIN-Code.\",\n      \"enterName\": \"Bitte geben Sie den Namen.\",\n      \"enterLastName\": \"Bitte geben Sie Nachname.\",\n      \"enterAddress\": \"Bitte geben Sie Adresse.\",\n      \"enterValidPinCode\": \"Geben Sie eine gültige PinCode.\",\n      \"enterValidAddress\": \"Bitte geben Sie 10 Zeichen oder lange Adresse.\",\n      \"enterPostalCode\": \"Bitte geben Sie Postleitzahl.\",\n      \"enterValidPostalCode\": \"Bitte geben Sie 6-stellige Zahlen Postleitzahl.\",\n      \"enterCurrentPassword\": \"Bitte geben Sie das aktuelle Kennwort.\",\n      \"enterNewPassword\": \"Bitte neues Passwort eingeben.\",\n      \"enterFareAmount\": \"Bitte geben Sie Verkaufsbetrag.\",\n      \"enterOrderNO\": \"Bitte geben Sie Bestell-Nr.\",\n      \"enterServiceType\": \"Bitte wählen Sie Art von Service.\",\n      \"enterPaymentType\": \"Bitte wählen Sie die Zahlungsart.\",\n      \"enterValidFareAmount\": \"Verkaufsbetrag kann nicht Null sein.\",\n      \"enterPassangerNo\": \"Bitte geben Sie nicht. der Passagiere.\",\n      \"enterValidPassangerNo\": \"Anzahl der Passagiere darf nicht Null sein.\",\n      \"notEnterMorePassangerNo\": \"Anzahl der Passagiere darf nicht mehr als sieben sein.\",\n      \"drivingLicenseValidationText\": \"Bitte geben Sie 15-stellige alphanumerische Führerscheinnummer.\",\n      \"PANCardValidationText\": \"Bitte geben Sie 10-stellige alphanumerische PAN Kartennummer.\",\n      \"selectFromDate\": \"Bitte wählen Sie aus Datum\",\n      \"selectToDate\": \"Bitte wählen Sie auf dem Laufenden\",\n      \"fromGreaterTo\": \"Das gewählte Datum muss größer sein als das aktuelle Datum\",\n      \"wrongPassword\": \"Das Passwort muss enthält, Minimum 8 Zeichen, 1 Groß Alphabet, 1 Kleinbuchstaben, 1-stellig, 1 Spezial charater\",\n      \"fromValueGreateThanTo\": \"Von Wert sollte um Wert kleiner oder gleich sein\",\n      \"toValueGreaterThanFrom\": \"Um Wert sollte größer oder gleich sein, von Wert\",\n      \"pleaseEnterCompanyCode\": \"Bitte geben Sie den Buchungskreis\",\n      \"enterSamePassword\": \"Kennwort bestätigt nicht mit neuem Kennwort überein. Bitte geben Sie bestätigen Passwort gleiche wie Neues Passwort.\",\n      \"selectAppointmentDate\": \"Bitte wählen Sie Termin Datum\",\n      \"selectTimeSlot\": \"Bitte wählen Sie Zeitschlitz\",\n      \"enterComments\": \"Bitte geben Sie Kommentar\",\n      \"selectVirtualType\": \"Bitte wählen Sie virtuellen Typ\",\n      \"versionError\": \"Version Fehler\"\n    },\n    \"no_data strings\": {\n      \"noDataFound\": \"Kein Eintrag gefunden\"\n    },\n    \"screen_title\": {\n      \"placeAnOffer\": \"Legen Sie ein Angebot\",\n      \"addedInWatchList\": \"Hinzugefügt in Merkliste\",\n      \"addedInOffer\": \"Angebot eingereicht\",\n      \"addedInCart\": \"in Einkaufswagen gelegt\",\n      \"addedInBid\": \"Hinzugefügt in Bid\",\n      \"myEnquiry\": \"Meine Anfrage\",\n      \"delete\": \"Löschen\",\n      \"addDemand\": \"Add-Demand\",\n      \"matchPair\": \"Spiel Pair\",\n      \"savedAndSearch\": \"Sichere Suche\",\n      \"updateAndSearch\": \"Update & Suche\",\n      \"upcoming\": \"Bevorstehende\",\n      \"bidPricePerCt\": \"Geldkurs / Ct\",\n      \"bidDisc\": \"Bid Disc\",\n      \"bidValue\": \"Gebot\",\n      \"bidStone\": \"Bid Stein\",\n      \"myCart\": \"Mein Warenkorb\",\n      \"myComment\": \"Meine Notizen\",\n      \"compare\": \"Vergleichen Sie\",\n      \"compareStones\": \"Vergleichen Sie Steine\",\n      \"statusHold\": \"In Wartestellung\",\n      \"statusOnMemo\": \"auf Memo\",\n      \"statusAvailable\": \"Verfügbar\",\n      \"statusNew\": \"Neuankömmling\",\n      \"statusOffer\": \"Stein des Tages / Promotion\",\n      \"statusMyHold\": \"Mein Halten\",\n      \"signup\": \"Anmelden\",\n      \"addToOffice\": \"In Büro\",\n      \"addComment\": \"Einen Kommentar hinzufügen\",\n      \"addEnquiry\": \"In Anfrage\",\n      \"finalOffer\": \"Finales Angebot\",\n      \"finalDisc\": \"Schluss Disc\",\n      \"finalRate\": \"Endrate\",\n      \"finalValue\": \"Endwert\",\n      \"orderMsg\": \"1) Die angegebenen Preise hier über fixiert sind und daher nicht verhandelbar. \\\\\\\\ n2) Die Einstufung, genannten Parameter auf unserer Website über GIA Grading.\",\n      \"offerMsg\": \"Angeboten Stein wird direkt bestätigt werden, wenn der Preis genehmigt bekommt, damit wir Sie bitten, bevor Angebot sicher zu sein. Jeder Stein (e) in Angebotsliste setzen ist nicht für Sie in der Warteschleife gehalten, wie es auch für andere Kunden auch zur Verfügung steht.\",\n      \"note\": \"Hinweis\",\n      \"hours\": \"Std\",\n      \"offeredDisc\": \"angeboten Dis\",\n      \"offeredPriceCt\": \"Angeboten Pr / Ct\",\n      \"addOffer\": \"Angebot melden\",\n      \"expDiscPer\": \"Erwartete Discount\",\n      \"todayDiscPer\": \"Die heutige Disc\",\n      \"searchResult\": \"Suchergebnis\",\n      \"searchDiamond\": \"Suchen Diamant\",\n      \"basic\": \"Basic\",\n      \"advanced\": \"fortgeschritten\",\n      \"stoneIdCertNo\": \"StoneID / Cert No\",\n      \"takeSignature\": \"nehmen Signature\",\n      \"optional\": \"Optional\",\n      \"MyAddress\": \"Meine Adresse\",\n      \"expiryDate\": \"Verfallsdatum\",\n      \"drivingLicenceDesc\": \"Ihr Führerschein Bild\",\n      \"PanDesc\": \"Ihre PAN-Karte Bild\",\n      \"selfie\": \"Selfie\",\n      \"selfieDesc\": \"Ihr selfie Bild\",\n      \"pending\": \"steht aus\",\n      \"rejected\": \"Abgelehnt\",\n      \"uploadAgain\": \"Hochladen\",\n      \"remove\": \"Entfernen\",\n      \"title\": \"Titel\",\n      \"description\": \"Beschreibung\",\n      \"uploadYour\": \"laden Sie Ihre\",\n      \"raiseDispute\": \"Erzähl uns davon\",\n      \"drivingLicense\": \"Führerschein\",\n      \"PANCard\": \"PAN-Karte\",\n      \"saveContinue\": \"Speichern und fortfahren\",\n      \"uploadFrontUmgText\": \"Hochladen Front Side Bild\",\n      \"uploadPANCardImgText\": \"Hochladen von PAN-Karte Bild\",\n      \"uploadBackImageText\": \"Hochladen der Rückseite Bild\",\n      \"helptopic\": \"Hilfethemen\",\n      \"newRideSharingRequest\": \"Neue Fahrt Freigabeanfragen\",\n      \"newRequest\": \"neue Anfragen\",\n      \"welcomeTo\": \"Willkommen zu\",\n      \"welcomeDesc\": \"Anmeldung zu Ihrem bestehenden Konto von Mani Jewel\",\n      \"forgotPassword\": \"Haben Sie Ihr\",\n      \"forgotPasswordDesc\": \"Geben Sie Ihre registrierte Mobiltelefonnummer, Ihr Passwort zu erholen.\",\n      \"termsAndCondition\": \"Terms & amp; Bedingungen\",\n      \"privacyPolicy\": \"Datenschutz-Bestimmungen\",\n      \"aboutUS\": \"Über uns\",\n      \"otpVerification\": \"Stellen Sie sicher, Fahrt-Code\",\n      \"otpVerificationDelivery\": \"Stellen Sie sicher, Pickup-Code\",\n      \"otpVerificationDeliveryDone\": \"Stellen Sie sicher, Liefer-Code\",\n      \"enterOtp\": \"Geben Sie 4-stellige\",\n      \"recoveryCode\": \"Wiederherstellungscode\",\n      \"editProfile\": \"Profil bearbeiten\",\n      \"myProfile\": \"Mein Profil\",\n      \"reset\": \"Reset\",\n      \"yourPassword\": \"Ihr Passwort\",\n      \"photo\": \"Foto\",\n      \"otpDesc\": \"Der Recovery-Code wurde an Ihre Handy-Nummer gesendet. Bitte geben Sie den Code ein.\",\n      \"otpVerifyDesc\": \"Der Bestätigungscode wurde an Ihre Handy-Nummer gesendet. Bitte geben Sie den Code ein.\",\n      \"diamondDetail\": \"Diamant-Detail\",\n      \"home\": \"Zuhause\",\n      \"search\": \"Suche\",\n      \"quickSearch\": \"Schnelle Suche\",\n      \"newArrival\": \"Neuankömmling\",\n      \"exclusiveDiamonds\": \"exklusive Diamanten\",\n      \"diamondOnAuction\": \"Diamant ersteigern\",\n      \"stoneOfTheDays\": \"best Buy\",\n      \"myWatchlist\": \"Meine Beobachtungsliste\",\n      \"myBid\": \"Mein Gebot\",\n      \"myHold\": \"Mein Halten\",\n      \"myOrder\": \"Meine Sortierte Liste\",\n      \"confirmStone\": \"Bestätigen Stein\",\n      \"myOffice\": \"Mein Büro Blick\",\n      \"myOffer\": \"Mein Angebot Liste\",\n      \"myPurchased\": \"Meine Gekaufte Geschichte\",\n      \"mySavedSearch\": \"Gespeicherte Suchen\",\n      \"savedSearch\": \"Gespeicherte Suche\",\n      \"myDemand\": \"Meine Nachfrage\",\n      \"contactUs\": \"Kontaktiere uns\",\n      \"changePassword\": \"Passwort ändern\",\n      \"logout\": \"Ausloggen\",\n      \"fareDetailsTitle\": \"Geben Sie Verkaufsdetails\",\n      \"fairAmt\": \"Verkaufsmenge\",\n      \"noOfPassengers\": \"Anzahl der Passagiere\",\n      \"remarks\": \"Bemerkungen\",\n      \"orderNo\": \"Best.-Nr.\",\n      \"typeOfService\": \"Art der Leistung\",\n      \"paymentType\": \"Zahlungsart*\",\n      \"recentlyView\": \"Kürzlich anzeigen\",\n      \"uploadImgValidationText\": \"Upload-Datei muss sein .jpg, JPEG-, PNG- oder PDF-Format mit 5 MB oder weniger.\",\n      \"drivingLicenseHintText\": \"Führerscheinnummer\",\n      \"PANCARDHintText\": \"PAN Kartennummer\",\n      \"viewRide\": \"Ansicht Rides\",\n      \"myVehicle\": \"Mein Fahrzeug\",\n      \"personalDocument\": \"persönliche Dokumente\",\n      \"help\": \"HILFE\",\n      \"about\": \"Über\",\n      \"bankDetails\": \"Bankdaten\",\n      \"accountAndPayment\": \"Konto- und Zahlungs\",\n      \"enquiry\": \"Anfrage\",\n      \"download\": \"Herunterladen\",\n      \"addToCart\": \"in den Warenkorb legen\",\n      \"addToWatchList\": \"Auf die Beobachtungsliste\",\n      \"finalCalculation\": \"endgültige Berechnung\",\n      \"bookOffice\": \"Book Office\",\n      \"clearSelection\": \"Auswahl löschen\",\n      \"comment\": \"Bemerkungen\",\n      \"hold\": \"Halt\",\n      \"offer\": \"Angebot\",\n      \"officeView\": \"Büro Blick\",\n      \"placeOrder\": \"Bestellung aufgeben\",\n      \"buyNow\": \"Kaufe jetzt\",\n      \"cancelStone\": \"Abbrechen Stein\",\n      \"share\": \"Aktie\",\n      \"watchlist\": \"Beobachtungsliste\",\n      \"exclusive\": \"Exklusiv\",\n      \"featuredStones\": \"Besondere Steine\",\n      \"stoneOfDay\": \"Stone of Day\",\n      \"recentSearch\": \"Aktuelle Suche\",\n      \"viewAll\": \"Alle ansehen\",\n      \"salesPersonDetail\": \"Sales Person Details\",\n      \"searchTitle\": \"Suche Titel\",\n      \"enterSearchTitle\": \"Geben Sie Suche Titel\",\n      \"timeSlots\": \"Zeitfenster\",\n      \"selectCustomDate\": \"Wählen Sie Benutzerdefinierte Datum\",\n      \"availableSlot\": \"Verfügbare Plätze\",\n      \"reqOfficeView\": \"Anfordern Büro Blick\",\n      \"myComments\": \"Mein Kommentar\",\n      \"myReminder\": \"Meine Erinnerung\",\n      \"reminder\": \"Erinnerung\",\n      \"manageAddress\": \"Adressen verwalten\",\n      \"myAccount\": \"Mein Konto\",\n      \"declaimer\": \"Haftungsausschluss\",\n      \"shareStone\": \"Teile Stein\",\n      \"addRemider\": \"In Erinnerung\",\n      \"offlineSearch\": \"offline-Suche\",\n      \"searchHistory\": \"Suchverlauf\",\n      \"offlineStock\": \"offline-Auf\",\n      \"searchOffline\": \"Suchen (Offline)\",\n      \"voiceSearch\": \"Sprachsuche\",\n      \"tapMictoSpeak\": \"Tippen Sie Mikrofon zu sprechen\",\n      \"typeToSearch\": \"Tippe um zu suchen\",\n      \"typeWordsToSearch\": \"Geben Sie mindestens 3 Wörter Steine \u200B\u200Bsuchen\"\n    },\n    \"dynamickeys\": {\n      \"shape\": \"Gestalten\",\n      \"caratRange\": \"Carat-Strecke\",\n      \"basicDetail\": \"Grundlegende Details\",\n      \"measurementTitle\": \"Messungen\",\n      \"inclusionDetail\": \"Aufnahme-Details\",\n      \"other\": \"Andere\",\n      \"stoneID\": \"Stein ID\",\n      \"labTitle\": \"Labor\",\n      \"certNo\": \"Cert. Nein.\",\n      \"locationTitle\": \"STANDORT\",\n      \"shapeTitle\": \"Gestalten\",\n      \"caratTitle\": \"Karat\",\n      \"colorTitle\": \"Farbe\",\n      \"clarityTitle\": \"KLARHEIT\",\n      \"cutTitle\": \"Schnitt\",\n      \"polishTitle\": \"Polieren\",\n      \"symmentryTitle\": \"Symmentry\",\n      \"fluorescenceTitle\": \"Fluoreszenz\",\n      \"rapTitle\": \"Rap (%)\",\n      \"discountTitle\": \"Rabatt (%)\",\n      \"priceAndCt\": \"Preis / Ct\",\n      \"amountTitle\": \"Menge\",\n      \"eyeCleanTitle\": \"Augen-saubere\",\n      \"brownTitle\": \"BRAUN\",\n      \"milkyTitle\": \"Milchig\",\n      \"mixTingeTitle\": \"MIX tinge\",\n      \"dimensionTitle\": \"Masse (MM)\",\n      \"girdleTitle\": \"Gurteln (%)\",\n      \"tableTitle\": \"Tabelle %\",\n      \"crownAngleTitle\": \"Crown Winkel\",\n      \"depthTitle\": \"Tiefes%\",\n      \"pavAngleTitle\": \"Pav Angle\",\n      \"crownHeightTitle\": \"Kronenhöhe (%)\",\n      \"pavDepthTitle\": \"Pavilion Tiefe (%)\",\n      \"starLengthTitle\": \"Stern Länge\",\n      \"lowerHalfTitle\": \"Untere Hälfte\",\n      \"gridleTitle\": \"Gürtel\",\n      \"gridleFacetedTitle\": \"GÜRTELN FACETED\",\n      \"culetTitle\": \"culet\",\n      \"rationTitle\": \"Verhältnis\",\n      \"blackInclusionTitle\": \"BLACK INCLUSION\",\n      \"otherInclusionTitle\": \"andere Inclusion\",\n      \"openInclusionTitle\": \"OPEN INCLUSION\",\n      \"extraFacetTitle\": \"EXTRA FACET\",\n      \"naturalTitle\": \"Natürlich\",\n      \"hAndATitle\": \"H & A\",\n      \"keyToSymbol\": \"SCHLÜSSEL ZUM SYMBOL\",\n      \"labComments\": \"LAB KOMMENTAR\",\n      \"laserInsTitle\": \"LASER IN\",\n      \"basicTitle\": \"Basic\",\n      \"advancedTitle\": \"fortgeschritten\",\n      \"stoneIdTitle\": \"Stein ID / Cert No\",\n      \"defaultTitle\": \"Standard\",\n      \"newDiamondsTitle\": \"New Diamanten\",\n      \"priceLowToHigh\": \"Preis niedrig bis hoch\",\n      \"priceHighToLow\": \"Preis absteigend\",\n      \"disLowToHigh\": \"Rabatt aufsteigend\",\n      \"disHighToLow\": \"Rabatt absteigend\",\n      \"colorLowToHigh\": \"Farbe aufsteigend\",\n      \"colorHighToLow\": \"Farbe absteigend\",\n      \"caratLowToHigh\": \"Carat aufsteigend\",\n      \"caratHighToLow\": \"Carat absteigend\",\n      \"clarityLowToHigh\": \"Klarheit aufsteigend\",\n      \"clarityHighToLow\": \"Klarheit absteigend\",\n      \"colorShadeTitle\": \"Farbschattierung\",\n      \"certiTitle\": \"Zertifikatsnummer\",\n      \"arrivalsTitle\": \"Ankünfte\",\n      \"lengthTitle\": \"Länge\",\n      \"widthTitle\": \"Breite\",\n      \"pavilionAngleTitle\": \"Pavilion Winkel\",\n      \"girdleConditionTitle\": \"Hüfthalter Zustand\",\n      \"cluetConditionTitle\": \"culet Zustand\",\n      \"disTitle\": \"Dis%\",\n      \"depthTitleWithoutPerc\": \"Tiefe\",\n      \"otherInformationTitle\": \"Andere Informationen\"\n    }\n  },\n  \"Arabic\": {\n    \"language_code\": \"Arabic\",\n    \"auth_strings\": {\n      \"editCompanyInformation\": \"تحرير معلومات عن الشركة\",\n      \"selectNatureOfOrganization\": \"تحديد طبيعة منظمة\",\n      \"setNewPassword\": \"تعيين كلمة المرور الجديدة وتسجيل الدخول مرة أخرى.\",\n      \"enterCompanyName\": \"الرجاء إدخال اسم الشركة.\",\n      \"pleaseEnterCustomerOTP\": \"الرجاء إدخال العملاء كود ركوب.\",\n      \"pleaseEnterPickupOTP\": \"الرجاء إدخال العملاء كود صغيرة.\",\n      \"pleaseEnterDeliveryOTP\": \"الرجاء إدخال العملاء كود التسليم.\",\n      \"verified\": \"تم التحقق\",\n      \"verify\": \"تحقق\",\n      \"addressLineOne\": \"العنوان 1\",\n      \"addressLineTwo\": \"العنوان 2\",\n      \"addressLineThree\": \"العنوان 3\",\n      \"oldPassword\": \"كلمة سر قديمة\",\n      \"skype\": \"سكايب\",\n      \"whatsApp\": \"ال WhatsApp\",\n      \"pinCode\": \"الرقم السري *\",\n      \"verifyMobileDesc\": \"يرجى التحقق من رقم الهاتف المحمول لتحديث ملف التعريف.\",\n      \"verifyNow\": \"تحقق الآن\",\n      \"password\": \"كلمه السر\",\n      \"backToHome\": \"الذهاب إلى الصفحة الرئيسية\",\n      \"forgotPassword\": \"هل نسيت كلمة المرور؟\",\n      \"signInCap\": \"تسجيل الدخول\",\n      \"moveToLogIn\": \"الانتقال إلى تسجيل الدخول\",\n      \"dontHaveAnAccount\": \"#ERROR!\",\n      \"clickHere\": \"انقر هنا\",\n      \"signUpHere\": \"سجل هنا\",\n      \"reset\": \"إعادة تعيين\",\n      \"haveRegisterCode\": \"لديك رمز التسجيل؟\",\n      \"welcome\": \"مرحبا بعودتك!\",\n      \"signInAsGuest\": \"تسجيل الدخول كضيف\",\n      \"editProfileTitle\": \"تعديل الملف الشخصي\",\n      \"emaillbl\": \"البريد الإلكتروني\",\n      \"searchInventory\": \"البحث عن المنتج\",\n      \"emailAddress\": \"عنوان البريد الالكترونى*\",\n      \"offlineFilter\": \"تعذر العثور على الماس المنشود؟ يمكننا مساعدتك في الحصول على صفقة أفضل من المخزون لدينا حاليا.\",\n      \"loginDesc\": \"هل تريد تمكين اللمس رقم / MPin لفتح بلدي الماس؟ يرجى اختيار خيار التطبيق فتح\",\n      \"searchDiamonds\": \"البحث الماس\",\n      \"continueWithSearch\": \"هل ترغب في الاستمرار في البحث؟\",\n      \"mobileNumber\": \"التليفون المحمول\",\n      \"searchHint\": \"بحث...\",\n      \"selectYourCountry\": \"حدد الدولة\",\n      \"resendCodeIn\": \"إعادة إرسال الرمز في\",\n      \"resendCode\": \"إعادة إرسال\",\n      \"haveAnAccount\": \"هل لديك حساب؟\",\n      \"dontReceiveCode\": \"إذا لم يحصل على رمز!\",\n      \"inLogin\": \"لتسجيل الدخول.\",\n      \"resetPwdDesc\": \"إضافة كلمة المرور و تأكيد كلمة المرور لإعادة تعيين كلمة المرور الخاصة بك.\",\n      \"backToLogin\": \"العودة إلى تسجيل الدخول\",\n      \"firstName\": \"الاسم الاول*\",\n      \"name\": \"اسم المستخدم*\",\n      \"lastName\": \"الكنية*\",\n      \"middleName\": \"الاسم الوسطى*\",\n      \"confirmPassword\": \"تأكيد كلمة المرور\",\n      \"currentPasswordErr\": \"خطأ كلمة المرور الحالية\",\n      \"passwordChanged\": \"تم تغيير كلمة السر\",\n      \"lblLogInErr\": \"خطأ في تسجيل الدخول\",\n      \"enterYour\": \"ادخل\",\n      \"details\": \"تفاصيل\",\n      \"registerCode\": \"رمز التسجيل\",\n      \"registerCodeDesc\": \"إضافة رمز التسجيل لبدء التسجيل الخاص بك مع 3eco.\",\n      \"uploadPhotoDesc\": \"تأخذ صورة شخصية لنفسك\",\n      \"updateProfile\": \"تحديث الملف\",\n      \"postalCode\": \"الرمز البريدي*\",\n      \"removeButton\": \"إزالة\",\n      \"gender\": \"جنس\",\n      \"male\": \"الذكر\",\n      \"female\": \"أنثى\",\n      \"changePassword\": \"غير كلمة السر\",\n      \"currentPassword\": \"كلمة المرور الحالي*\",\n      \"newPassword\": \"كلمة مرور جديدة*\",\n      \"confirmNewPassword\": \"تأكيد كلمة المرور*\",\n      \"personalDocuments\": \"مستندات شخصية\",\n      \"assignedAuto\": \"تعيين السيارات\",\n      \"logout\": \"تسجيل خروج\",\n      \"logoutConfirmationMsg\": \"هل أنت متأكد أنك تريد تسجيل الخروج؟\",\n      \"address\": \"عنوان*\",\n      \"accountNumber\": \"رقم حساب\",\n      \"bankerName\": \"اسم المصرفيين\",\n      \"nameLable\": \"اسم\",\n      \"ifscCode\": \"كود IFSC\",\n      \"businessRegistrationNumbr\": \"رقم التسجيل التجاري\",\n      \"businessRelationshipPeriod\": \"العمل فترة العلاقة (في سنوات)\",\n      \"designation\": \"تعيين\",\n      \"nameofDesignation\": \"اسم\",\n      \"natureofOrganization\": \"طبيعة منظمة\",\n      \"uploadFile\": \"لا ملف إخبارية\",\n      \"update\": \"تحديث\",\n      \"resetPwd\": \"إعادة تعيين كلمة المرور\",\n      \"pwdReset\": \"إعادة تعيين كلمة المرور\",\n      \"signInWithMPIN\": \"تسجيل الدخول مع MPIN\",\n      \"pwdChanged\": \"تم تغيير كلمة السر\",\n      \"successfullyPwdDesc\": \"لقد بنجاح إعادة تعيين كلمة المرور الخاصة بك. الرجاء استخدام كلمة المرور الجديدة عند تسجيل الدخول.\",\n      \"lblProfileSetup\": \"ومن المقرر الشخصي الخاص بك\",\n      \"lblProfileSetupDesc\": \"لقد تلقينا تفاصيل ملفك الشخصي\",\n      \"hoursAvailable\": \"إجمالي Shifttime\",\n      \"confirmStoneDetail\": \"تأكيد تفاصيل الحجر\",\n      \"companyName\": \"اسم الشركة\",\n      \"invoiceDate\": \"تاريخ الفاتورة\",\n      \"companyCode\": \"رمز الشركة\",\n      \"saveCompanyDetails\": \"حفظ معلومات الشركة\",\n      \"passwordNotChange\": \"كلمة السر غير متطابقة\",\n      \"rememberPassword\": \"تذكر كلمة المرور؟\",\n      \"sendOTP\": \"إرسال OTP\",\n      \"resendNow\": \"إعادة إرسال الآن\",\n      \"didNotReceiveOTP\": \"إذا كنت لا تتلقى مكتب المدعي العام!\",\n      \"sendOTPToEmail\": \"سوف نقوم بإرسال OTP إلى عنوان البريد الإلكتروني الخاص بك دخل أو اسم المستخدم. يرجى إدخال عنوان البريد الإلكتروني أو اسم المستخدم.\",\n      \"enterOTP\": \"تم إرسال OTP إلى عنوان بريدك الإلكتروني المسجل. الرجاء إدخال مكتب المدعي العام.\",\n      \"backToSignIn\": \"ارجع إلى تسجيل الدخول\",\n      \"passwordResetSuccessfully\": \"إستعادة كلمة بنجاح.\",\n      \"emailAndUname\": \"البريد الالكتروني / اسم المستخدم\",\n      \"signUp\": \"سجل\",\n      \"promotionText\": \"عروض ترويجية\",\n      \"termsAndCondition\": \"أحكام وشروط\",\n      \"mustAgreeTermsAndCondition\": \"يجب أن توافق على أحكام وشروط لتسجيل الدخول كما مستخدم ضيف\",\n      \"forgotPasswordTitle\": \"هل نسيت كلمة المرور\",\n      \"uploadKYC\": \"تحميل KYC\",\n      \"uploadKycDesc\": \"يرجى تحميل الوثائق KYC للوصول إلى ميزات الكامل.\",\n      \"hintPhotoIdentityProof\": \"صور الهوية * والدليل على\",\n      \"hintBussinerssProof\": \"الهوية التجارية * والدليل على\",\n      \"btnFileUpload\": \"تحميل الملف\",\n      \"pleaseUploadPhotoProof\": \"يرجى تحميل إثبات صور الهوية.\",\n      \"pleaseUploadBussinessProof\": \"يرجى تحميل إثبات الهوية الأعمال.\",\n      \"pleaseSelectFileFormat\": \"يرجى تحميل الملف في أي من التنسيقات التالية: .JPG\",\n      \"kycSubmitted\": \"KYC مقدم\",\n      \"kycSubmmittedDesc\": \"وقد قدمت KYC بنجاح.\",\n      \"btnMoveToHome\": \"انتقال إلى الصفحة الرئيسية\",\n      \"kYCRejected\": \"KYC رفض\",\n      \"kycRejectedDesc\": \"تم رفض KYC الخاص بك. يرجى تحميل الوثائق KYC مرة أخرى للوصول إلى كافة الميزات.\"\n    },\n    \"common_string\": {\n      \"seeMore\": \"شاهد المزيد\",\n      \"seeLess\": \"انظر أقل\",\n      \"modify\": \"تعديل\",\n      \"delete\": \"حذف\",\n      \"details\": \"تفاصيل\",\n      \"edit\": \"تعديل\",\n      \"addDemand\": \"الطلب إضافة\",\n      \"demandTitle\": \"الطلب عنوان\",\n      \"pleaseEnterDemandTitle\": \"يرجى إدخال عنوان الطلب\",\n      \"demandAddedSuccessfully\": \"الطلب أضيف بنجاح\",\n      \"selectAtleastOneFilter\": \"رجاء\",\n      \"savedSearch\": \"بحث محفوظ\",\n      \"searchSavedSearch\": \"بحث بحث محفوظ\",\n      \"viewDetails\": \"عرض التفاصيل\",\n      \"viewLessDetails\": \"عرض أقل تفاصيل\",\n      \"myDemand\": \"بلدي الطلب\",\n      \"date\": \"تاريخ\",\n      \"selectTime\": \"اختر الوقت\",\n      \"selectDate\": \"حدد تاريخ\",\n      \"offerVelidTill\": \"يسري العرض حتى\",\n      \"officeVisitDate\": \"مكتب موقع التسجيل\",\n      \"all\": \"الكل\",\n      \"status\": \"الحالة\",\n      \"save\": \"حفظ\",\n      \"verify\": \"تحقق\",\n      \"readMore\": \"قراءة المزيد\",\n      \"goodMorning\": \"صباح الخير\",\n      \"goodAfternoon\": \"طاب مسائك\",\n      \"goodEvening\": \"مساء الخير\",\n      \"btnSkip\": \"تخطى\",\n      \"btnUpdate\": \"تحديث\",\n      \"btnContinue\": \"استمر\",\n      \"btnContinueCap\": \"استمر\",\n      \"btnEdit\": \"تعديل\",\n      \"btnSubmit\": \"إرسال\",\n      \"btnNextCap\": \"التالى\",\n      \"btnSaveCap\": \"تطوير كلمة السر\",\n      \"btnWithdrawCap\": \"انسحب\",\n      \"btnSaveAndContinueCap\": \"حفظ ومتابعة\",\n      \"btnUnregister\": \"غير مسجل موبايل\",\n      \"btnClose\": \"قريب\",\n      \"remove\": \"إزالة\",\n      \"refresh\": \"تحديث\",\n      \"fetchLocationMessage\": \"يرجى الانتظار نحن جلب موقعك\",\n      \"done\": \"منجز\",\n      \"doneCap\": \"منجز\",\n      \"cancel\": \"إلغاء\",\n      \"allow\": \"السماح\",\n      \"countryFirst\": \"الرجاء اختيار الدولة أولا\",\n      \"apply\": \"تطبيق\",\n      \"cancelCap\": \"إلغاء\",\n      \"uploadCap\": \"رفع\",\n      \"yesCancelCap\": \"نعم\",\n      \"upload\": \"رفع\",\n      \"ok\": \"حسنا\",\n      \"home\": \"الصفحة الرئيسية\",\n      \"goToMyWatchList\": \"انتقل إلى جهاز قائمة الرغبات\",\n      \"goToMyOrder\": \"الذهاب إلى طلبي\",\n      \"gotToMyOffer\": \"انتقل إلى جهاز العرض\",\n      \"gotToMyHold\": \"انتقل إلى جهاز عقد\",\n      \"gotToMyEnquiry\": \"انتقل إلى جهاز رسالتك\",\n      \"gotToMyBid\": \"انتقل إلى جهاز المزايدة\",\n      \"gotToMyReminder\": \"انتقل إلى جهاز تذكير\",\n      \"gotToMyComments\": \"الذهاب إلى ملاحظاتي\",\n      \"yes\": \"نعم\",\n      \"no\": \"لا\",\n      \"selectCountry\": \"حدد الدولة\",\n      \"clickHere\": \"انقر هنا\",\n      \"btnAddNewAddress\": \"أضف عنوان جديد\",\n      \"btnCancel\": \"إلغاء\",\n      \"btnTakeSelfie\": \"أخذ الصور الشخصية لل\",\n      \"successfully\": \"بنجاح\",\n      \"lblAppExit\": \"هل أنت متأكد من انك تريد الخروج؟\",\n      \"lblExit\": \"خروج\",\n      \"openAppSetting\": \"أفتح الإعدادات\",\n      \"lblOr\": \"أو\",\n      \"fromLbl\": \"من عند\",\n      \"toLbl\": \"إلى\",\n      \"showMore\": \"أظهر المزيد\",\n      \"showLess\": \"عرض أقل\",\n      \"selectCity\": \"اختر مدينة\",\n      \"notYetAvailable\": \"لم تتوفر بعد\",\n      \"updateAvailable\": \"تحديث متوفر!\",\n      \"downloadAppFrom\": \"تحميل تطبيق التحديث من\",\n      \"playStore\": \"لعب مخزن\",\n      \"skipUpdate\": \"تخطي تحديث\",\n      \"stateFirst\": \"الرجاء اختيار الدولة أولا\",\n      \"reallyExit\": \"الخروج حقا؟\",\n      \"alert\": \"إنذار!\",\n      \"loading\": \"جار التحميل\",\n      \"error\": \"خطأ\",\n      \"jumpToTop\": \"إذهب إلى أعلى\",\n      \"ihaveread\": \"لقد قرأت واستعرض\",\n      \"selected\": \"تحديد\",\n      \"lbllogout\": \"تسجيل خروج\",\n      \"lblThanx\": \"شكرا لك\",\n      \"lblSelectCity\": \"اختر مدينة\",\n      \"lblSelectState\": \"اختر ولايه\",\n      \"lblSelectCountry\": \"حدد الدولة\",\n      \"lblCity\": \"مدينة\",\n      \"lblCountry\": \"بلد\",\n      \"lblName\": \"اسم\",\n      \"lblPinCode\": \"كود PIN\",\n      \"lblMobileNumber\": \"رقم الهاتف المحمول\",\n      \"lblState\": \"حالة\",\n      \"lblCode\": \"الشفرة:\",\n      \"lblOrderNo\": \"أجل لا:\",\n      \"lblOrderItem\": \"قائمة الطلبات:\",\n      \"lblDelivered\": \"تم التوصيل\",\n      \"lblTicketReady\": \"تذكرتك جاهز\",\n      \"lblPersonTicket\": \"تذكرة من 2 شخص\",\n      \"lblShuttleBus\": \"اتوبيس داخلي\",\n      \"lblPickup\": \"امسك\",\n      \"lblDropoff\": \"إنزال\",\n      \"lblPassenger\": \"راكب\",\n      \"lblDeliveryNo\": \"أي التسليم.\",\n      \"lblPrice\": \"السعر\",\n      \"lblValid\": \"صالحة ل\",\n      \"lblRenew\": \"جدد\",\n      \"lblDeparture\": \"مغادرة\",\n      \"lblArrived\": \"وصل\",\n      \"lblSendtoFriend\": \"أرسل إلى صديق\",\n      \"popupRenewTitle\": \"تجديد تذكرة\",\n      \"popupRenewDesc\": \"أبجد هوز دولور الجلوس امات\",\n      \"popuplblPassenger\": \"راكب\",\n      \"popuplblCancel\": \"إلغاء\",\n      \"popupbtnRenew\": \"جدد\",\n      \"ridelblAwesome\": \"رائع\",\n      \"ridebtnDone\": \"منجز\",\n      \"offerPricePerCarat\": \"عرض السعر (CTS)\",\n      \"dropOffText\": \"إنزال\",\n      \"pickUpText\": \"امسك\",\n      \"startAtText\": \"تبدأ في\",\n      \"endAtText\": \"يغلق عند مستوى\",\n      \"personText\": \"شخص\",\n      \"paymentScreenTitle\": \"دفع\",\n      \"pickuplbl\": \"امسك\",\n      \"droplbl\": \"إنزال\",\n      \"makePaymentButtonlbl\": \"قم بالدفع\",\n      \"pessangerslbl\": \"ركاب\",\n      \"priceBreakuplbl\": \"سعر تفكك\",\n      \"tripPricelbl\": \"الأسعار رحلة\",\n      \"taxeslbl\": \"الضرائب\",\n      \"totallbl\": \"مجموع\",\n      \"cardNumberhint\": \"رقم البطاقة\",\n      \"cvvhint\": \"CVV\",\n      \"datehint\": \"MM / YY\",\n      \"btnTryAgain\": \"حاول مرة أخري\",\n      \"cityFirst\": \"الرجاء تحديد المدينة أولا\",\n      \"enterFareDetails\": \"أدخل تفاصيل المبيعات\",\n      \"fromDate\": \"من التاريخ\",\n      \"toDate\": \"التاريخ المحدد\",\n      \"btnUnderstand\": \"أنا أفهم\",\n      \"applicationUpdate\": \"تطبيق تحديث\",\n      \"newVersionMessage\": \"نسخة جديدة من تطبيق مجانية متاحة\",\n      \"paymentCollected\": \"الدفع يتم جمعها\",\n      \"addComment\": \"اضف تعليق\",\n      \"more\": \"أكثر\",\n      \"carat\": \"قيراط\",\n      \"pcs\": \"جهاز كمبيوتر شخصى\",\n      \"cts\": \"سنت\",\n      \"disc\": \"القرص٪\",\n      \"avgPriceCrt\": \"متوسط السعر / ط م\",\n      \"amount\": \"كمية\",\n      \"confirmStone\": \"ستون تأكيد\",\n      \"confirm\": \"تؤكد\",\n      \"offered\": \"تقدم\",\n      \"validTill\": \"صالح حتى\",\n      \"remark\": \"تعليق\",\n      \"color\": \"اللون\",\n      \"colorGroup\": \"المجموعة اللون\",\n      \"colorFancy\": \"مولع ب\",\n      \"colorWhite\": \"أبيض\",\n      \"clarity\": \"وضوح\",\n      \"clarityGroup\": \"المجموعة الوضوح\",\n      \"intensity\": \"الشدة\",\n      \"overtone\": \"يغلب\",\n      \"selectBusinessType\": \"اختر نوع الشركة\",\n      \"selectState\": \"اختر ولايه\",\n      \"search\": \"بحث\",\n      \"profile\": \"ملفي\",\n      \"personal\": \"شخصي\",\n      \"business\": \"اعمال\",\n      \"documents\": \"مستندات\",\n      \"noSlotFound\": \"لا توجد فتحات\",\n      \"noDiamondFound\": \"لا الماس مطابقة بحثك. الرجاء إضافة كنت الطلب.\",\n      \"selectType\": \"حدد نوع الظاهري\",\n      \"noSavedSearch\": \"لا بحث محفوظ موجود\",\n      \"searchCity\": \"المدينة بحث\",\n      \"searchCountry\": \"بحث البلد\",\n      \"searchState\": \"الدولة البحث\",\n      \"notifications\": \"تنبيه\",\n      \"enter2Stone\": \"يرجى تحديد ما لا يقل عن 2 الحجر للمقارنة.\",\n      \"bidDesc\": \"يقع حاليا في الهند وللتسليم في أي بلد آخر بصرف النظر عن الهند سوف يستغرق 7-10 أيام عمل على الأقل.\",\n      \"packetNo\": \"حزمة رقم:\",\n      \"quit\": \"استقال\",\n      \"agree\": \"أنا موافق\",\n      \"laterToday\": \"في وقت لاحق اليوم\",\n      \"toMorrow\": \"غدا\",\n      \"nextWeek\": \"الاسبوع المقبل\",\n      \"chooseAnother\": \"اختيار آخر\",\n      \"dateTime\": \"التاريخ والوقت\",\n      \"language\": \"لغة\",\n      \"diamNow\": \"DiamNow\",\n      \"noDocument\": \"لا توجد وثائق تم العثور عليها\",\n      \"searchBusinessType\": \"بحث نوع الشركة\",\n      \"hours\": \"ساعات\",\n      \"minutes\": \"الدقائق\",\n      \"seconds\": \"ثواني\",\n      \"bidEndsIn\": \"المزايدة ينتهي في:\",\n      \"shape\": \"شكل\",\n      \"download\": \"تحميل\",\n      \"share\": \"شارك\",\n      \"placeOrder\": \"مكان الامر\",\n      \"enterComment\": \"الرجاء إدخال تعليق\",\n      \"deleteItem\": \"هل أنت متأكد أنك تريد حذف؟\",\n      \"shippingPolicy\": \"سياسة الشحن\",\n      \"offerSundayRestriction\": \"لا يسمح الاحد. مكتب أيام عمل من الاثنين إلى السبت\",\n      \"weekAgo\": \"1 قبل أسبوع\",\n      \"lastWeek\": \"الاسبوع الماضى\",\n      \"dayAgo\": \"أيام مضت\",\n      \"onedayAgo\": \"1 منذ يوم\",\n      \"yesterday\": \"في الامس\",\n      \"hourAgo\": \"منذ ساعات\",\n      \"onehourAgo\": \"منذ 1 ساعة\",\n      \"anhourAgo\": \"قبل ساعة\",\n      \"mintuesAgo\": \"دقائق مضت\",\n      \"onemintuesAgo\": \"منذ 1 دقيقة\",\n      \"amintueAgo\": \"وقبل دقيقة\",\n      \"secondsAgo\": \"منذ ثوانى\",\n      \"justNow\": \"في هذة اللحظة\",\n      \"today\": \"اليوم\",\n      \"past\": \"الماضي\",\n      \"selectPhotoProof\": \"حدد مستند\",\n      \"pleaseSelectPhotoProof\": \"الرجاء تحديد ثيقة\",\n      \"selectBusinessProof\": \"حدد مستند\",\n      \"pleaseSelectBusinessProof\": \"الرجاء تحديد ثيقة\",\n      \"touchId\": \"معرف اتصال\",\n      \"faceId\": \"وجه إيد\",\n      \"enableTouchId\": \"تمكين اللمس رقم لفتح بلدي الماس؟\",\n      \"enableFaceId\": \"تمكين الوجه رقم لفتح بلدي الماس؟\",\n      \"unlockWithTouchId\": \"فتح بلدي الماس باستخدام اللمس رقم\",\n      \"unlockWithFaceId\": \"فتح بلدي الماس باستخدام الوجه رقم.\",\n      \"mPin\": \"MPin\",\n      \"holdMemoStatusDiamondorder\": \"لا يمكنك أكدت الحجارة التي هي بالفعل في عقد أو مذكرة الوضع\",\n      \"searchStoneIdCertificateNo\": \"بحث ستون رقم / شهادة لا\",\n      \"createMPin\": \"إنشاء MPin جديد\",\n      \"reentermpin\": \"إعادة إدخال MPin\",\n      \"forgotmpin\": \"نسيت MPIN؟\",\n      \"verifympin\": \"تحقق Mpin\",\n      \"enteryoursixdigitcode\": \"أدخل MPIN 6 أرقام\",\n      \"changempin\": \"تغيير MPin\",\n      \"faceidandtouchnotenable\": \"لم يتم تمكين في هاتفك FaceId / TouchId، الرجاء تمكن من استخدام هذه الميزة\",\n      \"enablempintounlockmydiamonds\": \"تمكين MPin إلى التطبيق فتح؟ وسوف تعطيل لمسة إيد. هل أنت متأكد أنك تريد المتابعة؟\",\n      \"enabletouchidtounlockmydiamonds\": \"تمكين اللمس رقم إلى التطبيق فتح؟ وسوف تعطيل MPin. هل أنت متأكد أنك تريد المتابعة؟\",\n      \"rememberme\": \"تذكرنى\",\n      \"usertouchid\": \"استخدام اللمس رقم\",\n      \"usempin\": \"استخدام MPin\",\n      \"filesarenotavailableonserver\": \"الملفات غير متوفرة على الخادم، الرجاء إعادة المحاولة لاحقا\",\n      \"allfileshavebeendownloaded\": \"تم تحميل جميع الملفات.\",\n      \"filesisdownloaded\": \"يتم تحميل الملفات\",\n      \"filesisnotdownloadedbcz\": \"لن يتم تحميل الملفات لأنه غير موجود في الملقم.\",\n      \"downloading canceled\": \"تحميل إلغاء\",\n      \"downloading\": \"جارى التحميل...\",\n      \"expirydate\": \"تاريخ الانتهاء :\",\n      \"youreallywanttodelete\": \"هل حقا تريد حذف\"\n    },\n    \"error_string\": {\n      \"accessDenide\": \"تم الرفض\",\n      \"pleaseSelectOfferTillDate\": \"الرجاء تحديد العرض حتى الآن.\",\n      \"pleaseSelectOfficeVisitDate\": \"يرجى اختيار مكتب موعد الزيارة\",\n      \"deleteStoneMsg\": \"هل أنت متأكد أنك تريد حذف الحجر (ق)؟\",\n      \"acceptTermsAndCondition\": \"وتفضلوا بقبول الشروط والأحكام\",\n      \"diamondCompareRemove\": \"ويلزم على الأقل 2 الأحجار للمقارنة.\",\n      \"diamondSelectionError\": \"الرجاء تحديد بحجر واحد على الأقل.\",\n      \"pleaseEnterCompanyName\": \"يرجى إدخال اسم الشركة.\",\n      \"selectInvoiceDate\": \"تحديد تاريخ الفاتورة\",\n      \"pleaseEnterComment\": \"الرجاء إدخال تعليق.\",\n      \"pleaseEnterRemarks\": \"الرجاء إدخال الملاحظات.\",\n      \"selectExpiryDate\": \"يرجى تحديد تاريخ انتهاء الصلاحية.\",\n      \"enterOTP\": \"الرجاء إدخال الرمز\",\n      \"pleaseEnterOTP\": \"الرجاء إدخال رمز التحقق.\",\n      \"enteredCodeNotMatching\": \"كود دخلت ليست مطابقة. حاول مرة أخري\",\n      \"selectCancellationReason\": \"يرجى تحديد سبب الإلغاء\",\n      \"enterDesc\": \"الرجاء إدخال الوصف.\",\n      \"enterTitle\": \"يرجى إدخال عنوان.\",\n      \"enterEmailOrPhone\": \"يرجى إدخال البريد الإلكتروني / المحمول.\",\n      \"enterPassword\": \"كلمة سر لا يمكن أن يكون فارغا. الرجاء إدخال كلمة المرور.\",\n      \"enterConfirmPassword\": \"الرجاء إدخال تأكيد كلمة المرور.\",\n      \"enterSkype\": \"الرجاء إدخال سكايب.\",\n      \"enterRegisterCode\": \"الرجاء إدخال رمز التسجيل\",\n      \"enterEmail\": \"يرجى إدخال عنوان البريد الإلكتروني.\",\n      \"enterPhone\": \"الرجاء إدخال رقم الجوال.\",\n      \"enterUsername\": \"اسم المستخدم لا يمكن أن يكون فارغا. الرجاء إدخال اسم المستخدم.\",\n      \"enterValidEmail\": \"الرجاء إدخال عنوان البريد الإلكتروني الصحيح.\",\n      \"enterValidPhone\": \"الرجاء إدخال رقم الجوال صحيح.\",\n      \"enterValidWhatsappPhone\": \"الرجاء إدخال صالح ال WhatsApp رقم الجوال.\",\n      \"enterValidPassword\": \"الرجاء إدخال 6 أحرف أو كلمة المرور طويلة.\",\n      \"mismatchPassword\": \"كلمة المرور وتأكيد كلمة المرور لم يتم مطابقة.\",\n      \"enterFirstName\": \"الرجاء إدخال الاسم الأول.\",\n      \"enterMiddleName\": \"الرجاء إدخال الاسم الأوسط.\",\n      \"enterPinCode\": \"الرجاء إدخال الرقم السري.\",\n      \"enterName\": \"الرجاء إدخال اسم.\",\n      \"enterLastName\": \"الرجاء إدخال اسم العائلة.\",\n      \"enterAddress\": \"يرجى إدخال عنوان.\",\n      \"enterValidPinCode\": \"أدخل الرقم السري صالح.\",\n      \"enterValidAddress\": \"الرجاء إدخال 10 حرفا أو عنوان طويل.\",\n      \"enterPostalCode\": \"الرجاء إدخال الرمز البريدي.\",\n      \"enterValidPostalCode\": \"الرجاء إدخال 6 أرقام الرمز البريدي الرقمية.\",\n      \"enterCurrentPassword\": \"الرجاء إدخال كلمة المرور الحالية.\",\n      \"enterNewPassword\": \"يرجى إدخال كلمة المرور الجديدة.\",\n      \"enterFareAmount\": \"الرجاء إدخال كمية المبيعات.\",\n      \"enterOrderNO\": \"الرجاء إدخال أي نظام.\",\n      \"enterServiceType\": \"يرجى تحديد نوع الخدمة.\",\n      \"enterPaymentType\": \"يرجى تحديد نوع الدفع.\",\n      \"enterValidFareAmount\": \"كمية المبيعات لا يمكن أن يكون صفرا.\",\n      \"enterPassangerNo\": \"الرجاء إدخال رقم الركاب.\",\n      \"enterValidPassangerNo\": \"عدد الركاب لا يمكن أن يكون صفرا.\",\n      \"notEnterMorePassangerNo\": \"عدد الركاب لا يمكن أن يكون أكثر من سبع سنوات.\",\n      \"drivingLicenseValidationText\": \"الرجاء إدخال 15 أرقام أبجدية القيادة رقم الترخيص.\",\n      \"PANCardValidationText\": \"الرجاء إدخال 10 أرقام أبجدية رقم بطاقة PAN.\",\n      \"selectFromDate\": \"الرجاء تحديد من تاريخ\",\n      \"selectToDate\": \"الرجاء تحديد حتى الآن\",\n      \"fromGreaterTo\": \"يجب أن يكون التاريخ المحدد أكبر من التاريخ الحالي\",\n      \"wrongPassword\": \"يحتوي كلمة لا بد منه، والحد الأدنى 8 أحرف، 1 الأبجدية الكبيرة (1)، أقل حالة الأبجدية، الرقم 1، 1 charater خاص\",\n      \"fromValueGreateThanTo\": \"من القيمة يجب أن تكون أقل من أو يساوي قيمة ل\",\n      \"toValueGreaterThanFrom\": \"إلى القيمة يجب أن يكون أكبر من أو يساوي من قيمة\",\n      \"pleaseEnterCompanyCode\": \"الرجاء إدخال رمز الشركة\",\n      \"enterSamePassword\": \"لا يتطابق مع تأكيد كلمة المرور مع كلمة المرور الجديدة. الرجاء إدخال تأكيد كلمة المرور نفس كلمة المرور الجديدة.\",\n      \"selectAppointmentDate\": \"يرجى تحديد تاريخ التعيين\",\n      \"selectTimeSlot\": \"الرجاء تحديد فتحة وقت\",\n      \"enterComments\": \"الرجاء إدخال تعليق\",\n      \"selectVirtualType\": \"يرجى تحديد نوع الظاهري\",\n      \"versionError\": \"خطأ نسخة\"\n    },\n    \"no_data strings\": {\n      \"noDataFound\": \"لا يوجد سجلات\"\n    },\n    \"screen_title\": {\n      \"placeAnOffer\": \"وضع العرض\",\n      \"addedInWatchList\": \"وأضاف في قائمة الرغبات\",\n      \"addedInOffer\": \"العرض المقدم\",\n      \"addedInCart\": \"وأضاف في العربة\",\n      \"addedInBid\": \"وأضاف في المزايدة\",\n      \"myEnquiry\": \"بلدي رسالتك\",\n      \"delete\": \"حذف\",\n      \"addDemand\": \"إضافة الطلب\",\n      \"matchPair\": \"مباراة زوج\",\n      \"savedAndSearch\": \"حفظ البحث\",\n      \"updateAndSearch\": \"تحديث والبحث\",\n      \"upcoming\": \"القادمة\",\n      \"bidPricePerCt\": \"سعر العرض / ط م\",\n      \"bidDisc\": \"محاولة القرص\",\n      \"bidValue\": \"المزايدة القيمة\",\n      \"bidStone\": \"محاولة ستون\",\n      \"myCart\": \"سلتي\",\n      \"myComment\": \"ملاحظاتي\",\n      \"compare\": \"قارن\",\n      \"compareStones\": \"الأحجار قارن\",\n      \"statusHold\": \"في الانتظار\",\n      \"statusOnMemo\": \"على مذكرة\",\n      \"statusAvailable\": \"متاح\",\n      \"statusNew\": \"قادم جديد\",\n      \"statusOffer\": \"حجر من اليوم / الترويج\",\n      \"statusMyHold\": \"بلدي الانتظار\",\n      \"signup\": \"سجل\",\n      \"addToOffice\": \"إضافة مكتب ل\",\n      \"addComment\": \"أضف تعليق\",\n      \"addEnquiry\": \"إضافة رسالتك\",\n      \"finalOffer\": \"العرض الأخير\",\n      \"finalDisc\": \"القرص النهائي\",\n      \"finalRate\": \"تقييم النهائي\",\n      \"finalValue\": \"القيمة النهائية\",\n      \"orderMsg\": \"1 المذكورة أسعار أكثر من هنا وثابتة، وبالتالي غير قابلة للتفاوض. \\\\\\\\ N2 والدرجات، وذكرت المعلمات على موقعنا على الانترنت وراء تصنيف GIA ل.\",\n      \"offerMsg\": \"ومباشرة تأكيد الحجر إذا عرضت يحصل على الموافقة على السعر لذلك نحن نطلب من سيادتكم التأكد قبل الطرح. لا يتم الاحتفاظ أي الحجر (ق) وضعت في قائمة عرض في الانتظار بالنسبة لك كما هو متاح للعملاء الآخرين أيضا.\",\n      \"note\": \"ملحوظة\",\n      \"hours\": \"ساعات\",\n      \"offeredDisc\": \"ديس المقدمة\",\n      \"offeredPriceCt\": \"عرضت العلاقات العامة / ط م\",\n      \"addOffer\": \"إضافة عرض\",\n      \"expDiscPer\": \"الخصم المتوقع\",\n      \"todayDiscPer\": \"قرص اليوم\",\n      \"searchResult\": \"نتيجة البحث\",\n      \"searchDiamond\": \"البحث الماس\",\n      \"basic\": \"الأساسي\",\n      \"advanced\": \"المتقدمة\",\n      \"stoneIdCertNo\": \"StoneID / سيرت لا\",\n      \"takeSignature\": \"خذ التوقيع\",\n      \"optional\": \"اختياري\",\n      \"MyAddress\": \"عنواني\",\n      \"expiryDate\": \"تاريخ الانتهاء\",\n      \"drivingLicenceDesc\": \"القيادة الصورة الترخيص الخاص بك\",\n      \"PanDesc\": \"PAN الصورة بطاقتك\",\n      \"selfie\": \"صورة شخصية\",\n      \"selfieDesc\": \"الصورة صورك الشخصية\",\n      \"pending\": \"قيد الانتظار\",\n      \"rejected\": \"مرفوض\",\n      \"uploadAgain\": \"رفع\",\n      \"remove\": \"إزالة\",\n      \"title\": \"عنوان\",\n      \"description\": \"وصف\",\n      \"uploadYour\": \"حمل سيرتك\",\n      \"raiseDispute\": \"اخبرنا عنها\",\n      \"drivingLicense\": \"رخصة قيادة\",\n      \"PANCard\": \"بطاقة الطعام\",\n      \"saveContinue\": \"حفظ ومتابعة\",\n      \"uploadFrontUmgText\": \"تحميل الأمامي صورة\",\n      \"uploadPANCardImgText\": \"تحميل بطاقة PAN صورة\",\n      \"uploadBackImageText\": \"تحميل الجانب الخلفي صورة\",\n      \"helptopic\": \"مواضيع التعليمات\",\n      \"newRideSharingRequest\": \"طلبات جديدة ركوب مشاركة\",\n      \"newRequest\": \"طلبات جديدة\",\n      \"welcomeTo\": \"مرحبا بك في\",\n      \"welcomeDesc\": \"تسجيل الدخول إلى حسابك الحالي ماني جوهرة\",\n      \"forgotPassword\": \"نسيت\",\n      \"forgotPasswordDesc\": \"أدخل رقم الجوال المسجل لاستعادة كلمة السر الخاصة بك.\",\n      \"termsAndCondition\": \"البنود و الظروف\",\n      \"privacyPolicy\": \"سياسة الخصوصية\",\n      \"aboutUS\": \"معلومات عنا\",\n      \"otpVerification\": \"التحقق من كود ركوب\",\n      \"otpVerificationDelivery\": \"التحقق من شفرة بيك اب\",\n      \"otpVerificationDeliveryDone\": \"التحقق من كود تسليم\",\n      \"enterOtp\": \"أدخل 4 أرقام\",\n      \"recoveryCode\": \"رمز الاسترداد\",\n      \"editProfile\": \"تعديل الملف الشخصي\",\n      \"myProfile\": \"ملفي\",\n      \"reset\": \"إعادة تعيين\",\n      \"yourPassword\": \"كلمة السر خاصتك\",\n      \"photo\": \"صورة فوتوغرافية\",\n      \"otpDesc\": \"تم إرسال رمز الاسترداد إلى رقم هاتفك المحمول. الرجاء إدخال الرمز.\",\n      \"otpVerifyDesc\": \"تم إرسال رمز التحقق إلى رقم هاتفك المحمول. الرجاء إدخال الرمز.\",\n      \"diamondDetail\": \"الماس التفاصيل\",\n      \"home\": \"الصفحة الرئيسية\",\n      \"search\": \"بحث\",\n      \"quickSearch\": \"بحث سريع\",\n      \"newArrival\": \"قادم جديد\",\n      \"exclusiveDiamonds\": \"الماس الحصرية\",\n      \"diamondOnAuction\": \"الماس في مزاد\",\n      \"stoneOfTheDays\": \"افضل شراء\",\n      \"myWatchlist\": \"بلدي قائمة الرغبات\",\n      \"myBid\": \"بلدي المزايدة\",\n      \"myHold\": \"بلدي الانتظار\",\n      \"myOrder\": \"بلدي قائمة أمرت\",\n      \"confirmStone\": \"ستون تأكيد\",\n      \"myOffice\": \"مكتبي مشاهدة\",\n      \"myOffer\": \"بلدي قائمة المنتجات\",\n      \"myPurchased\": \"بلدي التاريخ شراؤها\",\n      \"mySavedSearch\": \"بلدي بحث محفوظ\",\n      \"savedSearch\": \"بحث محفوظ\",\n      \"myDemand\": \"بلدي الطلب\",\n      \"contactUs\": \"اتصل بنا\",\n      \"changePassword\": \"غير كلمة السر\",\n      \"logout\": \"تسجيل خروج\",\n      \"fareDetailsTitle\": \"أدخل تفاصيل المبيعات\",\n      \"fairAmt\": \"مبيعات المبلغ\",\n      \"noOfPassengers\": \"عدد الركاب\",\n      \"remarks\": \"ملاحظات\",\n      \"orderNo\": \"الأمر رقم\",\n      \"typeOfService\": \"نوع الخدمة\",\n      \"paymentType\": \"نوع الدفع*\",\n      \"recentlyView\": \"مؤخرا عرض\",\n      \"uploadImgValidationText\": \"يجب أن يكون إيداع الملف. jpg أو JPEG أو بابوا نيو غينيا أو قوات الدفاع الشعبي وجود حجم 5 ميغا بايت أو أقل.\",\n      \"drivingLicenseHintText\": \"القيادة رقم الرخصة\",\n      \"PANCARDHintText\": \"PAN رقم البطاقة\",\n      \"viewRide\": \"عرض ركوب الخيل\",\n      \"myVehicle\": \"سيارتي\",\n      \"personalDocument\": \"مستندات شخصية\",\n      \"help\": \"مساعدة\",\n      \"about\": \"حول\",\n      \"bankDetails\": \"التفاصيل المصرفية\",\n      \"accountAndPayment\": \"الحساب والدفع\",\n      \"enquiry\": \"تحقيق\",\n      \"download\": \"تحميل\",\n      \"addToCart\": \"أضف إلى السلة\",\n      \"addToWatchList\": \"أضافة إلى قائمة المشاهدة\",\n      \"finalCalculation\": \"حساب النهائي\",\n      \"bookOffice\": \"مكتب كتاب\",\n      \"clearSelection\": \"مسح التحديد\",\n      \"comment\": \"تعليقات\",\n      \"hold\": \"معلق\",\n      \"offer\": \"عرض\",\n      \"officeView\": \"مكتب مشاهدة\",\n      \"placeOrder\": \"مكان الامر\",\n      \"buyNow\": \"اشتري الآن\",\n      \"cancelStone\": \"إلغاء الحجر\",\n      \"share\": \"شارك\",\n      \"watchlist\": \"قائمة الرغبات\",\n      \"exclusive\": \"حصرية\",\n      \"featuredStones\": \"احجار مميزة\",\n      \"stoneOfDay\": \"حجارة يوم\",\n      \"recentSearch\": \"البحث الأخيرة\",\n      \"viewAll\": \"عرض جميع\",\n      \"salesPersonDetail\": \"شخص المبيعات التفاصيل\",\n      \"searchTitle\": \"عنوان البحث\",\n      \"enterSearchTitle\": \"أدخل عنوان البحث\",\n      \"timeSlots\": \"فتحات الوقت\",\n      \"selectCustomDate\": \"تحديد موعد مخصص\",\n      \"availableSlot\": \"فتحات متاحة\",\n      \"reqOfficeView\": \"طلب مكتب مشاهدة\",\n      \"myComments\": \"تعليقي\",\n      \"myReminder\": \"بلدي تذكير\",\n      \"reminder\": \"تذكير\",\n      \"manageAddress\": \"إدارة العناوين\",\n      \"myAccount\": \"حسابي\",\n      \"declaimer\": \"تنصل\",\n      \"shareStone\": \"حصة ستون\",\n      \"addRemider\": \"إضافة تذكير\",\n      \"offlineSearch\": \"غير متصل البحث\",\n      \"searchHistory\": \"عمليات البحث السابقة\",\n      \"offlineStock\": \"الأسهم حاليا\",\n      \"searchOffline\": \"بحث (غير متصل)\",\n      \"voiceSearch\": \"البحث الصوتي\",\n      \"tapMictoSpeak\": \"اضغط هيئة التصنيع العسكري في الكلام\",\n      \"typeToSearch\": \"اكتب للبحث\",\n      \"typeWordsToSearch\": \"اكتب على الأقل 3 كلمات للبحث الحجارة\"\n    },\n    \"dynamickeys\": {\n      \"shape\": \"شكل\",\n      \"caratRange\": \"المدى قيراط\",\n      \"basicDetail\": \"تفاصيل أساسية\",\n      \"measurementTitle\": \"قياسات\",\n      \"inclusionDetail\": \"تفاصيل إدراج\",\n      \"other\": \"آخر\",\n      \"stoneID\": \"ID الحجر\",\n      \"labTitle\": \"مختبر\",\n      \"certNo\": \"Cert. لا.\",\n      \"locationTitle\": \"موقعك\",\n      \"shapeTitle\": \"شكل\",\n      \"caratTitle\": \"قيراط\",\n      \"colorTitle\": \"اللون\",\n      \"clarityTitle\": \"وضوح\",\n      \"cutTitle\": \"يقطع\",\n      \"polishTitle\": \"تلميع\",\n      \"symmentryTitle\": \"Symmentry\",\n      \"fluorescenceTitle\": \"ضوئي\",\n      \"rapTitle\": \"موسيقى الراب (٪)\",\n      \"discountTitle\": \"خصم (٪)\",\n      \"priceAndCt\": \"السعر / ط م\",\n      \"amountTitle\": \"كمية\",\n      \"eyeCleanTitle\": \"العين النظيفة\",\n      \"brownTitle\": \"بنى\",\n      \"milkyTitle\": \"حليبي\",\n      \"mixTingeTitle\": \"MIX مسحة\",\n      \"dimensionTitle\": \"الأبعاد (MM)\",\n      \"girdleTitle\": \"حزام (٪)\",\n      \"tableTitle\": \"الطاولة ٪\",\n      \"crownAngleTitle\": \"تاج زاوية\",\n      \"depthTitle\": \"٪ العمق\",\n      \"pavAngleTitle\": \"Pav Angle\",\n      \"crownHeightTitle\": \"ولي العهد الارتفاع (٪)\",\n      \"pavDepthTitle\": \"عمق جناح (٪)\",\n      \"starLengthTitle\": \"نجمة طول\",\n      \"lowerHalfTitle\": \"النصف السفلي\",\n      \"gridleTitle\": \"حزام\",\n      \"gridleFacetedTitle\": \"حزام الأوجه\",\n      \"culetTitle\": \"Culet\",\n      \"rationTitle\": \"نسبة\",\n      \"blackInclusionTitle\": \"إدراج أسود\",\n      \"otherInclusionTitle\": \"إدراج الآخرين\",\n      \"openInclusionTitle\": \"إدراج المفتوح\",\n      \"extraFacetTitle\": \"FACET اكسترا\",\n      \"naturalTitle\": \"طبيعي >> صفة\",\n      \"hAndATitle\": \"H & A\",\n      \"keyToSymbol\": \"KEY TO SYMBOL\",\n      \"labComments\": \"تعليقات LAB\",\n      \"laserInsTitle\": \"LASER INS\",\n      \"basicTitle\": \"الأساسي\",\n      \"advancedTitle\": \"المتقدمة\",\n      \"stoneIdTitle\": \"حجر ID / سيرت لا\",\n      \"defaultTitle\": \"إفتراضي\",\n      \"newDiamondsTitle\": \"الماس جديدة\",\n      \"priceLowToHigh\": \"السعر من الارخص للاعلى\",\n      \"priceHighToLow\": \"السعر الاعلى الى الادنى\",\n      \"disLowToHigh\": \"خصم الأدنى إلى الأعلى\",\n      \"disHighToLow\": \"خصم الاعلى الى الادنى\",\n      \"colorLowToHigh\": \"اللون الأدنى إلى الأعلى\",\n      \"colorHighToLow\": \"اللون من الأعلى إلى الأقل\",\n      \"caratLowToHigh\": \"قيراط الأدنى إلى الأعلى\",\n      \"caratHighToLow\": \"قيراط الاعلى الى الادنى\",\n      \"clarityLowToHigh\": \"وضوح الأدنى إلى الأعلى\",\n      \"clarityHighToLow\": \"وضوح الاعلى الى الادنى\",\n      \"colorShadeTitle\": \"لون الظل\",\n      \"certiTitle\": \"رقم شهادة\",\n      \"arrivalsTitle\": \"الوصول\",\n      \"lengthTitle\": \"الطول\",\n      \"widthTitle\": \"عرض\",\n      \"pavilionAngleTitle\": \"جناح زاوية\",\n      \"girdleConditionTitle\": \"حزام الحالة\",\n      \"cluetConditionTitle\": \"Culet الحالة\",\n      \"disTitle\": \"ديس٪\",\n      \"depthTitleWithoutPerc\": \"عمق\",\n      \"otherInformationTitle\": \"#ERROR!\"\n    }\n  }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/assets/Json/Localization.json b/assets/Json/Localization.json
--- a/assets/Json/Localization.json	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/assets/Json/Localization.json	(date 1635233390218)
@@ -663,7 +663,7 @@
       "stoneOfDay": "Best Buy",
       "recentSearch": "Recent Search",
       "viewAll": "View All",
-      "salesPersonDetail": "Sales Person Detail",
+      "salesPersonDetail": "Sales Detail",
       "searchTitle": "Search Title",
       "enterSearchTitle": "Enter Search Title",
       "timeSlots": "Time Slots",
Index: lib/app/constant/ApiConstants.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'dart:io';\n\nimport '../app.export.dart';\n\nclass ApiConstants {\n//  static const String PROXY_URL = \"PROXY 192.168.0.114:8888\";\n//   static String PROXY_URL = \"PROXY 192.168.2.153:8888\"; //HIMANSHI\n// static String PROXY_URL = \"PROXY 192.168.1.3:8888\"; //SNEHAL\n  //static String PROXY_URL = \"PROXY 192.168.0.153:8888\"; //KEVAL\n  static String PROXY_URL = \"PROXY 192.168.3.160:8888\"; //PRIYANSH\n\n//    static const String PROXY_URL = \"PROXY 10.0.2.2:8888\";\n\n  static const String imageBaseURL = baseURL;\n  static const String dashboardImageBaseURL =\n      \"https://betaapi.arjivexports.com\";\n//  static const String dashboardImageBaseURL = \"https://api.arjivexports.com\";\n  //static const String webPageUrl = \"https://customer.arjivexports.com/\";\n  static const String shareUrl = baseURL + \"/diamond-details/\";\n  static const String googleDocUrl =\n      \"https://docs.google.com/viewer?embedded=true&url=\";\n\n  static const String apiUrl = baseURL;\n  static const String commonUrl = apiUrl + \"device/v1/\";\n  static const String authUrl = apiUrl + \"web/v1/auth/\";\n  static const String shareAndEarn = \"\";\n\n  static const String countryList = commonUrl + \"country/paginate\";\n  static const String stateList = commonUrl + \"state/paginate\";\n  static const String cityList = commonUrl + \"city/paginate\";\n\n  static const String documentUpload = commonUrl + \"upload-file\";\n\n  static const String masterSync = commonUrl + \"masterSync\";\n\n  static const String login = commonUrl + \"auth/login\";\n  static const String diamondListSales = commonUrl + \"common/diamond/paginate\";\n\n  static const String diamondList = commonUrl + \"diamond/paginate\";\n  static const String diamondMatchPair =\n      commonUrl + \"match-pair/diamond/filter\";\n\n  static const String stoneOfTheDay = commonUrl + \"featuredStone/paginate\";\n\n  static const String mySaveSearch = commonUrl + \"diamond/search/list\";\n\n  static const String diamondTrackList = commonUrl + \"diamond-track/paginate\";\n  static const String diamondCommentList =\n      commonUrl + \"diamond-comment/by-user\";\n  static const String diamondBidList = commonUrl + \"diamond-bid/paginate\";\n  static const String diamondOfficeList = commonUrl + \"cabin-schedule/list\";\n  static const String diamondOrderList = commonUrl + \"memo/paginate\";\n  static const String diamondBlockList = commonUrl + \"diamond-block/paginate\";\n\n  static const String createDiamondTrack = commonUrl + \"diamond-track/create\";\n  static const String upsetComment = commonUrl + \"diamond-comment/upsert\";\n  static const String createDiamondBid = commonUrl + \"diamond-bid/create\";\n\n  static const String placeOrder = commonUrl + \"diamond-confirm/request\";\n  static const String staticPage = apiV1 + \"static-page/{id}\";\n  static const String forgetPassword = authUrl + \"forgot-password\"; //done\n  static const String resetPassword = commonUrl + \"user/reset-password\";\n  static const String changePassword =\n      apiUrl + \"web/v1/auth/reset-password-by-user\"; //done\n  static const String personalInformation = commonUrl + \"user/update\"; //done\n  static const String sendOTP = commonUrl + \"user/send-otp\"; //done\n  static const String forgotMpin = commonUrl + \"forgot-mpin\";\n  static const String verifyOTP = commonUrl + \"user/verify-otp\"; //done\n  static const String verifyOTPForMpin = commonUrl + \"verify-mpin-otp\"; //done\n  static const String verifyMpin = commonUrl + \"verify-mpin\"; //done\n  static const String companyInformation =\n      commonUrl + \"user/profile/update\"; //done\n  static const String quickSearch = commonUrl + \"diamond/quick-search\";\n  static const String personalInformationView = commonUrl + \"user/view\";\n  static const String companyInformationView = commonUrl + \"user/profile\";\n  static const String savedSearch = commonUrl + \"diamond/search/upsert\";\n  static const String signInAsGuest = commonUrl + \"guest/auth/login\";\n\n  //Office\n  static const String getSlots = commonUrl + \"cabin-slot/paginate\";\n  static const String createOfficerequest = commonUrl + \"cabin-schedule/create\";\n\n  //VERSION UPDATION\n  static const getUpdation = commonUrl + \"version\";\n\n  //Dashboard\n  static const String dashboard = commonUrl + \"user/dashboard\";\n  static const String deleteSavedSearch = commonUrl + \"diamond/search/delete\";\n  static const String logout = commonUrl + \"auth/logout\";\n  static const String sendAnalytics = commonUrl + \"auth/logout\";\n\n  static const String diamondTrackDelete = commonUrl + \"diamond-track/delete\";\n  static const String diamondComentDelete =\n      commonUrl + \"diamond-comment/delete\";\n  static const String diamondBidDelete = commonUrl + \"diamond-bid/delete\";\n\n  static const String markAsReadNotification =\n      commonUrl + \"notification/markAsRead\";\n\n  static const String sendNotificationId = commonUrl + \"user/player\";\n  static const String searchReportNo = \"web/v1/diamond/reportno/paginate\";\n\n  //Excel\n  static const String baseURLForExcel2 = \"http://arjivlocalapi.democ.in/data\";\n  static const String baseURLForExcel = \"https://betaapi.arjivexports.com/data\";\n\n  static const String baseURL2 = \"https://beta.arjivexports.com/device/\";\n  static const String termsCondition = baseURL2 + \"terms-condition\";\n  static const String privacyPolicy = baseURL2 + \"privacy-policy\";\n  static const String contactUs = baseURL2 + \"contact-us\";\n  static const String shippingPolicy = baseURL2 + \"shipping-policy\";\n  static const String aboutUs = baseURL2 + \"about-us\";\n\n  //mpin\n  static const String createMpin = commonUrl + \"user/create-mpin\";\n  static const String resetMpin = commonUrl + \"reset-mpin\";\n  static const String resetMpinByOtp = commonUrl + \"reset-mpin-by-otp\";\n\n  //Networkclient api calls\n  static const String dimaondTrackCreate = \"device/v1/diamond-track/create\";\n  static const String placeOrderOffline = \"device/v1/diamond-confirm/request\";\n  static const String uploadKyc = \"device/v1/account/\";\n\n  static const String notificationList = apiUrl + \"device/v1/notification/list\";\n  static const String updateOffer = \"device/v1/diamond-track/update\";\n  static const String shareThroughEmail = apiUrl + \"web/v1/diamond/excel\";\n  static const String analytics = \"apis/analytics/create\";\n  static const String companyList = \"device/v1/common/account/paginate\";\n  static const String buyerList = \"device/v1/common/user/paginate\";\n  static const String salesmanList = \"device/v1/common/seller/paginate\";\n  static const String deleteOffice =\n      \"device/v1/cabin-schedule/destroyDiamondAndSlot\";\n\n  static const String buyNow = \"device/v1/common/diamond-confirm/request\";\n  static const String holdDiamond = \"device/v1/common/diamond-block/create\";\n  static const String holdList = \"device/v1/common/diamond-block/paginate\";\n  static const String byunowList = \"device/v1/common/diamond-confirm/paginate\";\n}\n\nclass DiamondUrls {\n  static const String commonUrl =\n      // \"https://s3.us-east-2.wasabisys.com/cdn.pndiamonds.com/\";\n      // \"https://arjivexports.blob.core.windows.net/arjivfiles/Imaged/PLOTING/C895-46.png\";\n      \"https://arjivexports.blob.core.windows.net/arjivfiles/\";\n  static const String commonUrlForImage =\n      \"https://arjivexports.blob.core.windows.net/arjivfiles/Imaged/\";\n  static const String image = commonUrlForImage + \"IMAGE/\";\n  static const String layout = commonUrlForImage + \"Layout/\";\n\n  // commonUrlForImage + \"stonevideos/StoneImage_04-01-2020/\";\n  static String video = commonUrl + \"HDView/\";\n  static const String heartImage = commonUrlForImage + \"HA/\";\n  //https://arjivexports.blob.core.windows.net/arjivfiles/Imaged/ROUGH/***/video.mp4\n  // commonUrlForImage + \"stonevideos/StoneImage_04-01-2020/\";\n  static const String plotting = commonUrlForImage + \"PLOTING/\";\n  static const String proportion = commonUrlForImage + \"PLOTING/MEASUREMENT/\";\n  static const String natural = commonUrlForImage + \"NVIDEO/\";\n  static const String certificate = commonUrlForImage + \"PDF/\";\n  static const String arroImage =\n      commonUrlForImage + \"stonevideos/StoneImage_04-01-2020/\";\n  static const String videomp4 = commonUrl + \"Mov/\";\n  static const String roughVideo = commonUrlForImage + \"ROUGH/\";\n  static const String polVideo = commonUrl + \"viewer3/mp4_videos/\";\n  static const String assetImage =\n      commonUrl + \"stonevideos/StoneImage_04-01-2020/\";\n  static const String flouresenceImg = commonUrl + \"HDView/imaged/\";\n  static const String idealScopeImg = commonUrl + \"IDEAL_White_BG/\";\n  static const String darkFieldImg = commonUrl + \"Dark_Field_White_BG/\";\n  static const String faceUpImg = commonUrl + \"Office_Light_Black_BG/\";\n  static const String realImg2 = commonUrl + \"viewer3/RealImages/\";\n  static const String type2A = commonUrl + \"TYPE_IIA/\";\n  static const String roughScopeImg = commonUrl + \"MFG/RoughImages/\";\n  static const String image3D = commonUrl + \"MFG/PlanImages/\";\n  static const String roughImage = commonUrl + \"MFG/RoughImages/\";\n  static const String threeDImage = commonUrl + \"MFG/PlanImages/\"; // 3D Image\n  static const String b2bImage = commonUrl + \"RealImages/\"; // B2B Image\n\n  //https://arjivexports.blob.core.windows.net/arjivfiles/Imaged/NIMAGE/***.jpg\n  static const String naturalImage = commonUrlForImage + \"NIMAGE/\";\n\n  // flsImage: `https://arjivexports.blob.core.windows.net/arjivfiles/HDView/imaged/***/fluorescence.jpg`\n\n}\n\nclass DiamondDetailImageConstant {\n  static const int RoughImage = 1;\n  static const int RoughVideo = 2;\n  static const int ThreeDImage = 3;\n  static const int B2BImage = 4;\n}\n// https://s3.ap-south-1.amazonaws.com/finestargroup/CertiImages/<report_no>.pdf\n// https://s3.ap-south-1.amazonaws.com/finestargroup/MFG/RoughVideo/<packet_no>.html\n// https://s3.ap-south-1.amazonaws.com/finestargroup/viewer3/mp4_videos/<packet_no>.mp4\n// https://s3.ap-south-1.amazonaws.com/finestargroup/AssetScopeImages/<packet_no>.jpg\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/app/constant/ApiConstants.dart b/lib/app/constant/ApiConstants.dart
--- a/lib/app/constant/ApiConstants.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/app/constant/ApiConstants.dart	(date 1635231126236)
@@ -7,7 +7,8 @@
 //   static String PROXY_URL = "PROXY 192.168.2.153:8888"; //HIMANSHI
 // static String PROXY_URL = "PROXY 192.168.1.3:8888"; //SNEHAL
   //static String PROXY_URL = "PROXY 192.168.0.153:8888"; //KEVAL
-  static String PROXY_URL = "PROXY 192.168.3.160:8888"; //PRIYANSH
+  // static String PROXY_URL = "PROXY 192.168.3.160:8888"; //PRIYANSH
+  static String PROXY_URL = "PROXY 192.168.3.152:8888"; //YASH
 
 //    static const String PROXY_URL = "PROXY 10.0.2.2:8888";
 
Index: lib/Setting/SettingModel.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:diamnow/app/app.export.dart';\nimport 'package:diamnow/app/constant/ImageConstant.dart';\nimport 'package:diamnow/app/localization/app_locales.dart';\nimport 'package:diamnow/components/Screens/Home/DrawerModel.dart';\nimport 'package:diamnow/models/DiamondList/DiamondConstants.dart';\nimport 'package:diamnow/models/FilterModel/BottomTabModel.dart';\n\nclass DrawerSetting {\n  List<DrawerModel> getDrawerItems() {\n    List<DrawerModel> drawerList = [];\n    if (app.resolve<PrefUtils>().isUserCustomer() &&\n        app\n            .resolve<PrefUtils>()\n            .getModulePermission(ModulePermissionConstant.permission_dashboard)\n            .view)\n      drawerList.add(DrawerModel(\n        image: dashboard,\n        title: R.string.screenTitle.home,\n        isSelected: true,\n        type: DiamondModuleConstant.MODULE_TYPE_HOME,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_searchDiamond)\n        .view)\n      drawerList.add(DrawerModel(\n        image: drawerSearch,\n        title: R.string.screenTitle.search,\n        isSelected: true,\n        type: DiamondModuleConstant.MODULE_TYPE_SEARCH,\n      ));\n    // if (app\n    //     .resolve<PrefUtils>()\n    //     .getModulePermission(ModulePermissionConstant.permission_quickSearch)\n    //     .view)\n    //   drawerList.add(DrawerModel(\n    //     image: quickSearch,\n    //     title: R.string.screenTitle.quickSearch,\n    //     isSelected: false,\n    //     type: DiamondModuleConstant.MODULE_TYPE_QUICK_SEARCH,\n    //   ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_exclusive)\n        .view)\n      drawerList.add(DrawerModel(\n        image: exclusiveDiamonds,\n        title: R.string.screenTitle.exclusiveDiamonds,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_EXCLUSIVE_DIAMOND,\n        isShowCount: false,\n        countBackgroundColor: fromHex(\"#288F5A\"),\n        count: 25,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_newGoods)\n        .view)\n      drawerList.add(DrawerModel(\n        image: newArrival,\n        title: R.string.screenTitle.newArrival,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL,\n        isShowCount: false,\n        countBackgroundColor: fromHex(\"#2193B0\"),\n        count: 250,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_auction)\n        .view)\n      drawerList.add(DrawerModel(\n        image: diamondOnAuction,\n        title: R.string.screenTitle.diamondOnAuction,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION,\n        isShowCount: false,\n        countBackgroundColor: fromHex(\"#9C2AC4\"),\n        count: 50,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(\n            ModulePermissionConstant.permission_upcomingDiamonds)\n        .view)\n      drawerList.add(DrawerModel(\n        image: upcoming,\n        title: R.string.screenTitle.upcoming,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_UPCOMING,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(\n            ModulePermissionConstant.permission_stone_of_the_day)\n        .view)\n      drawerList.add(DrawerModel(\n        image: stoneOfTheDay,\n        title: R.string.screenTitle.stoneOfTheDays,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_STONE_OF_THE_DAY,\n        isShowCount: false,\n        countBackgroundColor: fromHex(\"#003365\"),\n        count: 15,\n      )); //Best Buy\n\n    /*drawerList.add(DrawerModel(\n      image: stoneOfTheDay,\n      title: \"Price Calculator\",\n      isSelected: false,\n      type: DiamondModuleConstant.MODULE_TYPE_PRICE_CALCULATOR,\n      isShowCount: false,\n      countBackgroundColor: fromHex(\"#003365\"),\n    ));*/\n\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_offline_stock)\n        .view) {\n      drawerList.add(DrawerModel(\n        image: mySavedSearch,\n        title: R.string.screenTitle.offlineStock,\n        isSelected: false,\n        isShowDivider: false,\n        isShowUpperDivider: true,\n        type: DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK,\n      ));\n\n      drawerList.add(DrawerModel(\n        image: drawerSearch,\n        title: R.string.screenTitle.offlineSearch,\n        isSelected: false,\n        isShowDivider: false,\n        isShowUpperDivider: false,\n        type: DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH,\n      ));\n\n      drawerList.add(DrawerModel(\n        image: drawerSearch,\n        title: R.string.screenTitle.searchHistory,\n        isSelected: false,\n        isShowDivider: false,\n        isShowUpperDivider: false,\n        type: DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH_HISTORY,\n      ));\n    }\n\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_mySavedSearch)\n        .view)\n      drawerList.add(DrawerModel(\n        image: mySavedSearch,\n        title: R.string.screenTitle.mySavedSearch,\n        isSelected: false,\n        isShowDivider: false,\n        isShowUpperDivider: true,\n        type: DiamondModuleConstant.MODULE_TYPE_MY_SAVED_SEARCH,\n      ));\n\n    drawerList.add(DrawerModel(\n      image: userTheme,\n      title: R.string.screenTitle.myAccount,\n      isSelected: false,\n      isShowDivider: true,\n      isShowUpperDivider: false,\n      type: DiamondModuleConstant.MODULE_TYPE_PROFILE,\n    ));\n    /*if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_mySavedSearch)\n        .view)\n      drawerList.add(DrawerModel(\n        image: recentSearch,\n        title: R.string.screenTitle.recentSearch,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_RECENT_SEARCH,\n        isShowDivider: true,\n      ));*/\n    drawerList.add(DrawerModel(\n      image: termsAndCondition,\n      title: R.string.screenTitle.termsAndCondition,\n      isSelected: false,\n      type: DiamondModuleConstant.MODULE_TYPE_TERM_CONDITION,\n    ));\n    drawerList.add(DrawerModel(\n      image: privacyPolicy,\n      title: R.string.screenTitle.privacyPolicy,\n      isSelected: false,\n      type: DiamondModuleConstant.MODULE_TYPE_PRIVACY_POLICY,\n    ));\n    drawerList.add(DrawerModel(\n      image: aboutUs,\n      title: R.string.screenTitle.aboutUS,\n      isSelected: false,\n      type: DiamondModuleConstant.MODULE_TYPE_ABOUT_US,\n    ));\n    drawerList.add(DrawerModel(\n      image: contactUs,\n      title: R.string.screenTitle.contactUs,\n      isSelected: false,\n      type: DiamondModuleConstant.MODULE_TYPE_CONTACT_US,\n    ));\n    /*drawerList.add(DrawerModel(\n      image: changePassword,\n      title: R.string.screenTitle.changePassword,\n      isSelected: false,\n      type: DiamondModuleConstant.MODULE_TYPE_CHANGE_PASSWORD,\n    ));\n    drawerList.add(DrawerModel(\n      image: user,\n      title: R.string.screenTitle.myProfile,\n      isSelected: false,\n      type: DiamondModuleConstant.MODULE_TYPE_PROFILE,\n    ));*/\n    drawerList.add(DrawerModel(\n      image: logout,\n      title: R.string.screenTitle.logout,\n      isSelected: false,\n      type: DiamondModuleConstant.MODULE_TYPE_LOGOUT,\n    ));\n    return drawerList;\n    /*return <DrawerModel>[\n      DrawerModel(\n        image: search,\n        title: \"Search\",\n        isSelected: true,\n        type: DrawerConstant.MODULE_SEARCH,\n      ),\n      */ /*DrawerModel(\n        image: drawer_logout,\n        title: R.string.screenTitle.logout,\n        isSelected: false,\n        type: DrawerConstant.LOGOUT,\n      ),*/ /*\n    ];*/\n  }\n\n  List<DrawerModel> getAccountListItems() {\n    List<DrawerModel> drawerList = [];\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_watchlist)\n        .view)\n      drawerList.add(DrawerModel(\n        image: myWatchlist,\n        title: R.string.screenTitle.myWatchlist,\n        imageColor: appTheme.colorPrimary,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_cart)\n        .view)\n      drawerList.add(DrawerModel(\n          image: addToCartDrawer,\n          title: R.string.screenTitle.myCart,\n          imageColor: appTheme.colorPrimary,\n          isSelected: false,\n          type: DiamondModuleConstant.MODULE_TYPE_MY_CART));\n    // if (app\n    //     .resolve<PrefUtils>()\n    //     .getModulePermission(ModulePermissionConstant.permission_bid)\n    //     .view)\n    drawerList.add(DrawerModel(\n      image: bidImage,\n      title: R.string.screenTitle.myBid,\n      imageColor: appTheme.colorPrimary,\n      isSelected: false,\n      type: DiamondModuleConstant.MODULE_TYPE_MY_BID,\n    ));\n//    if (app\n//        .resolve<PrefUtils>()\n//        .getModulePermission(ModulePermissionConstant.permission_hold)\n//        .view)\n//      drawerList.add(DrawerModel(\n//        image: myHold,\n//        title: R.string.screenTitle.myHold,\n//        imageColor: appTheme.colorPrimary,\n//        isSelected: false,\n//        type: DiamondModuleConstant.MODULE_TYPE_MY_HOLD,\n//      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_enquiry)\n        .view)\n      drawerList.add(DrawerModel(\n        image: enquiryDrawer,\n        title: R.string.screenTitle.myEnquiry,\n        imageColor: appTheme.colorPrimary,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY,\n      ));\n\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_appointment)\n        .view)\n      drawerList.add(DrawerModel(\n        image: myOffice,\n        title: R.string.screenTitle.myOffice,\n        imageColor: appTheme.colorPrimary,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_MY_OFFICE,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_offer)\n        .view)\n      drawerList.add(DrawerModel(\n        image: myOffer,\n        title: R.string.screenTitle.myOffer,\n        imageColor: appTheme.colorPrimary,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_MY_OFFER,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_order)\n        .view)\n      drawerList.add(DrawerModel(\n        image: confirmStones,\n        title: R.string.screenTitle.confirmStone,\n        imageColor: appTheme.colorPrimary,\n        isSelected: false,\n        type: DiamondModuleConstant.MODULE_TYPE_MY_ORDER,\n      ));\n\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_purchase)\n        .view)\n      drawerList.add(DrawerModel(\n        image: myOrder,\n        title: R.string.screenTitle.myPurchased,\n        isSelected: false,\n        imageColor: appTheme.colorPrimary,\n        type: DiamondModuleConstant.MODULE_TYPE_MY_PURCHASE,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_comment)\n        .view)\n      drawerList.add(DrawerModel(\n          image: commentDrawer,\n          title: R.string.screenTitle.myComments,\n          imageColor: appTheme.colorPrimary,\n          isSelected: false,\n          type: DiamondModuleConstant.MODULE_TYPE_MY_COMMENT));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_reminder)\n        .view)\n      drawerList.add(DrawerModel(\n          image: reminder,\n          title: R.string.screenTitle.myReminder,\n          imageColor: appTheme.colorPrimary,\n          isSelected: false,\n          type: DiamondModuleConstant.MODULE_TYPE_MY_REMINDER));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_myDemand)\n        .view)\n      drawerList.add(DrawerModel(\n        image: myDemandImage,\n        title: R.string.screenTitle.myDemand,\n        imageColor: appTheme.colorPrimary,\n        isSelected: false,\n        isShowDivider: true,\n        type: DiamondModuleConstant.MODULE_TYPE_MY_DEMAND,\n      ));\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_address)\n        .view)\n      drawerList.add(DrawerModel(\n        image: manageAddress,\n        title: R.string.screenTitle.manageAddress,\n        isSelected: false,\n        imageColor: appTheme.colorPrimary,\n        type: DiamondModuleConstant.MODULE_TYPE_MANAGE_ADDRESS,\n      ));\n    // drawerList.add(DrawerModel(\n    //   image: manageAddress,\n    //   title: R.string.commonString.touchId,\n    //   isSelected: false,\n    //   imageColor: appTheme.colorPrimary,\n    //   type: DiamondModuleConstant.MODULE_TYPE_TOUCH_ID,\n    // ));\n    // if (app.resolve<PrefUtils>().getUserDetails().isMpinAdded) {\n    //   drawerList.add(DrawerModel(\n    //     image: changePassword,\n    //     title: R.string.commonString.mPin,\n    //     isSelected: false,\n    //     imageColor: appTheme.colorPrimary,\n    //     type: DiamondModuleConstant.MODULE_TYPE_MPIN,\n    //   ));\n    // }\n    drawerList.add(DrawerModel(\n        image: changePassword,\n        title: R.string.screenTitle.changePassword,\n        isSelected: false,\n        imageColor: appTheme.colorPrimary,\n        type: DiamondModuleConstant.MODULE_TYPE_CHANGE_PASSWORD));\n\n    // drawerList.add(DrawerModel(\n    //   image: changePassword,\n    //   title: app.resolve<PrefUtils>().getUserDetails().isMpinAdded == false\n    //       ? \"Create MPin\"\n    //       : \"Change MPin\",\n    //   isSelected: false,\n    //   imageColor: appTheme.colorPrimary,\n    //   type: DiamondModuleConstant.MODULE_TYPE_CHANGEMPIN,\n    // ));\n\n    drawerList.add(DrawerModel(\n      image: logout,\n      title: R.string.screenTitle.logout,\n      isSelected: false,\n      imageColor: appTheme.colorPrimary,\n      type: DiamondModuleConstant.MODULE_TYPE_LOGOUT,\n    ));\n    return drawerList;\n  }\n}\n\nisDisplayDelete(int moduleType) {\n  bool isDisplay = false;\n  switch (moduleType) {\n    case DiamondModuleConstant.MODULE_TYPE_MY_CART:\n      if (app\n          .resolve<PrefUtils>()\n          .getModulePermission(ModulePermissionConstant.permission_cart)\n          .delete) isDisplay = true;\n      break;\n    case DiamondModuleConstant.MODULE_TYPE_MY_COMMENT:\n      if (app\n          .resolve<PrefUtils>()\n          .getModulePermission(ModulePermissionConstant.permission_comment)\n          .delete) isDisplay = true;\n      break;\n    case DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST:\n      if (app\n          .resolve<PrefUtils>()\n          .getModulePermission(ModulePermissionConstant.permission_watchlist)\n          .delete) isDisplay = true;\n      break;\n    case DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY:\n      if (app\n          .resolve<PrefUtils>()\n          .getModulePermission(ModulePermissionConstant.permission_enquiry)\n          .delete) isDisplay = true;\n      break;\n    case DiamondModuleConstant.MODULE_TYPE_MY_OFFER:\n      // if (app\n      //     .resolve<PrefUtils>()\n      //     .getModulePermission(ModulePermissionConstant.permission_offer)\n      //     .delete) isDisplay = true;\n      isDisplay = false;\n      break;\n    case DiamondModuleConstant.MODULE_TYPE_MY_REMINDER:\n      if (app\n          .resolve<PrefUtils>()\n          .getModulePermission(ModulePermissionConstant.permission_reminder)\n          .delete) isDisplay = true;\n      break;\n    case DiamondModuleConstant.MODULE_TYPE_MY_BID:\n      if (app\n          .resolve<PrefUtils>()\n          .getModulePermission(ModulePermissionConstant.permission_bid)\n          .delete) isDisplay = true;\n      break;\n    case DiamondModuleConstant.MODULE_TYPE_MY_OFFICE:\n      if (app\n          .resolve<PrefUtils>()\n          .getModulePermission(ModulePermissionConstant.permission_appointment)\n          .delete) isDisplay = true;\n      break;\n  }\n  return isDisplay;\n}\n\nisDisplayDetail(int moduleType) {\n  bool isDisplay = true;\n  switch (moduleType) {\n    case DiamondModuleConstant.MODULE_TYPE_MY_ORDER:\n    case DiamondModuleConstant.MODULE_TYPE_MY_PURCHASE:\n      isDisplay = false;\n      break;\n  }\n  return isDisplay;\n}\n\nclass BottomMenuSetting {\n  int moduleType;\n\n  BottomMenuSetting(this.moduleType);\n\n  List<BottomTabModel> getMoreMenuItems(\n      {bool isDetail = false, bool isCompare = false}) {\n    List<BottomTabModel> moreMenuList = [];\n    if (!app.resolve<PrefUtils>().isUserCustomer() &&\n        moduleType != DiamondModuleConstant.MODULE_TYPE_MY_CART) {\n      addCartInBottomMenu(moreMenuList);\n    }\n    if (!app.resolve<PrefUtils>().isUserCustomer()&&\n        moduleType != DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST) {\n      addWatchlistInBottomMenu(moreMenuList, home_watchlist);\n    }\n\n    if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_ORDER) {\n      if (moduleType == DiamondModuleConstant.MODULE_TYPE_STONE_OF_THE_DAY) {\n        addPlaceOrderInBottomMenu(moreMenuList, placeOrder);\n      }\n    }\n//    if ((app.resolve<PrefUtils>().getUserDetails().account?.isApproved ??\n//            KYCStatus.pending) ==\n//        KYCStatus.approved) {\n    if (!isDetail && !isCompare) {\n      if (moduleType != DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION &&\n          moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK &&\n          moduleType !=\n              DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n        addCompareInBottomMenu(moreMenuList, compare);\n      }\n    }\n//    }\n    if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY) {\n      addEnquiryInBottomMenu(moreMenuList);\n    }\n    if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_OFFICE &&\n        moduleType != DiamondModuleConstant.MODULE_TYPE_MY_BID &&\n        moduleType != DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL &&\n        moduleType != DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION &&\n        app\n            .resolve<PrefUtils>()\n            .getModulePermission(ModulePermissionConstant.permission_office)\n            .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: myOffice,\n          isCenter: false,\n          title: R.string.screenTitle.officeView,\n          type: ActionMenuConstant.ACTION_TYPE_APPOINTMENT));\n    }\n    if (moduleType != DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION &&\n        moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK &&\n        moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n      addCommentInBottomMenu(moreMenuList);\n    }\n    // if (!isDetail && !isCompare) {\n    //   addCompareInBottomMenu(moreMenuList, compare);\n    // }\n\n//    if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_REMINDER) {\n//      if (moduleType != DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION) {\n//        addReminderInBottomMenu(moreMenuList);\n//      }\n//    }\n//    if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_OFFER) {\n//      if (moduleType != DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION &&\n//          moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK &&\n//          moduleType !=\n//              DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n//        if (isDiamondSearchModule(moduleType) && !isCompare) {\n//          addOfferInBottomMenu(moreMenuList, offer);\n//        }\n//      }\n//    }\n    if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_OFFICE) {\n      if (moduleType != DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION &&\n          moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK &&\n          moduleType !=\n              DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n        addAppointmentInBottomMenu(moreMenuList);\n      }\n    }\n\n//    addExcelBottomMenu(moreMenuList);\n\n    /* moreMenuList.add(BottomTabModel(\n        image: hold,\n        title: R.string.screenTitle.hold,\n        type: ActionMenuConstant.ACTION_TYPE_HOLD));*/\n    if (!isCompare) {\n      if (isDisplayDelete(moduleType)) {\n        addDeleteInBottomMenu(moreMenuList);\n      }\n    }\n\n    addDownloadInBottomMenu(moreMenuList, download);\n//    addClearSelectionInBottomMenu(moreMenuList, clearSelection);\n    addShareInBottomMenu(moreMenuList, share);\n    return moreMenuList;\n  }\n\n  List<BottomTabModel> getBottomMenuItems(int moduleType,\n      {bool isDetail = false, bool isCompare = false}) {\n    List<BottomTabModel> moreMenuList = [];\n    switch (moduleType) {\n      case DiamondModuleConstant.MODULE_TYPE_MY_ORDER:\n      case DiamondModuleConstant.MODULE_TYPE_MY_PURCHASE:\n        addShareInBottomMenu(moreMenuList, shareWhite, isCenter: false);\n        addDownloadInBottomMenu(moreMenuList, downloadWhite, isCenter: false);\n\n        break;\n      case DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION:\n        addBidStoneInBottomMenu(moreMenuList);\n\n        addWatchlistInBottomMenu(moreMenuList, addToWatchlist, isCenter: false);\n        addFinalCalculationInBottomMenu(moreMenuList);\n        if (!isDetail && !isCompare) {\n          addCompareInBottomMenu(moreMenuList, compare, isCenter: false);\n        }\n\n        moreMenuList.add(BottomTabModel(\n          title: R.string.commonString.more,\n          isCenter: false,\n          image: plusIcon,\n          type: ActionMenuConstant.ACTION_TYPE_MORE,\n        ));\n        break;\n      case DiamondModuleConstant.MODULE_TYPE_MY_BID:\n        addConfirmStone(moreMenuList,\n            title: \"Update Stone\",\n            image: updateStones,\n            type: ActionMenuConstant.ACTION_TYPE_UPDATE_NOTE);\n        addEnquiryInBottomMenu(moreMenuList);\n        addCompareInBottomMenu(moreMenuList, compare, isCenter: false);\n        addShareInBottomMenu(moreMenuList, shareWhite, isCenter: false);\n        addDownloadInBottomMenu(moreMenuList, downloadWhite, isCenter: false);\n        break;\n      case DiamondModuleConstant.MODULE_TYPE_UPCOMING:\n        addWatchlistInBottomMenu(moreMenuList, addToWatchlist, isCenter: false);\n        if (!isDetail && !isCompare) {\n          addCompareInBottomMenu(moreMenuList, compare, isCenter: false);\n          addClearSelectionInBottomMenu(moreMenuList, clearSelectionWhite,\n              isCenter: false);\n        }\n        addShareInBottomMenu(moreMenuList, shareWhite, isCenter: false);\n        addDownloadInBottomMenu(moreMenuList, downloadWhite, isCenter: false);\n\n        break;\n\n      case DiamondModuleConstant.MODULE_TYPE_FINAL_CALCULATION:\n        addPlaceOrderInBottomMenu(moreMenuList, placeOrder, isCenter: false);\n\n        moreMenuList.add(BottomTabModel(\n            image: cancelStone,\n            title: R.string.screenTitle.cancelStone,\n            isCenter: false,\n            type: ActionMenuConstant.ACTION_TYPE_CANCEL_STONE));\n        addShareInBottomMenu(moreMenuList, shareWhite, isCenter: false);\n\n        break;\n      default:\n        if (!app.resolve<PrefUtils>().isUserCustomer()) {\n          if (moduleType == DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY ||\n              moduleType == DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST ||\n              moduleType == DiamondModuleConstant.MODULE_TYPE_MY_CART ||\n              moduleType == DiamondModuleConstant.MODULE_TYPE_MY_OFFER ||\n              moduleType == DiamondModuleConstant.MODULE_TYPE_SEARCH ||\n              moduleType == DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL ||\n              moduleType == DiamondModuleConstant.MODULE_TYPE_QUICK_SEARCH ||\n              moduleType == DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK) {\n            addPlaceOrderInBottomMenu(moreMenuList, placeOrder,\n                isCenter: false);\n            // if (app\n            //   .resolve<PrefUtils>()\n            //   .getModulePermission(ModulePermissionConstant.permission_bid)\n            //   .insert)\n            // moreMenuList.add(BottomTabModel(\n            //     image: bidImage,\n            //     isCenter: false,\n            //     title: R.string.screenTitle.myBid,\n            //     type: ActionMenuConstant.ACTION_TYPE_MY_BID));\n          }\n\n//\n          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_HOLD) {\n            addHoldInBottomMenu(moreMenuList, sale_hold, isCenter: false);\n          }\n\n          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MEMO) {\n            addMemoInBottomMenu(\n              moreMenuList,\n              sale_note,\n              isCenter: false,\n            );\n          }\n//        if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST) {\n//          addWatchlistInBottomMenu(moreMenuList, addToWatchlist,\n//              isCenter: false);\n//        }\n//          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY) {\n//            addEnquiryInBottomMenu(moreMenuList);\n//          }\n          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_CART) {\n            addCartInBottomMenu(moreMenuList);\n          }\n\n          if (!isDiamondSearchModule(moduleType)) {\n            if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_OFFER &&\n                moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK &&\n                moduleType !=\n                    DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n              addOfferInBottomMenu(moreMenuList, offerWhite, isCenter: false);\n            }\n          }\n          if (isDiamondSearchModule(moduleType) && isDetail) {\n            addOfferInBottomMenu(moreMenuList, offerWhite, isCenter: false);\n          }\n\n//          For Compare special\n          if (isCompare) {\n            addOfferInBottomMenu(moreMenuList, offerWhite, isCenter: false);\n          }\n          if (!isCompare && !isDetail) {\n            if (moduleType !=\n                    DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION &&\n                moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK &&\n                moduleType !=\n                    DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n              moreMenuList.add(BottomTabModel(\n                  title: R.string.commonString.status,\n                  isCenter: false,\n                  image: status,\n                  type: ActionMenuConstant.ACTION_TYPE_STATUS));\n            }\n          }\n\n          if (moduleType == DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK ||\n              moduleType ==\n                  DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n            addCompareInBottomMenu(moreMenuList, compare, isCenter: false);\n          }\n          moreMenuList.add(BottomTabModel(\n            title: R.string.commonString.more,\n            isCenter: false,\n            image: plusIcon,\n            type: ActionMenuConstant.ACTION_TYPE_MORE,\n          ));\n        } else {\n          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_PURCHASE) {\n            addConfirmStone(moreMenuList);\n          }\n          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_OFFER) {\n            addOfferInBottomMenu(moreMenuList, offer,\n                isCenter: false, title: R.string.screenTitle.offer);\n          }\n          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST) {\n            addWatchlistInBottomMenu(moreMenuList, addToWatchlist,\n                isCenter: false);\n          }\n//          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY) {\n//            addEnquiryInBottomMenu(moreMenuList);\n//          }\n          if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_CART) {\n            addCartInBottomMenu(moreMenuList);\n          }\n\n//          if (moduleType == DiamondModuleConstant.MODULE_TYPE_MY_ENQUIRY ||\n//              moduleType == DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST ||\n//              moduleType == DiamondModuleConstant.MODULE_TYPE_MY_CART ||\n//              moduleType == DiamondModuleConstant.MODULE_TYPE_MY_OFFER ||\n//              moduleType == DiamondModuleConstant.MODULE_TYPE_SEARCH ||\n//              moduleType == DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL ||\n//              moduleType == DiamondModuleConstant.MODULE_TYPE_QUICK_SEARCH ||\n//              moduleType == DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK) {\n//            addEnquiryInBottomMenu(moreMenuList);\n//          }\n\n//          if (!isDiamondSearchModule(moduleType)) {\n//            if (moduleType != DiamondModuleConstant.MODULE_TYPE_MY_OFFER &&\n//                moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK &&\n//                moduleType !=\n//                    DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n//              addOfferInBottomMenu(moreMenuList, offerWhite, isCenter: false);\n//            }\n//          }\n//          if (isDiamondSearchModule(moduleType) && isDetail) {\n//            addOfferInBottomMenu(moreMenuList, offerWhite, isCenter: false);\n//          }\n\n          //For Compare special\n//          if (isCompare) {\n//            addOfferInBottomMenu(moreMenuList, offerWhite, isCenter: false);\n//          }\n//          if (!isCompare && !isDetail) {\n//            if (moduleType !=\n//                    DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION &&\n//                moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK &&\n//                moduleType !=\n//                    DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n//              moreMenuList.add(BottomTabModel(\n//                  title: R.string.commonString.status,\n//                  isCenter: false,\n//                  image: status,\n//                  type: ActionMenuConstant.ACTION_TYPE_STATUS));\n//            }\n//          }\n\n          if (moduleType == DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK ||\n              moduleType ==\n                  DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK_SEARCH) {\n            addCompareInBottomMenu(moreMenuList, compare, isCenter: false);\n          }\n          moreMenuList.add(BottomTabModel(\n            title: R.string.commonString.more,\n            isCenter: false,\n            image: plusIcon,\n            type: ActionMenuConstant.ACTION_TYPE_MORE,\n          ));\n        }\n        break;\n    }\n    // moreMenuList.forEach((element) {\n    //   element.imageColor = appTheme.whiteColor;\n    // });\n\n    return moreMenuList;\n  }\n\n  List<BottomTabModel> getStatusMenuItems() {\n    List<BottomTabModel> moreMenuList = [];\n    BottomTabModel model = BottomTabModel(\n        image: diamond,\n        isCenter: false,\n        title: R.string.screenTitle.statusAvailable);\n    model.imageColor = appTheme.statusAvailable;\n    moreMenuList.add(model);\n    model = BottomTabModel(\n        image: diamond, isCenter: false, title: R.string.screenTitle.statusNew);\n    model.imageColor = appTheme.statusNew;\n    moreMenuList.add(model);\n    model = BottomTabModel(\n        image: diamond,\n        isCenter: false,\n        title: R.string.screenTitle.statusHold);\n    model.imageColor = appTheme.statusHold;\n    moreMenuList.add(model);\n    model = BottomTabModel(\n        image: diamond,\n        isCenter: false,\n        title: R.string.screenTitle.statusOnMemo);\n    model.imageColor = appTheme.statusOnMemo;\n    moreMenuList.add(model);\n\n    model = BottomTabModel(\n        image: diamond,\n        isCenter: false,\n        title: R.string.screenTitle.stoneOfTheDays);\n    model.imageColor = appTheme.statusOffer;\n    moreMenuList.add(model);\n\n    return moreMenuList;\n  }\n\n  addCartInBottomMenu(List<BottomTabModel> moreMenuList) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_cart)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: addToCart,\n          isCenter: false,\n          title: R.string.screenTitle.addToCart,\n          type: ActionMenuConstant.ACTION_TYPE_ADD_TO_CART));\n    }\n  }\n\n  addEnquiryInBottomMenu(List<BottomTabModel> moreMenuList) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_enquiry)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: enquiry,\n          title: R.string.screenTitle.addEnquiry,\n          isCenter: false,\n          type: ActionMenuConstant.ACTION_TYPE_ENQUIRY));\n    }\n  }\n\n  addFinalCalculationInBottomMenu(List<BottomTabModel> moreMenuList) {\n    moreMenuList.add(BottomTabModel(\n        image: finalCalculation,\n        isCenter: false,\n        title: R.string.screenTitle.finalCalculation,\n        type: ActionMenuConstant.ACTION_TYPE_FINAL_CALCULATION));\n  }\n\n  addWatchlistInBottomMenu(List<BottomTabModel> moreMenuList, String image,\n      {bool isCenter: true}) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_watchlist)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: image,\n          isCenter: isCenter,\n          title: R.string.screenTitle.addToWatchList,\n          type: ActionMenuConstant.ACTION_TYPE_WISHLIST));\n    }\n  }\n\n  addConfirmStone(\n    List<BottomTabModel> moreMenuList, {\n    bool isCenter: true,\n    String title,\n    String image,\n    int type,\n  }) {\n//    if (app\n//        .resolve<PrefUtils>()\n//        .getModulePermission(ModulePermissionConstant.permission_confirm_stone)\n//        .insert) {\n    moreMenuList.add(BottomTabModel(\n      title: title ?? R.string.commonString.confirmStone,\n      isCenter: false,\n      image: image ?? confirmStone,\n      type: type ?? ActionMenuConstant.ACTION_TYPE_PLACE_ORDER,\n    ));\n//    }\n  }\n\n  addQuoteStone(List<BottomTabModel> moreMenuList) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_confirm_stone)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n        title: R.string.commonString.confirmStone,\n        isCenter: false,\n        image: confirmStone,\n        type: ActionMenuConstant.ACTION_TYPE_PLACE_ORDER,\n      ));\n    }\n  }\n\n  addHoldInBottomMenu(List<BottomTabModel> moreMenuList, String image,\n      {bool isCenter: true}) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_hold)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: image,\n          isCenter: isCenter,\n          title: R.string.screenTitle.hold,\n          type: ActionMenuConstant.ACTION_TYPE_HOLD));\n    }\n  }\n\n  addMemoInBottomMenu(List<BottomTabModel> moreMenuList, String image,\n      {bool isCenter: true}) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_memo)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: image,\n          isCenter: isCenter,\n          title: R.string.screenTitle.memo,\n          type: ActionMenuConstant.ACTION_TYPE_MEMO));\n    }\n  }\n\n  addBidStoneInBottomMenu(List<BottomTabModel> moreMenuList) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_bid)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          title: R.string.screenTitle.bidStone,\n          isCenter: false,\n          image: myBidWhite,\n          type: ActionMenuConstant.ACTION_TYPE_BID));\n    }\n  }\n\n  addPlaceOrderInBottomMenu(List<BottomTabModel> moreMenuList, String image,\n      {bool isCenter: true}) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_order)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: image,\n          isCenter: isCenter,\n          title: R.string.screenTitle.buyNow,\n          type: ActionMenuConstant.ACTION_TYPE_PLACE_ORDER));\n    }\n  }\n\n  addCompareInBottomMenu(List<BottomTabModel> moreMenuList, String image,\n      {bool isCenter: true}) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_compare)\n        .view) {\n      moreMenuList.add(BottomTabModel(\n          image: image,\n          isCenter: isCenter,\n          title: R.string.screenTitle.compareStones,\n          type: ActionMenuConstant.ACTION_TYPE_COMPARE));\n    }\n  }\n\n  addCommentInBottomMenu(List<BottomTabModel> moreMenuList) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_comment)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: comment,\n          title: R.string.screenTitle.comment,\n          type: ActionMenuConstant.ACTION_TYPE_COMMENT));\n    }\n  }\n\n  addReminderInBottomMenu(List<BottomTabModel> moreMenuList) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_reminder)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: reminder,\n          title: R.string.screenTitle.reminder,\n          type: ActionMenuConstant.ACTION_TYPE_REMINDER));\n    }\n  }\n\n  addOfferInBottomMenu(List<BottomTabModel> moreMenuList, String image,\n      {bool isCenter: true, String title}) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_offer)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: image,\n          isCenter: isCenter,\n          title: title ?? R.string.screenTitle.offer,\n          color: appTheme.whiteColor,\n          type: ActionMenuConstant.ACTION_TYPE_OFFER));\n    }\n  }\n\n  addAppointmentInBottomMenu(List<BottomTabModel> moreMenuList) {\n    if (app\n        .resolve<PrefUtils>()\n        .getModulePermission(ModulePermissionConstant.permission_appointment)\n        .insert) {\n      moreMenuList.add(BottomTabModel(\n          image: company,\n          title: R.string.screenTitle.officeView,\n          type: ActionMenuConstant.ACTION_TYPE_APPOINTMENT));\n    }\n  }\n\n  addExcelBottomMenu(List<BottomTabModel> moreMenuList) {\n    // if (app\n    //     .resolve<PrefUtils>()\n    //     .getModulePermission(ModulePermissionConstant.permission_excel)\n    //     .downloadExcel) {\n    if ((app.resolve<PrefUtils>().getUserDetails().account?.isApproved ??\n            KYCStatus.pending) ==\n        KYCStatus.approved) {\n      moreMenuList.add(BottomTabModel(\n          image: excelImage,\n          title: \"Excel\",\n          type: ActionMenuConstant.ACTION_TYPE_EXCEL));\n    }\n    // }\n  }\n\n  addDeleteInBottomMenu(List<BottomTabModel> moreMenuList) {\n    moreMenuList.add(BottomTabModel(\n        image: home_delete,\n        title: R.string.screenTitle.delete,\n        type: ActionMenuConstant.ACTION_TYPE_DELETE));\n  }\n\n  addDownloadInBottomMenu(List<BottomTabModel> moreMenuList, String image,\n      {bool isCenter: true}) {\n    // if (app\n    //     .resolve<PrefUtils>()\n    //     .getModulePermission(getPermissionFromModuleType(moduleType))\n    //     .downloadExcel && moduleType != DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK) {\n//    if ((app.resolve<PrefUtils>().getUserDetails().account?.isApproved ??\n//            KYCStatus.pending) ==\n//        KYCStatus.approved) {\n    moreMenuList.add(BottomTabModel(\n        image: image,\n        isCenter: isCenter,\n        title: R.string.screenTitle.download,\n        type: ActionMenuConstant.ACTION_TYPE_DOWNLOAD));\n//    }\n  }\n\n  addClearSelectionInBottomMenu(List<BottomTabModel> moreMenuList, String image,\n      {bool isCenter: true}) {\n    moreMenuList.add(BottomTabModel(\n        image: image,\n        isCenter: isCenter,\n        title: R.string.screenTitle.clearSelection,\n        type: ActionMenuConstant.ACTION_TYPE_CLEAR_SELECTION));\n  }\n\n  addShareInBottomMenu(List<BottomTabModel> moreMenuList, String image,\n      {bool isCenter: true}) {\n    moreMenuList.add(BottomTabModel(\n        image: image,\n        title: R.string.screenTitle.share,\n        isCenter: isCenter,\n        type: ActionMenuConstant.ACTION_TYPE_SHARE));\n  }\n}\n\nbool isDiamondSearchModule(int moduleType) {\n  switch (moduleType) {\n    case DiamondModuleConstant.MODULE_TYPE_SEARCH:\n    case DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION:\n    case DiamondModuleConstant.MODULE_TYPE_EXCLUSIVE_DIAMOND:\n    case DiamondModuleConstant.MODULE_TYPE_NEW_ARRIVAL:\n    case DiamondModuleConstant.MODULE_TYPE_DIAMOND_AUCTION:\n    case DiamondModuleConstant.MODULE_TYPE_QUICK_SEARCH:\n    case DiamondModuleConstant.MODULE_TYPE_OFFLINE_STOCK:\n      return true;\n    default:\n      return false;\n  }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/Setting/SettingModel.dart b/lib/Setting/SettingModel.dart
--- a/lib/Setting/SettingModel.dart	(revision b840300eabcf2d49ea0bdd7dfae08bf1fd3285b3)
+++ b/lib/Setting/SettingModel.dart	(date 1635246520986)
@@ -504,7 +504,7 @@
         moduleType != DiamondModuleConstant.MODULE_TYPE_MY_CART) {
       addCartInBottomMenu(moreMenuList);
     }
-    if (!app.resolve<PrefUtils>().isUserCustomer()&&
+    if (!app.resolve<PrefUtils>().isUserCustomer() &&
         moduleType != DiamondModuleConstant.MODULE_TYPE_MY_WATCH_LIST) {
       addWatchlistInBottomMenu(moreMenuList, home_watchlist);
     }
@@ -1053,7 +1053,7 @@
         .insert) {
       moreMenuList.add(BottomTabModel(
           image: company,
-          title: R.string.screenTitle.officeView,
+          title: R.string.screenTitle.appointment,
           type: ActionMenuConstant.ACTION_TYPE_APPOINTMENT));
     }
   }
