import 'package:diamnow/app/localization/CommonString.dart';
import 'package:diamnow/app/localization/ErrorString.dart';
import 'package:diamnow/app/localization/NoDataString.dart';
import 'package:diamnow/app/localization/SupportString.dart';
import 'package:diamnow/app/localization/ThemeString.dart';
import 'package:diamnow/app/localization/EarningString.dart';

import 'AuthStrings.dart';
import 'IntroStrings.dart';
import 'ScreenTitle.dart';
import 'RideStrings.dart';

class R {
  static BaseLocale string() => _getDefaultLocal();

  static String _appLocale;

  static Map<String, BaseLocale> _supportedLocales = const {
    "en_us": ENLocale()
  };

  static BaseLocale _getDefaultLocal() {
    //return default strings if locale is not set

    if (_appLocale == null) return BaseLocale();

    //throw exception to notify given local is not found or not generated by the generator

    if (!_supportedLocales.containsKey(_appLocale))
      throw Exception(
          "$_appLocale is not found.\n Make sure you have added this locale in JSON file\n Try running flutter pub run build_runner");

    //return locale from map

    return _supportedLocales[_appLocale];
  }

  static void changeLocale(String newLocale) {
    _appLocale = newLocale;
  }
}

///base class for all language locales
class BaseLocale {
  ///sub classes
  final StringConstant stringConstant;
  final CommonString commonString;
  final ScreenTitle screenTitle;
  final IntroStrings introStrings;
  final AuthStrings authStrings;
  final ErrorString errorString;
  final NoDataStrings noDataStrings;
  final ThemeStrings themeStrings;
  final SupportStrings supportStrings;
  final EarningStrings earningStrings;
  final RideStrings rideStrings;

  const BaseLocale({
    this.stringConstant = const StringConstant(),
    this.commonString = const CommonString(),
    this.screenTitle = const ScreenTitle(),
    this.introStrings = const IntroStrings(),
    this.authStrings = const AuthStrings(),
    this.errorString = const ErrorString(),
    this.noDataStrings = const NoDataStrings(),
    this.themeStrings = const ThemeStrings(),
    this.supportStrings = const SupportStrings(),
    this.rideStrings = const RideStrings(),
    this.earningStrings = const EarningStrings(),
  });
}

///base class for any sub modules
class StringConstant {
  final String appName;

  // ride history type
  final String completedCap;
  final String cancelledCap;
  final String cardNumber;

  // My earnings type
  final String earningTypeALL;
  final String earningTypeCASH;
  final String earningTypeONLINEPAYMENT;

  const StringConstant({
    this.cardNumber = "Card Number",
    this.appName = "diamnow",
    this.completedCap = "COMPLETED",
    this.cancelledCap = "CANCELLED",

    // My earnings type
    this.earningTypeALL = "ALL",
    this.earningTypeCASH = "CASH",
    this.earningTypeONLINEPAYMENT = "ONLINE PAYMENT",
  });
}

//custom Local classes
class ENLocale extends BaseLocale {
  const ENLocale()
      : super(
          stringConstant: const StringConstant(appName: "App name in EN"),
        );
}
